{"/":{"title":"AboutTheGarden","content":"\nhello👋，我是奔跑的小胖\n\n这里是一座「全开放式，每日更新」的[[数字花园]]，由原子化的[[卡片笔记法]]编织而成。目前主要在浇灌这2个领域⭕：\n\n- [[🗜 效率工具]]\n- [[🌐 前端索引]]\n- [[📚 知识管理]]\n\n既然你诚心诚意地，闯入了我的花园，那我就大发慈悲地，给你一张地图：[[🍀 花园导览]]。\n\n开个玩笑，客官莫怪😂。虽然有导览，但这绝不是传统的博客，这是我[[思考的过程容器]]，所以可能有很多看起来令人费解的半成品内容。当您漫步花园时，这里有2个不成熟的小建议💁：\n\n- 尽量通过鼠标悬浮预览进行[[上下文]]不中断的阅读。\n- 尽量通过底部[[反向链接]]找回来时的路。\n\n这座数字花园使用[[Obsidian]]写作和发布,如果你也想使用，可以参考[[Obsidain 知识库发布方案]]\n\n这座花园里，我挖了很多坑🕳，如果你想敦促我加速填坑，或有一些建议和问题，欢迎来[Github Discussions](https://github.com/chelseachen007/ObPublish/discussions)。如果方便的话，给个star⭐️呗。\n\n我希望构造一个花园，能让人在其中漫步，忘记时间。让别人能通过这个花园去认识我，了解我。\n\n最后，如果您发现了令人不适的内容，或我的个人隐私，请告知我，万分感谢🦀🦀: chelsechen1050@gmail.com\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/%E4%B8%80%E4%B9%9D%E5%85%AB%E5%9B%9B":{"title":"《 一九八四 》","content":"\n# 《 一九八四 》\n\n# 元数据\n\n\u003e [!abstract] 一九八四\n\u003e - ![ 一九八四|200](https://weread-1258476243.file.myqcloud.com/weread/cover/29/YueWen_932111/t7_YueWen_932111.jpg)\n\u003e - 书名： 一九八四\n\u003e - 作者： 乔治·奥威尔\n\u003e - 简介： 《一九八四》是奥威尔的传世之作，堪称世界文坛上最著名的反乌托邦、反极权的政治讽喻小说。他在小说中他创造的“老大哥”、“双重思想”、“新话”等词汇都已收入权威的英语词典，甚至由他的姓衍生出“奥威尔式”（Orwellian）、“奥威尔主义”（Orwellism）这样的通用词汇，不断出现在报道国际新闻的记者笔下，足见其作品在英语国家影响之深远。\n\u003e - 出版时间 2011-01-01 00:00:00\n\u003e - ISBN： 9787532752393\n\u003e - 分类： 文学-外国文学\n\u003e - 出版社： 上海译文出版社\n\n# 高亮划线\n\n## 二\n\n- 📌 千篇一律的时代，孤独的时代，老大哥的时代，双重思想的时代，向未来，向过去，向一个思想自由、人们各不相同、但生活并不孤独的时代——向一个真理存在、做过的事不能抹掉的时代致敬！ ^932111-6-6027-6113\n    - ⏱ 2022-04-24 15:33:58\n\n## 四\n\n- 📌 很可能一双鞋子也没有生产。更可能的是，没有人知道究竟生产了多少双，更没有人关心这件事。你所知道的只是，每个季度在纸面上都生产了天文数字的鞋子，但是大洋国里却有近一半的人口打赤脚。每种事实的记录都是这样，不论大小。一切都消隐在一个影子世界里，最后甚至连今年是哪一年都弄不清了。 ^932111-8-2882-3019\n    - ⏱ 2022-04-27 10:31:51\n\n## 七\n\n- 📌 从前，在伟大的革命以前，伦敦不是像现在这样一个美丽的城市。当时伦敦是个黑暗、肮脏、可怜的地方，很少有人食能果腹，衣能蔽体，成千上万的人穷得足无完履，顶无片瓦。还不及你们那么大的孩子就得为凶残的老板一天工作十二小时，如果动作迟缓就要遭到鞭打，每天只给他们吃陈面包屑和白水。但在那普遍贫困之中却有几所有钱人住的华丽的宅第，伺候他们的佣仆多达三十个人。这些有钱人叫做资本家。他们又胖又丑，面容凶恶，就像下页插图中的那个人一样。你可以看到他穿的是叫做大礼服的长长的黑色上衣，戴的是叫做高礼帽的像烟囱一样的亮晶晶的奇怪帽子。这是资本家们的制服，别人是不许穿的。资本家占有世上的一切，别人都是他们的奴隶。他们占有一切土地、房屋、工厂、钱财。谁要是不听他们的话，他们就可以把他投入狱中，或者剥夺他的工作，把他饿死。老百姓向资本家说话，得诚惶诚恐，鞠躬致敬，称他做“老爷”。资本家的头头叫国王—— ^932111-11-2547-2937\n    - ⏱ 2022-04-27 14:42:52\n\n## 八\n\n- 📌 原则上，一个党员没有空暇的时间，除了在床上睡觉以外，总是有人做伴的。凡是不在工作、吃饭、睡觉的时候，他一定是在参加某种集体的文娱活动；凡是表明有离群索居的爱好的事情，哪怕是独自去散步，都是有点危险的。新话中对此有个专门的词，叫孤生，这意味着个人主义和性格孤僻。 ^932111-12-649-806\n    - ⏱ 2022-04-27 15:01:11\n\n## 九\n\n- 📌 世界上如果人人都工作时间短、吃得好、住的房子有浴室和电冰箱，私人有汽车甚至飞机，那么最重要形式的不平等也许早已消失了。财富一旦普及，它就不分彼此。没有疑问，可以设想有这样一个社会，从个人财物和奢侈品来说，财富是平均分配的，而权力仍留在少数特权阶层人物的手中。但是实际上这种社会不能保持长期稳定。因为，如果人人都能享受闲暇和生活保障，原来由于贫困而愚昧无知的绝大多数人就会学习文化，就会独立思考；他们一旦做到这一点，迟早就会认识到少数特权阶层的人没有作用，他们就会把他们扫除掉。从长期来看，等级社会只有在贫困和无知的基础上才能存在。 ^932111-22-7247-7512\n    - ⏱ 2022-04-27 20:52:41\n- 📌 上等人的目标是要保持他们的地位。中等人的目标是要同高等人交换地位。下等人的特点始终是，他们劳苦之余无暇旁顾，偶尔才顾到日常生活以外的事，因此他们如果有目标的话，无非是取消一切差别，建立一个人人平等的社会。这样，在历史上始终存在着一场一而再再而三发生的斗争，其大致轮廓相同。在很长时期里，上等人的权力似乎颇为巩固，但迟早总有这样一个时候，他们对自己丧失了信心，或者对他们进行有效统治的能力丧失了信心，或者对两者都丧失了信心。他们就被中等人所推翻，因为中等人标榜自己为自由和正义而奋斗，把下等人争取到自己一边来。中等人一旦达到目的就把下等人重又推回到原来的被奴役地位，自己变成了上等人。不久，其他两等人中有一等人，或者两等人都分裂出一批新的中等人来，这场斗争就周而复始。三等人中只有下等人从来没有实现过自己的目标，哪怕是暂时实现自己的目标。若说整个历史从来没有物质方面的进步，那不免言之过甚。即使在今天这个衰亡时期，一般人在物质上也要比几百年前好一些。但是不论财富的增长，或态度的缓和，或改革和革命，都没有使人类接近平等一步。从下等人的观点来看，历史若有变化，大不了是主子名字改变而已。 ^932111-22-14782-15273\n    - ⏱ 2022-04-27 21:53:04\n- 📌 因此，从即将夺得权力的那批人的观点来看，人类平等不再是要争取实现的理想，而是要避免的危险。在比较原始的时代里，要建立一个公正和平的社会实际上是不可能的，但这种社会却是比较容易使人相信。 ^932111-22-16290-16382\n    - ⏱ 2022-04-27 22:01:32\n- 📌 统治集团只有在四种情况下才会丧失权力；或者是被外部力量所征服；或者是统治无能，群众起来造反；或者是让一个强大而不满的中等人集团出现；或者是自己丧失了统治的信心和意志。这四个原因并不单个起作用，在某种程度上总是同时存在 ^932111-22-18067-18175\n    - ⏱ 2022-04-27 22:04:19\n- 📌 第二个危险也仅仅是理论上的危险。群众从来不会自动起来造反，他们从来不会由于身受压迫而起来造反。说真的，只要不给他们比较的标准，他们从来不会意识到自己受压迫。 ^932111-22-18336-18414\n    - ⏱ 2022-04-27 22:04:27\n- 📌 这方面的一个关键字眼是黑白。这个字眼像新话中的许多其他字眼一样，有两个相互矛盾的含义。用在对方身上，这意味着不顾明显事实硬说黑就是白的无耻习惯。用在党员身上，这意味着在党的纪律要求你说黑就是白时，你就有这样自觉的忠诚。但这也意味着相信黑就是白的能力，甚至是知道黑就是白和忘掉过去曾经有过相反认识的能力。这就要求不断篡改过去，而要篡改过去只有用那个实际上包括所有其他方法的思想方法才能做到；这在新话中叫做双重思想。 ^932111-22-21567-21773\n    - ⏱ 2022-04-27 22:28:08\n\n# 读书笔记\n\n## 一\n\n### 划线评论\n\n- 📌 四月间，天气寒冷晴朗，钟敲了十三下。 ^16142247-7yI47dthp\n    - 💭 开始还以为是13点的意思，原来是在说四月是个谎言\n    - ⏱ 2022-04-22 17:10:17\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%80%E4%B9%9D%E5%85%AB%E5%9B%9B%E7%9A%84%E6%95%85%E4%BA%8B%E8%83%8C%E6%99%AF":{"title":"一九八四的故事背景","content":"\n# 一九八四的故事背景\n\n《一九八四》的故事舞台位于大洋国（Oceania）。大洋国是三个洲际超级大国之一，二次世界大战之后，世界分成了三个国家联盟。大部分情节发生于伦敦——“第一空降场的主要城市”，大洋国的一个省，“曾经被称为英格兰或不列颠”。党的领导者老大哥的标语海报，“老大哥在看着你”占据整个城市；而无处不在的“电幕”（telescreen，一种双向电视，）在私密和公开场合监视着公众。大洋国的社会阶级系统有三层：\n\n### 社会阶级系统\n\n（I）上等阶级的核心党员（Inner Party），少数的统领精英，占全国人口的 2%左右。  \n（II）中等阶级的外围党员（Outer Party），占全国人口的 13%左右。  \n（III）下等阶级的无产阶级（Proles）：占全国人口的 85%左右，代表没受过教育的无产阶级。\n\n### 四个政府部门\n\n在政府，党利用四个部门控制群众：\n\n- 和平部负责战争\n- 富裕部负责经济事务（定量配给和令人民饥饿）\n- 仁爱部负责法律和秩序（酷刑和洗脑）\n- 真理部负责新闻、娱乐、教育和艺术（宣传）  \n  **每个部门的名称都与它们所执行的任务相反**\n\n真理部亦是主角温斯顿·史密斯（一个外围党的成员）工作的地方，在那里他改写历史文献好将过去改写成符合正统的政党路线——这每天都在改变——并将非人从历史上抹去，“非人”是指被人“蒸发”的人，即不仅被国家杀掉，而是在历史上或记忆上抹去这个人的存在。\n\n温斯顿的故事从 1984 年 4 月 4 日开始：“四月里，天气晴朗寒冷，钟敲了十三下”；虽然这样，日期是存有疑虑的，因为这是温斯顿·史密斯个人感知到的东西，在持续对历史的修改中；在这之后说明了这个日期是相对的。温斯顿的记忆，及他阅读的那本禁书，果尔德施坦因写的《寡头政治体系的理论和实践》透露了在第二次世界大战之后，英国陷入了内战，然后被融合成为大洋国的一个部分。同时，苏联对欧洲大陆的吞并构成了第二个超级大国欧亚国。第三个超级大国，东亚国，包括中国占领的东亚部分。这三个超级大国打着永久的战争，为争夺世界上未被征服的陆地。他们在适当的时候就结盟或打破盟约。\n\n从他的儿时记忆（1949–1953）中，温斯顿记起了发生在欧洲、俄罗斯西部和北美的核战争。内战、党的掌权、美国吞并大英帝国或科尔切斯特被轰炸很难说哪个先发生，然而，他记忆的愈发清晰以及他家庭解体的故事暗示，原子弹的爆炸先出现（史密斯一家躲在地铁站），接着是内战以及社会在战后的重塑，党把这回顾地称为“革命”。\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%80%E4%B9%9D%E5%85%AB%E5%9B%9B%E8%AF%BB%E5%90%8E%E6%84%9F":{"title":"一九八四读后感","content":"\n# 一九八四读后感\n\n上一本看的是奥威尔的《动物庄园》，用了猪、狗、马等动物形象生动的演绎了一场革命之后的政治活动，可以看到很多现在正在发生事情的影子，不禁感慨历史总是不断的重复。吸引了我对政治小说的兴趣，就看了奥威尔的另一部神作《一九八四》。\n\n这本书讲述的是一个极权主义社会下，一名想要脱离党控制的党员的故事。第一部分是通过主角的工作，带我们认识大洋国的社会阶级体系：上等的核心党员，中等的外围党员，下等的无产阶级和和四个干的事与名字相反的部门：和平部（战争）、富裕部（令人民饥饿）、仁爱部（酷刑和洗脑）、真理部（宣传）。\n\n在这个时代上，人们已经变得麻木，更像是一个个工具人而不是有思想的人。从后面可以看到统治者明白了：**等级社会只有在贫困和无知的基础上才能存在**。他们的政策都是让人处于一种没法思考的情形，比如每个人每时每刻都处于电幕的监督下，让人没有独处和空闲的时间，想要剥离人的性和欲望，战争也只是为了消耗掉无用劳动力，不断的修改历史等。\n\n回到现在，也能看到很多这样的愚民政策，但是这本书和《乌合之众》一样是上个世纪的产物，现在信息流转的速度之快，根本无法做到这样的极权主义。让我联想到 Web3.0 时代，所有的信息都私有，政策也应该与时俱进了。\n\n另外是一个书中高度概括的历史轮回，愿科技发展之下，能结束这开始了两千多年的轮回：  \n上等人目标分别是稳固自己的地位，中等人的目标是同高等级的人交换地位，而下等人每日忙于工作，要说目标的话大概就是建立一个平等的社会。当上等人出现统治不稳固的时候，中等人就会以正义和自由为由，把下等人拉到统一战线。得到统治之后，又接着奴役着下等人。这样的斗争在历史中周而复始，只有下等人没有实现过自己的目标，若说有所变化，不过是物质更好了点，主子换了个名罢了。\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%9A%84%E4%B9%A0%E6%83%AF":{"title":"一些好的习惯","content":"\n## 以始为终\n\n思考四个问题，以问题为导向\n\n- 这个工作我能不能做？\n- 如果能做，我要花多少时间？\n- 我需要哪些人的帮助，要分配哪些同事给你提供支持？\n- 我需要用到什么资源？\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%80%E4%BA%9B%E7%82%AB%E9%85%B7%E7%9A%84%E9%A1%B5%E9%9D%A2":{"title":"一些炫酷的页面","content":"\n收藏一下，提升自己对页面的敏感\n\n- [机械表原理](https://ciechanow.ski/mechanical-watch/)\n- [2023 年印度火车相撞事故](https://www.reuters.com/graphics/INDIA-CRASH/RAIL-INVESTIGATION/dwvkdwnbkpm/index.html)","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%88%E6%AF%8D%E5%A8%98%E8%A7%81%E9%9D%A2%E8%AF%9D%E6%9C%AF":{"title":"丈母娘见面话术","content":"\n# 丈母娘见面话术\n\n爸妈的想法：  \n流程走会走完  \n订婚的习俗差别  \n我们自己的想法：  \n新房、共有产权房  \n茹茹的摇房资格  \n我们准备的资金\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%89%E4%BD%93%E5%85%A8%E9%9B%86":{"title":"《 三体（全集） 》","content":"\n# 《 三体（全集） 》\n\n# 元数据\n\n\u003e [!abstract] 三体（全集）\n\u003e - ![ 三体（全集）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/80/yuewen_695233/t7_yuewen_6952331677562148.jpg)\n\u003e - 书名： 三体（全集）\n\u003e - 作者： 刘慈欣\n\u003e - 简介： 每个人的书架上都该有套《三体》！关于宇宙最狂野的想象！就是它！征服世界的中国科幻神作！包揽九项世界顶级科幻大奖！出版16个语种，横扫30国读者！奥巴马、雷军、马化腾、周鸿袆、潘石屹、扎克伯格……强推！刘慈欣获得2018年度克拉克想象力贡献社会奖！刘慈欣是中国科幻小说的最主要代表作家，亚洲首位世界科幻大奖“雨果奖”得主，被誉为中国科幻的领军人物。\n\u003e - 出版时间 2018-12-01 00:00:00\n\u003e - ISBN：\n\u003e - 分类： 精品小说-科幻经典\n\u003e - 出版社： 海南省电子音像出版社\n\n# 高亮划线\n\n## 第二章 台球\n\n# 读书笔记\n\n## 第二章 台球\n\n### 划线评论\n\n- 📌 ：生存还是死亡，这是个问题。 ^16142247-6TF92CZqJ\n    - 💭 生存还是毁灭，这是个问题\n    - ⏱ 2017-09-22 15:48:50\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%89%E6%AE%B5%E8%AE%BA":{"title":"三段论","content":"\n# 三段论\n\n假设\n\n- 所有的铜都包含自由电子。\n- 所有包含自由电子的物体都可以导电。  \n  那么  \n  所以所有的铜都可以导电。\n\n前面给出的论证过程包含两个前提和一个结论，像这样的论证过程被称为三段论。\n\n当然，三段论链条不可能无休止地延长，所以在某个点上肯定有某些前提是必定为真的，但本身并不是通过位置更高的三段论链条得到的。这些起始点，也就是这些本身必定为真的前提，通常被称为第一原则。第一原则被当作是关于这个世界基本的、必定为真的事实。\n\n## 人们怎样可以找到第一原则，特别是，人们怎样可以确定第一原则是必定为真的？\n\n[[欧几里得几何学]] 的第五公设，尽管这个公理无法被证明，但看起来如果你受过适当教育，且理解所涉及的概念，那么就会一眼“看出”这个公理肯定是真的。（顺带提一下，在 19 世纪，非欧几里得几何学的发现让人们开始对“讨论这样的公理在任何意义上都是‘真的’是否还有意义”产生了严重怀疑。）\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%89%E7%BA%A7%E7%9B%AE%E5%BD%95%E7%BB%84%E4%BB%B6":{"title":"三级目录组件","content":"\n# 三级目录组件\n\n## 难点\n\n## Code\n\n```js\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport {\nmessage,\nDivider,\nCheckbox,\nInput,\nButton,\nModal,\nPopover,\nTooltip,\n} from 'antd';\n\nimport {\nFolderOutlined,\nPlusCircleOutlined,\nMinusCircleOutlined,\nCloseCircleOutlined,\nTagOutlined,\nPlusOutlined,\nExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nimport LabelUpdateModal from './LabelUpdateModal';\nimport { calcLength } from '@/shared/utils';\nconst { confirm } = Modal;\n\n\n\ninterface ITreeGraphProps {\n\nisEdit: boolean;\n\ntreeData: any;\n\nbusinessRange: any;\n\nrefreshList: () =\u003e void;\n\n}\n\n\n\nconst STreeGraph = styled.div`\n\ndisplay: flex;\n\nalign-items: flex-start;\n\nfont-size: 12px;\n\npadding-top: 16px;\n\n.category-box {\n\nwidth: 168px;\n\nposition: relative;\n\npadding: 6px 12px;\n\nborder: 1px solid #d9d9d9;\n\nborder-radius: 4px;\n\n// text-align: center;\n\n.switch {\n\nposition: absolute;\n\ntop: 50%;\n\nleft: 100%;\n\nmargin-left: 8px;\n\ntransform: translateY(-40%);\n\ncursor: pointer;\n\n}\n\n.add-button {\n\nwidth: 168px;\n\nposition: absolute;\n\ntop: 100%;\n\nleft: 0%;\n\npadding: 6px 12px;\n\nmargin-top: 16px;\n\ncolor: #8d8e99;\n\nborder: 1px solid #d9d9d9;\n\nborder-radius: 4px;\n\ncursor: pointer;\n\n}\n\n.delete {\n\nposition: absolute;\n\ntop: 0%;\n\nright: 0%;\n\nline-height: 1;\n\ntransform: translate(50%, -50%);\n\nbackground-color: #fff;\n\ncursor: pointer;\n\n}\n\n}\n\n.second-category {\n\nflex: 1;\n\ndisplay: flex;\n\nflex-direction: column;\n\nmargin-left: 14px;\n\n.item {\n\ndisplay: flex;\n\nalign-items: flex-start;\n\nheight: 100%;\n\n.vertical-line {\n\nwidth: 9px;\n\nborder-left: 1px solid #dedede;\n\nmargin: -16px 0 0;\n\nalign-self: stretch;\n\n}\n\n\u0026-second {\n\ndisplay: flex;\n\nalign-items: center;\n\n.vertical-line {\n\ndisplay: block !important;\n\nwidth: 9px;\n\nborder-left: 1px solid #dedede;\n\nborder-bottom: 1px solid #dedede;\n\nborder-bottom-left-radius: 4px;\n\nmargin: -16px 0 15px;\n\n}\n\n.horizontal-line {\n\nwidth: 74px;\n\nheight: 1px;\n\nbackground-color: #d9d9d9;\n\n}\n\n.horizontal-line-right {\n\nwidth: 52px;\n\nheight: 1px;\n\nbackground-color: #d9d9d9;\n\n}\n\n}\n\n.label-content {\n\nflex: 1;\n\ndisplay: flex;\n\n.vertical-line {\n\ndisplay: block !important;\n\nwidth: 9px;\n\nborder-left: 1px solid #dedede !important;\n\nborder-bottom: 1px solid #dedede;\n\nborder-bottom-left-radius: 4px;\n\nmargin: 16px 0 35px !important;\n\n}\n\n.label-container {\n\nflex: 1;\n\ndisplay: flex;\n\nflex-direction: column;\n\n.item-label {\n\nflex: 1;\n\ndisplay: flex;\n\nalign-items: center;\n\n.horizontal-line {\n\nwidth: 60px;\n\nheight: 1px;\n\nbackground-color: #d9d9d9;\n\n}\n\n.label-box {\n\nflex: 1;\n\nheight: 72px;\n\ndisplay: flex;\n\njustify-content: space-between;\n\npadding: 12px 16px;\n\nborder: 1px solid #d9d9d9;\n\nborder-radius: 4px;\n\n.label-info {\n\nwidth: 0;\n\nflex: 1;\n\nflex-shrink: 0;\n\nmargin: 0 8px;\n\n.description {\n\nwhite-space: nowrap;\n\noverflow: hidden;\n\ntext-overflow: ellipsis;\n\nmargin-top: 10px;\n\ncolor: #979797;\n\n}\n\n}\n\n.label-operation {\n\nflex-shrink: 0;\n\nalign-self: center;\n\ncolor: #4a96ff;\n\nspan {\n\ncursor: pointer;\n\n}\n\n}\n\n}\n\n}\n\n.item-label:first-child {\n\nalign-items: stretch;\n\n.horizontal-line {\n\nmargin-top: 16px;\n\n}\n\n}\n\n.item-label:not(:first-child) {\n\nmargin-top: 20px;\n\n}\n\n.item-label:not(:last-child) {\n\n.horizontal-line {\n\nwidth: 68px;\n\nmargin-left: -8px;\n\n}\n\n}\n\n}\n\n}\n\n}\n\n.item:not(:first-child) {\n\nmargin-top: 16px;\n\n}\n\n.item:not(:first-child):not(:last-child) {\n\n.item-second .horizontal-line {\n\nmargin-left: -8px;\n\nwidth: 82px;\n\n}\n\n}\n\n.item:first-child {\n\n.vertical-line {\n\nmargin-top: 24px;\n\n}\n\n}\n\n.item:last-child {\n\n.vertical-line {\n\ndisplay: none;\n\n}\n\n}\n\n.item:first-child:last-child {\n\n.vertical-line {\n\ndisplay: block;\n\nborder-left: none;\n\n}\n\n}\n\n.item:not(:last-child) {\n\n.item-second .category-box .add-button {\n\ndisplay: none;\n\n}\n\n.item-second .vertical-line {\n\ndisplay: none !important;\n\n}\n\n.label-content .batch-operation {\n\ndisplay: none;\n\n}\n\n}\n\n.ant-checkbox-group {\n\nfont-size: 12px;\n\n}\n\n.batch-operation {\n\nheight: 36px;\n\nmargin: 20px 0 0 380px;\n\n}\n\n}\n\n`;\n\nconst TreeGraph = (props: ITreeGraphProps) =\u003e {\n\nconst { isEdit, treeData, refreshList, businessRange } = props;\n\nconst plainOptions = treeData.childTypes\n\n.map((f: any) =\u003e f.labels)\n\n.flat(2)\n\n.map((l: any) =\u003e String(l.labelId));\n\nconst [isOpen, setIsOpen] = useState\u003cboolean\u003e(false);\n\nconst [indeterminate, setIndeterminate] = useState\u003cboolean\u003e(false);\n\nconst [checkAll, setCheckAll] = useState\u003cboolean\u003e(false);\n\nconst [checkedList, setCheckedList] = useState\u003cstring[]\u003e([]);\n\nconst [labelUpdateModalVisible, setLabelUpdateModalVisible] =\n\nuseState\u003cboolean\u003e(false);\n\nconst [updateList, setUpdateList] = useState\u003cnumber[]\u003e([]);\n\n// const [popoverVisible, setPopoverVisible] = useState\u003cboolean\u003e(false);\n\nconst [addName, setAddName] = useState\u003cstring\u003e('');\n\n\n\n// const PER_UPDATE_LABEL =\n\n// _.includes(PERMISSION2.update, businessRange) || false;\n\nuseEffect(() =\u003e {\n\nsetCheckedList([]);\n\nsetIndeterminate(false);\n\nsetCheckAll(false);\n\n}, [isEdit, treeData]);\n\n\n\nconst onCheckboxChange = (checkedValues: string[]) =\u003e {\n\nsetCheckedList(checkedValues);\n\nsetIndeterminate(\n\n!!checkedValues.length \u0026\u0026 checkedValues.length \u003c plainOptions.length,\n\n);\n\nsetCheckAll(checkedValues.length === plainOptions.length);\n\n};\n\n\n\nconst onCheckAllChange = (e: any) =\u003e {\n\nsetCheckedList(e.target.checked ? plainOptions : []);\n\nsetIndeterminate(false);\n\nsetCheckAll(e.target.checked);\n\n};\n\n\n\nconst updateCategory = (labelIds: number[]) =\u003e {\n\nsetUpdateList(labelIds);\n\nsetLabelUpdateModalVisible(true);\n\n};\n\n\n\nconst deleteCategory = (id: number) =\u003e {\n\nconfirm({\n\ntitle: \"'是否确认删除该类目?',\"\n\nicon: \u003cExclamationCircleOutlined /\u003e,\n\ncontent: '提示：删除类目后，类目下标签会被删除，且不可恢复，请谨慎操作',\n\nonOk() {\n\ndispatch.labelManage.deleteCategory(id).then(() =\u003e {\n\nmessage.success('删除成功');\n\nrefreshList();\n\n});\n\n},\n\n});\n\n};\n\n\n\nconst deleteLabel = (labelIds: number[]) =\u003e {\n\nconfirm({\n\ntitle: \"'是否确认删除该标签?',\"\n\nicon: \u003cExclamationCircleOutlined /\u003e,\n\nonOk() {\n\ndispatch.labelManage.deleteLabel(labelIds).then(() =\u003e {\n\nmessage.success('删除成功');\n\nrefreshList();\n\n});\n\n},\n\n});\n\n};\n\n\n\nconst onVisibleChange = (visible: boolean) =\u003e {\n\nif (!visible) {\n\nsetAddName('');\n\n}\n\n// setPopoverVisible(visible);\n\n};\n\n\n\nconst addNameChange = (e: any) =\u003e {\n\nsetAddName(e.target.value);\n\n};\n\n\n\nconst addCategory = () =\u003e {\n\nif (!addName.trim()) {\n\nmessage.info('请输入类目名称');\n\nreturn;\n\n}\n\nif (calcLength(addName) \u003e 20) {\n\nmessage.error('分类名称最大长度为20个字符');\n\nreturn;\n\n}\n\nconst params = {\n\nname: addName,\n\nparentId: treeData.id,\n\nlevel: 5,\n\n};\n\nddCategory(params).then(() =\u003e {\n\nmessage.success('添加成功');\n\nsetAddName('');\n\nrefreshList();\n\n});\n\n};\n\n\n\nconst popoverContent = (\n\n\u003cdiv style={{ display: 'flex' }}\u003e\n\n\u003cInput value={addName} size=\"small\" onChange={addNameChange} /\u003e\n\n\u003cButton\n\ntype=\"primary\"\n\nsize=\"small\"\n\nstyle={{ marginLeft: '16px' }}\n\nonClick={addCategory}\n\n\u003e\n\n确定\n\n\u003c/Button\u003e\n\n\u003c/div\u003e\n\n);\n\n\n\nconst finishCallback = () =\u003e {\n\nmessage.success('修改成功');\n\nsetCheckedList([]);\n\nsetIndeterminate(false);\n\nsetCheckAll(false);\n\nsetLabelUpdateModalVisible(false);\n\nrefreshList();\n\n};\n\n\n\nreturn (\n\n\u003cSTreeGraph\u003e\n\n\u003cdiv className=\"category-box\"\u003e\n\n\u003cFolderOutlined style={{ color: '#456CF6', marginRight: '8px' }} /\u003e\n\n{treeData.name}\n\n\u003cspan className=\"switch\" onClick={() =\u003e setIsOpen(!isOpen)}\u003e\n\n{isOpen ? (\n\n\u003cMinusCircleOutlined\n\nstyle={{ color: '#456CF6', fontSize: '16px' }}\n\n/\u003e\n\n) : (\n\n\u003cPlusCircleOutlined\n\nstyle={{ color: '#456CF6', fontSize: '16px' }}\n\n/\u003e\n\n)}\n\n\u003c/span\u003e\n\n{isEdit \u0026\u0026 (\n\n\u003cspan className=\"delete\" onClick={() =\u003e deleteCategory(treeData.id)}\u003e\n\n\u003cCloseCircleOutlined style={{ color: '#456CF6' }} /\u003e\n\n\u003c/span\u003e\n\n)}\n\n\u003c/div\u003e\n\n{isOpen \u0026\u0026 (\n\n\u003cdiv className=\"second-category\"\u003e\n\n{treeData.childTypes.length \u003e 0 ? (\n\n\u003cCheckbox.Group value={checkedList} onChange={onCheckboxChange}\u003e\n\n{treeData.childTypes.map((childType: any) =\u003e (\n\n\u003cdiv className=\"item\"\u003e\n\n\u003cdiv className=\"vertical-line\" /\u003e\n\n\u003cdiv className=\"item-second\"\u003e\n\n{treeData.childTypes.length !== 1 \u0026\u0026 (\n\n\u003cdiv className=\"vertical-line\" /\u003e\n\n)}\n\n\u003cdiv className=\"horizontal-line\" /\u003e\n\n\u003cdiv className=\"category-box\"\u003e\n\n\u003cFolderOutlined\n\nstyle={{ color: '#456CF6', marginRight: '8px' }}\n\n/\u003e\n\n{childType.name}\n\n{isEdit \u0026\u0026 (\n\n\u003cspan\n\nclassName=\"delete\"\n\nonClick={() =\u003e deleteCategory(childType.id)}\n\n\u003e\n\n\u003cCloseCircleOutlined style={{ color: '#456CF6' }} /\u003e\n\n\u003c/span\u003e\n\n)}\n\n{isEdit \u0026\u0026 (\n\n\u003cPopover\n\ncontent={popoverContent}\n\ntrigger=\"click\"\n\nonVisibleChange={onVisibleChange}\n\ntitle=\"\"\n\n\u003e\n\n\u003cdiv className=\"add-button\"\u003e\n\n\u003cPlusOutlined\n\nstyle={{ color: '#456CF6', marginRight: '8px' }}\n\n/\u003e\n\n添加分类\n\n\u003c/div\u003e\n\n\u003c/Popover\u003e\n\n)}\n\n\u003c/div\u003e\n\n{childType.labels.length \u003e 0 \u0026\u0026 (\n\n\u003cdiv className=\"horizontal-line-right\" /\u003e\n\n)}\n\n\u003c/div\u003e\n\n{childType.labels.length \u003e 0 \u0026\u0026 (\n\n\u003cdiv className=\"label-content\"\u003e\n\n{childType.labels.length !== 1 \u0026\u0026 (\n\n\u003cdiv className=\"vertical-line\" /\u003e\n\n)}\n\n\u003cdiv className=\"label-container\"\u003e\n\n{childType.labels.map((label: any) =\u003e (\n\n\u003cdiv className=\"item-label\" key={label.labelId}\u003e\n\n\u003cdiv className=\"horizontal-line\" /\u003e\n\n\u003cdiv className=\"label-box\"\u003e\n\n{isEdit ? (\n\n\u003cCheckbox value={String(label.labelId)} /\u003e\n\n) : (\n\n\u003cTagOutlined\n\nrotate={270}\n\nstyle={{ color: '#456CF6', fontSize: '16px' }}\n\n/\u003e\n\n)}\n\n\u003cdiv className=\"label-info\"\u003e\n\n\u003cdiv\u003e{label.labelName}\u003c/div\u003e\n\n\u003cTooltip title={label.labelDesc}\u003e\n\n\u003cdiv className=\"description\"\u003e\n\n{label.labelDesc}\n\n\u003c/div\u003e\n\n\u003c/Tooltip\u003e\n\n\u003c/div\u003e\n\n{isEdit \u0026\u0026 (\n\n\u003cdiv className=\"label-operation\"\u003e\n\n{\n\n\u003cspan\n\nonClick={() =\u003e\n\nupdateCategory([label.labelId])\n\n}\n\n\u003e\n\n修改\n\n\u003c/span\u003e\n\n}\n\n{\n\n\u003c\u003e\n\n\u003cDivider\n\ntype=\"vertical\"\n\nstyle={{ color: '#D0CFCF' }}\n\n/\u003e\n\n\u003cspan\n\nonClick={() =\u003e\n\ndeleteLabel([label.labelId])\n\n}\n\n\u003e\n\n删除\n\n\u003c/span\u003e\n\n\u003c/\u003e\n\n}\n\n\u003c/div\u003e\n\n)}\n\n\u003c/div\u003e\n\n\u003c/div\u003e\n\n))}\n\n\u003c/div\u003e\n\n\u003c/div\u003e\n\n)}\n\n\u003c/div\u003e\n\n))}\n\n\u003c/Checkbox.Group\u003e\n\n) : (\n\n\u003cdiv\u003e\n\n{isEdit \u0026\u0026 (\n\n\u003cPopover\n\ncontent={popoverContent}\n\ntrigger=\"click\"\n\nonVisibleChange={onVisibleChange}\n\ntitle=\"\"\n\n\u003e\n\n\u003cdiv className=\"add-button\" style={{ margin: '0 0 0 84px' }}\u003e\n\n\u003cPlusOutlined\n\nstyle={{ color: '#456CF6', marginRight: '8px' }}\n\n/\u003e\n\n添加分类\n\n\u003c/div\u003e\n\n\u003c/Popover\u003e\n\n)}\n\n\u003c/div\u003e\n\n)}\n\n{isEdit \u0026\u0026 (\n\n\u003cdiv className=\"batch-operation\"\u003e\n\n{plainOptions.length \u003e 0 \u0026\u0026 (\n\n\u003cdiv\u003e\n\n\u003cCheckbox\n\nindeterminate={indeterminate}\n\nonChange={onCheckAllChange}\n\nchecked={checkAll}\n\n\u003e\n\n全选\n\n\u003c/Checkbox\u003e\n\n{\n\n\u003cButton\n\nstyle={{ marginLeft: 8 }}\n\ndisabled={checkedList.length === 0}\n\nonClick={() =\u003e\n\nupdateCategory(checkedList.map(item =\u003e Number(item)))\n\n}\n\n\u003e\n\n批量修改\n\n\u003c/Button\u003e\n\n}\n\n{\n\n\u003cButton\n\nstyle={{ marginLeft: 8 }}\n\ndisabled={checkedList.length === 0}\n\nonClick={() =\u003e\n\ndeleteLabel(checkedList.map(item =\u003e Number(item)))\n\n}\n\n\u003e\n\n批量删除\n\n\u003c/Button\u003e\n\n}\n\n\u003c/div\u003e\n\n)}\n\n\u003c/div\u003e\n\n)}\n\n\u003c/div\u003e\n\n)}\n\n\u003cLabelUpdateModal\n\nvisible={labelUpdateModalVisible}\n\nupdateList={updateList}\n\nfinishCallback={finishCallback}\n\ncloseModal={() =\u003e setLabelUpdateModalVisible(false)}\n\n/\u003e\n\n\u003c/STreeGraph\u003e\n\n);\n\n};\n\n\n\nexport default TreeGraph;\n```\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%8A%E5%B8%9D%E6%8E%B7%E9%AA%B0%E5%AD%90%E5%90%97":{"title":"《上帝掷骰子吗》","content":"\n# 《上帝掷骰子吗》\n\n#input\n\n## Meatdata\n\n- author： [[曹天元]]\n- link：[上帝掷骰子吗？：量子物理史话（升级版）-曹天元-微信读书](https://weread.qq.com/web/reader/bd5320f07186f617bd52222kecc32f3013eccbc87e4b62e)\n- tag：\n- date: [[2022-04-14]]\n- Notes:\n\n## 读前准备\n\n[[量子力学读书分享]]\n\n## 总结\n\n- 两周多的时间，顺利的读完，知晓了物理学的冰山一角，三次波粒大战更是让我认识了很多物理大家，但是到后面真正量子力学部分可以说是看的迷迷糊糊，但总算是对量子力学算是有所了解。五星好评，做的笔记也是有点多了，不知道从何开始整理，笑。\n\n## 闪念\n\n- 1888 年，赫兹通过他的简易装置，发现了[[电磁波]]的存在，\n- 古格列尔莫·马可尼 ，无线电实验\n- 自古以来，它就理所当然地被认为是这个宇宙最原始的事物之一。可是光究竟是一种什么样的东西呢  \n\t-微粒说和波动说\n- 对光的认知历史发展\n\t- 在古希腊时代，人们猜想，光是一种从我们的眼睛里发射出去的东西，当它到达某样事物的时候，这样事物就被我们“看见”了。（无法解释黑暗中无法看到物体）\n\t- 柏拉图（Plato）认为有三种不同的光，分别来源于眼睛、被看到的物体以及光源本身，而视觉是三者综合作用的结果。\n\t- 罗马时代，卢克莱修 在《物性论》中提出，光是从光源直接到达人的眼睛的，但不被当时的人们所接受\n\t- 公元1000年左右，阿尔—哈桑：原来我们之所以能够看到物体，只是由于光从物体上反射进我们眼睛里的结果\n- 微粒说和波动说之争\n\t- [[波义耳]]在1663年提出的一个理论：他认为我们看到的各种颜色，其实并不是物体本身的属性，而是光照上去才产生的效果。\n\t- 牛顿再一次介绍了他那关于光和色的理论，其内容是关于他所做的光的[[艾萨克·牛顿#色散实验 |色散实验]]。\n\t- 惠更斯认为光是一种在以太里传播的纵波，并引入了“波前”等概念，成功地证明和推导了光的反射和折射定律。\n\t- 1675年，牛顿在皇家学会报告说，如果让光通过一块大曲率凸透镜照射到光学平玻璃板上，会在透镜与玻璃平板接触处出现一组彩色的同心环条纹，也就是著名的“牛顿环”\n\t- 胡克死后第二年，也就是1704年，牛顿终于出版了他的煌煌巨著《光学》\n\t- 第一次波粒战争就这样以波动的惨败而告终，战争的结果是微粒说牢牢占据了物理界的主流。\n\t- 托马斯·杨在研究牛顿环的明暗条纹的时候，发现用波可以很好的解释一明一暗的条纹。发表论文报告，阐述了如何用光波的干涉效应来解释牛顿环和衍射现象，甚至通过他的实验数据，计算出了光的波长应该在1/60000～1/36000英寸之间。\n\t- 马吕斯在1809年发现的偏振现象，这一现象和已知的波动论有抵触的地方。\n\t- 1819年,菲涅尔发表了一篇论文，采用了光是一种波动的观点，并以严密的数学推理，极为圆满地解释了光的衍射问题。\n\t- 菲涅尔不久后又作出了一个石破天惊的决定：他革命性地假设光是一种横波（也就是类似水波那样，振子做相对传播方向垂直运动的波），用横波理论成功地解释了[[偏振现象]]，\n\t- 1850年，傅科在准确地得出光在真空中的速度之后，他又进行了水中光速的测量，发现这个值小于真空中的速度，只有前者的3/4。宣告了波动论的胜利。(根据粒子论，这个速度应该比真空中的光速要快，而根据波动论，这个速度则应该比真空中要慢才对。 )\n\t- [[麦克斯韦]]于1856年、1861年和1865年发表了三篇关于电磁理论的论文。麦克斯韦的理论预言，光其实只是电磁波的一种。\n\t- 波动学一统了光、电、磁，开启了物理的黄金时代\n- 回到赫兹，他的实验有一个奇怪的现象\n\n\t\u003e 当没有光照射到接收器的时候，接收器电火花所能跨越的最大空间距离就一下子缩小了。换句话说，没有光照时，我们的两个小球必须靠得更近才能产生火花。假如我们重新让光（特别是高频光）照射接收器，则电火花的出现就又变得容易起来。\n\n- 两朵乌云\n\t- [[迈克尔逊-莫雷实验]]。\n\t- [[黑体辐射实验]]\n- 意外的实验\n\t- [[安托万-洛朗·德·拉瓦锡#燃素实验]]。\n\t- [[瑞利男爵三世#提取氮气实验]]\n\t- [[亨利·贝克勒尔#发现放射性物质]]Ï\n- 维恩从经典热力学的思想出发，假设黑体辐射是由一些服从麦克斯韦速率分布的分子发射出来的，然后通过精密的演绎，在1894年提出了他的辐射能量分布定律公式。但他只适用于短波\n- [[瑞利男爵三世]] 和[[金斯]] 从经典的麦克斯韦理论出发，推出了瑞利—金斯公式，但它只适用于长波\n- 1900年12月14日，[[马克斯·普朗克|普朗克]]在柏林宣读了他关于黑体辐射的论文，宣告了量子的诞生。提出量子是能量的最小单位，不是连续不断的，而是一份一份的。\n- 这种连续性、平滑性的假设，是微积分的根本基础。\n- 有史以来最出色和最富有激情的“黄金一代”物理学家。[[阿尔伯特·爱因斯坦]]、[[尼尔斯·玻尔]]、[[埃尔文·薛定谔]]、[[马克斯·波恩]]、[[路易斯·德布罗意]]、[[沃尔夫冈·泡利]]、[[维尔纳·海森堡]]、[[保罗·狄拉克]]、[[恩里科·费米]]\n- 1905年，爱因斯坦提出了光量子的假说，用来解释光电效应中无法用电磁理论解释的现象。\n- 1923年，康普顿引入光量子的假设，把X射线看作能量为hν的光子束的集合。“第三次波粒战争”全面爆发了。\n- 1910 年春天，索尔维慷慨解囊，赞助一个全球性的科学会议，让普朗克、洛伦兹、爱因斯坦这样出色的物理学家能够会聚一堂，讨论最前沿的科学问题。\n- 1897年，J.J．汤姆逊在研究阴极射线的时候，发现了原子中电子的存在。这打破了从古希腊人那里流传下来的“原子不可分割”的理念，明确地向人们展示：原子是可以继续分割的，它有着自己的内部结构。提出了“葡萄干模型”\n- 1910年，[[卢瑟福]]和他的学生们在实验室中做了用α粒子（带正电的氦核）来轰击一张极薄的金箔的实验，发表了“行星模型”  \n\t![https://res.weread.qq.com/wrepub/epub_25622039_82](https://res.weread.qq.com/wrepub/epub_25622039_82)  \n\t但是，这个看来完美的模型却有着自身难以克服的严重困难。因为物理学家们很快就指出，带负电的电子绕着带正电的原子核运转，这个体系是不稳定的。根据麦克斯韦理论，两者之间会放射出强烈的电磁辐射，从而导致电子一点点地失去自己的能量。作为代价，它便不得不逐渐缩小运行半径，直到最终“坠毁”在原子核上为止，整个过程用时不过一眨眼的工夫。\n- 1913年，[[玻尔]]所有这些思想转化成理论推导和数学表达，并以三篇论文，分别题名为“论原子和分子的构造”，“单原子核体系”和“多原子核体系”，发表在《哲学杂志》上。这就是在量子物理历史上划时代的文献，亦即伟大的“三部曲”。\n- 如果把1925-1926年海森堡和薛定谔的开创性工作视为玻尔体系的寿终正寝的话，这个理论总共大约兴盛了13年\n- 现在，我们又一次失去了前进的方向，周围野径交错，迷雾湿衣。\n- 1924 年，[[路易斯·德布罗意]]发表博士论文，电子是一个波，德布罗意称他为相波，并大胆地预言，这将使得电子在通过一个小孔或者晶体的时候，会产生一个可观测的衍射现象。\n- 1927年，戴维逊和革末通过实验精确地证明了电子的波动性：被镍块散射的电子，其行为和X射线衍射一模一样！G.P．汤姆逊在实验中得到的电子衍射图案和X射线衍射图案相差无几。证明了 ’电子是一个波‘\n- 德布罗意的相波引发了新的争论。不仅光和电磁辐射，现在连电子和普通物质都出了问题：究竟是粒子还是波呢？\n- 1924年，**玻色把光看作是不可区分的粒子的集合**，从这个简单的假设出发，他一手推导出了普朗克的黑体公式！爱因斯坦亲自把这篇重要的论文翻译成德文发表，他随即又进一步完善玻色的思想，发展出了后来在量子力学中具有举足轻重地位的玻色—爱因斯坦统计方法。**服从这种统计的粒子（比如光子）称为“玻色子”（boson），它们不服从泡利不相容原理**，这使得我们可以预言，它们在低温下将表现得非常不同，形成著名的玻色—爱因斯坦凝聚现象。\n- 1925年，[[维尔纳·海森堡]]决定换一种办法，暂时不考虑谱线强度，而从电子在原子中的运动出发，先建立基本的运动模型。以 Matrix（Matrix在中文里译作“矩阵”） 的形式\n- 1925年，[[恩斯特·帕斯库尔·约尔当]]和[[波恩]]写出了著名的论文“论量子力学”（Zur Quantenmechanik），发表在《物理学杂志》上。在这篇论文中，两人用了很大的篇幅来阐明矩阵运算的基本规则，并把经典力学的哈密顿变换统统改造成矩阵的形式。传统的动量p和位置q这两个物理变量，现在成为两个含有无限数据的庞大表格，而且正如我们已经看到的那样，它们并不遵守传统的乘法交换率：p×q ≠ q×p。\n- 这就是说，新力学其实是牛顿理论的一个扩展，老的经典力学其实“包含”在我们的新力学中，成为一种特殊情况下的表现形式。\n- 1925 年, [[保罗·狄拉克]]想到了“泊松括号” 和 ` p×q ≠ q×p` 很像，这清楚地表明了，我们的新力学和经典力学是一脉相承的，是旧体系的一个扩展。c 数和 q 数，可以以清楚的方式建立起联系来。”\n- 1925 年，乌仑贝克和古兹密特提出了自旋的假设。很快海森堡和约尔当用矩阵力学处理了自旋\n- 从 1926 年 1 月起到 6 月，[[埃尔文·薛定谔]]一连发了四篇《量子化是本征值问题》为题的论文，从而彻底地建立了另一种全新的力学体系——波动力学。\n- 两条路线之争，\n\t- 一是以[[维尔纳·海森堡]]、[[马克斯·波恩]] 、[[恩斯特·帕斯库尔·约尔当]] 为核心，背后的精神力量 [[尼尔斯·玻尔]] 的**矩阵力学**\n\t- 二是以 [[路易斯·德布罗意]] 的理论为切入点，以 [[埃尔文·薛定谔]] 为主将的波动力学。\n- 1930 年，狄拉克出版了那本经典的量子力学教材，两种力学被完美地统一起来，作为一个理论的不同表达形式出现在读者面前\n- 1926 年 7 月，[[马克斯·波恩]] 将薛定谔方程中的ψ（是一个空间分布函数）比作一个骰子\n- 1927 年 2 月，奥斯卡·克莱恩，他不仅成功地把薛定谔方程相对论化了，还在其中引进了“第五维度”的思想（40 年后，将孕育出称为“超弦”的惊人果实来），这得到了老洛伦兹的热情赞扬。\n- 海森堡，想到了观察电子这种级别的物体时，你派出的光子就会对物体产生影响  \n\t-p 和 q 就像一对前世冤家，它们人生不相见，动如参与商，处在一种有你无我的状态。不管我们亲近哪个，都会同时急剧地疏远另一个。这种奇特的量被称为“共轭量”，\n- [[尼尔斯·玻尔]] 说：任何时候我们观察电子，它当然只能表现出一种属性，要么是粒子，要么是波。 （怎么感觉物理学从唯物主义走向了唯心主义??） 取决于你的观察方式。“波粒二象性”。\n- 第三次波礼粒大战就此结束\n- 如果不定义一个测量动量的方式，那么谈论电子动量也没有意义  \n\t名的科普作家卡尔·萨根（Carl Sagan）曾经在 [[《魔鬼出没的世界》]] 举了一个例子\n- [[奥卡姆剃刀]]\n- 1927 年第五届索尔维会议，物理学的大师们聚首一堂，在会场合影，流传下了那张令多少后人唏嘘不已的“物理学全明星梦之队”的世纪照片。  \n\t![[物理学全明星梦之队](https://res.weread.qq.com/wrepub/epub_25622039_194) ](https://res.weread.qq.com/wrepub/epub_25622039_194 )\n- 1930 年第六届索尔维会议，爱因斯坦使用广义相对论就量子力学的不确定性发起了进攻，但是忽略了广义相对论的红移效应，等效于时间变慢。当我们测量一个很准确的△m 时，我们在很大程度上改变了箱子里的时钟，造成了一个很大的不确定的△t。  \n\t![光箱实验](https://res.weread.qq.com/wrepub/epub_25622039_198)\n- 1935 年, [[埃尔文·薛定谔#薛定谔的猫]]  \n- [[尤金·维格纳]]的意见是：意识无疑在触动波函数中担当了一个重要的角色。当人们还在为薛定谔那只倒霉的猫而争论不休的时候，维格纳又出来捅了一个更大的马蜂窝，这就是所谓[[尤金·维格纳#维格纳的朋友]]\n- 意识在本质上是什么东西呢？它是不是某种神秘的非物质世界的幽灵，完全脱离我们的身体大脑而存在，只有当它“附体”在我们身上时，我们才会获得这种意识呢？显然，绝大多数科学家都不会认同这种说法。\n\t- 一种心照不宣的观点是，意识其实就是一种信息编码，是一种结构模式，虽然它完全基于物质基础（我们的脑）而存在，但却需要更高一层次的规律去阐释它。\n\t- 什么是意识？意识是组成脑的原子群的一种“组合模式”！人脑的物质基础和一块石头没什么不同，是由同样的碳原子、氢原子、氧原子……组成的。从量子力学的角度来看，构成我们脑的电子和构成一块石头的电子完全相同，就算把它们相互调换，也绝不会造成我们的脑袋变成一块石头的奇观。\n- 如果“意识”完全取决于原子的“组合模式”的话?\n\t- 推理一，它可以被复制。\n\n\t\t\u003e 假如我们的技术发达到一定程度，可以扫描你身体里每一个原子的位置和状态，并在另一个地方把它们重新组合起来的话，这个新的“人”是不是你呢？他会不会拥有和你一样的“意识”？ [[不可复制定理]]\n\n\t- 推理二，**因为载体本身并不重要，载体所蕴藏的组合信息才是关键，所以“意识”本身并非要特定的物质基础才能呈现**。\n\n\t\t\u003e 假设组成我们大脑的所有原子都被扫描，相关信息存入一台计算机中，然后这台计算机严格地按照物理定律来计算这些原子的运动，精确地求出它们对于各种刺激会做出怎样的反应，那么从理论上说，这台计算机其实完全等同于我们的大脑，或者干脆说，这台计算机实际上就是我们自身！那么，是不是可以说，这台计算机完全具有“意识”了呢？\n\n- 在实证主义看来，意识只不过是某种复杂的模式结构，任何系统只要能够模拟这种算法，它就可以被合理地认为拥有意识。[[阿兰·图灵]]（Alan Turin）在 1950 年提出了判定计算机能否像人那般实际“思考”的标准，也就是著名的“图灵检验”。\n- 2005 年，库兹韦尔的人便提出了一个很有名的观点：他认为到 2029 年，电脑的“智能”就将在整体上超越人类，并从此一去不回头，远远地将人类抛在后面。这个时间点，他称之为“奇点”。并在 http://www.longbets.org 上押上 2 万美元。\n- 算法复杂到了何种程度才有资格被称为“意识”呢？\n\t- 实证主义认为万事万物都有“意识”，只是程度不同罢了。意识，简单来说，就是一个系统的算法，它“喜欢”那些大概率的输出，“讨厌”那些小概率的输出。\n\t- 少数科学家认为人的意识显然有其不同之处。特别是，当我们做出一些直觉性判断的时候，这是计算机的算法所无法计算的\n- 1979 年, 约翰·惠勒提出“ [[延迟实验]] ”，通过一个戏剧化的思维实验指出，我们可以“延迟”电子的这一决定，使得它在已经实际通过了双缝屏幕之后，再来选择究竟是通过了一条缝还是两条！\n- 波函数无须“坍缩”，去随机选择左还是右，事实上两种可能都发生了！只不过它表现为整个世界的叠加：生活在一个世界中的人们发现在他们那里电子通过了左边的狭缝，而在另一个世界中，人们观察到的电子则在右边！量子过程造成了“两个世界”！这就是量子论的“多世界解释”。----休·埃弗莱特\n- 为什么我们在宏观世界中从来没有观测到量子尺度上的叠加状态呢？\n\n\t\u003e 进入 70 年代以后，泽、苏雷克、盖尔曼等科学家提出了一种极其巧妙的理论。它迅速发展并走红，至今已经得到了大部分人的支持和公认，这就是所谓的[[退相干理论]] （decoherence theory）。\n\n- **有没有一种可能，电子这种也是一种生命，可以自己控制方向，就像人一样，历史的发展是一个一个偶然事件组合而成的。**\n- 然而，究竟什么样的理论才是科学？什么又不是科学？它们之间的界线应该怎样划分？\n\t- [[卡尔·波普尔]]提出一个意见，就是一个“科学”的命题必须“可证伪”，\n\n\t\t\u003e科学家接连发现天王星，海王星，水星的运动轨迹都不符合牛顿理论，并开始假设有一颗未被发现的行星，叫“瓦尔肯星”。因此，单凭列举“反面证据”，根本就不可能证伪牛顿理论。事实上，如果仔细考察科学史，我们就会发现，几乎没有任何理论是因为“被证伪”而倒台的，它们退出历史舞台，几乎只有一个理由，就是出现了一个更好、假设更少、更合理的新理论。\n\n\t- 虽然 100%的证实和证伪都不可能，但是，我们可以根据所搜集到的信息，给某命题一个成立的“概率”。\n- 计算机发展史\n\t- 宾夕法尼亚大学 1946 年的那台 [[ENIAC]] 看成世界上的第一台电子计算机\n\t- 1982 年， [[理查德·费曼]] 猜想: 也许我们的计算机可以使用实际的量子过程来模拟物理现象！如果说模拟一个“叠加”需要很大的计算量的话，为什么不用叠加本身去模拟它呢？每一个叠加都是一个不同的计算，当所有这些计算都最终完成之后，我们再对它进行某种幺正运算，把一个最终我们需要的答案投影到输出中去\n\t- 1985 年，大卫·德义奇成功地证明了一台通用的[[量子计算机]]是可能的\n\t- 1994 年，[[贝尔实验室]]的彼得·肖创造了一种利用量子计算机的算法，可以有效地分解大数（其复杂性符合多项式条件）。\n\t- 1996 年[[贝尔实验室]]的另一位科学家洛弗·格鲁弗很快发现了另一种算法，可以有效地搜索未排序的数据库\n\t- 2011 年，一家名叫 D-Wave 的加拿大公司发布了一个震惊世界的消息。自己已经造出了世界上第一台商用量子计算机，即 D-Wave 1。  \n\t\t2013 年，该公司又推出了第二款型号 D-Wave 2，\n\t- 量子论不但给我们提供了威力无比的计算破解能力，也让我们看到了另一种可能性：一种永无可能破解的加密方法。这是如今另一个炙手可热的话题：量子加密术（quantum cryptography）。\n\t- 如何解释量子计算机那神奇的计算能力呢？德义奇声称，唯一的可能是它利用了多个宇宙把计算放在多个平行宇宙中同时进行，最后汇总那个结果。\n- 1927 年，第五届 [[索尔维会议]]，[[路易斯·德布罗意]]的“导波“，他发现每当一个粒子前进时，都伴随着一个波，这深刻地揭示了波粒二象性的难题。\n\n\t\u003e 量子效应表面上的随机性其实是由一些我们不可知的变量所造成的，换句话说，量子论是一个不完全的理论，它没有考虑到一些不可见的变量，所以才显得不可预测。假如把那些额外的变量考虑进去，整个系统是确定和可预测的，符合严格因果关系的。\n\n- 1932 年的[[冯·诺伊曼]]为量子论打下了严密的数学基础之外，**证明了任何隐变量理论都不可能对测量行为给出确定的预测。** 判处了“相波”的死刑\n- 但是，这确实诺依曼的一个失策，他将一个固定值和平均值相等作为了假设的基础。\n- 第五公设。**“过已知直线外的一个特定的点，能够且只能够画一条直线与已知直线平行“**。\n\t- 俄国数学家[[罗巴切夫斯基]]假设第五公设不成立，也就是说，过直线外一点，可以画一条以上的直线与已知直线平行，并以此为基础进行推演。非欧几何诞生了\n\t- 数学家 [[黎曼]] 则假设无法画这样的平行线，创立了黎曼非欧几何。他把情况推广到 n 维，彻底奠定了非欧几何的基础。更重要的是，他的体系被运用到物理中去，并最终孕育了 20 世纪最杰出的科学巨构—— [[广义相对论]]。\n- [[戴维·玻姆]]的隐变量理论是德布罗意导波的一个增强版，只不过他把所谓的“导波”换成了“量子势”（quantum potential）的概念。在玻姆理论里，我们必须把电子想象成这样一种东西：它本质上是一个经典的粒子，但以它为中心发散出一种势场，这种势场弥漫在整个宇宙中，使它每时每刻都对周围的环境了如指掌。当一个电子向一个双缝进发时，它的量子势会在它到达之前便感应到双缝的存在，从而指导它按照标准的干涉模式行动。\n\t- 这个理论放弃了[[定域性]]\n- [[EPR佯谬]] ** [[贝尔不等式]] **\n- 1982 年, [[EPR检验]] 证明了 [[尼尔斯·玻尔]] 量子论的 正确性\n- 2015 年 10 月，荷兰 Delft 技术大学的一个小组进行了有史以来第一次对贝尔不等式的无漏洞验证实验。从此之后，[[贝尔不等式]]可以被正式地称为贝尔定律了。\n- 今天中国在量子通信领域已经毫无疑问地达到了世界顶尖水平，尤以中科大的潘建伟、郭光灿等小组最为有名。2016 年，中国发射了世界首颗量子通信卫星“墨子号”，成为轰动一时的大新闻。\n\n\t\u003e 量子通信，不管是利用纠缠态还是利用不可克隆原理，它最大的好处是：如果遭到中途窃听，那么由于量子的独特性质，通话对象可以轻易地发现这一点。\n\n- 量子的猜想\n\t- [[系综解释]]\n\t- [[GRW]]\n\t- [[DH]]\n- 想想也真是讽刺，量子力学作为 20 世纪物理史上最重要的成就之一，到今天为止，它的基本数学形式已经被创立了超过 90 年。它在每一个领域内都取得了巨大的成功，以至和相对论一起成为支撑物理学的两大支柱。但量子论是如此与众不同，即使在它被创立了 90 年之后，它竟然还没有被最终完成！\n- 总共有四种力, 引力，电磁场力、强作用力和弱作用力，后三者被一统，科学家们开始想要创造一个万能公式，统一所有的理论\n- 1968 年，维尼基亚诺在一本数学书上找到了“欧拉β函数”，顺手把它运用到所谓“雷吉轨迹“”的问题上面，做了一些计算，结果惊讶地发现，它竟然能够很好地描述核子中许多强相对作用力的效应！\n- 南部阳一郎、萨斯金和尼尔森分别证明了，这个模型在描述粒子的时候等效于描述一根一维的“弦”！\n- 施瓦茨和谢尔克研究了这个理论的一些性质。他们把这种弦当作束缚夸克的纽带，也就是说，夸克是绑在弦的两端的，这使得它们永远也不能单独从核中被分割出来。得到一些奇怪的结论：\n\t- 理论要求一个自旋为 2 的零质量粒子，但这个粒子却在核子家谱中找不到位置（你可以想象一下，如果某位化学家找到了一种无法安插进周期表里的元素，他将会如何抓狂）。\n\t- 理论还预言了一种比光速还要快的粒子，也即所谓的“快子”（tachyon）。大家可能会首先想到这违反相对论，但严格地说，在相对论中快子可以存在，只要它的速度永远不降到光速以下！\n\t- 真正的麻烦在于，如果这种快子被引入量子场论，那么真空就不再是场的最低能量态了，也就是说，连真空也会变得不稳定，它必将衰变成别的东西！\n\t- 更令人无法理解的是，如果弦论想要自圆其说，它就必须要求我们的时空是 26 维的！\n- 1971 年，施瓦茨和雷蒙（Pierre Ramond）等人合作，把原来需要 26 维的弦论简化为只需要 10 维。这里面初步引入了所谓“超对称”的思想，每个玻色子都对应于一个相应的费米子。\n- 施瓦茨和迈克尔·格林（Michael Green），两人最终完成了超对称和弦论的结合。现在，老的“弦论”已经死去了，新生的是威力无比的“超弦”理论，这个“超”的新头衔，是“超对称”册封给它的无上荣耀。\n\t- 老的弦论所预言的那个自旋 2 质量 0 的粒子虽然在强子中找不到位置，但它却符合相对论！事实上，它就是传说中的“引力子”！\n- 1984 年，施瓦茨和格林解决了所谓的“反常”问题。本来在超弦中有无穷多种的对称性可供选择，但施瓦茨和格林经过仔细检查后发现，只有在极其有限的对称形态中，理论才得以消除这些反常而得以自洽。这样就使得我们能够认真地考察那几种特定的超弦理论，而不必同时对付无穷多的可能性。更妙的是，筛选下来的那些群正好可以包容现有的规范场理论，还有粒子的标准模型！伟大的胜利！\n- \"第一次超弦革命\"过后，我们得到了这样一个图像：任何粒子其实都不是传统意义上的点，而是开放或者闭合（头尾相接而成环）的弦。当它们以不同的方式振动时，就分别对应自然界中的不同粒子（电子、光子……包括引力子）。我们仍然生活在一个 10 维的空间里，但是有 6 个维度是紧紧蜷缩起来的，所以我们平时觉察不到它。\n- 1995 年, 爱德华·威滕证明了不同耦合常数的弦论在本质上其实是相同的！我们只能用微扰法处理弱耦合的理论，也就是说，耦合常数很小，在这样的情况下，**5 种弦论看起来相当不同。但是，假如我们逐渐放大耦合常数，会发现它们其实是一个大理论的 5 个不同的变种！** 特别是，当耦合常数被放大时，出现了一个新的维度——第 11 维！这就像一张纸只有 2 维，但你把许多纸叠在一起，就出现了一个新的维度——高度！这个统一的理论被称为“M 理论”\n- ![我们的理论结构](https://res.weread.qq.com/wrepub/epub_25622039_310)\n\n## 常青笔记\n\n- [[海因里希·鲁道夫·赫兹]]\n- [[古格列尔莫·马可尼]]\n- [[艾萨克·牛顿]]\n- [[托马斯·杨]]\n- [[麦克斯韦]]\n- [[阿喀琉斯追龟辩]]\n- [[光电效应]]\n- [[吉尔达诺·布鲁诺]]\n- [[伽利略·伽利莱]]\n- [[冯·诺伊曼]]\n- [[麦卡锡主义]]\n- [[量子纠缠]]\n\n## 重点摘要\n\n- 上帝掷骰子吗？：量子物理史话（升级版）  \n曹天元\n\n◆ Preface序\n\n\u003e\u003e 如果要评选物理学发展史上最伟大的那些年代，那么有两个时期是一定会入选的：17世纪末和20世纪初。前者以牛顿《自然哲学之数学原理》的出版为标志，宣告了近代经典物理学的正式创立；而后者则为我们带来了相对论和量子论，并彻底推翻和重建了整个物理学体系\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 但是它被赋予的力量太过强大，以致连它的创造者本身都难以驾驭，连量子论的奠基人之一玻尔（Niels Bohr）都要说：“如果谁不为量子论而感到困惑，那他就是没有理解量子论。”\n\n◆ Part. 1\n\n\u003e\u003e 原来电磁波一点都不神秘，我们平时见到的光就是电磁波的一种，只不过普通光的频率正好落在某一个范围内，而能够为我们的眼睛所感觉到罢了。\n\n◆ Part. 2\n\n\u003e\u003e 波动说认为，光不是一种物质粒子，而是由于介质的振动而产生的一种波。我们想象一下足球场上观众掀起的“人浪”：虽然每个观众只是简单地站起和坐下，并没有四处乱跑，但那个“浪头”却实实在在地环绕全场运动着，这个“浪头”就是一种波。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 但是波动说巧妙地摆脱了这个难题：它假设了一种看不见摸不着的介质来实现光的传播，这种介质有一个十分响亮而让人印象深刻的名字，叫作“以太”（Aether）。\n\n◆ Part. 3\n\n\u003e\u003e 他驳斥了波动理论，质疑如果光和声音同样是波，为什么光无法像声音那样绕开障碍物前进\n\n◆ Part. 5\n\n\u003e\u003e 物理学的大厦从来都没有这样地金碧辉煌，令人叹为观止。牛顿的力学体系已经是如此雄伟壮观，现在麦克斯韦在它之上又构建起了同等规模的另一幢建筑，它的光辉灿烂让人几乎不敢仰视。电磁理论在数学上完美得难以置信，麦克斯韦最初的理论后来经赫兹等人的整理，提炼出一个极其优美的核心，也就是著名的麦氏方程组。它刚一问世，就被世人惊为天物，其表现出的简洁、深刻、对称使得每一个科学家都陶醉其中。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 力、热、光、电、磁……一切的一切，都在人们的控制之中，而且所用的居然都是同一种手法。它是如此地行之有效，以致物理学家们开始相信，这个世界所有的基本原理都已经被发现了，物理学已经尽善尽美，它走到了自己的极限和尽头，再也不可能有任何突破性的进展了。\n\n◆ Part. 1\n\n\u003e\u003e 开尔文的这篇演讲名为《在热和光动力理论上空的19世纪乌云》。当时已经76岁，白发苍苍的他用那特有的爱尔兰口音开始了发言，他的第一段话是这么说的：“动力学理论断言，热和光都是运动的方式。但现在这一理论的优美性和明晰性却被两朵乌云遮蔽，显得黯然失色了……”\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 这两朵著名的乌云，分别指的是经典物理在光以太和麦克斯韦-玻尔兹曼能量均分学说上遇到的难题。再具体一些，指的就是人们在迈克尔逊-莫雷实验和黑体辐射研究中的困境。\n\n\u003e\u003e\n\n\u003e\u003e 我们在上面已经谈到了迈克尔逊-莫雷实验，这个实验的结果是如此地令人震惊，以致它的实验者在相当一段时期里都不敢相信自己结果的正确性。但正是这个否定的证据，最终使得“光以太”的概念寿终正寝，使相对论的诞生成为可能。这个实验的失败在物理史上却应该说是一个伟大的胜利，科学从来都是只相信事实的。\n\n◆ Part. 2\n\n\u003e\u003e 大家都知道，一个物体之所以看上去是白色的，那是因为它反射所有频率的光波；反之，如果看上去是黑色的，那是因为它吸收了所有频率的光波的缘故。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 19世纪末，人们开始对黑体模型的热辐射问题发生兴趣。其实，很早的时候，人们就已经注意到，对不同的物体，热和辐射频率似乎有一定的对应关联。比如金属，有过生活经验的人都知道，要是我们把一块铁放在火上加热，那么到了一定温度的时候，它会变得暗红起来（其实在这之前有不可见的红外线辐射），温度再高些，它会变得橙黄，到了极度高温的时候，如果能想办法不让它汽化了，我们可以看到铁块将呈现蓝白色。也就是说，物体的辐射能量、频率和温度之间有着一定的函数关系（在天文学里，有“红巨星”和“蓝巨星”，前者呈暗红色，温度较低，通常属于老年恒星；而后者的温度极高，是年轻恒星的典范）。\n\n◆ Part. 4\n\n\u003e\u003e 必须假定，能量在发射和吸收的时候，不是连续不断，而是分成一份一份的。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 这种连续性、平滑性的假设，是微积分的根本基础。\n\n\u003e\u003e\n\n\u003e\u003e 其中，E是单个量子的能量，ν是频率。h就是神秘的量子常数，以它的发现者命名，称为“普朗克常数”。它约等于6.626×10-27尔格/秒，也就是6.626×10-34焦耳/秒。这个值，正如我们以后将要看到的那样，原来竟是构成我们整个宇宙最为重要的三个基本物理常数之一（另两个是引力常数G和光速c）。\n\n◆ Part. 2\n\n\u003e\u003e 让我们再重温一下光电效应和电磁理论的不协调之处：电磁理论认为，光作为一种波动，它的强度代表了它的能量，增强光的强度应该能够打击出更高能量的电子。但实验表明，增加光的强度只能打击出更多数量的电子，而不能增加电子的能量。要打击出更高能量的电子，则必须提高照射光线的频率。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 提高频率，提高频率。爱因斯坦突然灵光一闪：E=hν，提高频率，不正是提高单个量子的能量吗？而更高能量的量子，不正好能够打击出更高能量的电子吗？另外，提高光的强度，只是增加量子的数量罢了，所以相应的结果自然是打击出更多数量的电子！一切在突然之间，显得顺理成章起来\n\n\u003e\u003e\n\n\u003e\u003e 科学史上有两个年份，便符合“奇迹”的称谓，而它们又是和两个天才的名字紧紧相连的。这两年分别是1666年和1905年，那两个天才便是牛顿和爱因斯坦。\n\n\u003e\u003e\n\n\u003e\u003e 1666年，23岁的牛顿为了躲避瘟疫，回到乡下的老家度假。在那段日子里，他一个人独立完成了几项开天辟地的工作，包括发明了微积分（流数），完成了光分解的实验分析，以及对于万有引力定律的开创性思考[插图]。在那一年，他为数学、力学和光学三大学科分别打下了基础，而其中的任何一项工作，都足以让他名列有史以来最伟大的科学家之列。很难想象，一个人的思维何以能够在如此短的时间内涌动出如此多的灵感，人们只能用一个拉丁文annus mirabilis来表示这一年，也就是“奇迹年”[插图]。1905年的爱因斯坦也是这样，在专利局里蜗居的他在这一年写了6篇论文：3月18日，是我们上面提到过的关于光电效应的文章，成为量子论的奠基石之一。4月30日，关于测量分子大小的论文为他赢得了博士学位。5月11日和后来的12月19日，两篇关于布朗运动的论文，成为分子论的里程碑。6月30日，题为《论运动物体的电动力学》的论文，这个不起眼的题目后来被加上了一个如雷贯耳的名称，叫作“狭义相对论”，它的意义就不用我多说了。9月27日，关于物体惯性和能量的关系，这是狭义相对论的进一步说明，并且在其中提出了著名的质能方程E = mc2。\n\n◆ Part. 2\n\n\u003e\u003e 人们向这里涌来，充分地感受这里的自由气氛和玻尔的关怀，并形成一种富有激情、活力、乐观态度和进取心的学术精神，也就是后人所称道的“哥本哈根精神”。\n\n◆ Part. 2\n\n\u003e\u003e 在经典力学中，一个周期性的振动可以用数学方法分解成为一系列简谐振动的叠加，这个方法叫作傅里叶级数展开（Fourierseries），它在工程上有着极为重要的应用。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 但是，海森堡现在开始对此表示怀疑。一个绝对的“能级”或者“频率”，有谁曾经观察到过这些物理量吗？没有，我们唯一可以观察的只有电子在能级之间跃迁时的“能级差”。如果说一种物理量无论如何也观察不到，那么我们凭什么把它高高供奉，当作理论的基础呢？玻尔的原子大厦就是建筑在这种流沙之上，所以终于摇摇欲坠。要拯救物理学，现在只有彻底抛弃那些幻想和臆猜，重新一步一个脚印地去寻找一块坚实的地基才行。\n\n◆ Part. 3\n\n\u003e\u003e 盖莫夫在书里说，目前数学只有一个大分支还没有派上用场（除了做做智力体操之外），那就是数论。不过盖莫夫说这话时却没有想到，随着计算机革命的到来，古老的数论已经以惊人的速度在现代社会中找到了它的位置，开始大显身手。基于大素数原理的加密、解密和数字签名算法（如著名的公钥算法RSA）已经成为电子安全不可缺少的部分\n\n◆ Part. 4\n\n\u003e\u003e 不过，对于当时其他的物理学家来说，海森堡的新体系无疑是一个怪物。矩阵这种冷冰冰的东西实在太不讲情面，不给人以任何想象的空间。人们一再追问，这里面的物理意义是什么？矩阵究竟是个什么东西？海森堡却始终护定他那让人沮丧的立场：所谓“意义”是不存在的，如果有的话，那数学就是一切“意义”所在。物理学是什么？就是从实验观测出发，并以庞大复杂的数学关系将它们联系起来的一门科学，如果说有什么“图像”能够让人们容易理解和记忆的话，那也是靠不住的。但是，不管怎么样，毕竟矩阵力学对大部分人来说都太陌生、太遥远了，而隐藏在它背后的深刻含义当时还远远没有被发掘出来。特别是p×q ≠ q×p，这究竟代表了什么，令人头痛不已。\n\n◆ Part. 2\n\n\u003e\u003e 事实上，我们追寻它们各自的家族史，发现它们都是从经典的哈密顿函数而来，只不过一个是从粒子的运动方程出发，另一个是从波动方程出发罢了。而光学和运动学早就已经在哈密顿本人的努力下被联系在了一起，这当真叫作“本是同根生”了。\n\n◆ Part. 4\n\n\u003e\u003e “我不需要上帝这个假设。”拉普拉斯站在拿破仑面前说。这可以算科学上最光辉、最荣耀的时刻之一了，它把无边的自豪和骄傲播撒到每一个科学家的心中。不仅不需要上帝，拉普拉斯想象，假如我们有一个妖精或一个大智者，或者任何拥有足够智慧的人物，假如他能够了解在某一刻，这个宇宙所有分子的运动情况的话，那么他就可以从正反两个方向推演，从而得出宇宙在任意时刻的状态。对于这样的智者来说，没有什么过去和未来的分别，一切都历历在目。宇宙从它出生的那一刹那开始，就坠入了一个预定的轨道，它严格地按照物理定律发展，没有任何岔路可以走，一直到遇见它那注定的命运为止\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 矜持的决定论在20世纪首先遭到了量子论的严重挑战，随后混沌动力学的兴起使它彻底被打垮。现在我们已经知道，即使没有量子论把概率这一基本属性赋予自然界，就牛顿方程本身来说，许多系统也是极不稳定的，任何细小的干扰都能够对系统的发展造成极大的影响，差之毫厘，失之千里。这些干扰从本质上说是不可预测的，因此想凭借牛顿方程来预测整个系统从理论上说也是不可行的。典型的例子是长期的天气预报，大家可能都已经听说过洛伦兹（Edward Lorenz）著名的“蝴蝶效应”：哪怕一只蝴蝶轻微地扇动它的翅膀，也能给整个天气系统造成戏剧性的变化（好莱坞后来还以此为名拍了一部电影）。现在的天气预报也已经普遍改用概率性的说法，比如“明天的降水概率是20%”\n\n◆ Part. 2\n\n\u003e\u003e 在过去，所有的科学家都认为，无中生有是绝对不可能的。物质不能被凭空制造，能量也不能被凭空制造，遑论时空本身。但是不确定性原理的出现把这一切旧观念都摧枯拉朽一般地粉碎了。海森堡告诉我们，在极小的空间和极短的时间里，什么都是有可能发生的。因为我们对时间非常确定，所以反过来对能量就非常不确定，能量物质可以逃脱物理定律的束缚，自由自在地出现和消失。但是，这种自由的代价就是它只能限定在那一段极短的时间内，时刻一到，灰姑娘就会现出原形，这些神秘的物质能量便要消失，以维护质能守恒定律在大尺度上不被破坏。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 在广义相对论里，引力波是时空的涟漪。当投掷石头到池塘里时，会在池塘表面产生涟漪，从石头入水的位置向外传播。当带质量物体呈加速度运动时，也会在时空产生涟漪，从带质量物体位置向外传播，这种时空的涟漪就是引力波引力波\n\n◆ Part. 3\n\n\u003e\u003e 怎么看，电子都没法不是个粒子；怎么看，电子都没法不是个波。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 任何时候我们观察电子，它当然只能表现出一种属性，要么是粒子，要么是波。\n\n◆ Part. 4\n\n\u003e\u003e 我们试图探测电子在通过狭缝时的实际位置，可是只有粒子才有实际的位置。这实际上是我们施加的一种暗示，让电子早早地展现出粒子性\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 好吧，现在我视力良好，也不戴任何装置，看到马是白色的。那么，它当真是白色的吗？其实我说这话前，已经隐含了一个默认的观测方式：“用人类正常的肉眼，在普通光线下看来，马呈现出白色。”再技术化一点，人眼只能感受可见光，波长在400～760纳米，这些频段的光混合在一起才形成我们印象中的白色。所以我们论断的前提就是，在400～760纳米的光谱区感受马，它是白色的。\n\n\u003e\u003e\n\n\u003e\u003e 一点也不错，假如一个物理概念是无法测量的，它就是没有意义的。我们要时时刻刻注意，在量子论中观测者是和外部宇宙结合在一起的，它们之间现在已经没有明确的分界线，是一个整体。在经典理论中，我们脱离一个绝对客观的外部世界而存在，我们也许不了解这个世界的某些因素，但这不影响其客观性。可如今我们自己也已经融入这个世界了，对于这个物我合一的世界来说，任何东西都应该是可以测量和感知的。只有可观测的量才是存在的！\n\n\u003e\u003e\n\n\u003e\u003e 换言之，不存在一个客观的、绝对的世界。唯一存在的，就是我们能够观测到的世界。物理学的全部意义，不在于它能够揭示出自然“是什么”，而在于它能够明确，关于自然我们能“说什么”。没有一个脱离于观测而存在的“绝对自然”，只有我们和那些复杂的测量关系，熙熙攘攘纵横交错，构成了这个令人心醉的宇宙的全部。测量是新物理学的核心，测量行为创造了整个世界。\n\n\u003e\u003e\n\n\u003e\u003e 假设宇宙在创生初期膨胀得足够快，以致它的某些区域对我们来说是如此遥远，甚至从创生的一刹那以光速出发，至今也无法与它建立起任何沟通。宇宙年龄大概有138亿岁，任何信号传播最远的距离也不过138亿光年，那么，在距离我们138亿光年之外，有没有另一些“实在”的宇宙，虽然它们不可能和我们的宇宙之间有任何因果联系？\n\n\u003e\u003e\n\n\u003e\u003e “138亿光年”这个距离称作“视界”\n\n\u003e\u003e\n\n\u003e\u003e 坚持这种实证主义，是现代科学区别于玄学、宗教最大的特征之一，说白了，就是要求“可检验”。\n\n◆ Part. 5\n\n\u003e\u003e ，量子论革命的破坏力是相当惊人的。在概率解释、不确定性原理和互补原理这三大核心原理中，前两者摧毁了经典世界的（严格）因果性，互补原理和不确定性原理又合力捣毁了世界的（绝对）客观性。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 哥本哈根解释的基本内容，全都围绕着三大核心原理而展开。我们在前面已经说到，首先，不确定性原理限制了我们对微观事物认识的极限，而这个极限也就是具有物理意义的一切。其次，因为存在观测者对于被观测物的不可避免的扰动，现在主体和客体世界必须被理解成一个不可分割的整体。没有一个孤立地存在于客观世界的“事物”（being），事实上一个纯粹的客观世界是没有的，任何事物都只有结合一个特定的观测手段，才谈得上具体意义。对象所表现出的形态，很大程度上取决于我们的观察方法。对同一个对象来说，这些表现形态可能是互相排斥的，但必须被同时用于这个对象的描述中，也就是互补原理。\n\n\u003e\u003e\n\n\u003e\u003e 奇怪，非常奇怪。为什么我们一观测，电子的波函数就开始坍缩了呢？\n\n◆ Part. 1\n\n\u003e\u003e 对于爱因斯坦来说，一个没有严格因果律的物理世界是不可想象的。物理规律应该统治一切，物理学应该简单明确：A导致了B, B导致了C, C导致了D。环环相扣，每一个事件都有来龙去脉，原因结果，而不依赖于什么“随机性”。\n\n◆ Part. 4\n\n\u003e\u003e 在量子论的引导下，科学显得如此朝气蓬勃，它的各个分支以火箭般的速度发展，给人类社会带来了伟大的技术革命。从半导体到核能，从激光到电子显微镜，从集成电路到分子生物学，量子论把它的光辉播撒到人类社会的每一个角落，成为有史以来在实用中最成功的物理理论\n\n◆ Part. 1\n\n\u003e\u003e 大家一定还对上一章困扰我们的测量问题记忆犹新：每当我们观测时，系统的波函数就坍缩了，按概率跳出来一个实际的结果，如果不观测，那它就按照方程严格发展。这是两种迥然不同的过程，后者是连续的，在数学上可逆的、完全确定的，而前者却是一个“坍缩”，它随机，不可逆，至今也不清楚内在的机制究竟是什么。这两种过程是如何转换的？是什么触动了波函数这种剧烈的变化？是“观测”吗？但是，我们这样讲的时候，用的语言是日常的、暧昧的、模棱两可的。我们一直理所当然地使用“观测”这个词语，却没有给它下一个精确的定义。什么样的行为算是一次“观测”？如果说睁开眼睛看算是一次观测，那么闭上眼睛用手去摸呢？用棍子去捅呢？用仪器记录呢？如果说人可以算是“观测者”，那么猫呢？一台计算机呢？一个盖革计数器又如何？\n\n◆ Part. 2\n\n\u003e\u003e 近几年来，在量子通信方面我们有了极大的突破，把一个未知的量子态原封不动地传输到第二者那里已经成为可能，而且事实上已经有许多具体协议的提出，这被称为“量子隐形传态”（Quantumteleportation）。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 令人欣慰的是，我们现在已经知道量子论中有一个叫作“不可复制定理”（no cloning theorem,1982年Wootters, Zurek和Dieks提出）的原则规定：在传输量子态的同时，一定会毁掉原来那个原本。也就是说，量子态只能剪切+粘贴，不能复制+粘贴，这就阻止了两个“你”的出现。但问题是，如果把你“毁掉”，然后在另一个地方“重建”起来，你是否认为这还是“原来的你”？\n\n\u003e\u003e\n\n\u003e\u003e 而另一个推论就是：因为载体本身并不重要，载体所蕴藏的组合信息才是关键，所以“意识”本身并非要特定的物质基础才能呈现\n\n\u003e\u003e\n\n\u003e\u003e 对于许多实证主义者来说，答案或许是肯定的。在他们看来，意识只不过是某种复杂的模式结构，或者说，是在输入和输出之间进行的某种复杂算法。任何系统只要能够模拟这种算法，它就可以被合理地认为拥有意识。\n\n◆ Part. 3\n\n\u003e\u003e 这样一来，宇宙本身由一个有意识的观测者创造出来也不是什么不可能的事情。虽然从理论上说，宇宙已经演化了几百亿年，但某种“延迟”使得它直到被一个高级生物观察之后才成为确定。我们的观测行为本身参与了宇宙的创造过程！这就是所谓的“参与性宇宙”模型（The ParticipatoryUniverse）。宇宙本身没有一个确定的答案，而其中的生物参与了这个谜题答案的构建本身！\n\n◆ Part. 3\n\n\u003e\u003e 如何解释量子计算机那神奇的计算能力呢？德义奇声称，唯一的可能是它利用了多个宇宙把计算放在多个平行宇宙中同时进行，最后汇总那个结果。\n\n◆ Part. 3\n\n\u003e\u003e 而如果他想利用贝尔不等式，他就必须知道，另一边具体采取了什么观测手段，在哪一个方向上进行了观测，而这个信息仍然需要通过常规的方法来获取，因此不可能超过光速。所以，总的来说，量子纠缠并不违反相对论的原理，因为你无法利用这种“超光速”传递信息，并产生逻辑上的自我矛盾\n\n◆ Part. 4\n\n\u003e\u003e 。在概率的“频率主义派”（frequencists）看来，“单个事件”是没有概率的，讨论它的概率毫无意义。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 就像那匹可怜的马，它是什么颜色，只取决于我们定义的观测方式（即系综），而并没有一个“实际的”颜色存在。人们煞费苦心，不断地搞出什么“坍缩”或者“多宇宙”之类的疯狂概念，完全只是庸人自扰，是在向风车宣战。只要承认单个事件没有物理属性，单个电子没有路径，单只薛定谔猫没有死活，那么一切麻烦自然也就不存在了！\n\n◆ Part. 3\n\n\u003e\u003e 抛开量子场论的胜利不谈，量子论在物理界的几乎每一个角落都激起激动人心的浪花，引发一连串美丽的涟漪。它深入固体物理中，使我们对于固体机械和热性质的认识产生了翻天覆地的变化，更打开了通向凝聚态物理这一崭新世界的大门。在它的指引下，我们才真正认识了电流的传导，使得对于半导体的研究成为可能，而最终带领我们走向微电子学的建立。它驾临分子物理领域，成功地解释了化学键和轨道杂化，从而开创了量子化学学科。如今我们关于化学的几乎一切知识，都建立在这个基础之上。而材料科学在插上了量子论的双翼之后，才真正展翅飞翔起来，开始深刻地影响社会的方方面面。在量子论的指引之下，我们认识了超导和超流，掌握了激光技术，造出了晶体管和集成电路，为整个新时代的来临真正做好了准备。量子论让我们得以一探原子内部那最为精细的奥秘，我们不但更加深刻地理解了电子和原子核之间的作用和关系，还进一步拆开原子核，领略到了大自然那更为令人惊叹的神奇。在浩瀚的星空之中，我们必须借助量子论才能把握恒星的命运会何去何从：当它们的燃料耗尽之后，它们会不可避免地向内坍缩，这时支撑起它们最后骨架的就是源自泡利不相容原理的一种简并压力。当电子简并压力足够抵挡坍缩时，恒星就演化为白矮星。要是电子被征服，而要靠中子出来抵抗时，恒星就变为中子星。最后，如果一切防线都被突破，那么它就不可避免地坍缩成一个黑洞。但即使黑洞也不是完全“黑”的，如果充分考虑量子不确定因素的影响，黑洞其实也会产生辐射而逐渐消失，这就是以其鼎鼎大名的发现者史蒂芬·霍金而命名的“霍金蒸发”过程。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 量子论的出现彻底改变了世界的面貌，它比史上任何一种理论都引发了更多的技术革命。核能、计算机技术、新材料、能源技术、信息技术……这些都在根本上和量子论密切相关。牵强一点说，如果没有足够的关于弱相互作用力和晶体衍射的知识，DNA的双螺旋结构也就不会被发现，分子生物学也就无法建立，也就没有如今这般火热的生物技术革命。再牵强一点说，没有量子力学，也就不会有欧洲粒子物理中心（CERN），而没有CERN，也就没有互联网的www服务，更没有划时代的网络革命，而各位呢，也就很可能看不到我们的史话，呵呵\n\n◆ Part. 4\n\n\u003e\u003e 这样一来，我们的宇宙中就总共有4种相互作用力：引力、电磁力、强相互作用力和弱相互作用力。它们各自为政，互不管辖，遵守着不同的理论规则。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 964年，我们的盖尔曼提出了一个如今家喻户晓的模型：每一个强子都可以进一步被分割为称为“夸克”（quark）的东西，它们通过交换“胶子”（gluon）来维持相互的作用力！\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E4%B8%8A%E5%B8%9D%E6%8E%B7%E9%AA%B0%E5%AD%90%E5%90%97%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86%E5%8F%B2%E8%AF%9D%E5%8D%87%E7%BA%A7%E7%89%88":{"title":"《 上帝掷骰子吗？：量子物理史话（升级版） 》","content":"\n# 《 上帝掷骰子吗？：量子物理史话（升级版） 》\n\n# 元数据\n\n\u003e [!abstract] 上帝掷骰子吗？：量子物理史话（升级版）\n\u003e - ![ 上帝掷骰子吗？：量子物理史话（升级版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/87/YueWen_25622039/t7_YueWen_25622039.jpg)\n\u003e - 书名： 上帝掷骰子吗？：量子物理史话（升级版）\n\u003e - 作者： 曹天元\n\u003e - 简介： 本书回顾量子论从无到有发展的风云录，从18世纪开始，直到21世纪，一批科学巨人开始颠覆传统物理学大厦，为了宇宙的终极理论而战，大大改变了人类发展的历史。你会知道：1.用武侠小说般的语言，清晰勾勒量子物理发展风云录。2.量子究竟是什么，为什么说量子论是上帝在掷骰子？3.对双缝干涉实验、薛定谔的猫、量子纠缠、多重宇宙等硬核知识的生动解读。4.量子物理如何影响世界，量子计算机、量子通信……量子物理未来将有哪些应用。5.牛顿、普朗克、爱因斯坦、玻尔、海森堡、霍金……科学版的《人类群星闪耀时》，兼具科普、哲学、文学、传奇、探险故事、名人传记等多项功能。\n\u003e - 出版时间 2019-06-01 00:00:00\n\u003e - ISBN： 9787559630612\n\u003e - 分类： 科学技术-科学科普\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n## Preface 序\n\n- 📌 如果要评选物理学发展史上最伟大的那些年代，那么有两个时期是一定会入选的：17世纪末和20世纪初。前者以牛顿《自然哲学之数学原理》的出版为标志，宣告了近代经典物理学的正式创立；而后者则为我们带来了相对论和量子论，并彻底推翻和重建了整个物理学体系 ^25622039-3-603-724\n    - ⏱ 2022-04-14 15:25:24\n- 📌 但是它被赋予的力量太过强大，以致连它的创造者本身都难以驾驭，连量子论的奠基人之一玻尔（Niels Bohr）都要说：“如果谁不为量子论而感到困惑，那他就是没有理解量子论。” ^25622039-3-1371-1457\n    - ⏱ 2022-04-14 15:29:10\n\n## Part. 1\n\n- 📌 原来电磁波一点都不神秘，我们平时见到的光就是电磁波的一种，只不过普通光的频率正好落在某一个范围内，而能够为我们的眼睛所感觉到罢了。 ^25622039-5-4121-4186\n    - ⏱ 2022-04-14 15:38:41\n\n## Part. 2\n\n- 📌 波动说认为，光不是一种物质粒子，而是由于介质的振动而产生的一种波。我们想象一下足球场上观众掀起的“人浪”：虽然每个观众只是简单地站起和坐下，并没有四处乱跑，但那个“浪头”却实实在在地环绕全场运动着，这个“浪头”就是一种波。 ^25622039-6-3881-3992\n    - ⏱ 2022-04-14 15:51:53\n- 📌 但是波动说巧妙地摆脱了这个难题：它假设了一种看不见摸不着的介质来实现光的传播，这种介质有一个十分响亮而让人印象深刻的名字，叫作“以太”（Aether）。 ^25622039-6-4369-4445\n    - ⏱ 2022-04-14 15:52:20\n\n## Part. 3\n\n- 📌 他驳斥了波动理论，质疑如果光和声音同样是波，为什么光无法像声音那样绕开障碍物前进 ^25622039-7-5188-5228\n    - ⏱ 2022-04-14 16:17:16\n\n## Part. 5\n\n- 📌 物理学的大厦从来都没有这样地金碧辉煌，令人叹为观止。牛顿的力学体系已经是如此雄伟壮观，现在麦克斯韦在它之上又构建起了同等规模的另一幢建筑，它的光辉灿烂让人几乎不敢仰视。电磁理论在数学上完美得难以置信，麦克斯韦最初的理论后来经赫兹等人的整理，提炼出一个极其优美的核心，也就是著名的麦氏方程组。它刚一问世，就被世人惊为天物，其表现出的简洁、深刻、对称使得每一个科学家都陶醉其中。 ^25622039-9-878-1065\n    - ⏱ 2022-04-14 16:43:41\n- 📌 力、热、光、电、磁……一切的一切，都在人们的控制之中，而且所用的居然都是同一种手法。它是如此地行之有效，以致物理学家们开始相信，这个世界所有的基本原理都已经被发现了，物理学已经尽善尽美，它走到了自己的极限和尽头，再也不可能有任何突破性的进展了。 ^25622039-9-2246-2368\n    - ⏱ 2022-04-14 16:44:59\n\n## Part. 1\n\n- 📌 开尔文的这篇演讲名为《在热和光动力理论上空的19世纪乌云》。当时已经76岁，白发苍苍的他用那特有的爱尔兰口音开始了发言，他的第一段话是这么说的：“动力学理论断言，热和光都是运动的方式。但现在这一理论的优美性和明晰性却被两朵乌云遮蔽，显得黯然失色了……” ^25622039-11-1123-1278\n    - ⏱ 2022-04-14 16:52:30\n- 📌 这两朵著名的乌云，分别指的是经典物理在光以太和麦克斯韦-玻尔兹曼能量均分学说上遇到的难题。再具体一些，指的就是人们在迈克尔逊-莫雷实验和黑体辐射研究中的困境。 ^25622039-11-1825-1904\n    - ⏱ 2022-04-14 16:52:43\n- 📌 我们在上面已经谈到了迈克尔逊-莫雷实验，这个实验的结果是如此地令人震惊，以致它的实验者在相当一段时期里都不敢相信自己结果的正确性。但正是这个否定的证据，最终使得“光以太”的概念寿终正寝，使相对论的诞生成为可能。这个实验的失败在物理史上却应该说是一个伟大的胜利，科学从来都是只相信事实的。 ^25622039-11-4286-4429\n    - ⏱ 2022-04-14 17:30:54\n\n## Part. 2\n\n- 📌 大家都知道，一个物体之所以看上去是白色的，那是因为它反射所有频率的光波；反之，如果看上去是黑色的，那是因为它吸收了所有频率的光波的缘故。 ^25622039-12-773-841\n    - ⏱ 2022-04-14 17:55:28\n- 📌 19世纪末，人们开始对黑体模型的热辐射问题发生兴趣。其实，很早的时候，人们就已经注意到，对不同的物体，热和辐射频率似乎有一定的对应关联。比如金属，有过生活经验的人都知道，要是我们把一块铁放在火上加热，那么到了一定温度的时候，它会变得暗红起来（其实在这之前有不可见的红外线辐射），温度再高些，它会变得橙黄，到了极度高温的时候，如果能想办法不让它汽化了，我们可以看到铁块将呈现蓝白色。也就是说，物体的辐射能量、频率和温度之间有着一定的函数关系（在天文学里，有“红巨星”和“蓝巨星”，前者呈暗红色，温度较低，通常属于老年恒星；而后者的温度极高，是年轻恒星的典范）。 ^25622039-12-1212-1491\n    - ⏱ 2022-04-14 17:56:33\n\n## Part. 4\n\n- 📌 必须假定，能量在发射和吸收的时候，不是连续不断，而是分成一份一份的。 ^25622039-14-1410-1444\n    - ⏱ 2022-04-15 10:20:12\n- 📌 这种连续性、平滑性的假设，是微积分的根本基础。 ^25622039-14-2874-2897\n    - ⏱ 2022-04-15 10:21:46\n- 📌 其中，E是单个量子的能量，ν是频率。h就是神秘的量子常数，以它的发现者命名，称为“普朗克常数”。它约等于6.626×10-27尔格/秒，也就是6.626×10-34焦耳/秒。这个值，正如我们以后将要看到的那样，原来竟是构成我们整个宇宙最为重要的三个基本物理常数之一（另两个是引力常数G和光速c）。 ^25622039-14-5074-5276\n    - ⏱ 2022-04-15 10:24:04\n\n## Part. 2\n\n- 📌 让我们再重温一下光电效应和电磁理论的不协调之处：电磁理论认为，光作为一种波动，它的强度代表了它的能量，增强光的强度应该能够打击出更高能量的电子。但实验表明，增加光的强度只能打击出更多数量的电子，而不能增加电子的能量。要打击出更高能量的电子，则必须提高照射光线的频率。 ^25622039-18-3738-3900\n    - ⏱ 2022-04-15 11:09:43\n- 📌 提高频率，提高频率。爱因斯坦突然灵光一闪：E=hν，提高频率，不正是提高单个量子的能量吗？而更高能量的量子，不正好能够打击出更高能量的电子吗？另外，提高光的强度，只是增加量子的数量罢了，所以相应的结果自然是打击出更多数量的电子！一切在突然之间，显得顺理成章起来 ^25622039-18-3929-4059\n    - ⏱ 2022-04-15 11:09:57\n- 📌 科学史上有两个年份，便符合“奇迹”的称谓，而它们又是和两个天才的名字紧紧相连的。这两年分别是1666年和1905年，那两个天才便是牛顿和爱因斯坦。 ^25622039-18-6819-6892\n    - ⏱ 2022-04-15 11:14:11\n- 📌 1666年，23岁的牛顿为了躲避瘟疫，回到乡下的老家度假。在那段日子里，他一个人独立完成了几项开天辟地的工作，包括发明了微积分（流数），完成了光分解的实验分析，以及对于万有引力定律的开创性思考[插图]。在那一年，他为数学、力学和光学三大学科分别打下了基础，而其中的任何一项工作，都足以让他名列有史以来最伟大的科学家之列。很难想象，一个人的思维何以能够在如此短的时间内涌动出如此多的灵感，人们只能用一个拉丁文annus mirabilis来表示这一年，也就是“奇迹年”[插图]。1905年的爱因斯坦也是这样，在专利局里蜗居的他在这一年写了6篇论文：3月18日，是我们上面提到过的关于光电效应的文章，成为量子论的奠基石之一。4月30日，关于测量分子大小的论文为他赢得了博士学位。5月11日和后来的12月19日，两篇关于布朗运动的论文，成为分子论的里程碑。6月30日，题为《论运动物体的电动力学》的论文，这个不起眼的题目后来被加上了一个如雷贯耳的名称，叫作“狭义相对论”，它的意义就不用我多说了。9月27日，关于物体惯性和能量的关系，这是狭义相对论的进一步说明，并且在其中提出了著名的质能方程E = mc2。 ^25622039-18-6925-7697\n    - ⏱ 2022-04-15 11:14:34\n\n## Part. 2\n\n- 📌 人们向这里涌来，充分地感受这里的自由气氛和玻尔的关怀，并形成一种富有激情、活力、乐观态度和进取心的学术精神，也就是后人所称道的“哥本哈根精神”。 ^25622039-24-5479-5551\n    - ⏱ 2022-04-15 17:59:38\n\n## Part. 2\n\n- 📌 在经典力学中，一个周期性的振动可以用数学方法分解成为一系列简谐振动的叠加，这个方法叫作傅里叶级数展开（Fourierseries），它在工程上有着极为重要的应用。 ^25622039-30-1617-1699\n    - ⏱ 2022-04-18 17:33:37\n- 📌 但是，海森堡现在开始对此表示怀疑。一个绝对的“能级”或者“频率”，有谁曾经观察到过这些物理量吗？没有，我们唯一可以观察的只有电子在能级之间跃迁时的“能级差”。如果说一种物理量无论如何也观察不到，那么我们凭什么把它高高供奉，当作理论的基础呢？玻尔的原子大厦就是建筑在这种流沙之上，所以终于摇摇欲坠。要拯救物理学，现在只有彻底抛弃那些幻想和臆猜，重新一步一个脚印地去寻找一块坚实的地基才行。 ^25622039-30-3310-3503\n    - ⏱ 2022-04-18 17:35:33\n\n## Part. 3\n\n- 📌 盖莫夫在书里说，目前数学只有一个大分支还没有派上用场（除了做做智力体操之外），那就是数论。不过盖莫夫说这话时却没有想到，随着计算机革命的到来，古老的数论已经以惊人的速度在现代社会中找到了它的位置，开始大显身手。基于大素数原理的加密、解密和数字签名算法（如著名的公钥算法RSA）已经成为电子安全不可缺少的部分 ^25622039-31-6616-6769\n    - ⏱ 2022-04-18 17:46:35\n\n## Part. 4\n\n- 📌 不过，对于当时其他的物理学家来说，海森堡的新体系无疑是一个怪物。矩阵这种冷冰冰的东西实在太不讲情面，不给人以任何想象的空间。人们一再追问，这里面的物理意义是什么？矩阵究竟是个什么东西？海森堡却始终护定他那让人沮丧的立场：所谓“意义”是不存在的，如果有的话，那数学就是一切“意义”所在。物理学是什么？就是从实验观测出发，并以庞大复杂的数学关系将它们联系起来的一门科学，如果说有什么“图像”能够让人们容易理解和记忆的话，那也是靠不住的。但是，不管怎么样，毕竟矩阵力学对大部分人来说都太陌生、太遥远了，而隐藏在它背后的深刻含义当时还远远没有被发掘出来。特别是p×q ≠ q×p，这究竟代表了什么，令人头痛不已。 ^25622039-32-2989-3291\n    - ⏱ 2022-04-18 17:51:48\n\n## Part. 2\n\n- 📌 事实上，我们追寻它们各自的家族史，发现它们都是从经典的哈密顿函数而来，只不过一个是从粒子的运动方程出发，另一个是从波动方程出发罢了。而光学和运动学早就已经在哈密顿本人的努力下被联系在了一起，这当真叫作“本是同根生”了。 ^25622039-36-1515-1624\n    - ⏱ 2022-04-19 11:01:11\n\n## Part. 4\n\n- 📌 “我不需要上帝这个假设。”拉普拉斯站在拿破仑面前说。这可以算科学上最光辉、最荣耀的时刻之一了，它把无边的自豪和骄傲播撒到每一个科学家的心中。不仅不需要上帝，拉普拉斯想象，假如我们有一个妖精或一个大智者，或者任何拥有足够智慧的人物，假如他能够了解在某一刻，这个宇宙所有分子的运动情况的话，那么他就可以从正反两个方向推演，从而得出宇宙在任意时刻的状态。对于这样的智者来说，没有什么过去和未来的分别，一切都历历在目。宇宙从它出生的那一刹那开始，就坠入了一个预定的轨道，它严格地按照物理定律发展，没有任何岔路可以走，一直到遇见它那注定的命运为止 ^25622039-38-3358-3626\n    - ⏱ 2022-04-19 11:24:47\n- 📌 矜持的决定论在20世纪首先遭到了量子论的严重挑战，随后混沌动力学的兴起使它彻底被打垮。现在我们已经知道，即使没有量子论把概率这一基本属性赋予自然界，就牛顿方程本身来说，许多系统也是极不稳定的，任何细小的干扰都能够对系统的发展造成极大的影响，差之毫厘，失之千里。这些干扰从本质上说是不可预测的，因此想凭借牛顿方程来预测整个系统从理论上说也是不可行的。典型的例子是长期的天气预报，大家可能都已经听说过洛伦兹（Edward Lorenz）著名的“蝴蝶效应”：哪怕一只蝴蝶轻微地扇动它的翅膀，也能给整个天气系统造成戏剧性的变化（好莱坞后来还以此为名拍了一部电影）。现在的天气预报也已经普遍改用概率性的说法，比如“明天的降水概率是20%” ^25622039-38-5933-6247\n    - ⏱ 2022-04-19 11:26:45\n\n## Part. 2\n\n- 📌 在过去，所有的科学家都认为，无中生有是绝对不可能的。物质不能被凭空制造，能量也不能被凭空制造，遑论时空本身。但是不确定性原理的出现把这一切旧观念都摧枯拉朽一般地粉碎了。海森堡告诉我们，在极小的空间和极短的时间里，什么都是有可能发生的。因为我们对时间非常确定，所以反过来对能量就非常不确定，能量物质可以逃脱物理定律的束缚，自由自在地出现和消失。但是，这种自由的代价就是它只能限定在那一段极短的时间内，时刻一到，灰姑娘就会现出原形，这些神秘的物质能量便要消失，以维护质能守恒定律在大尺度上不被破坏。 ^25622039-42-5668-5948\n    - ⏱ 2022-04-19 14:14:22\n\n## Part. 3\n\n- 📌 怎么看，电子都没法不是个粒子；怎么看，电子都没法不是个波。 ^25622039-43-2549-2578\n    - ⏱ 2022-04-19 14:22:18\n- 📌 任何时候我们观察电子，它当然只能表现出一种属性，要么是粒子，要么是波。 ^25622039-43-3749-3784\n    - ⏱ 2022-04-19 14:23:13\n\n## Part. 4\n\n- 📌 我们试图探测电子在通过狭缝时的实际位置，可是只有粒子才有实际的位置。这实际上是我们施加的一种暗示，让电子早早地展现出粒子性 ^25622039-44-1103-1164\n    - ⏱ 2022-04-19 14:29:07\n- 📌 好吧，现在我视力良好，也不戴任何装置，看到马是白色的。那么，它当真是白色的吗？其实我说这话前，已经隐含了一个默认的观测方式：“用人类正常的肉眼，在普通光线下看来，马呈现出白色。”再技术化一点，人眼只能感受可见光，波长在400～760纳米，这些频段的光混合在一起才形成我们印象中的白色。所以我们论断的前提就是，在400～760纳米的光谱区感受马，它是白色的。 ^25622039-44-1586-1764\n    - ⏱ 2022-04-19 14:30:29\n- 📌 一点也不错，假如一个物理概念是无法测量的，它就是没有意义的。我们要时时刻刻注意，在量子论中观测者是和外部宇宙结合在一起的，它们之间现在已经没有明确的分界线，是一个整体。在经典理论中，我们脱离一个绝对客观的外部世界而存在，我们也许不了解这个世界的某些因素，但这不影响其客观性。可如今我们自己也已经融入这个世界了，对于这个物我合一的世界来说，任何东西都应该是可以测量和感知的。只有可观测的量才是存在的！ ^25622039-44-3918-4117\n    - ⏱ 2022-04-19 14:41:50\n- 📌 换言之，不存在一个客观的、绝对的世界。唯一存在的，就是我们能够观测到的世界。物理学的全部意义，不在于它能够揭示出自然“是什么”，而在于它能够明确，关于自然我们能“说什么”。没有一个脱离于观测而存在的“绝对自然”，只有我们和那些复杂的测量关系，熙熙攘攘纵横交错，构成了这个令人心醉的宇宙的全部。测量是新物理学的核心，测量行为创造了整个世界。 ^25622039-44-5563-5732\n    - ⏱ 2022-04-19 14:44:52\n- 📌 假设宇宙在创生初期膨胀得足够快，以致它的某些区域对我们来说是如此遥远，甚至从创生的一刹那以光速出发，至今也无法与它建立起任何沟通。宇宙年龄大概有138亿岁，任何信号传播最远的距离也不过138亿光年，那么，在距离我们138亿光年之外，有没有另一些“实在”的宇宙，虽然它们不可能和我们的宇宙之间有任何因果联系？ ^25622039-44-6155-6308\n    - ⏱ 2022-04-19 14:46:22\n- 📌 “138亿光年”这个距离称作“视界” ^25622039-44-7196-7214\n    - ⏱ 2022-04-19 14:54:46\n- 📌 坚持这种实证主义，是现代科学区别于玄学、宗教最大的特征之一，说白了，就是要求“可检验”。 ^25622039-44-7413-7457\n    - ⏱ 2022-04-19 14:55:11\n\n## Part. 5\n\n- 📌 ，量子论革命的破坏力是相当惊人的。在概率解释、不确定性原理和互补原理这三大核心原理中，前两者摧毁了经典世界的（严格）因果性，互补原理和不确定性原理又合力捣毁了世界的（绝对）客观性。 ^25622039-45-614-704\n    - ⏱ 2022-04-19 15:19:01\n- 📌 哥本哈根解释的基本内容，全都围绕着三大核心原理而展开。我们在前面已经说到，首先，不确定性原理限制了我们对微观事物认识的极限，而这个极限也就是具有物理意义的一切。其次，因为存在观测者对于被观测物的不可避免的扰动，现在主体和客体世界必须被理解成一个不可分割的整体。没有一个孤立地存在于客观世界的“事物”（being），事实上一个纯粹的客观世界是没有的，任何事物都只有结合一个特定的观测手段，才谈得上具体意义。对象所表现出的形态，很大程度上取决于我们的观察方法。对同一个对象来说，这些表现形态可能是互相排斥的，但必须被同时用于这个对象的描述中，也就是互补原理。 ^25622039-45-1419-1696\n    - ⏱ 2022-04-19 15:23:23\n- 📌 奇怪，非常奇怪。为什么我们一观测，电子的波函数就开始坍缩了呢？ ^25622039-45-3934-3965\n    - ⏱ 2022-04-19 15:26:21\n\n## Part. 1\n\n- 📌 对于爱因斯坦来说，一个没有严格因果律的物理世界是不可想象的。物理规律应该统治一切，物理学应该简单明确：A导致了B, B导致了C, C导致了D。环环相扣，每一个事件都有来龙去脉，原因结果，而不依赖于什么“随机性”。 ^25622039-47-3542-3648\n    - ⏱ 2022-04-19 15:31:57\n\n## Part. 4\n\n- 📌 在量子论的引导下，科学显得如此朝气蓬勃，它的各个分支以火箭般的速度发展，给人类社会带来了伟大的技术革命。从半导体到核能，从激光到电子显微镜，从集成电路到分子生物学，量子论把它的光辉播撒到人类社会的每一个角落，成为有史以来在实用中最成功的物理理论 ^25622039-50-5372-5494\n    - ⏱ 2022-04-19 16:46:24\n\n## Part. 1\n\n- 📌 大家一定还对上一章困扰我们的测量问题记忆犹新：每当我们观测时，系统的波函数就坍缩了，按概率跳出来一个实际的结果，如果不观测，那它就按照方程严格发展。这是两种迥然不同的过程，后者是连续的，在数学上可逆的、完全确定的，而前者却是一个“坍缩”，它随机，不可逆，至今也不清楚内在的机制究竟是什么。这两种过程是如何转换的？是什么触动了波函数这种剧烈的变化？是“观测”吗？但是，我们这样讲的时候，用的语言是日常的、暧昧的、模棱两可的。我们一直理所当然地使用“观测”这个词语，却没有给它下一个精确的定义。什么样的行为算是一次“观测”？如果说睁开眼睛看算是一次观测，那么闭上眼睛用手去摸呢？用棍子去捅呢？用仪器记录呢？如果说人可以算是“观测者”，那么猫呢？一台计算机呢？一个盖革计数器又如何？ ^25622039-53-1669-2007\n    - ⏱ 2022-04-19 17:50:09\n\n## Part. 2\n\n- 📌 近几年来，在量子通信方面我们有了极大的突破，把一个未知的量子态原封不动地传输到第二者那里已经成为可能，而且事实上已经有许多具体协议的提出，这被称为“量子隐形传态”（Quantumteleportation）。 ^25622039-54-3037-3142\n    - ⏱ 2022-04-20 10:37:02\n- 📌 令人欣慰的是，我们现在已经知道量子论中有一个叫作“不可复制定理”（no cloning theorem,1982年Wootters, Zurek和Dieks提出）的原则规定：在传输量子态的同时，一定会毁掉原来那个原本。也就是说，量子态只能剪切+粘贴，不能复制+粘贴，这就阻止了两个“你”的出现。但问题是，如果把你“毁掉”，然后在另一个地方“重建”起来，你是否认为这还是“原来的你”？ ^25622039-54-3246-3437\n    - ⏱ 2022-04-20 10:37:35\n- 📌 而另一个推论就是：因为载体本身并不重要，载体所蕴藏的组合信息才是关键，所以“意识”本身并非要特定的物质基础才能呈现 ^25622039-54-3466-3523\n    - ⏱ 2022-04-20 10:37:43\n- 📌 对于许多实证主义者来说，答案或许是肯定的。在他们看来，意识只不过是某种复杂的模式结构，或者说，是在输入和输出之间进行的某种复杂算法。任何系统只要能够模拟这种算法，它就可以被合理地认为拥有意识。 ^25622039-54-4218-4314\n    - ⏱ 2022-04-20 10:46:24\n\n## Part. 3\n\n- 📌 这样一来，宇宙本身由一个有意识的观测者创造出来也不是什么不可能的事情。虽然从理论上说，宇宙已经演化了几百亿年，但某种“延迟”使得它直到被一个高级生物观察之后才成为确定。我们的观测行为本身参与了宇宙的创造过程！这就是所谓的“参与性宇宙”模型（The ParticipatoryUniverse）。宇宙本身没有一个确定的答案，而其中的生物参与了这个谜题答案的构建本身！ ^25622039-55-3982-4165\n    - ⏱ 2022-04-20 11:34:27\n\n## Part. 3\n\n- 📌 如何解释量子计算机那神奇的计算能力呢？德义奇声称，唯一的可能是它利用了多个宇宙把计算放在多个平行宇宙中同时进行，最后汇总那个结果。 ^25622039-61-7072-7137\n    - ⏱ 2022-04-20 17:53:05\n\n## Part. 3\n\n- 📌 而如果他想利用贝尔不等式，他就必须知道，另一边具体采取了什么观测手段，在哪一个方向上进行了观测，而这个信息仍然需要通过常规的方法来获取，因此不可能超过光速。所以，总的来说，量子纠缠并不违反相对论的原理，因为你无法利用这种“超光速”传递信息，并产生逻辑上的自我矛盾 ^25622039-67-6869-7000\n    - ⏱ 2022-04-20 21:03:46\n\n## Part. 4\n\n- 📌 。在概率的“频率主义派”（frequencists）看来，“单个事件”是没有概率的，讨论它的概率毫无意义。 ^25622039-68-2332-2385\n    - ⏱ 2022-04-20 21:07:09\n- 📌 就像那匹可怜的马，它是什么颜色，只取决于我们定义的观测方式（即系综），而并没有一个“实际的”颜色存在。人们煞费苦心，不断地搞出什么“坍缩”或者“多宇宙”之类的疯狂概念，完全只是庸人自扰，是在向风车宣战。只要承认单个事件没有物理属性，单个电子没有路径，单只薛定谔猫没有死活，那么一切麻烦自然也就不存在了！ ^25622039-68-4427-4578\n    - ⏱ 2022-04-20 21:09:22\n\n## Part. 3\n\n- 📌 抛开量子场论的胜利不谈，量子论在物理界的几乎每一个角落都激起激动人心的浪花，引发一连串美丽的涟漪。它深入固体物理中，使我们对于固体机械和热性质的认识产生了翻天覆地的变化，更打开了通向凝聚态物理这一崭新世界的大门。在它的指引下，我们才真正认识了电流的传导，使得对于半导体的研究成为可能，而最终带领我们走向微电子学的建立。它驾临分子物理领域，成功地解释了化学键和轨道杂化，从而开创了量子化学学科。如今我们关于化学的几乎一切知识，都建立在这个基础之上。而材料科学在插上了量子论的双翼之后，才真正展翅飞翔起来，开始深刻地影响社会的方方面面。在量子论的指引之下，我们认识了超导和超流，掌握了激光技术，造出了晶体管和集成电路，为整个新时代的来临真正做好了准备。量子论让我们得以一探原子内部那最为精细的奥秘，我们不但更加深刻地理解了电子和原子核之间的作用和关系，还进一步拆开原子核，领略到了大自然那更为令人惊叹的神奇。在浩瀚的星空之中，我们必须借助量子论才能把握恒星的命运会何去何从：当它们的燃料耗尽之后，它们会不可避免地向内坍缩，这时支撑起它们最后骨架的就是源自泡利不相容原理的一种简并压力。当电子简并压力足够抵挡坍缩时，恒星就演化为白矮星。要是电子被征服，而要靠中子出来抵抗时，恒星就变为中子星。最后，如果一切防线都被突破，那么它就不可避免地坍缩成一个黑洞。但即使黑洞也不是完全“黑”的，如果充分考虑量子不确定因素的影响，黑洞其实也会产生辐射而逐渐消失，这就是以其鼎鼎大名的发现者史蒂芬·霍金而命名的“霍金蒸发”过程。 ^25622039-73-4971-5625\n    - ⏱ 2022-04-21 15:49:25\n- 📌 量子论的出现彻底改变了世界的面貌，它比史上任何一种理论都引发了更多的技术革命。核能、计算机技术、新材料、能源技术、信息技术……这些都在根本上和量子论密切相关。牵强一点说，如果没有足够的关于弱相互作用力和晶体衍射的知识，DNA的双螺旋结构也就不会被发现，分子生物学也就无法建立，也就没有如今这般火热的生物技术革命。再牵强一点说，没有量子力学，也就不会有欧洲粒子物理中心（CERN），而没有CERN，也就没有互联网的www服务，更没有划时代的网络革命，而各位呢，也就很可能看不到我们的史话，呵呵 ^25622039-73-6409-6654\n    - ⏱ 2022-04-21 11:05:53\n\n## Part. 4\n\n- 📌 这样一来，我们的宇宙中就总共有4种相互作用力：引力、电磁力、强相互作用力和弱相互作用力。它们各自为政，互不管辖，遵守着不同的理论规则。 ^25622039-74-1678-1745\n    - ⏱ 2022-04-21 11:07:32\n- 📌 964年，我们的盖尔曼提出了一个如今家喻户晓的模型：每一个强子都可以进一步被分割为称为“夸克”（quark）的东西，它们通过交换“胶子”（gluon）来维持相互的作用力！ ^25622039-74-3176-3261\n    - ⏱ 2022-04-21 11:10:05\n\n# 读书笔记\n\n## Part. 2\n\n### 划线评论\n\n- 📌 引力波 ^16142247-7yDjL5qLj\n    - 💭 在广义相对论里，引力波是时空的涟漪。当投掷石头到池塘里时，会在池塘表面产生涟漪，从石头入水的位置向外传播。当带质量物体呈加速度运动时，也会在时空产生涟漪，从带质量物体位置向外传播，这种时空的涟漪就是引力波\n    - ⏱ 2022-04-19 14:15:47\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%8A%E6%B5%B7%E7%96%AB%E6%83%85":{"title":"上海疫情","content":"\n# 上海疫情\n\n- ![官商特许经营](https://mmbiz.qpic.cn/mmbiz_jpg/ib8gXibhpHTh9Y51Sjpm65EBAlOic5pEGHgwj63LtiaNW66ibqcVuKH5WkNe8HfdUK0TJrqLnkuP1cibq9VeIXvXYeyA/640?wx_fmt=jpeg\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1)\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E5%AE%9A%E7%90%86":{"title":"不可复制定理","content":"\n# 不可复制定理\n\n在传输量子态的同时，一定会毁掉原来那个原本。也就是说，量子态只能剪切+粘贴，不能复制+粘贴，这就阻止了两个“你”的出现。但问题是，如果把你“毁掉”，然后在另一个地方“重建”起来，你是否认为这还是“原来的你”？\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%8D%E9%99%90%E5%88%B6%E6%96%B9%E5%BC%8F%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2%E7%8A%B6":{"title":"不限制方式绘制一个三角形状","content":"\n## 不限制方式绘制一个三角形状\n\n### CSS 大法\n\n```CSS\n\n.Triangle {\n\nwidth: 0;\n\nheight: 0;\n\nborder-top: 100px solid red;\n\nborder-left: 100px solid transparent;\n\nborder-right: 100px solid transparent;\n\n}\n\n```\n\n### SVG 大法\n\n```HTML\n\n\u003csvg\u003e\n\n\u003cpolygon points=\"1,10 250,190 160,210\" style=\"fill: red;\" /\u003e\n\n\u003c/svg\u003e\n\n```\n\n### canvas\n\n```JavaScript\n\nlet can = document.getElementById(\"canvas\");\n\nlet ctx = can.getContext(\"2d\");\n\nlet draw = function (x1, y1, x2, y2, x3, y3, color, type) {\n\nctx.beginPath();\n\nctx.moveTo(x1, y1);\n\nctx.lineTo(x2, y2);\n\nctx.lineTo(x3, y3);\n\nctx[type + \"Style\"] = color;\n\nctx.closePath();\n\nctx[type]();\n\n};\n\ndraw(50, 50, 75, 75, 50, 100, \"red\", \"fill\");\n\n```\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%8E%E7%88%B1%E5%9B%A0%E6%96%AF%E5%9D%A6%E6%9C%88%E7%90%83%E6%BC%AB%E6%AD%A5%E4%B8%89%E6%AD%A5%E5%94%A4%E9%86%92%E4%BD%A0%E7%9A%84%E6%83%8A%E4%BA%BA%E8%AE%B0%E5%BF%86%E5%8A%9B":{"title":"《 与爱因斯坦月球漫步：三步唤醒你的惊人记忆力 》","content":"\n# 《 与爱因斯坦月球漫步：三步唤醒你的惊人记忆力 》\n\n# 元数据\n\n\u003e [!abstract] 与爱因斯坦月球漫步：三步唤醒你的惊人记忆力\n\u003e - ![ 与爱因斯坦月球漫步：三步唤醒你的惊人记忆力|200](https://weread-1258476243.file.myqcloud.com/weread/cover/13/YueWen_908112/t7_YueWen_908112.jpg)\n\u003e - 书名： 与爱因斯坦月球漫步：三步唤醒你的惊人记忆力\n\u003e - 作者： 乔舒亚·福尔\n\u003e - 简介： 这既是一本记忆力训练指南，更是一部探讨普通人记忆力提升的成长记录。作者梳理了古代的记忆力训练术及现代科学研究，总结了自己的记忆力训练过程、方法与成果，包括如何建造记忆宫殿、构建记忆精细编码等听起来玄幻实则很容易实践的具体方法，揭示了记忆力奥秘，使我们对记忆力、思考力、创造力都有了全新的理解和认识。\n\u003e - 出版时间 2017-07-01 00:00:00\n\u003e - ISBN： 9787508675022\n\u003e - 分类： 科学技术-自然科学\n\u003e - 出版社： 中信出版社\n\n# 高亮划线\n\n## 第3章 高手中的高手\n\n- 📌 我们记不住孤立的事实，只能记住有联系的事实。 ^908112-5-13998-14020\n    - ⏱ 2021-01-20 15:41:23\n\n## 第4章 世界上最健忘的人\n\n- 📌 埃德耸耸肩：“恰恰相反。生命中可记忆的东西越多，时间就会流逝得越慢。”人们对时间流逝的感觉是多变的。我们都有过这样的感觉，有的时候一天就像一周一样漫长，一个月好像一年那么久。相反，有的时候感觉一个月或一年过得飞快，好像根本就没来过一遍似的。 ^908112-6-6579-6728\n    - ⏱ 2021-01-20 15:59:29\n- 📌 单调的生活压缩时间，新奇的经历延长时间。你可以每天都锻炼身体、保持健康的饮食习惯，从而拥有较为长久的生命，但是你能感觉到的生命却是短暂的。如果你整天坐在一个小房间里传递公文，今天和明天就不会有什么区别，然后时间就那么一天一天消失了。因此，定期地改变一下自己的生活习惯，出国度一次假，尽可能用新鲜的经历来更新记忆库是很重要的。新鲜的记忆延长了心理时间，也延长了我们感知到的生命。 ^908112-6-7678-7866\n    - ⏱ 2021-01-20 16:02:10\n- 📌 我们常说年龄越大，时间流逝得越快，这里的原因就是，年龄越大，可记忆的东西会变得越少。 ^908112-6-8246-8288\n    - ⏱ 2021-01-20 16:03:15\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%96%E7%95%8C%E6%98%AF%E7%BA%A2%E7%9A%84%E7%9C%8B%E6%87%82%E4%B8%AD%E5%9B%BD%E7%BB%8F%E6%B5%8E%E6%A0%BC%E5%B1%80%E7%9A%84%E4%B8%80%E6%9C%AC%E4%B9%A6":{"title":"《 世界是红的：看懂中国经济格局的一本书 》","content":"\n# 《 世界是红的：看懂中国经济格局的一本书 》\n\n# 元数据\n\n\u003e [!abstract] 世界是红的：看懂中国经济格局的一本书\n\u003e - ![ 世界是红的：看懂中国经济格局的一本书|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/223/921223/t7_921223.jpg)\n\u003e - 书名： 世界是红的：看懂中国经济格局的一本书\n\u003e - 作者： 白云先生\n\u003e - 简介： 复盘中国崛起路线图：过去几十年，我们都活在本书的隐秘逻辑里推演全球化史诗转折：未来十几年，我们将印证本书的疯狂猜想。\n\u003e - 出版时间 2017-06-01 00:00:00\n\u003e - ISBN： 9787221124913\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 贵州人民出版社\n\n# 高亮划线\n\n## 一、与狼共舞，我们曾数次死里逃生\n\n- 📌 中国经济的大历史节律是30年一个周期：从1949年新中国成立到1978年改革开放，是第一个30年，师从苏联，经济发展采用苏联模式。从1978年改革开放，到美国2008年次贷危机，是第二个30年，师从美国，采用美国模式。目前第三个30年已过去三分之一，在这个阶段，苏联模式和美国模式都不再适用于中国经济的现实和发展，中国需要中国模式。 ^921223-5-593-759\n    - ⏱ 2021-05-28 14:04:07\n- 📌 在第二个30年大历史周期中，头十年美国跟中国蜜月了一把，接着的十年美国勒了中国十年脖子，第三个十年又蜜月了一把。随着次贷危机的爆发，中美的蜜月期，又要结束了。 ^921223-5-10617-10696\n    - ⏱ 2021-05-28 15:12:39\n- 📌 朝鲜战场上、越南战场上、被炸大使馆、南海撞机的英灵，都是因为美苏的霸权淫威而牺牲，并不是中国主动要拿鲜血做筹码。而对方认为，中国你这么穷，除了命和屈辱，没有其他的东西可和我交换。国家如此，人也如此，当一个人落魄穷困的时候，除了命和尊严值钱，其他的都不值钱。没有人愿意和穷人谈理想、谈人生 ^921223-5-12497-12640\n    - ⏱ 2021-05-28 15:17:13\n\n## 一、中美再平衡：能谈判，尽量不动手\n\n- 📌 世界十大港口有七个在中国，这些港口往返的船只都要途径南海，可以说南海是中国经济的生命线 ^921223-7-3926-3969\n    - ⏱ 2021-05-28 15:28:32\n- 📌 美国越在军事上压迫中国，中国越会快马加鞭地在军事上寻求变得更强大，以对抗美国的压制，保护自己的经济利益和版图。 ^921223-7-4874-4929\n    - ⏱ 2021-05-28 15:29:51\n- 📌 现在中国虽然有钱，长三角、京津冀、珠三角经济圈都是几千万人，却都活在美国的炸弹阴影之下。中国人要想活得踏实，不仅要拿掉这些抵着自己咽喉和肚子的尖刀，还要把美国人再往外推出去2000公里才行。 ^921223-7-7252-7347\n    - ⏱ 2021-05-28 15:33:32\n\n## 一、全球化的黄金时代：中国改变了世界\n\n- 📌 要治好美国经济这匹马，只有一个方法，让中国人少储蓄少投资，多消费。美国人则得反过来，少消费，多储蓄，多投资，多干活，挣中国人的钱，挣了钱就修高铁、建工厂，生产的商品打败中国的产品，把中国的贸易盈余都挣光，然后这匹马就能活了。这可能吗？美国人自己都救不活，就更不要说坐在马车里的中国人了。 ^921223-9-3533-3676\n    - ⏱ 2021-05-28 15:40:18\n- 📌 推高房价，杠杆化去房地产库存，就是抽鸦片的做法。用社会资本来为房地产库存的释放风险买单，地方政府和地产商的风险是降低了，但购房者的风险却增加了，这并不是释放风险，而是在转移风险，说难听点，这是转嫁风险。 ^921223-9-6706-6807\n    - ⏱ 2021-05-28 15:44:40\n\n## 一、经济增长的本质\n\n- 📌 中国的股市参与者，大部分都是散户，也都不专业，配套的法律也不健全，使得股市变成了一部分人的提款机。生意在一级市场上都谈好了，去二级市场只是提款。 ^921223-11-8884-8956\n    - ⏱ 2021-05-28 16:07:20\n- 📌 想成为巴菲特，只有先成为老板才行，能有资格和垄断者做朋友才行 ^921223-11-9254-9284\n    - ⏱ 2021-05-28 16:07:50\n- 📌 没有技术壁垒和军事壁垒，人民币国际化，就是一座沙堡，即便它看上去雄伟，但一碰就会塌。 ^921223-11-10753-10795\n    - ⏱ 2021-05-28 16:09:57\n\n## 一、全球化产业链分工的三元结构\n\n- 📌 在入世前后，美国不停地对中国进行各种底线和底牌测试，让中国纳投名状、表忠心。1996年台海危机就不说了，“银河号”事件、轰炸南斯拉夫大使馆、南海撞机事件等都是这种测试的具体表现。中国忍辱负重，没有辜负美国的战略预期和判断，终于在2000年初拿到了正式入场券，成功入世。 ^921223-18-2261-2395\n    - ⏱ 2021-05-28 16:58:34\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7qEL0tjCV  \n⏱ 2021-05-29 11:09:53\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%96%E7%95%8C%E8%A7%82":{"title":"《世界观》","content":"\n# 《世界观》\n\n#input\n\n## Meatdata\n\n- author： [美]理查德·德威特\n- link：[世界观：现代人必须要懂的科学哲学和科学史（原书第2版）](https://weread.qq.com/web/reader/72032810716983f7720aa36kc81322c012c81e728d9d180)\n- tag：\n- date: [[2022-04-29]]\n- Notes:\n\n## 读前准备\n\n- 读完了《上帝掷骰子吗》，想要完善自己的世界观\n- 这本书哲学方面讲了什么？\n- 能否梳理出一个科学发展的时间线？\n- 读完之后，我能补充进去什么吗？\n- 我们为什么要学哲学？\n- 为什么要了解科学史？\n- 哲学的话，能和 [[《刘擎西方现代思想讲义》]] 产生交集，形成一个哲学发展的完全认识吗？\n- 科学史的话，能将 [[《上帝掷骰子吗》]] 的物理发展，填充进这个框架吗？\n- 作者序：我想要做的是：第一，介绍科学史和科学哲学中某些基础命题；第二，探讨从亚里士多德世界观到牛顿世界观的转变；第三，探讨新近出现的科学发展对西方世界观带来的挑战，这些发展中最值得注意的是相对论、量子理论和演化论。\n\n## 总结\n\n- [[世界观读后感]]\n- [[我的世界观]]\n\n## 闪念\n\n### 世界观\n\n- 地球是围绕着太阳转的吗？请列出你的证据\n- 概括地说，根据真理符合论，决定一个真的观点为真的因素是这个观点与现实相符合。决定一个假的观点为假的因素是这个观点没能与**现实**相符合。\n\t- 主要难题是关于观点与现实间的关系。\n\t- [[知觉表征论]] 的两种解释，\n- 融贯论的不同种类\n\t- 举个例子，如果我们关注的是某个人的观点，那么这可能就是个人主义融贯论。在这个理论中，一个观点如果能够与萨拉的其他观点相一致，那么这个观点对于萨拉来说就是真的；\n\t\t- 个人主义融贯论是一种极端的“一切皆有可能”的相对主义。虽然并不能因此一概而论地认为个人主义融贯论都是不正确的，但值得注意的是，大部分人都认为像这样具有如此强的相对性的视角是无法接受的。\n\t- 如果我们选择关注某个群体的观点集合，那么所能得出的就是一种非常不同的融贯论，可以称之为团体融贯论。为了说明这一点，假设我们认为，如果一个与科学相关的观点可以与西方科学家这个群体的观点集合拼合在一起，那么这个观点就是真的。为方便起见，让我们把这个观点称为以科学为基础的融贯论。\n\t\t- （1）没有考虑一个群体可能秉持错误观点的可能性；\n\t\t- （2）没有办法明确哪些人可以算作群体的一分子；\n\t\t- （3）对任何一个群体来说，都不存在一个由整个群体共同秉持的、具有一致性的观点集合\n\t- “是否存在我们可以完全确定的事物？” [[勒内·笛卡尔]]和我思。**笛卡尔的想法是要找到某些确定的观点，并由这些观点谨慎推演出其他观点，从而构建出一个具有完全确定的基础的知识结构。**\n\n### 在科学领域常见的两种证据和逻辑推理模式\n\n#### 证实推理\n\n大约 100 年前，阿尔伯特·爱因斯坦提出了相对论。这是一个颇有争议的理论，它在某些方面与已被人们广泛接受的其他理论有所冲突。值得注意的是，运用相对论可以得出非同寻常的预言。这里说这些预言非同寻常，是因为其他理论无法给出相同的预言。举个例子，爱因斯坦的理论预言大型物体，比如太阳，其引力效应将会使恒星光线弯曲。在日全食的情况下，观测到恒星光线弯曲是完全有可能的。因此，预计将于 1919 年 5 月发生的日全食为验证这一预言创造了一个机会。结果证明，这个预言是正确的，同时这个预言也被当作证据，来支撑爱因斯坦相对论。换句话说，**爱因斯坦的理论做出了正确的预言，而且更值得注意的是其他竞争理论并没有做出这样的预言，这个情况就被当作了证据，来证明这个理论是正确的。**\n\n但是爱因斯坦这个预测事实上一点都不准确，为了预测恒星光线上出现弯折的点的位置，需要进行一系列计算，为了将所需进行的计算控制在可操作的范围内，就需要运用大量类似: 太阳被是一个正球体，不进行自转，且不受任何外力影响（比如地球、月球和其他行星的引力作用）的的假设，而这些假设严格说来都是不正确的。\n\n#### 不证实推理\n\n在 20 世纪 80 年代末期，两位颇有威望的科学家声称发现了一种可以实现低温核聚变的方式（也就是所谓的冷聚变）。这是一个激动人心的发现，但同时也颇具争议，因为普遍的共识是核聚变要求的是超高温。假设我们就把这两位科学家的主张（也就是聚变可能在低温条件下发生，以及他们已经掌握了如何实现这种聚变的关键点）称为“冷聚变理论”。\n\n通常在这种情况下，以冷聚变理论为基础可以得出某些预言。举个例子，如果冷聚变理论是正确的，那么在冷聚变过程中将会有数量巨大的中子被释放出来。然而，实际上并没有探测到这样大量的中子释放，这也被当作证据，证明冷聚变理论不成立。\n\n第一，在面对能证明一个理论不正确的证据时，可以坚持这一理论，同时摒弃一个或几个辅助假设。这不仅仅是个观点，有时确实是更合理的做法。第二，对于“在什么情况下放弃整个理论更合理，而在什么情况下摒弃一个或几个辅助假设更合理”的问题，没有一刀切的标准答案。\n\n#### 两种推理的异同\n\n证实推理是一种[[归纳推理]]，而不证实推理则是一种[[演绎推理]]。  \n归纳推理的特点：在一个好的归纳推理过程中，即使所有前提条件都是真的，所得出的结论也有可能是错的。**正因如此，有时证实推理模式并不能保证结论的正确性。**  \n相比之下，在一个好的演绎推理论证过程中，真的前提条件就保证了真的结论。也就是说，在一个好的演绎推理论证过程中，如果所有前提条件都是真的，那么其所得出的结论就一定是真的。\n\n一方面，证实推理模式由于是一种归纳推理模式，因而无法在证明一个理论正确的同时保证这一正确性不受质疑。因此，对于一个科学理论来说，不管有多少可以证明其正确性的证据，这个理论是错误的这种可能性始终存在。除此之外，在实际的例子里，归纳得出的证据和归纳推理通常非常复杂且相互交织。证实推理模式及证据往往远没有它们乍看起来那么直接明确。\n\n另一方面，不证实推理模式是一种演绎推理。然而实际上，由不证实推理模式得出的证据往往同样很复杂。具体来说，通常不证实推理模式涉及大量辅助假设。因此，通过不证实推理模式得出的证据只能表明要么是所使用的理论不正确，要么就是一个或几个辅助假设不正确（经常出现的是后者）。因此，不证实推理模式及证据同样也远没有它们乍看起来那么直接明确。\n\n### [[奎因-迪昂论点]]\n\n三个关键点\n\n- 我们的观点并不是单独而是作为整体（集合）来面对“经验的裁判”；\n- 通常不存在可以用来判断两个竞争理论中哪一个正确的“关键性实验”；\n- 非充分决定性的概念，也就是现有可用的数据，通常不足以让人们找到唯一正确的理论。\n\n### 公理化\n\n- 亚里士多德的 [[三段论]]，寻找第一原则\n- 笛卡尔的公理化方法，笛卡尔在寻找必定为真的起始点时把自己的大脑也考虑了进去。“我是，我在”必定为真，但是以此为起点太单薄了，无法成为进行知识构建的基础。\n- [[卡尔·波普尔#证伪主义]]\n- [[假设演绎法]]\n\n### 归纳的问题和困惑\n\n- [[大卫·休谟]]的 [[归纳问题]]\n- [[亨普尔]] 的 [[乌鸦悖论]]\n- [[古德曼]] 的 [[绿蓝问题]]\n- 这些问题并不是一个实用的问题，因为它并没有影响科学的日常进程，但这个问题引发了一些关于归纳推理的令人困惑的问题，具体来说就是我们认为可以适用于未来的判断与不能适用于未来的判断之间有什么区别。\n\n### [[可证伪性]]\n\n- 这本书认为的可证伪性是一种很主观的事，假设乔伊是地平说学会的一员。地平说学会的成员都发自内心地认为地球是平的。假设乔伊相信地平说理论，而且，不管出现什么样的证据表明这一理论是错误的，乔伊总能绕过这些证据，所以看起来，乔伊认为这个理论是不可证伪的。\n- 但我看 [[《上帝掷骰子吗》]] 中，可证伪性是严谨的通过大量运算证明的，现代科学的发展才能建立在其上，而不是被主观的认为不可证伪。更像是可以列出反面的例子，而不是只能认同。\n- 他是想告诉我们，不是所有人都能接受客观的事实的？总是怀有阴谋论或者其他学说？\n\n### 工具主义和现实主义\n\n- [[工具主义]] 和 [[现实主义]]\n\n### 亚里士多德的世界观\n\n- 古代因为技术差距，仅用肉眼观测，恒星与我们称为行星的五个亮点（至少是五个仅用肉眼观察可见的行星）之间，主要区别在于恒星和行星在夜空中的运动模式不同。不同的运动模式就是把行星和恒星区别开来的主要因素\n- 事实上，在亚里士多德世界观中，太阳、恒星和行星都被认为由类似的物质组成，而且其与地球上的任何物质都相当不同。这种物质就是以太——被认为只能在月上区域找到，而且具有不寻常的属性，从而可以解释月上区域里物体的运动模式。\n- 在宇宙边缘就是恒星所在的球面。通常的观点是所有恒星与地球之间的距离都相等，且都镶嵌在一个球面上。球面以自身轴线为中心转动，转动一圈大约 24 小时。球面转动的时候带动镶嵌其上的恒星一起转动，这就解释了人们关于恒星的观测结果，也就是恒星看起来每 24 小时沿圆形轨道围绕地球转动一圈。\n- 最后，关于宇宙的大小，我做一点说明。在亚里士多德世界观中，人们认为宇宙有多大？或者说固定的恒星球面距离地球有多远？回答这些问题，我们必须十分谨慎。按照当时的标准，宇宙被认为是非常大的。不过与他们的想法相比，我们所知道的宇宙可以算是大到无法想象，甚至是无限的，因此，按照现代标准，当时的人们所认为的宇宙对我们来说是一个相对较小的宇宙的概念。换句话说，当时的人们认为宇宙很大，但是他们无法想象宇宙后来会变得有多巨大。\n\n### 目的论和本质论\n\n### 托勒密\n\n托勒密的至大论里论述了：地球是球形的、静止的，并且位于宇宙中心\n\n#### 地球是球形\n\n[[在16世纪前，人们大都认为地球是平的]]\n\n#### 地球是静止的\n\n- 常识论据。当我运动的时候（比如坐在一辆汽车或火车里时，或骑自行车时），我当然会注意到自己在运动。就算是在相对低速的情况下，比如骑自行车的时候，我也会感受到运动造成的震动，会感受到迎面吹来的风，等等。那么为什么没有感受到地球自转超过 1000 英里/小时的运动速度和公转大约 70000 英里/小时的速度\n- 基于运动物体的论据。思考一下一个问题：当我们在运动的时候，向上竖直抛出一个物体，这个物体会落在我们身后，还是会沿弧线运动，然后重新落到我们手中，或落到我们手边的位置？  \n\t这又是一个不证实推理的例子。考虑了关键辅助假设后，这个论证过程应该是这样的：如果地球在运动，同时，如果图 10-1 中所示的对运动的看法是正确的，那么抛出的物体应该落在我们身后；然而，抛出的物体并没有落在我们身后，所以要么地球没有在运动，要么图 10-1 中所示的对运动的看法是不正确的。\n- 基于恒星视差的论据。托勒密的意思是我们无法观察到恒星[[视差]]，而这支持了“地球是静止的”这一观点。这里所涉及的推理过程实际上更像是下面这样：如果地球在运动，如果恒星不是在一个遥远到几乎无法想象的地方，那么我们应该看到恒星视差；然而我们没有看到这样的视差，那么要么地球没有在运动，要么恒星在一个遥远到几乎无法想象的地方。\n\n#### 地球是宇宙中心。\n\n\t1. 地球看起来当然是宇宙中心。月球、太阳、恒星和行星看起来全都围绕地球转动，因此既然这些天体都围绕一个共同的中心，也就是围绕地球转动，那么认为地球是宇宙中心似乎是自然而然的。\n\t2. “重的物体有一种向宇宙中心运动的天然趋势”的观点提供了另一个支持地球中心论观点的论据。\n\t\n\n### 天文学数据：经验事实\n\n### [[尼古拉·哥白尼]]体系\n\n[[哥白尼体系通常被认为远远简化于托勒密体系，而且在预言和解释方面更胜一筹。]]\n\n- 一个有意义的问题是，从现实主义角度来看，哪个宇宙模型更为可行  \n\t关于这个问题，当时可用的数据有力地支持了托勒密体系。回忆一下第 10 章里的论据，它们支持了“地球是静止的，并位于宇宙中心”的结论。\n- 总结一下，在预言、解释和复杂性方面，托勒密体系和哥白尼体系是相当的。由于没有使用等距点，哥白尼体系可以说是更直接明确地尊重了匀速运动事实，而且对逆行运动、多颗行星不同亮度与它们逆行运动时间点之间的相互关联，以及金星、水星总是出现在距离太阳不远处的事实，做出了更直接明确的解释。\n\n### 第谷 体系\n\n第谷也发现大多数证据所指向的结果都是地球是静止的，因此，从现实主义者的角度来说，哥白尼体系不可能是正确的宇宙模型。于是，第谷凭借自己的能力发展出了一个体系，其中既包括了大多数哥白尼体系得到认可的优势，又保留了“地球是宇宙中心”的观点。\n\n根据第谷体系，地球是宇宙的中心，恒星球面同样被定义为宇宙边界。月球和太阳围绕地球运转，但行星围绕太阳转动。也就是说，尽管地球是静止的，而且是宇宙中心，月球和太阳都围绕地球运转，但是行星运动的中心是太阳。\n\n### 约翰内斯·开普勒 体系\n\n[[约翰内斯·开普勒]]\n\n- 与几乎所有和他同时代的人相同，开普勒最初也坚定地相信正圆事实和匀速运动事实。\n- 然而，到了 17 世纪初期，开普勒意识到所有以匀速运动为基础的体系都无法解释已观察到的火星运动。已摒弃了两个关键的哲学性/概念性事实，也就是正圆事实和匀速运动事实（2000 多年间一直是核心观点）\n- 最终，开普勒发现，椭圆轨道和行星以变化的速度沿椭圆轨道围绕太阳运动，可以完美地解释火星的数据。\n\n#### 开普雷体系\n\n他发表了十几个“定律”，都反映了他所发现的规律性，或者他认为自己所发现的规律性。今天，这些定律中的大部分已经被忽略，只有三条得到了认可  \n开普勒的两个关键性创新，也就是椭圆轨道和变速运动。\n\n- “行星围绕太阳沿椭圆形轨道运转，太阳占据椭圆轨道两个焦点之一的位置”，通常被称为开普勒行星运动第一定律。\n- 根据开普勒体系，如果以行星为起点画一条直线把太阳连接起来，这条直线在相等的时间内扫过的面积相同。这个对行星运动速度的描述就被称为开普勒行星运动第二定律，  \n\t开普勒第二定律对行星运动提出了一个非常重要的推论。由于行星，比如火星，在其轨道上的某个点处距离太阳更近（在图 16-3 中，火星在左侧时距离太阳最近），因而当火星运行到其轨道的这一部分时，运行速度会更快，而当它运行到其轨道距离太阳更远的部分时，运行速度则会更慢。\n- 第三条定律描述的是行星与太阳之间的距离和沿轨道围绕太阳运转的时间\n\n### 伽利略\n\n[[伽利略·伽利莱]]  \n望远镜发明于 17 世纪到来之前不久，伽利略于 1609 年开始使用望远镜进行天文学观察。伽利略是第一批将望远镜用于天文学观察的人之一，通过使用望远镜，他发现了有趣的新数据，这些数据对地心说和日心说支持者之间的争论产生了极大的影响。\n\n- 伽利略是首先将望远镜用于观察月球上某些地表特征的人之一，所观察的地表特征包括山峰、平原以及我们现在所说的月坑。它破坏了亚里士多德世界观中宇宙整体的样子。如果像月球这样巨大的岩石体可以围绕地球进行持续运动，也许同样是巨大岩石体的地球也可以围绕太阳进行持续运动。\n- 伽利略用这种方法来观察太阳黑子。利用观察所得的结果，伽利略得以令人信服地论证出太阳黑子一定是太阳表面本身就有的区域，而不是其他什么图像，比如说从太阳前面经过的小行星的图像。那么月上区肯定不像亚里士多德世界观所认为的那样是没有变化的完美区域。\n- 伽利略是第一个观察到土星有时会有边缘凸出现象的人，这个凸出的边缘看起来就像把手或者耳朵。现在我们知道伽利略所观察的就是土星光环，\n- 通过望远镜，伽利略观察到了四个小亮点，它们围绕在木星周围，位置随时间变化而变化，伽利略正确地推断出这四个小亮点是围绕木星运转的卫星。\n- [[金星相位]]。具体来说，根据日心说体系，我们会预计金星经历一个完整的周期性相位。相比之下，如果托勒密体系是正确的，那么我们最多只能看到在眉月位/残月位的金星，而永远都看不到在上/下弦月位、亏凸月位/盈凸月位或者满月位的金星。\n- 通过望远镜，伽利略发现除了肉眼可看见的恒星，还存在其他无数恒星。这至少意味着宇宙很可能比之前猜想的大得多，甚至有可能是无限大的，其中包括无限多的恒星。\n\n伽利略将日心说从工具主义提升到了现实主义，被教会裁定成异教观点，教授这个观点或对其书面论证维护都是被禁止的。\n\n### 新科学\n\n- 在 17 世纪，我们不得不接受宇宙比我们曾经所想象的要大得多的观点。从概念上来说，这个巨大的宇宙并没有什么意义，我们需要某种方法使这个新观点与我们对整个宇宙的认识拼合在一起。冯·库斯和布鲁诺的观点发挥了这个作用，也就是在关于宇宙大小的新观点融入当时现存世界观的过程中，两人关于“无限大的宇宙反映了上帝之无限伟大”的观点发挥了作用。\n\n### 牛顿\n\n- 牛顿第一定律。惯性定律的多种前身在 16 世纪得到了广泛探讨，在 17 世纪早期，伽利略对运动的物体进行了一系列研究，几乎正确总结出了惯性的核心概念，但还是差了那么一点儿。到了 17 世纪中叶，笛卡尔对惯性进行了准确的总结表述，牛顿的运动第一定律从很大程度上说是借鉴了笛卡尔的表述。\n- 牛顿运动第二定律的表述是，物体运动的改变与其所受作用力成正比，而且与其所受作用力的方向成一条直线。这条定律通常被归纳为 F=ma，也就是物体所受作用力等于质量乘以加速度。\n- 牛顿运动第三定律的表述是，对任何作用力，总会存在一个方向相反、大小相等的反作用力。\n\n#### 万有引力\n\n万有引力通常都被表述为任意两个物体之间的相互吸引力。举个例子，太阳的万有引力作用吸引着地球向太阳靠近，与此同时，地球的万有引力作用也吸引着太阳向地球靠近。同样地，当我扔出一本书，地球的万有引力作用将书往地球的方向吸引，然而，与此同时，书的万有引力作用也把地球往书的方向吸引。  \n更具体地说，两个物体之间的万有引力作用与物体的质量成正比例。也就是说，物体质量越大，万有引力作用越强。同时，万有引力作用与两个物体之间距离的平方成反比例，因此，随着物体之间距离的增加，它们之间的万有引力作用迅速减弱。\n\n### 化学\n\n现代化学的起源通常追溯到 18 世纪晚期，以[[安托·万洛朗·德·拉瓦锡]]（1743—1794）的研究为标志。要理解为什么这是现代化学的起源，首先了解一下 17 世纪以前的化学研究将很有帮助。\n\n### 生物学\n\n生物学是一门范围颇广的学科，值得注意的是，生物学中很多非常重要的著作都完成于 16 世纪和 17 世纪。但是，直到 18 世纪和 19 世纪，“生物现象并没有脱离牛顿宇宙观”的认识才变得清晰起来。\n\n要简明地说明这一点，可以简要探讨一下[[生物活力论]]者与生物机械论者所争论的命题。活力论者的观点是，有生命的物质和无生命的物质是不同的，因此适用于无生命物体的规律（比如牛顿定律）并不一定也适用于有生命的物体。\n\n### 电磁理论\n\n对与电和磁相关现象的研究，至少从古希腊时期就已经出现了。然而，我们对这些现象的理解最为引人注目的进展则是出现在 18 和 19 世纪。  \n在 18 世纪中期，本杰明·富兰克林（1706—1790）证明了闪电是一种电学现象，同时还证明了电学现象和磁现象之间存在一系列有趣的联系。\n\n### 爱因斯坦理论\n\n#### 狭义相对论\n\n其中一个问题，也就是[[迈克尔逊-莫雷实验]]的结果，到了 20 世纪初相对论问世后才得以解决。  \n绝对空间和绝对时间\n\n- 相对性原则（粗略版）：不存在一个优先视角来判定谁在运动而谁是静止的。\n\n具体来说，光速恒定原则和相对性原则会共同造成以下结果。\n\n- （1）时间膨胀对运动的人和物体来说，时间流逝变得更慢。具体来说，在运动时，时间流逝按以下比率变慢：这个方程式被称为洛伦兹-菲茨杰拉德方程式。\n- （2）长度收缩对运动的人和物体来说，长度会缩短。具体来说，在运动时，长度按以下比率缩短：\n- （3）同时性的相对性从一个正在运动的视角看来同时发生的事件，如果从一个静止的视角来看就不是同时发生的。举个例子，假设从萨拉的角度来看，她的两块时钟 SC1 和 SC2 是同步的，那么从乔伊的角度来看，这两块时钟就不是同步的。具体来说，SC1 会比 SC2 快，快的时间如下：\n\n#### 广义相对论\n\n广义相对论同样以两个基本原则为基础，通常被称为广义协变性原理和等效原理，  \n时空曲率\n\n- 在 1916 年的论文中，如果广义相对论是正确的，那么远离强引力场的光线，其波长应该会向光谱的红色端偏移。这个效果被称为引力红移。由于恒星都具有一个很强的引力场，离开恒星的光线，比如离开太阳的光线，应该会发生红移。\n- 由于光线会沿最短路线传播，因此，当经过像太阳这样的大质量物体时，光线应该会沿一条看起来弯曲的路线传播。简言之，如果广义相对论是正确的，像太阳这样的大质量物体就会导致时空曲率，因此，我们应该可以观察到恒星光线在太阳这样的物体附近发生弯折。\n- 换句话说，在广义相对论中，像火星和太阳这样的物体之间不存在吸引“力”。事实上，火星只是沿直线运动，但是由于时空曲率，这条直线变成了围绕太阳的一个椭圆形。而重力认为是物体之间的吸引力。\n\n### [[量子力学]]\n\n①涉及“量子实体”的经验事实，②量子理论本身，也就是量子理论的数学核心，以及③与诠释量子理论有关的命题\n\n#### 量子事实\n\n当我谈到量子事实时，我所指的只是涉及量子实体的经验事实。这样的事实将包括有关电子、中子、质子和其他亚原子粒子的实验结果；有关光子，也就是光线单元的实验结果；以及有关放射性衰变时释放出的粒子等的实验结果。\n\n#### 粒子和波的 异同\n\n让我们先花点时间来认清波与粒子颇为不同的事实。首先考虑一下粒子。让我们以棒球为例。粒子是离散的物体，在空间和时间中都有定义好的位置。粒子与粒子之间以典型的粒子方式进行相互作用，比如，彼此弹开，或分裂成更小的粒子。  \n而波则更多地是被看作一种现象，而不是离散的物体，在空间和时间中，波通常在相当大的范围内传播，而不是被局限在一个相对较小且定义清晰的位置上。比如，沙滩边的波浪并不是在一个特定位置，而是在一个较大的区域内传播。除此之外，波与波之间的相互作用也与粒子颇为不同。两列波有时可以通过彼此相互作用而形成更大的一列波；有时，两列波可以通过相互作用，实际上达到相互抵消的效果；还有时，两列波可以相交后分离，各自并不产生任何变化。\n\n#### 原因\n\n- 多世界\n- 隐变量\n\n### 演化论\n\n实际上，“演化”的意思就是随时间发生变化。  \n[[达尔文]] 和 [[华莱士]]  \n[[孟德尔遗传学]] 也在《物种起源》的同一时期发布，但是到 20 世纪才得到认可  \n20 世纪早期：渐进主义 VS 突变主义\n\n### 伦理学\n\n对伦理学的研究通常分为两个宽泛的领域，一个是**规范伦理学**，另一个是**元伦理学**。  \n为什么利他主义行为从演化角度来看很有问题？利他主义行为是一种对做出这种行为的一方有害（或者可能有害）而对其他人有利的行为。这样的行为是我们通常认为在道德上值得称赞的行为的最佳范例，比如，不顾自己的生命安危而把一个溺水的孩子从河里拉上来。  \n“亲缘利他主义” 和“互惠利他主义“并不会令人感到 疑惑\n\n### 博弈论\n\n### 科学中的女性\n\n马哈雷特·阿利克的《希帕提娅的遗产：从上古至 19 世纪科学中的女性历史》\n\n## 常青笔记\n\n以下世界观都是其部分观点，像拼图一样拼合在一起，组成一个具有稳定性、一致性，并环环相扣的体系\n\n- [[亚里士多德世界观]]\n- [[牛顿世界观]]\n- [[克劳狄乌斯·托勒密]]\n\n## 重点摘要\n\n世界观：现代人必须要懂的科学哲学和科学史（原书第2版）  \n理查德·德威特\n\n◆ 第一部分 基础命题\n\n\u003e\u003e 在第一部分中，我们将探讨在科学史和科学哲学中某些重要而又基础的命题。具体来说，我们将讨论几个概念，包括世界观、真理、证据、经验事实与哲学性/概念性事实、常见的推理类型、可证伪性以及工具主义和现实主义。\n\n◆ 第1章 世界观\n\n\u003e\u003e 同样地，这些都进一步表明亚里士多德的观点不是随机的、杂乱无章的观点集合，而是一个相互联结、像拼图一样的观点体系。每一个观点拼合在一起组成一个各部分环环相扣、具有一致性的观点体系，这就是我在运用世界观这个概念时的核心理念。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 换句话说，你用来支撑这个观点的证据与你的观点拼图紧密相连，也就是与你的世界观紧密相连。\n\n\u003e\u003e\n\n\u003e\u003e 顺带提一下，你会说就算我们自己没有直接证据证明地球围绕太阳运转，也不能说我们秉持这个观点是不合理的，因为天文学家和相关领域里的专家肯定有这样的直接证据。但是，正如我们在后续章节中将会看到的，即便是专家，也没有这样的直接证据。这绝不是想说没有证据能很好地支撑“地球围绕太阳运转”的观点。好的证据是存在的。但是，我认为这个证据并不像人们通常所认为的那么直接。这种情况存在于我们的很多（很有可能是大多数）观点中。\n\n\u003e\u003e\n\n\u003e\u003e 但是设想一下，如果我们从小到大接受的都是亚里士多德世界观，那么亚里士多德的观点也同样会看起来像常识。\n\n◆ 第2章 真理\n\n\u003e\u003e 概括地说，根据真理符合论，决定一个真的观点为真的因素是这个观点与现实相符合。决定一个假的观点为假的因素是这个观点没能与现实相符合。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 可以肯定地说，笛卡尔找到的可以完全确定的观点非常少（可能只有一个），并且后来被证明，这些观点所构成的基础太小了，人们无法在其上进行知识构建。\n\n◆ 第4章 证实与不证实证据和推理\n\n\u003e\u003e 换句话说，爱因斯坦的理论做出了正确的预言，而且更值得注意的是其他竞争理论并没有做出这样的预言，这个情况就被当作了证据，来证明这个理论是正确的。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 另一方面，不证实推理模式是一种演绎推理。然而实际上，由不证实推理模式得出的证据往往同样很复杂。具体来说，通常不证实推理模式涉及大量辅助假设。因此，通过不证实推理模式得出的证据只能表明要么是所使用的理论不正确，要么就是一个或几个辅助假设不正确（经常出现的是后者）。因此，不证实推理模式及证据同样也远没有它们乍看起来那么直接明确。\n\n◆ 第5章 奎因-迪昂论点和对科学方法的意义\n\n\u003e\u003e 事实上，重点是，这个实验更像是验证主要假设以及周围所伴随的辅助假设。因此，我们通常所验证的其实是一个观点集合。在面对不证实证据的时候，可以摒弃或修改集合中的任意一个观点。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 这个想法是，当面对两个相互竞争的理论时，有可能设计出一个实验，关于这个实验的结果，两个理论的预言是相互矛盾的。理想的情况是，由于两个理论的预言相互矛盾，这样一个实验至少可以证明其中一个理论是错误的\n\n\u003e\u003e\n\n\u003e\u003e 把所有这些因素放在一起，我们就得到了一个观点，那就是现有数据，包括所有相关实验的结果，都绝不可能完全确定某个理论是正确的。同时，所有数据和实验结果也绝不可能明确证明任何相互竞争的理论是不正确的。简言之，很多相互竞争的理论通常都可以与所有现有证据相吻合。对此，通常的描述是，根据现有数据，理论都是不充分确定的。\n\n◆ 第6章 哲学插曲：归纳的问题和困惑\n\n\u003e\u003e 前面提到的那句话，也就是未来将继续像过去一样，是每一个关于未来的推理所必需的隐含前提，尽管通常都不为人察觉。\n\n◆ 第9章 亚里士多德世界观中的宇宙结构\n\n\u003e\u003e 这个世界观当然不是那个时代唯一的观点体系，不管在哪个时代都是这样，总会有可互相替代且互相竞争的观点体系，但是亚里士多德观点体系在当时最为普遍。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 在亚里士多德世界观中，地球被认为是宇宙中心。与人们通常所认为的不同，当时的人们信奉地心说并不仅仅是出于一些以自我为中心的原因。也就是说，地心说的基础并不是“人类是特别的，因此应该居于一切存在的中心”的观点，或者至少最初并不以这个观点为基础。\n\n◆ 第11章 天文学数据：经验事实\n\n\u003e\u003e 这也是为什么农历会每隔几年多出一个闰月的原因月球同样经过一系列相位，每稍多于29天这些相位循环一次。这些相位所指的月球有时是月牙，有时是半月，有时是3/4月，还有时是满月，等等。不管月球在某天晚上处于哪个相位，从这一天起，经过稍多于29天的时间后，月球将再次处于这个相位。\n\n◆ 第14章 哥白尼体系\n\n\u003e\u003e 简言之，对于行星的逆行运动，对于火星、木星和土星逆行运动与这些行星最大亮度之间的相互关联，以及对于金星和水星总是出现在距离太阳不远处的事实，哥白尼体系都给出了更自然的解释，而这些就是哥白尼体系的优势所在。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 从现实主义者的角度出发，哪个体系的宇宙模型更为可行\n\n\u003e\u003e\n\n\u003e\u003e 这是一个很值得思考的问题，也是一个值得再次强调的问题：哥白尼在几十年间花费了大量时间来发展他的体系，然而，他的体系很明显与所有支持“地球是静止的”观点的证据相矛盾。\n\n\u003e\u003e\n\n\u003e\u003e 对新柏拉图主义与哥白尼发展日心说观点之间的联系，通常的解释都是非常直接明确的：如果哥白尼是新柏拉图主义者，而且认为太阳是“上帝”在宇宙中的实体代表，那么“上帝”的实体代表最合适的位置将是宇宙的中心。\n\n◆ 第17章 伽利略和通过望远镜得到的证据\n\n\u003e\u003e ，但这都是为了说明很常见而又很重要的一点：我们通过技术得到的证据很少会像我们通常所认为的那样直接。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 但是，在17世纪初期，没有很好的理由认为伽利略所支持的那种以经验为基础的方法在未来也会像在过去一样成功。因此，我认为唯一公平的回答是，对于“贝拉明是否认为地心说观点是不可证伪的”，完全不能简单地用“是”或“不是”来回答。\n\n◆ 第18章 亚里士多德世界观所面临问题的总结\n\n\u003e\u003e 除此之外，到了这个时候，基督教神学和亚里士多德宇宙观已经紧密融合在一起（特别是在欧洲），因此对其中一个提出了挑战，就意味着同时挑战了另一个。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 我不想让你产生这样一种印象，也就是亚里士多德世界观拼图从亚里士多德时代到17世纪一直保持完好无损，然后，几乎是一夜之间，这个拼图就不能再为人们所接受了\n\n◆ 第20章 新科学和牛顿世界观概述\n\n\u003e\u003e 《原理》是一部革命性的著作，虽然其中的概念数量不多（也就是运动三大定律及万有引力），但却可以解释种类广泛、数量众多的现象，确实令人赞叹。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 简言之，如果用现实主义态度来看待重力，也就是，如果认为重力是一个真实存在的力，那么重力的效果听起来非常像某种神秘的超距作用。\n\n◆ 第21章 哲学插曲：什么是科学定律\n\n\u003e\u003e 我在这里所使用的“客观”，其关键点是某个东西是否依赖于人类。更具体地说，我们通常认为如果即使人类不存在，某个东西也可以存在，那么这个东西就是客观的，如果情况相反，那么我们通常就认为它不是客观的。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 简言之，我们通常认为科学定律所反映的那些无例外的规律性，比如开普勒行星运动第二定律，通常从某种意义上说都不受反事实条件的影响。具体来说，这样的规律性即使在多方面条件都发生了改变的情况下，通常也仍然是真的。\n\n◆ 第22章 1700～1900年牛顿世界观的发展\n\n\u003e\u003e 总的来说，有生命的物体看起来跟无生命的物体非常不同，所以，用来解释无生命物体的规律是否同样可以解释生命，这一点还远不明确。\n\n◆ 第25章 量子理论的经验事实、数学方法和诠释概述\n\n\u003e\u003e ，量子理论数学到目前为止取得了巨大成功。量子理论数学在过去70年中几乎从来没有发生过变化，也没有做出过不正确的预言。在预言和解释方面，量子理论可以说是我们所遇到过的最成功的理论了。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 有一个差异并不大，但是值得一提，那就是量子理论数学给出的通常是概率性预言，而不是确定的预言。\n\n◆ 第26章 量子理论与定域性：EPR、贝尔定理和阿斯派克特实验\n\n\u003e\u003e 爱因斯坦定域性：发生在一个地点的事件无法影响发生在超距处的另一个事件。\n\n◆ 第27章 演化论概述\n\n\u003e\u003e 然而，演化并不是这样的。从演化过程中的生存竞争中保留下来的特点，不管具体是什么，都可以帮助有机体在其所处环境中成功地生存下来并进行繁殖。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 简言之，并不是演化过程是以产生任何特定类型的特点为目标，而是从这个过程中留下来的特点刚好使生物体得以生存和繁殖。演化过程并不是一个目标导向的过程，\n\n◆ 第28章 演化的哲学与概念影响\n\n\u003e\u003e 休谟注意到了，许多人身上都有一种倾向，那就是在没有额外正当理由的情况下，就会从“这个和那个是这样”的“实然”表述转变成“这个和那个应该这样”的“应然”表述。休谟还指出，从“实然”并不能有逻辑地推理出“应然”，至少在没有提供更多理由的情况下是不能的。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 在过去一个世纪里，这个从“实然”推理出“应然”的问题被称为“自然主义谬误”。更精确地说，“从实然到应然”的命题是自然主义谬误的版本之一。\n\n\u003e\u003e\n\n\u003e\u003e 这是一个很美妙的观点，也就是地球上的每一种有机体，包括每一种植物和每一种动物，都与我们有亲缘关系。没有理由用消极的态度来看待这个观点。达尔文似乎也有同样的感受。在他1844年一篇未发表的综述其观点的文章中，以及在出版于1859年的《物种起源》中，达尔文都用下面这段常常被引用的优美文字作结：生命及其蕴含之力能，最初注入到寥寥几个或单个类型之中；当这一行星按照固定的引力法则循环运行之时，无数最美丽与最奇异的类型，即是从如此简单的开端演化而来、并依然在演化之中；生命如是之观，何等壮丽恢弘。（Darwin,1964, p.490）[插图]\n\n◆ 第29章 世界观：总结思考\n\n\u003e\u003e 在亚里士多德世界观中，一个常见的隐喻是把宇宙当作一个有机体，这也是通常在思考我们居住在怎样的宇宙时所用的方法。就像有机体由许多部分组成，这些部分各自发挥其功能来实现其目标，比如心脏负责抽送血液，消化系统负责处理食物等，宇宙也被认为是由许多部分组成的，每个部分都有其天然的功能和目标。我们理解了，或者说认为理解了，我们居住在怎样的宇宙中。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 同样地，牛顿世界观也有一个很好的隐喻来总结我们所居住的宇宙。在牛顿世界观中，我们开始认为宇宙像一台机器。我们认为，组成宇宙的物体彼此之间存在相互作用，就像一台机器的零件之间存在相互作用。就像机器零件是通过推拉其他零件而产生彼此之间的相互作用，我们认为宇宙中的物体也通过这样一种机械的方式来产生相互作用。在这种“宇宙像机器”的观点之中，隐含的概念是“物体之间的相互作用是定域的”，也就是一个物体只能对与其有某种关联的物体产生影响。这些组成部分按照我们认为自己所理解的方式共同运转，像亚里士多德一样，我们认为自己几乎已经完全理解了这个世界。\n\n\u003e\u003e\n\n\u003e\u003e 判断一个观点是核心观点还是外围观点，并不是根据人们对这个观点的笃信程度。事实上，两种观点之间的区别在于，如果替换这个观点，也就是拼图中的一块拼板，是否会改变整个观点拼图。\n\n\u003e\u003e\n\n\u003e\u003e 我们的孙辈和曾孙辈，在回顾我们的时候也会纳闷，为什么我们会相信诸如“空间和时间对每个人都一样”的奇怪观点。\n\n\u003e\u003e\n\n\u003e\u003e 与相对论相比，有关量子理论的新发现，特别是有关贝尔定理和阿斯派克特实验的新发现，其影响很有可能需要使牛顿世界观作为整体发生重要改变。根据牛顿世界观，宇宙被认为像机器一样运转。我们对于机器的核心认识是零件之间的推拉相互作用——齿轮推动其他齿轮转动、滑轮带动其他滑轮运转，但通常都是通过诸如连接带之类的某种关联，而且通常机器的一个零件只会影响与其有接触的其他零件。\n\n\u003e\u003e\n\n\u003e\u003e 请注意，正因如此，新近发展所主张的宇宙可能是一个无法用任何方便的隐喻来总结的宇宙。我们所居住的宇宙可能像一个——好吧，可能与我们所熟悉的任何事物都不像。这是有史以来（至少是有记录的历史上）第一次，我们没有隐喻可以用，而且我们可能已经来到了一个分割点，也就是，从今往后，我们可能再也无法用一个方便的隐喻来总结自己所居住的世界了。\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E4%B8%96%E7%95%8C%E8%A7%82%E7%8E%B0%E4%BB%A3%E4%BA%BA%E5%BF%85%E9%A1%BB%E8%A6%81%E6%87%82%E7%9A%84%E7%A7%91%E5%AD%A6%E5%93%B2%E5%AD%A6%E5%92%8C%E7%A7%91%E5%AD%A6%E5%8F%B2%E5%8E%9F%E4%B9%A6%E7%AC%AC2%E7%89%88":{"title":"《 世界观：现代人必须要懂的科学哲学和科学史（原书第2版） 》","content":"\n# 《 世界观：现代人必须要懂的科学哲学和科学史（原书第2版） 》\n\n# 元数据\n\n\u003e [!abstract] 世界观：现代人必须要懂的科学哲学和科学史（原书第2版）\n\u003e - ![ 世界观：现代人必须要懂的科学哲学和科学史（原书第2版）|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/279/23692279/t7_23692279.jpg)\n\u003e - 书名： 世界观：现代人必须要懂的科学哲学和科学史（原书第2版）\n\u003e - 作者： 理查德·德威特\n\u003e - 简介： 本书是广受美国年轻人欢迎的人文通识读本，一本大开脑洞、训练思维、自我成长的书。书中介绍了科学史和科学哲学根本的问题，如什么是真理、哲学性概念性事实等。涵盖了科学史上对世界观产生冲击的历史事件和哲学主题。科学带给我们的不仅仅是知识，而是一套新的认知体系，如从亚里士多德世界观到牛顿世界观的变迁，作者探讨了近代科学发展，特别是相对论、量子力学和演化论等理论给世界观带来的冲击和挑战。本书纵论西方科学两千年，探索科学的起源和本质。每一个现代人都需要阅读、了解的关于科学的历史和哲理，并助其构建正确的世界观。在互联网时代，世界观是年轻人的底层操作系统，有助于年轻人认知升级，帮助年轻人大开脑洞、给个人成长赋能。本书也有益于企事业单位掌握科学和创新规律、助推重大科技创新，大幅提升我国企业的整体实力和竞争力，引领世界经济发展的新潮流。\n\u003e - 出版时间 2018-11-01 00:00:00\n\u003e - ISBN： 9787111612100\n\u003e - 分类： 社会文化-社科\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 第一部分 基础命题\n\n- 📌 在第一部分中，我们将探讨在科学史和科学哲学中某些重要而又基础的命题。具体来说，我们将讨论几个概念，包括世界观、真理、证据、经验事实与哲学性/概念性事实、常见的推理类型、可证伪性以及工具主义和现实主义。 ^23692279-6-451-551\n    - ⏱ 2022-04-29 10:37:11\n\n## 第1章 世界观\n\n- 📌 同样地，这些都进一步表明亚里士多德的观点不是随机的、杂乱无章的观点集合，而是一个相互联结、像拼图一样的观点体系。每一个观点拼合在一起组成一个各部分环环相扣、具有一致性的观点体系，这就是我在运用世界观这个概念时的核心理念。 ^23692279-7-6103-6213\n    - ⏱ 2022-04-29 10:53:37\n- 📌 换句话说，你用来支撑这个观点的证据与你的观点拼图紧密相连，也就是与你的世界观紧密相连。 ^23692279-7-9904-9947\n    - ⏱ 2022-04-29 10:59:20\n- 📌 顺带提一下，你会说就算我们自己没有直接证据证明地球围绕太阳运转，也不能说我们秉持这个观点是不合理的，因为天文学家和相关领域里的专家肯定有这样的直接证据。但是，正如我们在后续章节中将会看到的，即便是专家，也没有这样的直接证据。这绝不是想说没有证据能很好地支撑“地球围绕太阳运转”的观点。好的证据是存在的。但是，我认为这个证据并不像人们通常所认为的那么直接。这种情况存在于我们的很多（很有可能是大多数）观点中。 ^23692279-7-9976-10179\n    - ⏱ 2022-04-29 11:00:19\n- 📌 但是设想一下，如果我们从小到大接受的都是亚里士多德世界观，那么亚里士多德的观点也同样会看起来像常识。 ^23692279-7-11064-11114\n    - ⏱ 2022-04-29 11:03:05\n\n## 第2章 真理\n\n- 📌 概括地说，根据真理符合论，决定一个真的观点为真的因素是这个观点与现实相符合。决定一个假的观点为假的因素是这个观点没能与现实相符合。 ^23692279-8-3549-3614\n    - ⏱ 2022-04-29 11:21:18\n- 📌 可以肯定地说，笛卡尔找到的可以完全确定的观点非常少（可能只有一个），并且后来被证明，这些观点所构成的基础太小了，人们无法在其上进行知识构建。 ^23692279-8-16355-16425\n    - ⏱ 2022-04-29 13:54:02\n\n## 第4章 证实与不证实证据和推理\n\n- 📌 换句话说，爱因斯坦的理论做出了正确的预言，而且更值得注意的是其他竞争理论并没有做出这样的预言，这个情况就被当作了证据，来证明这个理论是正确的。 ^23692279-10-1235-1306\n    - ⏱ 2022-04-29 14:12:49\n- 📌 另一方面，不证实推理模式是一种演绎推理。然而实际上，由不证实推理模式得出的证据往往同样很复杂。具体来说，通常不证实推理模式涉及大量辅助假设。因此，通过不证实推理模式得出的证据只能表明要么是所使用的理论不正确，要么就是一个或几个辅助假设不正确（经常出现的是后者）。因此，不证实推理模式及证据同样也远没有它们乍看起来那么直接明确。 ^23692279-10-8961-9124\n    - ⏱ 2022-04-29 15:02:33\n\n## 第5章 奎因-迪昂论点和对科学方法的意义\n\n- 📌 事实上，重点是，这个实验更像是验证主要假设以及周围所伴随的辅助假设。因此，我们通常所验证的其实是一个观点集合。在面对不证实证据的时候，可以摒弃或修改集合中的任意一个观点。 ^23692279-11-1729-1845\n    - ⏱ 2022-04-29 15:08:12\n- 📌 这个想法是，当面对两个相互竞争的理论时，有可能设计出一个实验，关于这个实验的结果，两个理论的预言是相互矛盾的。理想的情况是，由于两个理论的预言相互矛盾，这样一个实验至少可以证明其中一个理论是错误的 ^23692279-11-3240-3338\n    - ⏱ 2022-04-29 15:16:41\n- 📌 把所有这些因素放在一起，我们就得到了一个观点，那就是现有数据，包括所有相关实验的结果，都绝不可能完全确定某个理论是正确的。同时，所有数据和实验结果也绝不可能明确证明任何相互竞争的理论是不正确的。简言之，很多相互竞争的理论通常都可以与所有现有证据相吻合。对此，通常的描述是，根据现有数据，理论都是不充分确定的。 ^23692279-11-4750-4935\n    - ⏱ 2022-04-29 15:22:01\n\n## 第6章 哲学插曲：归纳的问题和困惑\n\n- 📌 前面提到的那句话，也就是未来将继续像过去一样，是每一个关于未来的推理所必需的隐含前提，尽管通常都不为人察觉。 ^23692279-12-3843-3897\n    - ⏱ 2022-05-05 19:06:52\n\n## 第9章 亚里士多德世界观中的宇宙结构\n\n- 📌 这个世界观当然不是那个时代唯一的观点体系，不管在哪个时代都是这样，总会有可互相替代且互相竞争的观点体系，但是亚里士多德观点体系在当时最为普遍。 ^23692279-16-825-896\n    - ⏱ 2022-05-06 17:37:18\n- 📌 在亚里士多德世界观中，地球被认为是宇宙中心。与人们通常所认为的不同，当时的人们信奉地心说并不仅仅是出于一些以自我为中心的原因。也就是说，地心说的基础并不是“人类是特别的，因此应该居于一切存在的中心”的观点，或者至少最初并不以这个观点为基础。 ^23692279-16-925-1045\n    - ⏱ 2022-05-06 17:37:44\n\n## 第14章 哥白尼体系\n\n- 📌 简言之，对于行星的逆行运动，对于火星、木星和土星逆行运动与这些行星最大亮度之间的相互关联，以及对于金星和水星总是出现在距离太阳不远处的事实，哥白尼体系都给出了更自然的解释，而这些就是哥白尼体系的优势所在。 ^23692279-21-5804-5906\n    - ⏱ 2022-05-09 14:03:31\n- 📌 从现实主义者的角度出发，哪个体系的宇宙模型更为可行 ^23692279-21-5970-5995\n    - ⏱ 2022-05-09 14:03:22\n- 📌 这是一个很值得思考的问题，也是一个值得再次强调的问题：哥白尼在几十年间花费了大量时间来发展他的体系，然而，他的体系很明显与所有支持“地球是静止的”观点的证据相矛盾。 ^23692279-21-7301-7383\n    - ⏱ 2022-05-09 14:30:40\n- 📌 对新柏拉图主义与哥白尼发展日心说观点之间的联系，通常的解释都是非常直接明确的：如果哥白尼是新柏拉图主义者，而且认为太阳是“上帝”在宇宙中的实体代表，那么“上帝”的实体代表最合适的位置将是宇宙的中心。 ^23692279-21-8807-8906\n    - ⏱ 2022-05-09 14:34:09\n\n## 第17章 伽利略和通过望远镜得到的证据\n\n- 📌 ，但这都是为了说明很常见而又很重要的一点：我们通过技术得到的证据很少会像我们通常所认为的那样直接。 ^23692279-24-4029-4078\n    - ⏱ 2022-05-09 15:30:14\n- 📌 但是，在17世纪初期，没有很好的理由认为伽利略所支持的那种以经验为基础的方法在未来也会像在过去一样成功。因此，我认为唯一公平的回答是，对于“贝拉明是否认为地心说观点是不可证伪的”，完全不能简单地用“是”或“不是”来回答。 ^23692279-24-16494-16604\n    - ⏱ 2022-05-09 16:48:26\n\n## 第18章 亚里士多德世界观所面临问题的总结\n\n- 📌 除此之外，到了这个时候，基督教神学和亚里士多德宇宙观已经紧密融合在一起（特别是在欧洲），因此对其中一个提出了挑战，就意味着同时挑战了另一个。 ^23692279-25-2913-2983\n    - ⏱ 2022-05-09 17:20:17\n- 📌 我不想让你产生这样一种印象，也就是亚里士多德世界观拼图从亚里士多德时代到17世纪一直保持完好无损，然后，几乎是一夜之间，这个拼图就不能再为人们所接受了 ^23692279-25-5002-5077\n    - ⏱ 2022-05-09 17:23:35\n\n## 第20章 新科学和牛顿世界观概述\n\n- 📌 《原理》是一部革命性的著作，虽然其中的概念数量不多（也就是运动三大定律及万有引力），但却可以解释种类广泛、数量众多的现象，确实令人赞叹。 ^23692279-27-3735-3803\n    - ⏱ 2022-05-10 10:07:44\n- 📌 简言之，如果用现实主义态度来看待重力，也就是，如果认为重力是一个真实存在的力，那么重力的效果听起来非常像某种神秘的超距作用。 ^23692279-27-7841-7903\n    - ⏱ 2022-05-10 10:17:34\n\n## 第21章 哲学插曲：什么是科学定律\n\n- 📌 我在这里所使用的“客观”，其关键点是某个东西是否依赖于人类。更具体地说，我们通常认为如果即使人类不存在，某个东西也可以存在，那么这个东西就是客观的，如果情况相反，那么我们通常就认为它不是客观的。 ^23692279-28-2939-3036\n    - ⏱ 2022-05-10 10:27:15\n- 📌 简言之，我们通常认为科学定律所反映的那些无例外的规律性，比如开普勒行星运动第二定律，通常从某种意义上说都不受反事实条件的影响。具体来说，这样的规律性即使在多方面条件都发生了改变的情况下，通常也仍然是真的。 ^23692279-28-6917-7019\n    - ⏱ 2022-05-10 10:31:37\n\n## 第22章 1700～1900年牛顿世界观的发展\n\n- 📌 总的来说，有生命的物体看起来跟无生命的物体非常不同，所以，用来解释无生命物体的规律是否同样可以解释生命，这一点还远不明确。 ^23692279-29-3040-3101\n    - ⏱ 2022-05-11 10:57:49\n\n## 第25章 量子理论的经验事实、数学方法和诠释概述\n\n- 📌 ，量子理论数学到目前为止取得了巨大成功。量子理论数学在过去70年中几乎从来没有发生过变化，也没有做出过不正确的预言。在预言和解释方面，量子理论可以说是我们所遇到过的最成功的理论了。 ^23692279-33-2355-2445\n    - ⏱ 2022-05-13 10:35:35\n- 📌 有一个差异并不大，但是值得一提，那就是量子理论数学给出的通常是概率性预言，而不是确定的预言。 ^23692279-33-11887-11933\n    - ⏱ 2022-05-13 10:51:09\n\n## 第26章 量子理论与定域性：EPR、贝尔定理和阿斯派克特实验\n\n- 📌 爱因斯坦定域性：发生在一个地点的事件无法影响发生在超距处的另一个事件。 ^23692279-34-14560-14602\n    - ⏱ 2022-05-13 17:23:16\n\n## 第27章 演化论概述\n\n- 📌 然而，演化并不是这样的。从演化过程中的生存竞争中保留下来的特点，不管具体是什么，都可以帮助有机体在其所处环境中成功地生存下来并进行繁殖。 ^23692279-35-5125-5224\n    - ⏱ 2022-05-13 17:48:03\n- 📌 简言之，并不是演化过程是以产生任何特定类型的特点为目标，而是从这个过程中留下来的特点刚好使生物体得以生存和繁殖。演化过程并不是一个目标导向的过程， ^23692279-35-5412-5485\n    - ⏱ 2022-05-13 17:48:23\n\n## 第28章 演化的哲学与概念影响\n\n- 📌 休谟注意到了，许多人身上都有一种倾向，那就是在没有额外正当理由的情况下，就会从“这个和那个是这样”的“实然”表述转变成“这个和那个应该这样”的“应然”表述。休谟还指出，从“实然”并不能有逻辑地推理出“应然”，至少在没有提供更多理由的情况下是不能的。 ^23692279-36-28469-28655\n    - ⏱ 2022-05-17 14:07:22\n- 📌 在过去一个世纪里，这个从“实然”推理出“应然”的问题被称为“自然主义谬误”。更精确地说，“从实然到应然”的命题是自然主义谬误的版本之一。 ^23692279-36-28846-28914\n    - ⏱ 2022-05-17 14:08:05\n- 📌 这是一个很美妙的观点，也就是地球上的每一种有机体，包括每一种植物和每一种动物，都与我们有亲缘关系。没有理由用消极的态度来看待这个观点。达尔文似乎也有同样的感受。在他1844年一篇未发表的综述其观点的文章中，以及在出版于1859年的《物种起源》中，达尔文都用下面这段常常被引用的优美文字作结：生命及其蕴含之力能，最初注入到寥寥几个或单个类型之中；当这一行星按照固定的引力法则循环运行之时，无数最美丽与最奇异的类型，即是从如此简单的开端演化而来、并依然在演化之中；生命如是之观，何等壮丽恢弘。（Darwin,1964, p.490）[插图] ^23692279-36-35935-36289\n    - ⏱ 2022-05-17 16:52:01\n\n## 第29章 世界观：总结思考\n\n- 📌 在亚里士多德世界观中，一个常见的隐喻是把宇宙当作一个有机体，这也是通常在思考我们居住在怎样的宇宙时所用的方法。就像有机体由许多部分组成，这些部分各自发挥其功能来实现其目标，比如心脏负责抽送血液，消化系统负责处理食物等，宇宙也被认为是由许多部分组成的，每个部分都有其天然的功能和目标。我们理解了，或者说认为理解了，我们居住在怎样的宇宙中。 ^23692279-37-1020-1188\n    - ⏱ 2022-05-17 16:52:33\n- 📌 同样地，牛顿世界观也有一个很好的隐喻来总结我们所居住的宇宙。在牛顿世界观中，我们开始认为宇宙像一台机器。我们认为，组成宇宙的物体彼此之间存在相互作用，就像一台机器的零件之间存在相互作用。就像机器零件是通过推拉其他零件而产生彼此之间的相互作用，我们认为宇宙中的物体也通过这样一种机械的方式来产生相互作用。在这种“宇宙像机器”的观点之中，隐含的概念是“物体之间的相互作用是定域的”，也就是一个物体只能对与其有某种关联的物体产生影响。这些组成部分按照我们认为自己所理解的方式共同运转，像亚里士多德一样，我们认为自己几乎已经完全理解了这个世界。 ^23692279-37-1999-2267\n    - ⏱ 2022-05-17 16:53:47\n- 📌 判断一个观点是核心观点还是外围观点，并不是根据人们对这个观点的笃信程度。事实上，两种观点之间的区别在于，如果替换这个观点，也就是拼图中的一块拼板，是否会改变整个观点拼图。 ^23692279-37-3214-3299\n    - ⏱ 2022-05-17 16:54:38\n- 📌 我们的孙辈和曾孙辈，在回顾我们的时候也会纳闷，为什么我们会相信诸如“空间和时间对每个人都一样”的奇怪观点。 ^23692279-37-4713-4766\n    - ⏱ 2022-05-17 17:08:36\n- 📌 与相对论相比，有关量子理论的新发现，特别是有关贝尔定理和阿斯派克特实验的新发现，其影响很有可能需要使牛顿世界观作为整体发生重要改变。根据牛顿世界观，宇宙被认为像机器一样运转。我们对于机器的核心认识是零件之间的推拉相互作用——齿轮推动其他齿轮转动、滑轮带动其他滑轮运转，但通常都是通过诸如连接带之类的某种关联，而且通常机器的一个零件只会影响与其有接触的其他零件。 ^23692279-37-5145-5325\n    - ⏱ 2022-05-17 17:09:39\n- 📌 请注意，正因如此，新近发展所主张的宇宙可能是一个无法用任何方便的隐喻来总结的宇宙。我们所居住的宇宙可能像一个——好吧，可能与我们所熟悉的任何事物都不像。这是有史以来（至少是有记录的历史上）第一次，我们没有隐喻可以用，而且我们可能已经来到了一个分割点，也就是，从今往后，我们可能再也无法用一个方便的隐喻来总结自己所居住的世界了。 ^23692279-37-8332-8495\n    - ⏱ 2022-05-18 11:43:12\n\n# 读书笔记\n\n## 第11章 天文学数据：经验事实\n\n### 划线评论\n\n- 📌 月球同样经过一系列相位，每稍多于29天这些相位循环一次。这些相位所指的月球有时是月牙，有时是半月，有时是3/4月，还有时是满月，等等。不管月球在某天晚上处于哪个相位，从这一天起，经过稍多于29天的时间后，月球将再次处于这个相位。 ^16142247-7z7u8jMAP\n    - 💭 这也是为什么农历会每隔几年多出一个闰月的原因\n    - ⏱ 2022-05-09 10:14:19\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%96%E7%95%8C%E8%A7%82%E8%AF%BB%E5%90%8E%E6%84%9F":{"title":"世界观读后感","content":"\n# 世界观读后感\n\n2/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》1-6 章  \n【读书笔记】:  \n不知道你有没想过这么一个问题：地球是围绕这太阳转的吗？  \n也许你会很自然的想到当然是的，那么请列出你的证据。  \n因为老师和书上都是这么说的。  \n那么你的假设是：老师和书都是对的吗？\n\n事实上，我们不应该迷信书和真理，因为我们已经经历过一次世界观的推翻重建。\n\n前两千多年，人们的对世界的认识都是建立在亚里士多德的很多观点之上，比如说：地球位于宇宙中心，地球是静止的，万物都是由水、火、土、气、以太五种元素构成的等。在这个时期，世界观像拼图一样拼合在一起，以中心的观点向外推演，组成一个具有稳定性、一致性。并换换相扣的体系。\n\n如果要用实例说明亚里士多德的不同观点如何相互拼合，可以拿“地球是宇宙中心”的观点作为例子。这个观点与“土元素有一种向宇宙中心运动的天然趋势”的观点紧密相连，毕竟，地球本身主要由土元素组成。这样一来，“土元素天然地向宇宙中心运动”的观点和“地球本身位于宇宙中心”的观点就完美地拼合在一起了。\n\n但是显而易见，现在每个人都知道地球是围绕着太阳转的，不说宇宙中心，甚至不是太阳系的中心。这是因为最开始推导的第一原则就错误了，这是科学发展，观察手段的进步，也是思想的进步。\n\n那么，我们因为怎么去建立？  \n通过公理化的方法。\n\n最开始，亚里士多德通过他的三段论来寻找，三段论就是给出一个包含两个前提和一个结论的论述过程。但是三段论的链条不可能无休止的延长，所以在某个点上肯定有某些前提是必定为真的，但本身并不是通过位置更高的三段论链条得到的。这些起始点，也就是这些本身必定为真的前提，通常被称为第一原则。第一原则被当作是关于这个世界基本的、必定为真的事实。\n\n然后，笛卡尔在日心说被证伪之后，也想要去寻找必定为真的起始点，他将自己的大脑也考虑了进去。就有了那句经典的“我思故我在”，虽然确实是真，但以此为起点太单薄了，无法成为进行知识构建的基础。\n\n现代科学的世界观，是建立在卡尔·波普尔的证伪主义上，他认为，对很多理论来说，找到证实证据实在太容易了。一个理论所冒的科风险越大，他的科学性就越强。\n\n暂时先到这，其实还有比较重要的如何推理没能写进去（证实推理和不证实推理），这本书目前看下来还是很不错的，对培养逻辑思维和完整独立的世界观有很大的帮助。\n\n## 2022.05.05\n\n7/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》第 6 章  \n【读书笔记】:  \n今天我们来通过**归纳的问题和疑惑**这个问题来认识三个哲学家。  \n先抛出结论，虽然他们的问题不是一个实用的问题，因为它并没有影响科学的日常进程，但这些问题引发了一些关于归纳推理的令人困惑的问题。我们可以从中学到其思考的过程。\n\n首先认识下大卫休谟，他是英格兰的哲学家、经济学家、和历史学家，被视为是苏格兰[[启蒙运动]]以及[[西方哲学史]]中最重要的人物之一。他在 1748 年出版的《人类理解研究》一书中，提到了归纳问题，这个问题是这样的：**我们是否可以从逻辑上为我们关于未来的推理提供依据**。休谟的答案是：不可以。因为我们在进行推理时，我们的论证过程几乎总是包含隐含的前提。正如其名称所示，隐含的前提就是为了使推理看起来合理而必需的前提，但这些前提都是暗示的而不是明确表达出来的。举两个例子： - 有一路公交车从你家开到餐厅。  \n【公交车在星期天正常运营。】 - 在我们过去的经验中，太阳总是从东方升起。  \n【未来会继续像过去一样。】  \n所有关于未来的推理，都有“未来会像过去一样的预设”。\n\n第二位是徳裔美籍的亨普尔，他提出了一个乌鸦悖论，这个悖论反应像归纳这样的推理，其本质中存在某些让人深感困惑之处。  \n举个例子：我们经过 40 多年的研究，发现的类星体都在距离地球十分遥远的地方，这个观察结果为“所有类星体都距离地球十分遥远”的观点提供了归纳支撑。但是像这样的概括性观点，从逻辑上说，与其逆反命题是等价的：\n\n- 所有类星体都在距离地球十分遥远的地方。\n- 所有距离地球不遥远的物体都不是类星体。\n\n困惑的核心此时就出现了：只要我们得到了一个可以支撑观点（2）的观察结果，那么似乎这个结果肯定也同等地支撑了观点（1）。\n\n第三位是一个百度百科都搜不到的古德曼，他提出了一个蓝绿问题，他的预设是：思考一下类似“所有绿宝石都是绿色的”这一陈述。具体来说，每一块我们见过的绿宝石都是绿色的，而且我们从来没有见到过不是绿色的绿宝石。对绿宝石来说，“绿色”这个判断似乎就是古德曼所说的“可预期的”判断，\n\n但是我们现在给出一个新的定义，“绿蓝”，它是指：t 时刻以前是绿色的, 而 t 时刻以后是蓝色的。  \n这样, 前述观察证据似乎同样确证了两个不一致的预见:“所有在时刻 t 以后考察的绿宝石将是绿色的”和“所有在时刻 t 以后考察的绿宝石将是蓝色的”, 这就说明: 从同样的观察出发所作出的推断 (预见) 可以是相互矛盾的, 这也被古德曼称作\"不可预期判断\". **那么，一般来说，“可预期的”判断和“不可预期的”判断之间的差异是什么呢？** 这个问题至今还没有一个答案得到了广泛认同。\n\n之前一直觉得哲学是一门深奥难懂的学问，但是不断接触下来感觉还是很有意思的。我们常说的要多思考，其实就是哲学的作用，他能让你的思考真正的有理有据。之前看到《第一性原理》在疯狂推崇演绎法，因为从根本原理出发得出来的结论牢不可破，除非整座大厦的崩塌，就像先前基于阿基米德的世界观。但是这样的演绎比起归纳要麻烦不少，所以归纳占据了生活的多数时候，思考才显得珍贵。\n\n## 2022.05.06\n\n8/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》第 7 章  \n【读书笔记】:  \n今天学习可证伪性。\n\n这本书认为的可证伪性是一种很主观的事，假设乔伊是地平说学会的一员。地平说学会的成员都发自内心地认为地球是平的。假设乔伊相信地平说理论，而且，不管出现什么样的证据表明这一理论是错误的，乔伊总能绕过这些证据，所以看起来，乔伊认为这个理论是不可证伪的。\n\n复杂因素：\n\n- 面对不正确的预言时，通常更合理的做法是摒弃一个或几个辅助假设，而不是放弃整个理论。那么摒弃多少个辅助假设，才算“足够多”，从而让人可以放弃一个理论\n- 什么样的证据可以算作是有意义的证据。书中举例的史蒂芬认为的证据是：以经文为基础的证据（比如新发现的经文，或者对现有经文更新更好的解读，等等）\n\n我们结合《上帝掷骰子吗？》中的观点来看, 为了给 “科学”和“不科学”的理论划分界线， [[卡尔·波普尔]]提出一个意见，就是一个“科学”的命题必须“可证伪”。\n\n事实上，如果仔细考察科学史，我们就会发现，几乎没有任何理论是因为“被证伪”而倒台的，它们退出历史舞台，几乎只有一个理由，就是出现了一个更好、假设更少、更合理的新理论。\n\n虽然 100%的证实和证伪都不可能，但是，我们可以根据所搜集到的信息，给某命题一个成立的“概率”。\n\n## 2022.05.07\n\n9/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》第 8 章  \n【读书笔记】:  \n托勒密的《至大论》论述了：地球是球形的、静止的，并且位于宇宙中心。\n\n这里有一个反常识就是：我们很多人认为在 16 世纪以前，人们大都认为地球是平的。但是至少在古希腊时期开始几乎就没有人认为地球是平的了。《至大论》中通过 “太阳，月亮和其他星体升起和下落的时间并不相同”、“向高山航行时，我们所看到的目的地都是一点点增加”等论点详细论述了地球是球形的观点。\n\n地球是静止的观点有三方面论据。  \n其一是常识论据，我们日常生活中运动都会有震动或者风之类的感受，而我们平时感受不到。  \n其二是基于运动物体的论据，思考一下一个问题：当我们在运动的时候，向上竖直抛出一个物体，这个物体会落在我们身后，还是会沿弧线运动，然后重新落到我们手中，或落到我们手边的位置？  \n然后显然没有，所以证明地球没有在运动。  \n其三是基于恒星视差的论据，举个例子，假设你在视线正前方一臂距离处竖直握着一支钢笔。保持这支钢笔静止，把你的头从左向右移动，注意钢笔和背景中其他物体的位置发生的偏移。这些物体位置的明显偏移当然是由于你的头在运动，而不是钢笔和背景中其他物体的任何运动。\n\n虽然我们现在看起来都是很容易推翻的，但是我们要思考其背后的思想。比如二三论据明显都是使用了不证实推理出现的错误。考虑了关键辅助假设后，论据二的的论证过程应该是：抛出的物体并没有落在我们身后，所以要么地球没有在运动，要么我们对运动的看法是不正确的。而论据三的应该是：如果地球在运动，如果恒星不是在一个遥远到几乎无法想象的地方，那么我们应该看到恒星视差；然而我们没有看到这样的视差，那么要么地球没有在运动，要么恒星在一个遥远到几乎无法想象的地方。\n\n第三点地球是宇宙的中心，是基于以下两点论述\n\n1. 根据之前讲到过的拼图思想，有一条叫做“重的物体有一种向宇宙中心运动的天然趋势”\n2. 地球看起来是宇宙中心，因为月球、太阳、恒星和行星看起来全都围绕地球运动\n\n这套世界观我们运用了近两千年，虽然有着不太显而易见的错误，但是其根据几个核心观点逐渐演绎而来，显得其坚不可摧，而颠覆这套世界观的现代世界观则是经历伽利略、笛卡尔、牛顿等科学家近百年的努力，接下来的章节将带我们走过现代世界观的建立。\n\n## 2022.05.09\n\n10/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》第 9-18 章  \n【读书笔记】:  \n这一个大章节都是将新科学，为了不显得突兀，所以进行大量的思想变更的铺垫，告诉我们思想的转变不是一下子就转变成了的。对比着很多亚里士多德的世界观，一个个的寻找错误，所有有很多回顾以及新科学都是一些现在耳熟能详的常识，所以这几章就看的比较快。\n\n中间过度环节主要是哥白尼提出日心说，但是仍属于工具主义范畴，没有危害到教会，所以没有被封禁。但是这里有一个反常识的点，哥白尼体系通常被认为远远简化于托勒密体系，而且在预言和解释方面更胜一筹。其实这是并没有，哥白尼也是基于托勒密体系，只不过托勒密不再坚持匀速运动，找了一个让人难以接受的等距点。而哥白尼更尊重匀速运动，他的体系没有用到等距点，所以在复杂程度上并没有比托勒密体系简单，并且语言和解释方面也差不多（甚至更糟）\n\n比较简洁的是之后的开普勒体系，他不再坚持相信了 2000 多年的核心观点，也就正圆事实和匀速运动事实。提出了开普勒三定律：\n\n1. 开普勒行星运动第一定律。“行星围绕太阳沿椭圆形轨道运转，太阳占据椭圆轨道两个焦点之一的位置”\n2. 开普勒行星运动第二定律。“如果以行星为起点画一条直线把太阳连接起来，这条直线在相等的时间内扫过的面积相同。”\n3. 第三条定律描述的是行星与太阳之间的距离和沿轨道围绕太阳运转的时间\n\n之后的登场的是伽利略，他将日心说从工具主义提升到了现实主义，被教会裁定成异教观点，教授这个观点或对其书面论证维护都是被禁止的。明天我们再来认识一下伟大的伽利略\n\n## 2022.05.09\n\n11/14 天  \n【星球编号】: 445  \n【打卡内容】: 《世界观》第 16-18 章  \n【读书笔记】:  \n之后就到了伟大的“现代观测天文学之父”、“现代物理学之父”、科学方法之父、“科学之父”及“现代科学之父”伽利略的登场了。他是那个时期第一批将望远镜用于天文学观察的人之一。他观察了很多有趣的新数据，这些数据对地心说和日心说支持者之间的争论产生了极大的影响。\n\n- 伽利略观察到月亮的地表特征包括山峰、平原以及月坑。它破坏了亚里士多德世界观中宇宙整体的样子。如果像月球这样巨大的岩石体可以围绕地球进行持续运动，也许同样是巨大岩石体的地球也可以围绕太阳进行持续运动。\n- 观察到太阳黑子，并且论证出太阳黑子一定是太阳表面本身就有的区域，那么月上区肯定不像亚里士多德世界观所认为的那样是没有变化的完美区域。\n- 伽利略是第一个观察到土星有时会有边缘凸出现象的人，这个凸出的边缘看起来就像把手或者耳朵。现在我们知道伽利略所观察的就是土星光环，\n- 通过望远镜，伽利略观察到了四个小亮点，它们围绕在木星周围，位置随时间变化而变化，伽利略正确地推断出这四个小亮点是围绕木星运转的卫星。\n- 通过望远镜，伽利略发现除了肉眼可看见的恒星，还存在其他无数恒星。这至少意味着宇宙很可能比之前猜想的大得多，甚至有可能是无限大的，其中包括无限多的恒星。\n- 观察到了金星相位。具体来说，根据日心说体系，我们会预计金星经历一个完整的周期性相位。\n\n伽利略将日心说从工具主义提升到了现实主义，被教会裁定成异教观点，教授这个观点或对其书面论证维护都是被禁止的。\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%96%E7%BA%AA%E4%B8%89%E9%83%A8%E6%9B%B2%E5%85%A89%E5%86%8C":{"title":"《 世纪三部曲（全9册） 》","content":"\n# 《 世纪三部曲（全9册） 》\n\n# 元数据\n\n\u003e [!abstract] 世纪三部曲（全9册）\n\u003e - ![ 世纪三部曲（全9册）|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/169/859169/t7_859169.jpg)\n\u003e - 书名： 世纪三部曲（全9册）\n\u003e - 作者： 肯·福莱特\n\u003e - 简介： 全球读者平均3个通宵读完的超级小说。火遍全球的20世纪人类史诗“世纪三部曲”!横扫全球榜单！我亲眼目睹，每一个迈向死亡的生命都在热烈地生长。从充满灰尘和危险的煤矿到闪闪发光的皇室宫殿，从代表着权力的走廊到爱恨纠缠的卧室，来自美国、德国、苏俄、英国和威尔士的五大家族，他们迥然不同又纠葛不断的命运逐渐揭晓，波澜壮阔地展现了一个我们自认为了解，但从未如此真切感受过的20世纪。\n\u003e - 出版时间 2017-05-01 00:00:00\n\u003e - ISBN： 9789900394655\n\u003e - 分类： 历史-历史小说\n\u003e - 出版社： 江苏凤凰文艺出版社\n\n# 高亮划线\n\n## 巨人的陨落1(7)\n\n- 📌 沃尔特又说：“可是德国提出了哪些新的领土要求了呢？”他看了看桌子四周，谁都没有说话。“没有，”他得意地说，“只有另一个欧洲大国可以作出同样的回答，那就是英国！”格斯·杜瓦传过波尔多葡萄酒，用他那慢条斯理的美国口音说：“我认为很有道理。”沃尔特说：“所以说，我的老朋友菲茨，我们之间怎么可能发生战争呢？”星期天的早餐前，茉黛女勋爵派人去找艾瑟尔。艾瑟尔忙得不可开交，她必须忍下心里的恼火，也不能唉声叹气。时间还早，但雇工们已经忙碌起来。在宾客起床前，所有的壁炉都必须清理干净，重新点火，煤桶里要装满煤炭。几个重要的房间——饭厅、晨间起居室、书房和吸烟室，还有较小的公共区域，都必须清扫干净，收拾整齐。艾瑟尔检查了台球室摆放的鲜花，把打蔫枯萎的花枝换掉，这时便有人来唤她。 ^859169-7-599\n    - ⏱ 2018-10-14 16:57:04\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%9C%E6%96%B9%E5%BF%AB%E8%BD%A6%E8%B0%8B%E6%9D%80%E6%A1%88":{"title":"《 东方快车谋杀案 》","content":"\n# 《 东方快车谋杀案 》\n\n# 元数据\n\n\u003e [!abstract] 东方快车谋杀案\n\u003e - ![ 东方快车谋杀案|200](https://weread-1258476243.file.myqcloud.com/weread/cover/53/yuewen_728497/t7_yuewen_7284971680854100.jpg)\n\u003e - 书名： 东方快车谋杀案\n\u003e - 作者： 阿加莎·克里斯蒂\n\u003e - 简介： 11月10日，《东方快车谋杀案》时隔43年再度被搬上大银幕，肯尼思·布拉纳、佩内洛普·克鲁兹、威廉·达福 、朱迪·丹奇、约翰尼·德普等众多顶级演员出演。1974年，英格丽·褒曼凭借本书改编的同名电影获得奥斯卡奖，英国女王出席该片首映礼。本书以1932年轰动一时的真实案件“林白之子绑架案”为蓝本，淋漓极致展现了作者刻画人物群像的深厚功力。侦探波洛在叙利亚完成了一项委托，要搭乘辛普朗号东方快车回国。奇怪的是，似乎全世界的人都选在那一夜出行，这列铺位一向宽裕的豪华列车竟然一票难求。幸好他遇到了好友、国际客车公司的董事布克先生，这才挤上了车。午夜过后，一场大雪迫使辛普朗号停了下来。第二天一早，大家发现少了一名乘客。一个美国人死在了他的包厢里，被刺了十二刀，可他包厢的门却是反锁的。随着调查的深入，案情却似乎更加扑朔迷离，大侦探波洛想出了两种截然不同的解释……\n\u003e - 出版时间 2013-04-01 00:00:00\n\u003e - ISBN： 9787513311632\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 新星出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7iAWZx68c  \n⏱ 2020-07-04 21:17:35\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%A4%E6%AD%A5%E6%89%93%E9%80%A0%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E7%AE%80%E5%8D%95%E5%8F%88%E9%AB%98%E6%95%88":{"title":"两步打造适合自己的笔记系统，简单又高效","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [两步打造适合自己的笔记系统，简单又高效](https://sspai.com/post/70841)\n- tag：#\n- date: [[ 2022-02-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 没用的笔记各有各的没用，有用的笔记只需做到两件事：收集和整理。收集帮助我们清空大脑，专注当下；整理帮助我们连接笔记，加速知识的积累和碰撞。\n- 大致总结，一个有效的笔记系统可以通过整理这一步把笔记和笔记连接在一起，帮助我们：查找、检索更方便。更好地做到查漏补缺。理解和思考更深刻。限于篇幅，这才只是一种场景举例。整理这一步如果做得好，还可以实现：叠加新旧笔记，加速知识的积累。对比有关联的笔记，减少确认偏差，加深对问题的理解。碰撞不同的笔记，激发创造力。\n- 1）不分类。所以，我们必须要想办法保障自己不管是在什么时候都能及时地方便地收集想法。怎么样才能实现这一点呢？有以下两个原则供参考。收集笔记仅仅是收集而已，整理是收集之后要做的事情。\n- 2）随手可取。欧阳修曾说「余平生所作文章，多在三上：马上、枕上、厕上」。 的确，就是在这种无聊的时候我们人类最容易产生各种各样的想法。也就是在这种时候，我们最需要随手就可以拿到的收集工具。我们可以用手机（如果你不会因为记笔记而开始刷微博的话），也可以随身带一个小巧的笔记本，或者一些便利贴。\n- 1）清空收集箱。为了减少心理上的压力，我们可以把整理进一步拆分为两小步。清空收集箱，就是要过一遍所有收集到的待整理笔记。\n- 2）建立充分的连接。\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%AA%E4%BA%BA%E5%89%AF%E4%B8%9A%E5%89%96%E6%9E%90":{"title":"个人副业剖析","content":"\n把 5 年当成一辈子来过，那么你这辈子需要完成的目标是什么？\n\n# 个人副业剖析\n\n# 第一个人生 夯实基础\n\n分析自己的 [[人生技能树]], 寻找定位\n\n1. 编程技术\n    - [[V8]]\n    - [[React]]\n    - [[Vue 问题]]\n    - [[构建部署]]\n    - 等等\n2. 前沿科学\n3. 写作能力\n4. ~~哲学\n\n# 第二个人生 基础变现\n\n# 第三个人生 理性人生\n\n1. 投资是人生中最后一件事\n2. 还愿意接受新知识，还能保持思考\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AA%E4%BA%BA%E5%93%81%E7%89%8C":{"title":"个人品牌","content":"\n# 个人品牌\n\n**品牌指的是用户心智，指的是当别人想到你的时候，脑海里出现的信息、画面甚至声音，以及与你的「连接」。**\n\n**个人品牌就是把一些有价值的特质体现出来，帮到别人，同时积累自己的社交货币。用户的需求也不只有追求成功，生活和工作里的任何问题，都有求助于人的需求。**\n\n自然发生意味着，你只能给大致的方向，最后用户会怎样认知你，是有很强的不确定性的。在跟人连接的博弈过程中，通过慢慢调整，进化成更完善的个人品牌。这很像互联网产品的迭代思维。**把个人品牌当作产品迭代，而不是提前都在纸面上设计好细节。**\n\n## **个人品牌的落脚点**\n\n1. 可行性也是要反复考量的一个特征。  \n   从 「产品做得还不错的产品经理」 到 「有独立思考的产品经理」，不会因为产品做崩了而人设崩\n2. 实用性指的是要让人觉得有帮助。  \n   **好的个人品牌会让用户觉得「我想跟他学习」，最好的个人品牌会让用户觉得「我想成为他」。**\n3. 非同质化，指的是你比别人有差异化的地方。  \n   **有差异化才有记忆点，才能积累用户心智。**「我是一个产品经理」就是同质化的，「我是一个做了 10 年社交产品的产品经理」 就非同质化。「我在公众号有 10000 个关注」还是同质化的，「张小龙和俞军关注了我的公众号」就是非同质化的。\n4. 一致性是极其重要的，也是最容易被忽视的。  \n   一致性要再补充一个重点，就是未必是表面的一致，很多时候落脚不一定非在内容题材上。像半佛仙人，我从来就不觉得（他自己也不觉得）算是知识大 V，是懂各行各业的专家。他的个人品牌落脚点还在「解构商业现象和社会现象」上。\n\n## **个人品牌的长期主义，胜利通常不是靠自己有多正确，而是等待别人都犯了错误。**\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AA%E4%BA%BAIP":{"title":"参考资料","content":"\n做自媒体 IP，梳理清楚闭环真的太重要了。\n\n**IP 并非出个镜露个面混眼熟，就叫个人 IP，更多的还是我面对了多少人，众多观众中有多少人接纳了我的观点。**\n\n**当你要进入一个行业时，问自己两个问题：一、你是否能为用户创造新的价值，二、你是否能为行业“创造”新的用户。**\n\n[[个人品牌]]\n\n## 不要做的事\n\n### 不要想走捷径\n\n根基不实，积累不够深度思考能力不行，写作能力不高，利他主义不强，专业知识不够，但又想走捷径，快速成长或快速赚钱。\n\n### 不要追逐红利\n\n红利意味着不用动脑不用吃苦就能赚钱。每次看到 xxx 来了，要把握机会，xxx 已经赚了 xxx。但天底下真的有那么容易的事吗？即便在红利期能赚到，在后期我也会因为没有专业知识和人脉资源而维护不下去。\n\n### 不用做最专业的人\n\n几乎所有的专业人士，都有一个突出的不能再凸出的毛病：讲专业的话。  \n**所谓超级传播力，就是你能把冷门、深奥的专业知识讲的普通人明明白白，把这个知识没有损耗的传递到用户那里，这样效率最高。**有超级专业力的人不少，有超级传播力的人不多。同理心和共情能力，是一件极难的事情，假设你没有经历过，真的很难共情。\n\n[[精细化运营]]\n\n## 个人平台不等于粉丝数\n\n- **品牌并不代表品质，而是代表着某种一致性，其结果表现为拥有议价权；**\n- **声誉是别人对你的评价，而个人品牌是你对你自己在其他地方的投射，两者并非总是一致；**\n- **构建个人品牌的核心，在于能做出令人印象深刻的事情，而非只是把做的事情告诉他人；**\n\n虽然大部分时候，平\n\n# 参考资料\n\n[花爷的 IP 之路](https://k3vtw0va9w.feishu.cn/docx/doxcn4CkP92SPNUgQ6lX19b9Sac)  \n[如何通过五力模型打造一个超级 IP](https://articles.zsxq.com/id_r3ft4v1k7et3.html)\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F":{"title":"优点","content":"\n面向对象设计鼓励将行为分布到各个对象中，把对象划分成更小的粒度，有助于增强对象的可复用性，但由于这些细粒度对象之间的联系激增，又有可能会反过来降低它们的可复用性。\n\n中介者模式的作用就是解除对象与对象之间的紧耦合关系。增加一个中介者对象后，所有的相关对象都通过中介者对象来通信，而不是互相引用，所以当一个对象发生改变时，只需要通知中介者对象即可。中介者使各对象之间耦合松散，而且可以独立地改变它们之间的交互。\n\n# 优点\n\n中介者模式是迎合**迪米特法则**的一种实现。迪米特法则也叫最少知识原则，是指一个对象应该尽可能少地了解另外的对象（类似不和陌生人说话）。如果对象之间的耦合性太高，一个对象发生改变之后，难免会影响到其他的对象，跟“城门失火，殃及池鱼”的道理是一样的。而在中介者模式里，对象之间几乎不知道彼此的存在，它们只能通过中介者对象来互相影响对方\n\n不过，中介者模式也存在一些缺点。其中，最大的缺点是系统中会新增一个中介者对象，因为对象之间交互的复杂性，转移成了中介者对象的复杂性，使得中介者对象经常是巨大的。中介者对象自身往往就是一个难以维护的对象。\n\n中介者模式可以非常方便地对模块或者对象进行解耦，但对象之间并非一定需要解耦。在实际项目中，模块或对象之间有一些依赖关系是很正常的。毕竟我们写程序是为了快速完成项目交付生产，而不是堆砌模式和过度设计。关键就在于如何去衡量对象之间的耦合程度。**一般来说，如果对象之间的复杂耦合确实导致调用和维护出现了困难，而且这些耦合度随项目的变化呈指数增长曲线，那我们就可以考虑用中介者模式来重构代码。**\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E7%9A%84%E5%BE%B7%E8%A1%8C":{"title":"《 中国人的德行 》","content":"\n# 《 中国人的德行 》\n\n# 元数据\n\n\u003e [!abstract] 中国人的德行\n\u003e - ![ 中国人的德行|200](https://weread-1258476243.file.myqcloud.com/weread/cover/93/YueWen_727647/t7_YueWen_727647.jpg)\n\u003e - 书名： 中国人的德行\n\u003e - 作者： 阿瑟·史密斯\n\u003e - 简介： 以西方文明的视角，观察中国人的行为方式，尤其是底层人民的生活，从中发现、总结出中国人的性格，以及中国文化的特质。内容具体、细致、生动，分析透彻，一针见血。\n\u003e\n\u003e - 出版时间 2014-12-01 00:00:00\n\u003e - ISBN： 9787544751278\n\u003e - 分类： 社会文化-文化\n\u003e - 出版社： 译林出版社\n\n# 高亮划线\n\n## 争强好胜\n\n# 读书笔记\n\n## 争强好胜\n\n### 划线评论\n\n- 📌 中国人在吵架时并不指出对方错在哪里，而是不停地侮辱对方的祖先，然后讽刺对方的出身。 ^16142247-6WF2Zo9Gl\n    - 💭 我看着想笑\n    - ⏱ 2018-01-22 20:57:09\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6XgLL8kBe  \n⏱ 2018-02-16 16:07:33\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E5%9B%BD%E5%89%8D%E6%B2%BF%E4%B8%8D%E5%A6%82%E9%97%AE%E9%97%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E5%90%A7":{"title":"《 中国前沿：不如问问科学家吧 》","content":"\n# 《 中国前沿：不如问问科学家吧 》\n\n# 元数据\n\n\u003e [!abstract] 中国前沿：不如问问科学家吧\n\u003e - ![ 中国前沿：不如问问科学家吧|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/572/41521572/t7_41521572.jpg)\n\u003e - 书名： 中国前沿：不如问问科学家吧\n\u003e - 作者： 郝景芳编著\n\u003e - 简介： 本书精选了人类对未来生活无限畅想的“人机共生”、“太空探索”、“生物治疗”“粪菌移植”等方方面面的十大前沿黑科技主题。在内容上，不仅囊括作者本人多年来科技领域的所见所闻，更有深入各大前沿科技实验室的探访实录，与专家面对面探讨科技，同时辅以热门科幻电影盲区解读，既有着引人入胜的接地气内容，又可真实再现当今前沿科技探索历程。不管你是想拥有一位双商均高的人工智能助手，还是一直梦想着到太空生活，亦或渴望通过生物医疗来改写生命密码从而实现逆生长，这本书里都有你所好奇的答案。\n\u003e - 出版时间 2021-10-01 00:00:00\n\u003e - ISBN： 9787521736120\n\u003e - 分类： 科学技术-自然科学\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 1 人工智能并不“智能”\n\n- 📌 如果我们跟人工智能系统做比较的话，人工智能永远不可能有意识。 ^41521572-6-4062-4092\n    - ⏱ 2021-12-09 14:04:01\n\n## 1 脑机接口的第一步——探测脑磁\n\n- 📌 一般来讲，我们在监测大脑信号时，会在头上放接触电极，从头皮采集身体信号。但大脑在运转时，神经上的电流会辐射产生磁场。这个磁场类似于手机无线电信号，直接从空气中传出。我们可以依靠一些特殊手段，接收大脑神经活动时所辐射的电磁波，但它的信号感会很弱。 ^41521572-10-692-814\n    - ⏱ 2021-11-26 10:52:04\n- 📌 方法一，利用超导线圈。当闭合线圈中的磁场发生变化时，会产生感应电流。传统的线圈电压能够产生电流，但电流太小，其电子会直接将电流消耗掉，导致探测不到。超导线圈没有电阻，所以能够探测到大脑辐射出来的电磁波。但该技术相对陈旧，探测精度不高，且超导线圈是超低温的，所以很难在日常生活中进行实质性的大规模应用。 ^41521572-10-861-1011\n    - ⏱ 2021-11-26 10:52:20\n- 📌 方法二，使用光泵磁力仪。光泵磁力仪是一种量子技术，原理是单原子碱金属气体在外磁场下进行拉莫尔进动[插图]。在拉莫尔进动的过程中，原子对激光的吸收会有一个圆偏振的选择吸收特性。我们可以把一团碱金属气体放在大脑旁边，然后用一束激光打过碱金属气体，探测它吸光的激光强。或者更具体地说，测一个圆偏振光吸收的选择特性，就能够探测其相应的拉莫尔进动速度。测出拉莫尔进动速度后，就能计算出磁场。这就是目前最新一代的大脑电磁波探测方式，是非接触、非植入，对身体无害的高精度脑信号探测仪。 ^41521572-10-1040-1368\n    - ⏱ 2021-11-26 10:52:31\n\n## 2 脑磁的“孪生兄弟”——脑电波\n\n- 📌 有这样一个比喻，测脑电波信号，如同在体育场外架了一个麦克风，你无法听清里面的声音，但能了解到场馆内欢呼的意义。这属于一种在传输过程中信号质量就已经被混淆的信号。但是磁不一样。人体是不导磁也不阻磁的，人体的磁场是一个常数。我们都知道在材料学中只有很少数的铁磁性材料有磁导性，其他的（如木头、水、空气）都是同样的磁介质常数 ^41521572-11-2037-2196\n    - ⏱ 2021-11-26 14:06:54\n\n## 第三章 太空探索\n\n- 📌 回顾人类真实的太空探索历程，向太空前行的每一步背后，并不是人类对生存的未雨绸缪。真正点燃人类探索勇气的，是我们对真理的渴求和对世界的好奇心。 ^41521572-13-805-875\n    - ⏱ 2021-11-26 14:22:33\n\n## 3 太空探索的平民化之路\n\n- 📌 由于月球的环境很稳定，这些个人物品可以保存上万年或更久，甚至可能永远留在月球上，因此“月球航班”商业服务营销的就是这样一种“永垂不朽”的概念，当你望向月球的时候，结婚誓言永远都在月球上。 ^41521572-16-3111-3204\n    - ⏱ 2021-11-26 14:32:36\n\n## 1 如同“上帝之手”的科学技术\n\n- 📌 大家需要意识到一个问题，人体由很多细胞组成，我们能够针对某些细胞进行编辑，但这并不代表我们可以轻而易举地对整个人体进行编辑。因为把蛋白质递送到人体所有的细胞里，是非常困难的事情。 ^41521572-18-2527-2616\n    - ⏱ 2021-11-26 14:40:27\n\n## 2 基因编辑人类，一个需要严肃讨论的话题\n\n- 📌 人类优化论”是很危险的命题，是当年希特勒“人种优化”理论的基础，说白了就是“人种论”。这相当于一个人成了造物主，以人的自我意志定义世界的好与坏，定义基因的好与坏，不携带某种基因型的人在他的认知体系里就是劣等人 ^41521572-19-6836-6940\n    - ⏱ 2021-11-26 15:40:31\n- 📌 所谓可遗传基因编辑，即我如果改变的是配子细胞，也就是精子、卵子，或是早期胚胎，那么这个孩子将来的精子或卵子也会发生变化，其下一代也是被基因编辑过的。所以基因编辑改变的不是一个人，包括子子孙孙。 ^41521572-19-8226-8322\n    - ⏱ 2021-11-26 15:47:40\n- 📌 另一类基因变异是不可遗传的。以镰状细胞贫血为例，把自己的造血干细胞取出来，修改好，移植回自己的身体。这种做法目前并没有太大争议 ^41521572-19-8351-8414\n    - ⏱ 2021-11-26 15:47:56\n\n## 3 未来生命轨迹，是自然进化还是人为干预？\n\n- 📌 必须一再强调的是，所谓基因编辑的风险、顾虑，更多的是针对可遗传基因编辑。 ^41521572-20-4940-4976\n    - ⏱ 2021-11-26 16:04:22\n\n## 第五章 粪菌移植\n\n- 📌 其实早在1958年，美国就有一个“粪菌移植”案例。当时美国有一种名叫“假膜性小肠结肠炎”的消化道疾病，死亡率高达75%。美国科罗拉多大学医学院的一个外科医生对4名患者采用抗生素、氢化可的松、益生菌等治疗手段后，患者仍腹泻严重，甚至出现休克。无奈之下，医生最终和患者及家属商议，用患者家属的粪水对患者进行灌肠。结果，其中3名患者在几天之内奇迹般地康复出院。这个早期的“粪菌移植”治疗方案，就是通过调整患者肠道中的菌群健康状态来治疗疾病。 ^41521572-21-895-1112\n    - ⏱ 2021-11-26 16:13:29\n\n## 1 肠道菌群不只是肠道的事\n\n- 📌 经过十几年的研究，我们发现全球的人的肠道菌群的总体相似度达到80%以上。从基因层面来看，这就说明我们肠道里面携带的是不同功能的基因，相似度也很高。不管你来自哪个地区，是什么人种，人类之间的相似度非常高。 ^41521572-22-1127-1235\n    - ⏱ 2021-11-26 16:19:11\n- 📌 从医学角度讲，整个方案叫作“粪菌移植”，是一种组织移植的概念，跟输血一样。输血就是把正常人的红细胞输送到病人的体内，达到治病救人的目的。粪菌移植就是把正常人体内的肠道菌群，移植到病人的体内，达到治病的效果。 ^41521572-22-3469-3572\n    - ⏱ 2021-11-26 17:03:16\n\n## 3 肠道菌群和你的生活息息相关\n\n- 📌 事实上人的进化速度慢于科技进步的速度。比如，很多年前大家都吃不饱，到了现在食物供给很充足，反而导致糖尿病这类疾病高发 ^41521572-24-1166-1224\n    - ⏱ 2021-11-26 17:21:01\n\n## 1 机械骨骼的“合理化分工”\n\n- 📌 机械上肢是靠什么来操作手指的运动呢？ ^41521572-26-1445-1463\n    - ⏱ 2021-11-27 20:44:12\n- 📌 肌电信号来控制假肢的动作。另外脑电波信号的控制现在也发展得很快。利用肌电信号的话，要经过一段时间的训练，因为肌肉收缩后才会产生电，用这个信号来控制肢体的动作。 ^41521572-26-1587-1666\n    - ⏱ 2021-11-27 20:44:18\n\n## 1 替我打架的机器人\n\n- 📌 有两种姿态同步技术可以对机器人进行肢体语言控制。第一种叫作人偶体感控制器，它的使用人群比较广泛，不管是男生、女生，还是大人、小孩都可以操作，比较容易上手。第二种叫作运动体感控制器，会比较复杂一点，需要穿戴在身上，对穿戴者肢体的空间位置进行捕捉，捕捉完之后形成解耦算法[插图]。解耦算法在系统中运算，最后反映到机器人的身体里进行表达。实际上两种系统有同一个目的，就是让人的肢体语言更形象化、更直观一点，在机器人的运动系统上快速表达。 ^41521572-30-1374-1793\n    - ⏱ 2021-11-27 21:00:48\n\n## 3 机器人的未来\n\n- 📌 机器人其实只是一个技术集成名词，它是一种技术，像互联网一样。看你用它做在线教育还是社交，是这种问题。 ^41521572-32-734-784\n    - ⏱ 2021-11-27 21:11:09\n\n## 第八章 细胞治疗\n\n- 📌 这个词的官方释义是，利用患者自体或异体的成体细胞，主要是干细胞，对组织、器官进行修复的治疗方法，广泛用于骨髓移植、晚期恶性疾病等。坦白说，就是拿细胞当药使。 ^41521572-33-595-673\n    - ⏱ 2021-11-27 21:15:42\n\n## 1 细胞治疗的两大“法宝”\n\n- 📌 我好奇的是，为什么单就这些细胞可以发挥作用？如果是我自己的细胞，为什么它原来在我的身体里不能当药使用，采集后做了改造，再打回去就能当药了？ ^41521572-34-1752-1821\n    - ⏱ 2021-11-27 21:18:28\n- 📌 为什么细胞能当药物使用，其实是因为你体内原有的细胞数量并不够。就如同有些营养素（比如维生素），既然人体自身也可以合成，为什么还需要体外补充呢，是因为合成得不够，细胞治疗也是这个道理。 ^41521572-34-2492-2583\n    - ⏱ 2021-11-27 21:18:40\n- 📌 免疫治疗，这不光是细胞的问题。我前面也提到，癌细胞是一种外源的东西，理论上讲，它一出现就应该被我们的T细胞除掉，但是并没有。因为癌细胞非常狡猾，善于伪装。癌细胞会向体细胞显示一种叫PD-L1[插图]的分子，相当于什么呢？一个坏蛋拿到了“好人卡”，向T细胞传递了一个信息——“其实我是一个好人”，然后免疫细胞就被“骗”了，癌细胞就这样蒙混过关了。 ^41521572-34-4506-4780\n    - ⏱ 2021-11-27 21:25:41\n- 📌 谨慎一点肯定是好的，很多人并不从事科研工作，他们不会像科学家一样有足够的时间和精力查阅文献，他们会把我说的话当真。即便我讲话足够字斟句酌，也并不是百分之百正确。很多事情你必须在看到真实的官方数据后，才能够相信。 ^41521572-34-6023-6128\n    - ⏱ 2021-11-27 21:27:38\n- 📌 真正严谨的科学家会说“有多少人使用过，有多少内容是有效数据”，成功是有一定概率的。但在生活里，我们经常会犯一个认知上的错误，容易把个例当成真理，比如“某某用过这个，特别有效，药到病除了”。信服度似乎特别高，然后一些人被“忽悠”着在美容方面交的“智商税”就尤其多了，比如干细胞美容——在面部注入干细胞，令你容光焕发。 ^41521572-34-6534-6691\n    - ⏱ 2021-11-27 21:29:22\n\n## 2 那些年为细胞治疗缴的“智商税”\n\n- 📌 从科学的角度来说，如何判断一个东西是否有效？首先是指出它的原理，到底是什么样的机制使它变得切实可行。其次需要有临床试验数据的支撑，反复研究，以及发表被科学界承认的成果。 ^41521572-35-454-538\n    - ⏱ 2021-11-29 10:19:34\n- 📌 其实保健品一事没有绝对的判断方法。首先它是无害的，如果有害的话，国家肯定会明令禁止。至于是否真的有效，只能说不好判断。药物的话就简单了，药到病除，就是它的效果。关于药物使用，每个国家都会基于非常严格的临床实验数据，才允许其投放市场进行销售。 ^41521572-35-1717-1837\n    - ⏱ 2021-11-29 10:21:44\n- 📌 曾经有这样一个实验，两拨患者中一拨人服用药物，另一拨人吃糖水或是营养素之类的东西，但他们都以为自己吃的是实验用药。结果发现，喝糖水也有一定的正向作用，甚至比不吃药的人好得多，这就是典型的安慰剂效应。 ^41521572-35-2170-2269\n    - ⏱ 2021-11-29 10:22:20\n\n## 第九章 大脑探秘\n\n- 📌 首先，从器官的层面来看，大脑是通过大脑皮层、间脑、小脑、脑干等部位的分工协调来运作并发挥控制功能。比如，脑干负责控制呼吸、血压、心跳等基本生理活动；而小脑就控制平衡；大脑皮层由额叶、顶叶、颞叶和枕叶四部分构成，主要具有控制性格、学习、记忆等高级心理功能。 ^41521572-37-575-702\n    - ⏱ 2021-11-29 11:10:15\n\n## 1 记忆与学习密不可分的本质联系\n\n- 📌 什么是学习？毫无疑问，学习有很多种，经典的分类方式有联合型学习[插图]和非联合型学习[插图]。巴甫洛夫的狗这一实验把铃铛的声音和喂食联系在一起，就是一个联合型学习的例子；斯金纳的鸽子也是类似的，就是让鸽子意识到自己在箱子里做出什么样的动作能够获得食物，相当于把自己的动作和某种结果联系在一起。那所谓的非联合型学习呢，比如习惯等。古话说，“入鲍鱼之肆，久而不知其臭”，这句话所描述的对臭味的习惯，也是一种学习。还有一种特别经典的分类——社会型学习，即人的学习有所谓的模仿成分，看到别人在干什么，就跟着学。所以，学习的方式有很多种，其本质就是行为受到了经验的影响。我们可能本来会有某种形式的行为输出，但是因为过往经验的影响，在面对同样刺激的时候，我们的行为输出方式发生了变化，这也可以被认为是一种学习的过程。综上，所谓记忆，就是学习过程发生之后的结果，如果能长久存在，我们就认为它是一种记忆。 ^41521572-38-741-1461\n    - ⏱ 2021-11-29 11:13:19\n- 📌 一般我们会以阶段把记忆分成两类，一个叫短期记忆，一个叫长期记忆。很多人都知道这一组概念，但是二者其实可以再细分。换言之，短期记忆和长期记忆是最重要的。 ^41521572-38-1784-1859\n    - ⏱ 2021-11-29 11:15:11\n- 📌 我们可以认为，一个经验如果想影响我们的行为，那么有三个阶段。首先，要出现学习的过程，即大脑意识到这个经验要以某种方式改变我们的行为。其次，改变发生之后，它会在我们的大脑中的一个很短的时间窗口内持续存在，那我们认为这是短期记忆。最后，如果它能够被反复提及，让大脑认为其是具有长久价值的，从而得以保留，才会形成所谓的长期记忆。 ^41521572-38-2592-2753\n    - ⏱ 2021-11-29 11:18:20\n\n## 2 记住还是遗忘，都是大脑在“暗中作祟”\n\n- 📌 所以，我们认为这个阶段的遗忘是被动发生的。也就是说，只要你没有强化这一信息，它就逐渐消失了。咱们再回到巴甫洛夫的狗这个例子中，一旦狗主人在喂狗食物时不再摇铃，那么在狗的大脑中，铃铛与食物之间的联系会慢慢变弱，甚至消失。那可想而知，这个机制是具有保护性的，因为如果时过境迁，你却还记得原来的处理方式，这其实是很危险的一件事情 ^41521572-39-1381-1542\n    - ⏱ 2021-11-29 11:28:36\n- 📌 有一个普遍的误解是，大家认为长期记忆存在于海马区，但现在基本可以肯定的是，长期记忆并不存在于海马区。 ^41521572-39-2962-3012\n    - ⏱ 2021-11-29 11:29:46\n\n## 3 近未来人类大脑的学习进化、记忆操控\n\n- 📌 人的小数据学习机制是怎么产生的，我们至今并不完全知道，可以猜想的是，人脑一定有一个机制，能够摄取比较丰富的感觉输入，比如人脑在猫这个物种中提取到一些关键性信息——都有毛、尖耳朵、长尾巴，叫声是喵喵喵，然后人脑认为这样的就是“猫”。但是大脑到底是怎么做这件事儿的，其实我们并不知道；为什么大脑关注的是这些特征，而不是猫的颜色（每只猫的颜色可能都不一样）。为什么大脑关注的不是猫所处的位置？为什么不是猫背后那块地毯的颜色？其实到今天我们也并不是特别清楚。这可能也是机器学习未来想模仿人脑的一个比较大的障碍，因为我们现在并不知道在极其有限的数据集存在的时候，人脑到底是怎么如此高效学习的。 ^41521572-40-3288-3579\n    - ⏱ 2021-11-29 15:57:20\n- 📌 要想增强学习的效率，还有一个方法，就是提升你对一个东西的注意力，让你的注意力更集中、更持久、更强。 ^41521572-40-5865-5914\n    - ⏱ 2021-11-29 16:07:07\n- 📌 多动症本身就是一种注意力缺陷，也叫注意力缺失症 ^41521572-40-5944-5967\n    - ⏱ 2021-11-29 16:07:20\n\n## 1 混合现实，一项“难辨真假”的技术\n\n- 📌 虚拟现实是体验世界，混合现实则是融入世界 ^41521572-42-455-475\n    - ⏱ 2021-11-29 16:20:41\n- 📌 混合现实与虚拟现实最大的不同在于，前者是在现实世界中叠加一些虚拟的物品，从而呈现一种全新的视觉体验。 ^41521572-42-2152-2202\n    - ⏱ 2021-11-29 16:26:25\n- 📌 想象一下，当你戴上一副眼镜，手一挥，一个虚拟的手机屏幕出现在空中。同理，如果你要使用电脑，在空中一点，就会出现虚拟的屏幕、键盘，然后就可以直接办公。这在未来是真正的一个开放式创新应用。换句话说，一切电子信息的获取来源，都可以选择，它不占用你的视野，戴上它以后你仍然可以去户外活动。但虚拟现实做不到这点，戴上虚拟现实设备以后，你只能在密闭空间里使用，去户外会受限制。 ^41521572-42-2396-2578\n    - ⏱ 2021-11-29 16:27:37\n- 📌 我们日常生活中使用的眼镜，最大的面积就是镜片部分，我们一直在研究一种新技术，让镜片不仅有显示功能，还能计算，这是一个新的技术方向，叫光计算。但镜片的主要材质是玻璃，我们的所有计算都发生在CPU上，也就是硅（玻璃的主要成分是二氧化硅），那要如何完成计算呢？需要通过光的方式计算。现在已经有人在研究光计算跟人工智能结合的技术了，未来镜片不仅具备显示功能，也是一个CPU。 ^41521572-42-6941-7124\n    - ⏱ 2021-11-29 16:33:21\n\n# 读书笔记\n\n## 2 记住还是遗忘，都是大脑在“暗中作祟”\n\n### 划线评论\n\n- 📌 被动的意思是，我们现在认为当一段记忆还只是短期记忆的时候，它需要被反复唤醒，才能继续存在于短期记忆的存储区域 ^16142247-7vaF6AKds\n    - 💭 怎么有点像V8 的垃圾回收机制\n    - ⏱ 2021-11-29 11:27:33\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E8%87%AA%E9%A1%B6%E4%B9%8B%E4%B8%8B%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84":{"title":"中国政府自顶之下是如何执行的","content":"\n# 中国政府自顶之下是如何执行的\n\n![图1-1　中华人民共和国行政区划（2018年）](https://res.weread.qq.com/wrepub/epub_40055543_4)\n\n中国共产党对政府的绝对领导是政治生活的主题。党负责人事任免和重大决策，政府负责执行，但二者在组织上紧密交织，人员上高度重叠，很难严格区分。毛主席说过:\"两个积极性胜过一个积极性\"，所以要在遵循中央的统一领导下，统一发挥地方的主动性和积极性。\n\n我国政治体系的一个鲜明特点是“层层复制”：中央的主要政治架构，即党委、政府、人大、政协等，省、市、县三级都完全复制，即所谓“四套班子”。这种从上到下的部门垂直关系，被称为“条条”，而横向的以行政区划为界的政府，被称为“块块”。大多数地方部门都要同时接受“条条”和“块块”的双重领导。通常情况下，“条条”关系是业务关系，“块块”关系才是领导关系，因为地方党委和政府可以决定人事任免。\n\n四套班子对应的级别分别是 国家级、省部级、厅局级、县处级以及乡科级\n\n### 行政区域划分影响因素\n\n1. 人口因素。我国幅员辽阔，但人口分布极为不平衡\n2. 地理条件。古代交通不便，山川河流也就成了行政管理的自然边界。\n3. 语言文化差异。汉语的方言间有差异，汉语与少数民族语言也有差异。若语言不通，政务管理或公共服务可能就需要差异化，成本会因此增加，规模收益降低，从而影响行政区域划分。\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E5%9B%BD%E7%BB%8F%E6%B5%8E":{"title":"中国经济","content":"\n收入构成：一般公共预算、土地财政卖地收入、持有企业股票  \n支出：\n\n芜湖起飞：  \n隐患：所有的资产都是地方政府的划拨，他的信用和政府一样，但是在法律上的划分却不是政府。所以，权责出现了不一致\n\n隐性债和显性债的压力大概一致\n\n地方政府喜欢中央接手地方债  \n中央希望分类\n\n- 公益类的，转成低利率的债\n- 该破产破产该清算清算\n\n本质不是还债的问题，而是不能通过借债推动经济的发展\n\n三个增长模型\n\n- 集中力量办大事\n- 创新性\n\n转型的号角\n\n- 不把人当资源而是当人来看\n- 让重点投资有保障\n- 让经济的波动延续不那么久\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E5%9B%BE%E6%B3%95":{"title":"中图法","content":"\n# 中图法\n\n《中图法》按照毛泽东的知识分类观点将人类全部知识分成了五大基本部类，即马克思主义、列宁主义、毛泽东思想；哲学；社会科学；自然科学；综合性图书。在这五大基本部类的基础上，《中图法》将社会科学和自然科学进一步拆分，形成了 22 个基本大类。\n\n- A [马克思主义、列宁主义、毛泽东思想、邓小平理论](http://www.ztflh.com/?c=2)\n- B[哲学、宗教](http://www.ztflh.com/?c=141)\n- C[社会科学总论](http://www.ztflh.com/?c=896)\n- D[政治、法律](http://www.ztflh.com/?c=1110)\n- E[军事](http://www.ztflh.com/?c=2235)\n- F[经济](http://www.ztflh.com/?c=2666)\n- G[文化、科学、教育、体育](http://www.ztflh.com/?c=4237)\n- H[语言、文字](http://www.ztflh.com/?c=5668)\n- I[文学](http://www.ztflh.com/?c=6191)\n- J[艺术](http://www.ztflh.com/?c=6495)\n- K[历史、地理](http://www.ztflh.com/?c=7464)\n- N[自然科学总论](http://www.ztflh.com/?c=9484)\n- O[数理科学和化学](http://www.ztflh.com/?c=9580)\n- P[天文学、地球科学](http://www.ztflh.com/?c=11634)\n- Q[生物科学](http://www.ztflh.com/?c=13945)\n- R[医药、卫生](http://www.ztflh.com/?c=17417)\n- S[农业科学](http://www.ztflh.com/?c=21152)\n- T[工业技术](http://www.ztflh.com/?c=25844)\n- U[交通运输](http://www.ztflh.com/?c=40585)\n- V[航空、航天](http://www.ztflh.com/?c=44097)\n- X[环境科学、安全科学](http://www.ztflh.com/?c=45419)\n- Z[综合性图书](http://www.ztflh.com/?c=45735)\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%AD%E8%8A%AF%E5%9B%BD%E9%99%85":{"title":"中芯国际","content":"\n## 参考资料\n\n- [追忆中芯国际董事长江上舟](https://www.eet-china.com/mp/a232813.html)\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8-62-%E8%BF%9B%E5%88%B6%E8%80%8C%E4%B8%8D%E6%98%AF-64-%E8%BF%9B%E5%88%B6":{"title":"为什么用 62 进制而不是 64 进制","content":"\n62进制转换是因为62进制转换后只含数字+小写+大写字母。而64进制转换会含有`/`,`+`这样的符号（不符合正常URL的字符）\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%E7%AC%94%E8%AE%B0":{"title":"为什么要做笔记","content":"\n这还凸显了平时多保留相关材料、多记录自己想法的重要性。否则，将来你想建个聊天机器人留给亲人，都找不到训练材料。\n\n就像你从来不会去问为什么要去各地旅游会拍照留念一样，这些照片都是为了记录你当下的情景，用来回忆，用来增援未来。\n\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%86%E4%BA%AB":{"title":"为什么要分享","content":"\n分享是一种利他的思维，这个世界不全是[[零和游戏]]，分享你所掌握的知识和别人共同成长是一种做大蛋糕的行为。\n\n而且分享其实最大的益处是自己\n\n首先，[[费曼学习法]]里讲的，能把一个知识点讲给 10 岁的孩童，并让他听懂，才能说明你真正的懂得了这个知识点。\n\n其次，你在整理分享内容的时候，是对你零散的知识点的一次结构化梳理，你可以在新的一次阅读中巩固自己对知识的理解，并可能会产生新的点子，丰富自己的知识库。\n\n第三，分享可以锻炼自己的写作和演讲能力，这两个能力可以说是人的基础但又十分重要的能力，锻炼好了对未来有很大的帮助。\n\n最后，分享观点才会和别人产生交集，避免闭门造车。也能拥有更多的人脉，链接等同于你对于别人的价值。\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AF%BB%E4%B9%A6":{"title":"为什么要读书","content":"\n# 为什么要读书\n\n我这一年读了不少书，边读边忘，我在想读书的意义在哪里。  \n\n我怀疑是我记笔记的方式存在问题，我去从[[有道云笔记]]，[[Typora]] 折腾到一圈 [[Notion]]，[[简悦]]，[[Obsidian]]，思考了很多关于记笔记的问题，了解到了如何使用标签分类，卡片笔记法是怎样的，\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%BB%E4%B9%A6%E6%97%A0%E7%94%A8":{"title":"为什么读书无用","content":"\n至少对于非小说书籍来说，有一个隐形的基础假设：人们通过阅读句子来吸收知识。这样一个想法如此无形地定义了媒介，以至于很难不认为这是理所当然的，这是一种耻辱，因为正如我们将看到的，这是完全错误的。\n\n想象一些严肃的非小说类书籍。[[思考，快与慢]]；[[枪炮、病菌与钢铁：人类社会的命运（修订版）]]；你有没有这样的经历——你读过一本这样的书——在谈话中出现，却发现你只吸收了几句话？老实说：这种事经常发生在我身上。通常事情一开始都很顺利。我会觉得我可以勾画出基本的主张，画出表面；但当有人问出一个基本的探究性问题时，这座大厦就会立即倒塌。有时这是一个记忆问题：我根本记不起相关细节。但正如我所理解的那样，我经常会意识到我从未真正理解过这个想法，尽管当我读这本书时我肯定认为我理解了。事实上，我会意识到直到那一刻我才注意到自己吸收的东西有多么少。\n\n大多数读者吸收了一些东西，无论多么难以形容：观点、思维方式、规范、灵感等等。事实上，对于许多书籍（尤其是大多数小说）来说，这些效果就是重点。\n\n但就非小说类书籍而言，作为一种媒介，书籍在传达知识方面出奇地糟糕，而读者大多没有意识到这一点。\n\n当然，是有人从书本上学习到知识点的。这是因为他们拥有一种[[元认知]]，而这是很多成年人缺乏的。\n\n更糟糕的是，即使读者知道[[元认知]]，但这个过程是极为费力的，读者必须兼顾书籍中的内容和这些原问题，人们不擅长这种多进程的处理。\n\n## 教科书\n\n教科书通常是围绕明确的认知模型构建的。例如，他们经常交替进行介绍概念的解释和促使学生以特定方式思考这些概念的练习。\n\n但为什么人们还是难以从教科书吸引可靠的知识？\n\n课程使用教科书的做法值得注意。许多人花费额外的时间和金钱报名这些课程,而不是仅仅自学教科书。课程提供了某些额外的重要学习内容，这说明教科书不是学习的全部,课程设置也会影响人们的学习方式。\n\n教科书确实有明确的认知模型：它们支持通过练习和讨论问题等方式参与概念。然而，大部分元认知负担仍然由读者承担。\n\n## 该怎么学习\n\n面对这样的难题，值得一问的是：**我们爬对了山吗？我们为什么要爬这座特别的山？**\n\n让我们重新思考一下这个问题。我们可以问：我们如何设计既能完成非小说类书籍的工作，又能真正可靠地工作的媒介，而不是“我们如何才能让书籍真正可靠地工作”？\n\n我们可以通过自己去设计媒介的方式\n\n- 如果您刚刚接触了一大堆新术语，您可能不会从同时使用许多这些术语的句子中吸收太多内容。因此，也许“理解某件事所必需的”部分是，它的大部分先决条件必须不仅是熟悉的，而且是流利的，编码在长期记忆中。\n- 为了帮助人们将更多内容编码到长期记忆中，我们可以借鉴认知科学的另一个强大的想法：间隔重复。[[Anki]]\n\n## 参考资料\n\n- [Why books donʼt work | Andy Matuschak](https://andymatuschak.org/books/)\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88-hooks-%E4%B8%8D%E8%83%BD%E5%86%99%E5%9C%A8%E9%A1%B6%E5%B1%82%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5%E4%B8%AD":{"title":"为什么 hooks 不能写在顶层条件语句中","content":"\n在 React 中，Hook 不能写在顶层条件语句中的原因是，React 依赖于 Hook 的调用顺序来确定组件的 state 和效果的正确性。\n\nHook 必须按照固定的顺序被调用，以确保 React 能够正确地追踪每个 Hook 的状态。如果将 Hook 放置在条件语句中，那么在条件切换时，Hook 的调用顺序可能会发生变化，导致 React 无法正确地跟踪和更新状态。\n\n此外，Hook 还依赖于组件的渲染次数。如果 Hook 在条件语句中被调用多次，React 无法保证每次调用都能得到相同的 Hook 实例，从而可能导致状态丢失或混乱的问题。\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B8%BA%E4%BB%80%E4%B9%88useEffect-%E4%B8%8D%E8%83%BD%E6%B7%BB%E5%8A%A0%E6%9D%A1%E4%BB%B6":{"title":"为什么useEffect 不能添加条件","content":"\n`useEffect`不能直接添加条件是因为`useEffect`的执行是在每次渲染完成后都会执行一次，而不是根据条件来决定是否执行。这是因为`useEffect`的目的是为了处理副作用，而不是根据条件来决定是否执行。\n\n如果想要根据条件来决定是否执行`useEffect`，可以在`useEffect`内部根据条件来进行处理。可以使用`if`语句或者其他条件判断逻辑来决定是否执行副作用代码。\n\n\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%8C%E9%B8%A6%E6%82%96%E8%AE%BA":{"title":"乌鸦悖论","content":"\n# 乌鸦悖论\n\n#卡片/术语卡\n\n## 简介\n\n为了说明亨普尔的乌鸦悖论，假设你我都是天文学家，我们的主要研究项目就是收集类星体的信息。在这里，我要简要介绍一下背景知识：类星体是相对较新的发现，首次被发现是在大约 40 年前，即使经过了 40 年的研究，人们对类星体仍然知之甚少（尽管近期出现了一些关于类星体的理论，它们很有趣而且相当合理）。无论如何，关于类星体的一些基本事实是，它们似乎释放出巨大能量，而且看起来都在距离地球非常遥远的地方。\n\n最初被探测到的几个类星体都在距离地球十分遥远的地方，而我们所感兴趣的是，是不是所有类星体都在距离地球十分遥远的地方。一年又一年，我们（以及其他天文学家）持续发现更多类星体，并且注意到所发现的每一颗类星体都在距离地球十分遥远的地方。到目前为止，一切都很好。我们所面对的似乎是一个非常常见的情形，也就是我们的观察结果为“所有类星体都距离地球十分遥远”的观点提供了归纳支撑。  \n以“所有类星体都距离地球十分遥远”的观点为例，像这样的概括性观点，从逻辑上说，与其逆反命题是等价的：\n\n- 所有类星体都在距离地球十分遥远的地方。\n- 所有距离地球不遥远的物体都不是类星体。\n\n困惑的核心此时就出现了：只要我们得到了一个可以支撑观点（2）的观察结果，那么似乎这个结果肯定也同等地支撑了观点（1）。\n\n亨普尔的乌鸦悖论并没有构成实际问题，因此，它通常并不是一个会影响科学研究发展的问题。然而毫无疑问，归纳推理可以支持像“所有类星体距离地球都十分遥远”一类的概述性观点，这是科学的重要组成部分。同时，亨普尔的乌鸦悖论意味着像这样的推理，其本质中存在某些让人深感困惑之处。\n\n## 例子：\n\n举个例子，在你手里的这本书是一个距离地球并不遥远的物体，所以不是一个类星体，所以对这本书的观察结果就支撑了观点（2）。基于前一段提到过的原因，这个观察结果应该同等地支撑观点（1）。然而，这个想法似乎有点疯狂，显然对于手里这本书的观察结果微不足道，对确认关于类星体的重要科学论断并不能起到什么作用。\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%94%E5%93%88%E9%87%8C%E7%AA%97%E6%A0%BC":{"title":"乔哈里窗格","content":"\n# 乔哈里窗格\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615145621.png)  \n\n不能一下子抛出进攻区的内容，用共识区推导出进攻区\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%94%E6%B2%BB%E5%A5%A5%E5%A8%81%E5%B0%94":{"title":"乔治·奥威尔","content":"\n# 乔治·奥威尔\n\n生卒年日：1903 年 6 月 25 日－1950 年 1 月 21 日  \n传世之作：[[《 动物庄园 》]]、[[《一九八四》]] 1985 以后才解禁\n\n乔治·奥威尔在 1948 年写作[[《一九八四》]]之前，在英国是一个贫病交迫、没有多大名气的作家。[[《一九八四》]]虽在他 1950 年患肺病去世前不久出版，但他已看不到它后来在文坛引起的轰动为他带来的荣誉了：不仅是作为一个独具风格的小说家，而且是作为一个颇有远见卓识的政治预言家。  \n首先必须指出，**奥威尔不是一般概念中的所谓反共作家，[[《一九八四》]]也不是简单的所谓反苏作品。**  \n奥威尔**反极权主义斗争**是他对社会主义的坚定信念的必然结果。他相信，只有击败极权主义，社会主义才有可能胜利，因此揭露极权主义的危害，向世人敲起警钟，让大家都看到它的危害性——对伦理的破坏，对思想的控制，对自由的剥夺，对人性的扼杀，对历史的捏造和篡改……——是何等的重要。\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%96%E6%91%B8%E6%91%B8%E5%A4%B4":{"title":"《 乖，摸摸头 》","content":"\n# 《 乖，摸摸头 》\n\n# 元数据\n\n\u003e [!abstract] 乖，摸摸头\n\u003e - ![ 乖，摸摸头|200](https://weread-1258476243.file.myqcloud.com/weread/cover/42/YueWen_446536/t7_YueWen_446536.jpg)\n\u003e - 书名： 乖，摸摸头\n\u003e - 作者： 大冰\n\u003e - 简介： 真实的故事自有万钧之力.《乖，摸摸头》讲述了12个真实的传奇故事,或许会让你看到那些你永远无法去体会的生活 ,见识那些可能你永远都无法结交的人.《乖，摸摸头》一书记录了大冰十余年的江湖游历，以及他和他朋友们的爱与温暖的传奇故事。这些故事与风花雪月无关，与鸡汤小清新无关，有的是无畏的奋斗和孤身的寻找，有的是疯狂的爱情和极致的浪漫……12个故事，12种善意，如点点星光与烛火，给所有心怀希望的人们以温暖和光芒。 请相信，这个世界上真的有人在过着你想要的生活。忽晴忽雨的江湖，祝你有梦为马，随处可栖。\n\u003e - 出版时间 2014-09-01 00:00:00\n\u003e - ISBN： 9787540468798\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 湖南文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n大冰的江湖、心生向往  \n ^16142247-6U6TnNUSK  \n⏱ 2017-10-10 21:36:31\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%9D%E5%B7%9E%E5%88%BA%E5%AE%A2%E7%8E%8B%E6%9C%9D%E8%91%B5":{"title":"《 九州·刺客王朝·葵 》","content":"\n# 《 九州·刺客王朝·葵 》\n\n# 元数据\n\n\u003e [!abstract] 九州·刺客王朝·葵\n\u003e - ![ 九州·刺客王朝·葵|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/348/933348/t7_933348.jpg)\n\u003e - 书名： 九州·刺客王朝·葵\n\u003e - 作者： 江南\n\u003e - 简介： 内心单纯而孤独的少年杀手在潜伏的过程中爱上了身世复杂的花魁，而花魁却徘徊在利用她作棋子的丈夫和杀手之间不能确定心意。乱世中的三人被不同的势力牵引，在利益与爱恨中艰难地抉择着。\n\u003e\n\u003e - 出版时间 2009-12-01 00:00:00\n\u003e - ISBN： 9787801739629\n\u003e - 分类： 精品小说-玄幻精品\n\u003e - 出版社： 国际文化出版公司\n\n# 高亮划线\n\n## 葵花白发抄\n\n- 📌 外面走廊上人声渐渐远去了，天女葵扣上门，转过身来，神色已经变了，不再是懒洋洋的，眉锋里有一缕锐气。“你找我有事说？”易小冉的声音也冷了下来。“借着这个机会出头露脸显示身手？”天女葵淡淡地说，“太张扬了吧？就算你想引起天罗的注意，也还有别的办法。如果今天不是平临君顾西园，而换作桂城君魏长亭的手下，只怕我们就没那么好收场了。”“紫陌寂静春山冷，平临从容桂城凶。这个我知道的，我猜平临君就不会因为这个发怒，他是商人出身，凡事不做绝。”易小冉一仰头。“你倒是把四大公子的秉性都摸清了啊，难怪苏大人那么看重你。”天女葵笑笑。易小冉拍拍自己的脖子：“提着脑袋来博出人头地，当然要十二分的用心！” ^933348-2-54195\n    - ⏱ 2019-02-15 17:34:16\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%A6%E5%8D%95":{"title":"经典书籍","content":"\n# 经典书籍\n\n他们都是讲原理的书籍，读 1 本，好过讲经验书籍 1000 本。\n\n1. 《实践理性批判》\n2. 《系统之美》\n3. 《第一哲学原理》\n\n## 哲学\n\n### 入门\n\n不是照搬流派和历史，而是告诉你：哲学的发展是要回答什么问题？关于这些问题，历来的哲学家们做出过什么努力？分别有了哪些进展？\n\n1. 《大问题》\n2. 《哲学的门槛》\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%B0%E5%85%A5%E7%9A%84%E6%A0%B9%E6%8D%AE":{"title":"买入的根据","content":"\n当一个热点出来的时候，可以买入一部分，但是要想象到利润的存在再大规模买入\n\n","lastmodified":"2023-09-18T14:54:47.498454266Z","tags":null},"/%E4%B9%B0%E6%88%BF":{"title":"逾期案例","content":"\n# 逾期案例\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211210101702.png)\n\n# 计算\n\n彩虹轩 28100/m² 89 平最低首付 75W 上次社保排序无  \n时代天镜 高层 23000 小高层 22000 98 平最低首付 64.68W 128 平 84.48W 社保排序无房 57 个月 有房 63 个月\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%B9%B3%E8%83%B6%E6%BC%86":{"title":"乳胶漆","content":"\n## 迷瞪\n\n线上用来对比价格，线下买更便宜\n\n所有游离甲醛和苯都未检出\n\n销售说国标比欧美有些标准差出去十倍，都是偷换概念。  \n像法国 A+标准，芬兰 M1 标准，美国绿色卫士标准都是在标准房间或者气候箱里刷乳胶漆，经过将近一个月的挥发和换气，检查甲醛含量。\n\n甲醛含量和乳胶漆其实关系不大，主要是老工艺的腻子（不是现在的成品腻子\n\n### 漆膜放气测试\n\n不能抵抗墙面裂缝导致的开裂\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230514102125.png)\n\n### 防水抗污能力\n\n1 能擦掉，0 不能  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230514102354.png)\n\n入门款和高端款在这功能还是有差距\n\n免漆要求，看标注是几等品  \n耐洗刷次数不小于 350 次可标合格品，次数不小于 1500 次可标注一等品，6000 以上是优等品\n\n是建议国标，不是强制标注\n\n很多高价漆电商挂高价，分销经销商赚利润，所以装修公司推荐高价漆\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98%E6%9C%BA%E5%88%B6":{"title":"事件委托机制","content":"\n# 事件委托机制\n\n事件通知机制很方便，可以随意控制触发的时机，也可以任意的地方监听或是触发。但前面也说过，事件机制的弊端也是很明显，就是每一个事件的触发对应一个或者多个监听，关系是一对多。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8":{"title":"事件驱动","content":"\n# 事件驱动\n\n## 什么是 事件驱动\n\n前端开发在实现功能的时候，会更倾向于使用事件驱动，这是因为受到 JavaScript 语言的设计和使用场景的影响。\n\n作为浏览器脚本语言，JavaScript 的主要用途是与用户互动、操作 DOM，实现页面 UI 和交互操作，属于 GUI（图形用户界面）编程。而 GUI 则是基于事件 I/O 模式的编程方式。\n\n### GUI 与事件\n\nGUI 应用程序注重与用户的交互，大部分的程序执行需要等到用户的交互动作发生之后，所以 GUI 程序的执行取决于与用户的实时交互情况。\n\n然而，用户在访问程序期间，与程序进行交互的频率并不高。若不停轮询获取用户输入（类似 HTTP 短轮询），不仅资源利用率低，还无法做到真正的同步。因此，GUI 程序会将执行流程交由用户控制，当用户触发事件的时候进行响应，调用预先绑定好的代码来对事件进行处理。\n\n## 实例\n\n我们在写代码实现页面功能的时候，思路常常是这样的：\n\n1. 编写静态页面（HTML 和样式）；\n2. 在特定的元素上添加事件监听，监听用户交互（点击、输入、拖拽）等事件；\n3. 将事件绑定到对应的函数和处理逻辑，比如获取用户输入/应用状态、计算并更新状态等；\n4. 根据计算后的数据状态，更新相应的页面元素。\n\n通俗地说，事件驱动思维是从事件响应出发，来完成应用的设计和编程。这种编程方式实现起来既简单又清晰，所以很多开发者会选择（或是下意识地）使用事件驱动方式来写代码。\n\n## [[数据驱动]]和事件驱动的差异\n\n数据驱动和事件驱动的最大差异是开发的视角。\n\n1. 事件驱动会关注于“操作”和“响应”，基于流程实现编码。\n2. 数据驱动则会关注于“数据”和“数据的变化”，基于状态实现编码。\n\n## [[数据驱动]]和事件驱动的区别\n\n1. 数据驱动更容易将视图与逻辑解绑，能快速适应变更和调整。  \n   简单来说，基于数据模型设计的代码，即使经历了需求变更、页面结构调整、服务器接口调整，也可以快速地实现更新和支持。\n2. 事件驱动更倾向于流程式开发，数据驱动倾向于数据状态的变更和流动。\n\n事件驱动的方式相比于数据驱动，少了数据抽象设计的一部分，因此开发的时候可能很快就完成某个功能的实现。但从维护和拓展的角度来说，习惯数据驱动的方式，在遇到功能变更和迭代时可以更高效、更合理地进行调整。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%8C%E5%85%83%E8%AE%BA":{"title":"二元论","content":"\n二元论，就是认为世界有两个本源。柏拉图认为世界是由“理念的世界”和“现象的世界”所组成。“现象的世界”比较好理解，就是我们生活中看到的现实世界。但是在柏拉图看来，我们其实很难搞清楚在现实世界中，哪些是真的，哪些是幻象。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%8C%E5%85%AB%E5%AE%9A%E5%BE%8B":{"title":"二八定律","content":"\n# 二八定律\n\n**极少数事情所产生的威力，比绝大多数事情全部加起来的威力还大的规律**，**就是大名鼎鼎的 28 定律！！！**\n\n，**在数学、统计学上这种规律被严格的证明着，这就是大名鼎鼎的[[幂律法则]]。**\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B5%81%E9%AA%8C%E8%AF%81":{"title":"FileType. Json","content":"\n```js\nimport TYPEMAP from \"./filetype.json\";\n\nconst getHeaderValue = (value, n) =\u003e {\n\tconst arr = new Uint8Array(value);\n\tlet header = \"\";\n\tfor (let i = 0; i \u003c arr.length; i++) {\n\t\tconst v = arr[i].toString(16);\n\t\theader += v.length === 1 \u0026\u0026 v === \"0\" ? \"0\" + v : v;\n\t}\n\treturn header;\n};\n/**\n * file header get type\n * @param {*} value16\n * @param {*} change\n */\nconst handleFileType = (value16, change) =\u003e {\n\tlet header3 = value16.substring(0, 3 * 2),\n\t\theader4 = value16.substring(0, 4 * 2),\n\t\theader8 = value16.substring(0, 16 * 2);\n\tlet type = TYPEMAP[header4] || TYPEMAP[header3] || \"\";\n\tif (type === \"\") {\n\t\tfor (let key of Object.keys(TYPEMAP)) {\n\t\t\tlet arr = key.split(/\\{\\d+,\\d+\\}/, 2);\n\t\t\tif (!arr[1]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (header8.substring(0, arr[0].length) === arr[0]) {\n\t\t\t\tconst siteArr = key\n\t\t\t\t\t.match(/\\{(\\d+,\\d+)\\}/)[1]\n\t\t\t\t\t.split(\",\")\n\t\t\t\t\t.map((e) =\u003e e | 0);\n\t\t\t\tconst startSite = arr[1].length + siteArr[0] + 2;\n\t\t\t\tif (header8.substring(startSite, startSite + siteArr[1]) === arr[1]) {\n\t\t\t\t\ttype = TYPEMAP[key];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\tchange \u0026\u0026 change(type);\n};\n\n/**\n *  get file type\n * @param {*} blob\n * @param {(type: string) =\u003e void} change (type) =\u003e void\n * @returns Promise\u003c(type) =\u003e void\u003e\n */\nexport const getFileType = (blob, change) =\u003e {\n\tvar fileReader = new FileReader();\n\treturn new Promise((resolve, reject) =\u003e {\n\t\tfileReader.onloadend = function ({ target }) {\n\t\t\thandleFileType(getHeaderValue(target.result), (type) =\u003e {\n\t\t\t\tresolve(type);\n\t\t\t\tchange \u0026\u0026 change(type);\n\t\t\t});\n\t\t};\n\t\ttry {\n\t\t\tfileReader.readAsArrayBuffer(blob);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treject(error);\n\t\t}\n\t});\n};\n```\n\n# FileType. Json\n\n```json\n{\n\t\"47494638\": \"image/gif\",\n\t\"89504e47\": \"image/png\",\n\t\"ffd8ffe0\": \"image/jpeg\",\n\t\"ffd8ffe1\": \"image/jpeg\",\n\t\"ffd8ffe2\": \"image/jpeg\",\n\t\"ffd8ffe3\": \"image/jpeg\",\n\t\"ffd8ffe8\": \"image/jpeg\",\n\t\"52494646{8,4}5745\": \"image/webp\",\n\t\"52494646{8,4}4156\": \"video/avi\",\n\t\"464C56\": \"video/flv\",\n\t\"00000018\": \"video/mp4\",\n\t\"00000020\": \"video/mp4\",\n\t\"52494646,4143\": \"ani\",\n\t\"52494646,4344\": \"cda\",\n\t\"52494646,514c\": \"qcp\"\n}\n```\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%91%E8%BE%B9%E6%9C%89%E4%B8%AA%E5%B0%8F%E5%8D%96%E9%83%A8":{"title":"《 云边有个小卖部 》","content":"\n# 《 云边有个小卖部 》\n\n# 元数据\n\n\u003e [!abstract] 云边有个小卖部\n\u003e - ![ 云边有个小卖部|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/558/23233558/t7_23233558.jpg)\n\u003e - 书名： 云边有个小卖部\n\u003e - 作者： 张嘉佳\n\u003e - 简介： IP改编影视作品将于2023年和观众见面！敬请期待！  \n俞敏洪《在岁月中远行》单独撰文推荐！  \n张嘉佳全新作品。畅销千万现象级作品《从你的全世界路过》后，暌违五年，写给离开我们的人，写给陪伴我们的人，写给每个人心中的山和海。希望和悲伤，都是一缕光。总有一天，我们会再相遇。\n\u003e - 出版时间 2018-07-01 00:00:00\n\u003e - ISBN： 9787540487645\n\u003e - 分类： 精品小说-情感小说\n\u003e - 出版社： 湖南文艺出版社\n\n# 高亮划线\n\n## Chapter 5 城市多少盏灯\n\n- 📌 刘十三心急火燎，连续蹬脚，终于蹬到个啥，翻身而起。在一片惊呼声中，扶正头套的刘十三看看眼前，心情跌落谷底，他把领导蹬飞了。员工们集体搀扶领导，王阿姨扮的童女笑盈盈地继续载歌载舞，小伙子，让你能，看你能的，你咋不上天呢。领导挥挥手，阻拦试图替他拍灰尘的员工，宽容地笑：“年轻人嘛，就需要这种风风火火的精神！”领导当然气，气得不得了，想把玩偶里的人拉出来活埋。但他决定，不可以让群众觉得他跟一个玩偶计较。领导这个行为就很高级，很多明星做不到。明星产生矛盾，都隔空骂来骂去，今天你上头条回应，明天我上头条回应你的回应，一个说，她劈腿！一个说，他骗钱！两个人唰唰唰互相捅刀子，一开始大家还感兴趣，后来发现都捅不死，越捅越有钱，只能骂一句狗男女。 ^23233558-9-3987\n    - ⏱ 2018-10-10 12:33:34\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-737i7pn6b  \n⏱ 2018-10-12 23:56:24\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%92%E8%81%94%E7%BD%91":{"title":"互联网","content":"\n因为互联网的范围太广泛，至少可以分成三个行业，各自情况非常不同。\n\n\u003e （1）消费互联网：争夺消费者的时间和金钱，电商、直播都属于这一类。这个行业已经告别了增量时代，进入存量时代。\n\u003e\n\u003e （2）企业互联网：为企业服务，公有云和 SaaS 工具属于这一类。据我所知，它们过去一年都活得很不错。就算宏观经济不好，如果云服务可以帮企业省钱，企业还是愿意买的。\n\u003e\n\u003e （3）产业互联网：针对某个垂直产业的互联网应用，比如华为去年成立五大军团（煤矿军团、港口军团、光伏军团、公路军团等），就属于这一类。\n\n大家还是应该坚定信心，**互联网依然大有可为**。没有其他技术像它一样，再小的产品也能面向全世界用户，边际成本几乎为零。如果它不行了，其他行业恐怕更不行了。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%94%E8%A1%8C%E5%A4%A9":{"title":"《 五行天 》","content":"\n# 《 五行天 》\n\n# 元数据\n\n\u003e [!abstract] 五行天\n\u003e - ![ 五行天|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/973/743973/t7_743973.jpg)\n\u003e - 书名： 五行天\n\u003e - 作者： 方想\n\u003e - 简介： 　　万界融合，灵力消散，历经百万年的修真世界轰然崩塌，蛮荒大举入侵，五行天成为修真者最后的防线。  \n　　千年之后，来自旧土的卑微少年，以苦力之身，深入蛮荒三年，破格获得进入五行天深造的机会。  \n　　渴望掌握命运而一心追求变强的少年，带着野兽般的战斗本能，掀起一场华丽的风暴。\n\u003e - 出版时间\n\u003e - ISBN：\n\u003e - 分类： 男生小说-东方玄幻\n\u003e - 出版社：\n\n# 高亮划线\n\n## 出剑\n\n- 📌 “剑来！” ^743973-986-3265-3272\n    - ⏱ 2017-12-03 23:52:31\n\n# 读书笔记\n\n## 出剑\n\n### 划线评论\n\n- 📌 “剑来！” ^16142247-6Vrb06QDw\n    - 💭 致敬李淳罡吗！方大\n    - ⏱ 2017-12-03 23:52:31\n   \n\n# 本书评论\n\n## 书评 No.1\n\n烂尾这么多年真是习惯了 ^16142247-76cLXstsD  \n⏱ 2019-02-15 21:06:06\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%9A%E9%87%8C%E5%A3%AB%E5%A4%9A%E5%BE%B7":{"title":"亚里士多德","content":"\n亚里士多德于公元前384年生于古希腊文明边缘的马其顿，他的父亲是马其顿王的御医，因此他的生长环境优越。18岁时，亚里士多德被送到雅典的柏拉图学院学习，并且在此后的20年里，一直生活在学院里，直至老师柏拉图去世。亚里士多德受柏拉图很大影响，但他也发现柏拉图的主要学说和自己的想法存在分歧\n\n虽然学术观点不同，但他始终对老师柏拉图充满了敬意，并且留下了那句“吾爱吾师，吾尤爱真理”的名言。\n\n## 亚里士多德的世界观\n\n[[亚里士多德世界观]]\n\n## 几点成就\n\n### 教育\n\n柏拉图去世后，亚里士多德先在小亚细亚游历了几年，然后在公元前342年回到马其顿，成为当时马其顿王子的教师。这位王子，就是后来的亚历山大大帝。\n\n不过，亚里士多德和亚历山大大帝的政治观点并不相同。前者希望亚历山大将希腊城邦的民主制度传输到那些被征服的地区，尤其是波斯地区。但亚历山大大帝却更推崇东方的中央集权帝制。因此，公元前336年亚历山大大帝即位后，亚里士多德便回到了雅典，建立了自己的学院，一直到去世。亚里士多德讲课时有一个习惯，一边漫步于庭院和花园一边讲课，因此他的哲学也被称为“逍遥派哲学”。\n\n### 学术\n\n亚里士多德可以称得上是一个“百科全书式”的学者。他有多博学呢？亚里士多德研究了物理学，生物学。其中生物学，又包括了植物学、动物学、解剖学和胚胎学。除了物理和生物之外，亚里士多德还研究了天文学和地理学。其中，地理学又包括了地质学和气象学。在人文学科方面，他研究了美学、伦理学、政治学、哲学、心理学和神学。此外，亚里士多德还是逻辑学的开山鼻祖。\n\n### 哲学\n\n今天很多人喜欢把哲学简单地分为唯物的和唯心的，事实上，大部分哲学家的观点都会介于二者之间，或者试图兼并二者。准确地讲，我们只能说亚里士多德的哲学中唯物的部分多一些，相比之下，他的老师[[柏拉图]]唯心的成分多一些。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%9A%E9%87%8C%E5%A3%AB%E5%A4%9A%E5%BE%B7%E4%B8%96%E7%95%8C%E8%A7%82":{"title":"亚里士多德世界观","content":"\n# 亚里士多德世界观\n\n（1）地球位于宇宙中心。  \n（2）地球是静止的，也就是说，它既不围绕任何其他天体（比如太阳）运行，也不围绕自身轴线旋转。  \n（3）月亮、其他行星和太阳围绕地球运行，大约每 24 小时运行一圈。  \n（4）在月下区里，也就是地球和月球之间的区域（包括地球本身），有四种基本元素，即土、水、气和火。  \n（5）在月上区里，也就是月亮以外的区域，包括月亮、太阳、行星和恒星，物体由第五种基本元素“以太”构成。  \n（6）每种基本元素都有一个基本性质，这一基本性质决定了元素的表现特征。  \n（7）每种基本元素的基本性质都通过这一元素的运动趋势表现出来。  \n（8）土元素有一种向宇宙中心运动的天然趋势。（这就是为什么石头会直着掉下来，因为地球的中心也就是宇宙的中心。）  \n（9）水元素也有一种向宇宙中心运动的天然趋势，但是这一趋势比土元素弱。（这就是为什么当泥土和水混合后，两者都会向下运动，但最终水会留在泥土上面。）  \n（10）气元素天然地向土和水以上、火以下的区域运动。（这就是为什么当把气打入水中，气泡会从水下升起来。）  \n（11）火元素有一种向远离宇宙中心的方向运动的天然趋势。（这就是为什么火在空气中向上燃烧。）  \n（12）组成行星和恒星等物体的元素以太，有一种进行完美的圆周运动的天然趋势。（这就是为什么行星和恒星持续围绕地球，也就是围绕宇宙中心，做圆周运动。）  \n（13）在月下区，一个运动的物体会自然趋于静止，原因要么是组成这一物体的元素到达了其在宇宙中的自然位置，要么是这些元素被其他东西（比如地球表面）阻止，不能继续向其在宇宙中的自然位置运动。其中第二个原因更加常见。  \n（14）一个静止的物体会保持静止，除非有一个运动来源（要么是自身运动，比如一个物体往自己在宇宙中的自然位置的运动，要么是外界的运动，比如我把钢笔从书桌这边推到另一边）。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%A7%E8%83%BD%E8%BF%87%E5%89%A9":{"title":"产能过剩","content":"\n# 产能过剩\n\n产能过剩可以从三个角度去理解。\n\n1. 第一是生产效率下降。宏观上表现为 GDP 增速放缓，低于债务增速，所以宏观债务负担加重。微观上表现为地方政府过度投资、不断为一些“僵尸企业”输血，扭曲了资源配置，加重了政府和企业的债务负担。而且地方政府的“土地财政”和“土地金融”模式过度依赖地价上涨和房地产繁荣，推升了房价和居民债务负担，也加大了银行风险。\n2. 第二个角度是国际失衡。地方政府重视投资、生产和企业税收，相对忽视消费、民生和居民收入，造成经济结构失衡，分配体制偏向资本，劳动收入偏低，所以消费不足，必须向国外输出剩余产能\n3. 第三个角度是产业升级。因为产能过剩，我国制造业竞争激烈，价格和成本不断降低，不仅冲击了外国的中低端制造业，也冲击了本国同行。要想在国内市场上存活和保持优势，头部企业必须不断创新，进入附加值更高的环节。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%A8%E5%88%A9%E8%B4%9D%E5%85%8B%E5%8B%92%E5%B0%94":{"title":"亨利·贝克勒尔","content":"\n# 亨利·贝克勒尔\n\n亨利·贝克勒尔（法语：Henri Becquerel，1852 年 12 月 15 日－1908 年 8 月 25 日），法国物理学家。因发现天然放射性现象，与居里夫妇一同获得 1903 年诺贝尔物理学奖。放射性的国际单位制单位贝克勒尔 (Bq) 就是以他的名字命名的。\n\n## 发现放射性物质\n\n1896 年。当时 X 射线刚被发现不久，人们对它的来由还不是很清楚。有人提出太阳光照射荧光物质能够产生 X 射线，于是贝克勒尔对此展开了研究：他选了一种铀的氧化物作为荧光物质，把它放在太阳下暴晒，结果发现它的确使黑纸中的底片感光了。贝克勒尔得出初步结论：阳光照射荧光物质的确能产生 X 射线。但是，正当他要进一步研究时，意外的事情发生了。天气转阴，乌云一连几天遮蔽了太阳。贝克勒尔只好把他的全套实验用具，包括底片和铀盐放进了保险箱里。然而到了第五天，天气仍然没有转晴的趋势，贝克勒尔忍不住了，决定把底片冲洗出来再说。铀盐曾受了一点微光的照射，不管如何在底片上应该留下一些模糊的痕迹吧？然而，在拿到照片时，贝克勒尔的脑中却是一片晕眩。底片曝光得如此彻底，上面的花纹是如此地清晰，甚至比在强烈阳光下都要超出一百倍。这是一个历史性的时刻，元素的放射性第一次被人们发现了，虽然是在一个戏剧性的背景下。贝克勒尔的惊奇，终究打开了通向原子内部的大门，使得人们很快就看到了一个全新的世界。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%A8%E6%99%AE%E5%B0%94":{"title":"亨普尔","content":"\n# 亨普尔\n\n#卡片/人物卡\n\n- 国籍：徳裔美籍\n- 生平：1905 - 1997\n- 身份：哲学家，逻辑经验主义后期的主要代表、柏林学派成员。\n- 简介：1905 年 1 月 8 日出生于德国的奥拉宁堡。他曾就读于格丁根大学、海德堡大学和柏林大学，1934 年在柏林大学获哲学博士学位。亨普尔最初攻读物理学和数学，后来转向哲学。他在哲学上受到赖辛巴赫、石里克和卡尔纳普的影响。1929-1930 年在维也纳短暂逗留，结识了石里克、卡尔纳普、纽特拉等人，并参加了维也纳小组的讨论。1931 年随着石里克被刺杀，以及希特勒对犹太人的迫害，亨普尔和其他维也纳学派的成员一起迁居到美国。亨普尔 1944 年加入美国籍，先后在耶鲁大学、普林斯顿大学和匹兹堡大学任教和从事哲学研究工作。他于 1961 年任美国哲学学会东部分会主席，也是美国艺术与科学院院士。\n\n[[乌鸦悖论]]\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F":{"title":"享元模式","content":"\n# 享元模式\n\n享元（flyweight）模式是一种用于性能优化的模式，“fly”在这里是苍蝇的意思，意为蝇量级。享元模式的核心是运用共享技术来有效支持大量细粒度的对象。\n\n如果系统中因为创建了大量类似的对象而导致内存占用过高，享元模式就非常有用了。\n\n## 内部状态和外部状态\n\n享元模式要求将对象的属性划分为内部状态与外部状态（状态在这里通常指属性）。享元模式的目标是尽量减少共享对象的数量，关于如何划分内部状态和外部状态，下面的几条经验提供了一些指引。\n\n- 内部状态存储于对象内部。\n- 内部状态可以被一些对象共享。\n- 内部状态独立于具体的场景，通常不会改变。\n- 外部状态取决于具体的场景，并根据场景而变化，外部状态不能被共享。  \n  这样一来，我们便可以把所有内部状态相同的对象都指定为同一个共享的对象。而外部状态可以从对象身上剥离出来，并储存在外部。\n\n## 享元模式的适用性\n\n享元模式是一种很好的性能优化方案，但它也会带来一些复杂性的问题，从前面两组代码的比较可以看到，使用了享元模式之后，我们需要分别多维护一个 factory 对象和一个 manager 对象，在大部分不必要使用享元模式的环境下，这些开销是可以避免的。享元模式带来的好处很大程度上取决于如何使用以及何时使用，一般来说，以下情况发生时便可以使用享元模式。\n\n- 一个程序中使用了大量的相似对象。\n- 由于使用了大量对象，造成很大的内存开销。Ï\n- 对象的大多数状态都可以变为外部状态。\n- 剥离出对象的外部状态之后，可以用相对较少的共享对象取代大量对象。  \n  可以看到，文件上传的例子完全符合这四点。\n\n## 对象池\n\nJava 的字符串对象池并不是享元模式的应用。享元模式的过程是剥离外部状态，并把外部状态保存在其他地方，在合适的时刻再把外部状态组装进共享对象。new String 并没有剥离外部状态的过程，a1 和 a2 指向的完全就是同一个对象，所以如果没有外部状态的分离，即使这里使用了共享的技术，但并不是一个纯粹的享元模式。\n\n对象池维护一个装载空闲对象的池子，如果需要对象的时候，不是直接 new，而是转从对象池里获取。如果对象池里没有空闲对象，则创建一个新的对象，当获取出的对象完成它的职责之后， 再进入池子等待被下次获取。\n\n对象池技术的应用非常广泛，HTTP 连接池和数据库连接池都是其代表应用。在 Web 前端开发中，对象池使用最多的场景大概就是跟 DOM 有关的操作。很多空间和时间都消耗在了 DOM 节点上，如何避免频繁地创建和删除 DOM 节点就成了一个有意义的话题。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB":{"title":"《 亲密关系 》","content":"\n# 《 亲密关系 》\n\n# 元数据\n\n\u003e [!abstract] 亲密关系\n\u003e - ![ 亲密关系|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/288/915288/t7_915288.jpg)\n\u003e - 书名： 亲密关系\n\u003e - 作者： 克里斯多福·孟\n\u003e - 简介： 在爱与被爱的过程中，我们都曾经历过痛苦、恐惧，也体验过狂喜与极乐，我们渴望建立永恒真挚的亲密关係，却又害怕再度受伤。他告诉我们如何穿透自我障碍，用爱酿造幸福秘方——没有人能年复一年地活在火辣、热情、浪漫的亲密关系之中，但我们能在亲密关系的旅途中，学习面对自己最好以及最糟的特质……\n\u003e - 出版时间 2015-04-01 00:00:00\n\u003e - ISBN： 9787540471194\n\u003e - 分类： 个人成长-沟通表达\n\u003e - 出版社： 湖南文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7f6LYkQBg  \n⏱ 2020-02-13 18:28:29\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD":{"title":"事件","content":"\n现在的人工智能看着像和人类一样工作，其实它解决问题的方式和人类完全不一样，现在的人工智能更像是一个“看似智能的信息处理系统”  \n如果我们跟人工智能做比较的话，人工智能永远不可能有意识。因为人工智能像很多动物一样，并不能通过[[镜像测试]]\n\n如[[《 情感机器 》]]里所说的一样，在不断研究人工智能之后，会发现我们人类本身还是挺神奇的\n\n## 类脑网络\n\n人工智能能被我们应用，全靠深度学习。而深度学习只是模仿一部分大脑皮层的学习模式。通过对神经网络的深入研究，科学家用 3D 建模技术，还原一些哺乳动物的大脑原型，这种重建就叫类脑网络，他比深度学习强几十倍。  \n现在人类的复原极限是鼠脑，大概 2 亿神经元，更不用说 60 多亿的猴脑和 860 多亿的人脑了\n\n## 小数据学习\n\n现在的深度学习更像是一种统计学，经过大数据进行统计出概率，而人类能通过一件事进行举一反三。\n\n如果给人工智能设有一个道德校准的圣杯，那么一些人类也两难的情况应该如何进行，如果没有道德准则，机器人可能会因为执行某项任务，而顺便消灭了人类，所以如果设计生死，可以遵照[[机器人三大定律]]，但如果不涉及生死就很难了。\n\n另外就是现在深度学习的缺点，比如现在男女就职比例已经倾斜，那基于统计只会使这样的偏差更加巩固而无法纠正。\n\n**但是，构建一个以人类为中心的伦理观真的好吗？**\n\n# 事件\n\n2016 年 3 月，阿尔法围棋在一场五番棋比赛中以 4∶1 击败顶尖职业棋手李世乭，成为第一个不借助让子而击败围棋职业九段棋手的电脑围棋程序。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E7%89%A9%E5%8D%A1":{"title":"人物卡","content":"\n#卡片/人物卡\n\n- 国籍：\n- 生平：1954.9.18 -\n- 身份：心理学家，语言学家。\n- 简介：\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E7%94%9F%E4%B8%8D%E8%A6%81%E5%81%9A%E7%9A%84%E8%AF%81%E6%98%8E%E9%A2%98":{"title":"人生不要做的证明题","content":"\n虽然前面一直在说做证明题的重要性。 但是有几种证明题，我们不要去做。\n\n比如证明温州是个好地方，浙江高考比别的地方难。这对有些家庭，有些学生来说，是个选择题，他们用行动做选择。但对另外很多人来说，是个证明题，无数人喋喋不休试图证明谁比谁好，我觉得挺无聊的，你证明了什么呢？**证明了你压根没有选择么。**\n\n这种题目，你都是可以做选择题的，你可以选择不一样的城市定居，不一样的地方高考。选择相对于证明，更准确的代表了我的态度。  \n\n记住人性，没有选择的人，只有相信天选的就是最好的，才能让自己活得开心一点，所以他们孜孜不倦的试图证明这一切。但问题是，他们所证明的，是周边的环境，学校，产业等等，**唯独不是他们自己的价值和能力。**\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E7%94%9F%E6%8A%80%E8%83%BD%E6%A0%91":{"title":"技能清单","content":"\n分级的标准如下：\n\n1. **入门级：**已经掌握该技能的完整的知识框架树，有清晰的学习方法论和成长路径。\n2. **专业级：**该技能是否真正经过长期实践。\n3. **大师级：**是否在该技能上赚到过（你自己觉得）不少钱。\n\n# 技能清单\n\n## 基础技能\n\n1. 时间管理能力\n2. 阅读能力\n3. [[写作]]能力\n4. 自学能力\n5. 反思能力\n6. 逻辑学\n7. 沟通能力\n\n## 专业技能\n\n1. 团队管理能力\n2. 数据分析\n3. 编程能力\n4. 运营能力\n5. 项目管理能力\n\n## 其他能力\n\n1. 游泳\n2. 健身\n3. 冥想\n4. [[投资]]\n5. 经济学\n6. 元宇宙\n7. 英语\n8. 摄影\n9. 视频剪辑\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E7%94%9F%E7%9A%84%E9%80%89%E6%8B%A9%E9%A2%98%E5%92%8C%E8%AF%81%E6%98%8E%E9%A2%98":{"title":"人生的选择题和证明题","content":"\n有人说选择大于努力，并举出很多例子。诚然，我也能举出很多例子，但那都是没有意义的，先不说举得例子多少是幸存者偏差，他们能做这一道道选择题的背后是：他们做了证明题。\n\n在找工作阶段，你要证明自己学习能力很强，你总要拿出什么才能让人相信你，比如很高的学历、有 star 很高的项目、有完善的 blog、ACM 名次。\n\n如果你什么都没有做，HR凭什么去相信你说：我可以学呢  \n\n选择确实很重要，但是  \n1、如果做不好证明题，很多很多选择题，可能根本不会给你做。  \n2、证明题做的好，选择题做错了，还有新的选择题。  \n3、证明题做的不好，选择题就算做对了，也可能达不到好的结果。  \n4、选择题，有时候真的是运气，但证明题，你自己可以掌握。\n\n人生要多做自己能够控制的事，提升自己做选择的概率，提高自己选择的质量，成功的概率才会变高\n\n所以，人生其实也是道概率题。\n\n[[人生不要做的证明题]]  \n[[如何做好人生的选择题]]\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E4%BB%8E%E5%8A%A8%E7%89%A9%E5%88%B0%E4%B8%8A%E5%B8%9D":{"title":"《 人类简史：从动物到上帝 》","content":"\n# 《 人类简史：从动物到上帝 》\n\n# 元数据\n\n\u003e [!abstract] 人类简史：从动物到上帝\n\u003e - ![ 人类简史：从动物到上帝|200](https://weread-1258476243.file.myqcloud.com/weread/cover/37/YueWen_855812/t7_YueWen_855812.jpg)\n\u003e - 书名： 人类简史：从动物到上帝\n\u003e - 作者： 尤瓦尔·赫拉利\n\u003e - 简介： 10万年前，地球上至少有6个不同的人类物种，但今天只剩下1个，就是我们智人。究竟发生了什么，让其他人类物种都消失了？我们智人又将会怎样？ 以色列著名历史学家尤瓦尔·赫拉利开创性地将历史和科学结合起来，讲述了从宇宙大爆炸至今智人历史的完整故事。尤瓦尔·赫拉利教授认为，在智人从一种不起眼的动物到地球主宰者的漫长演化史上，发生了三次关键性的革命：认知革命、农业革命和科学革命。认知革命让智人拥有了创造想象秩序和虚构故事的能力，彻底超越了其他物种；农业革命让智人从狩猎-采集生活走向定居生活，生活方式和社会组织发生了革命性的转变；科学革命让智人成为神一样的“造物主”，获得整个地球的统治地位。 尤瓦尔·赫拉利教授还提示我们向前看，因为在过去的几十年里，我们已经开始违背自然选择的法则，而自然选择的法则在过去的40亿年里都一直是生命遵循的法则，今天的我们不仅获得了设计周围世界的能力，也获得了设计我们自己的能力，这将引领我们走向何方，我们想成为什么样的人类？是时候重新定义“人类”了。 《人类简史》是一部全球畅销书，摒弃了旧的解释框架，提出了颠覆性的创见，让我们对自身的存在有了全新的认知。\n\u003e - 出版时间 2017-02-23 00:00:00\n\u003e - ISBN： 9787508660752\n\u003e - 分类： 历史-世界史\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 推荐序\n\n- 📌 而他所能做的，也不过就是弱弱地提出这样一个问题：“我们人类究竟想要什么？” ^855812-3-3123-3160\n    - ⏱ 2021-08-27 10:28:02\n\n## 第一章 人类：一种也没什么特别的动物\n\n- 📌 在欧洲和西亚的人类成了“Homo neanderthalensis”，意为“来自尼安德谷（Neander Valley）的人”，一般简称为“尼安德特人”（Neanderthals）。比起我们这种“智人”，尼安德特人更为魁梧，肌肉也更发达，非常适应西方的欧亚大陆在冰河时期的寒冷气候。 ^855812-4-3744-3913\n    - ⏱ 2021-08-27 10:38:07\n- 📌 在东方的亚洲，住的则是“Homoerectus”（直立人），一共存续了将近200万年，是目前所知存续最久的人类物种， ^855812-4-3915-4002\n    - ⏱ 2021-08-27 10:38:13\n- 📌 在印度尼西亚的爪哇岛，则住着“Homo soloensis”（梭罗人，拉丁文意为“来自梭罗谷的人”），这种人很能适应热带的生活环境。 ^855812-4-4103-4197\n    - ⏱ 2021-08-27 10:38:23\n- 📌 在印度尼西亚，还有另一个小岛弗洛里斯（Flores），这里住的远古人类则是经历了一场侏儒化的过程。曾有一段时间，因为海水水位格外低，于是人类初次抵达了弗洛里斯，而且当时和大陆的交通往来十分便利。但后来海水再次上涨，于是有些人就被困在岛上，物资十分缺乏。那些长得高头大马的人，需要的食物也多，于是最早在岛上饿死淘汰。长得矮反而成了生存优势。经过几代之后，在弗洛里斯的人都成了小矮人。科学家把这种独特的人种称为“Homo foresiensis”（弗洛里斯人），身高最高不过1米，体重最重也不过25公斤。然而，他们仍然懂得如何制造石器，甚至偶尔还能在岛上猎象。不过倒也公平，在这岛上的象也是一种矮生种。 ^855812-4-4199-4527\n    - ⏱ 2021-08-27 10:38:32\n- 📌 在西伯利亚的丹尼索瓦（Denisova）洞穴中发现了一块已经变成化石的手指骨，为人类的大家族又添一种成员。手指骨的基因分析证实这个人种过去并不为人知，现在则命名为“Homodenisova”（丹尼索瓦人）。 ^855812-4-4565-4697\n    - ⏱ 2021-08-27 10:38:44\n\n## 第三章 亚当和夏娃的一天\n\n- 📌 虽然平均寿命显然只有30~40岁，但这主要是因为当时儿童早夭的情形十分普遍。只要能活过危机四伏而意外频现的生命早期，当时的人就大多能活到60岁，有的甚至还能活到超过80岁。 ^855812-6-11263-11349\n    - ⏱ 2021-08-30 10:36:09\n- 📌 采集者之所以能够免受饥饿或营养不良的困扰，秘诀就在于多样化的饮食。相较之下，之后农民的饮食往往种类极少，而且不均衡。特别是在近代，许多农业人口都依靠单一作物为主要热量来源，可能是小麦、马铃薯、稻米之类，这样一来就会缺少人体所必需的其他维生素、矿物质或营养。 ^855812-6-11691-11819\n    - ⏱ 2021-08-30 10:36:36\n\n## 第五章 史上最大骗局\n\n- 📌 确实，农业革命让人类的食物总量增加，但量的增加并不代表吃得更好、过得更悠闲，反而只是造成人口爆炸，而且产生一群养尊处优、娇生惯养的精英分子。普遍来说，农民的工作要比采集者更辛苦，而且到头来的饮食还要更糟。农业革命可说是史上最大的一桩骗局。 ^855812-8-2519-2638\n    - ⏱ 2021-08-31 10:18:42\n\n## 第七章 记忆过载\n\n- 📌 之所以现在我们会称“阿拉伯数字”，是因为阿拉伯人攻打印度时发现了这套实用的系统，再加以改良传到中东，进而传入欧洲。等到有几个其他符号加入了阿拉伯数字系统（例如加号、减号、乘号），就成了现代数学符号的基础。 ^855812-10-10713-10815\n    - ⏱ 2021-09-02 10:36:21\n\n## 第八章 历史从无正义\n\n- 📌 以上所有的区别，不管是自由人／奴隶、白人／黑人、富人／穷人，都只是虚构的想象所建构出来的。（后面会另外来谈男女的阶级问题。）然而历史的铁则告诉我们，每一种由想象建构出来的秩序，都绝不会承认自己出于想象和虚构，而会大谈自己是自然、必然的结果 ^855812-11-1288-1407\n    - ⏱ 2021-09-02 10:40:08\n- 📌 文化总会说，它只是禁止“不自然的事”。但从生物学的角度来看，这世界上根本没有什么是不自然的。只要有可能发生的事，就是自然。 ^855812-11-12942-13003\n    - ⏱ 2021-09-02 11:15:05\n\n## 第十章 金钱的味道\n\n- 📌 铸造伪币的罪行一直比其他诈欺行为判得更重。因为造伪币不只是单纯的诈欺，更是对主权的挑战，直接冒犯了国王的权力、特权和他本人。 ^855812-13-10954-11016\n    - ⏱ 2021-09-07 09:54:48\n\n## 第十二章 宗教的法则\n\n- 📌 最后他体会到，一切苦难并非来自噩运、社会不公或是神祇的任性，而是出于每个人自己心中的思想模式。释迦牟尼认为，人遇到事情通常就会产生欲念，而欲念总是会造成不满。遇到不喜欢的事，就想躲开；遇到喜欢的事，就想维持并增加这份愉快。但正因如此，人心就永远不满、永远不安。这点在碰上不悦的时候格外明显，像是感觉疼痛的时候，只要疼痛持续，我们就一直感到不满，用尽办法想要解决。然而，就算是遇上欢乐的事，我们也从不会真正满足，而是一直担心这种欢乐终将结束或是无法再持续或增强。有些人多年来一直在寻找爱情，但等到真的找着了爱情，却还是不满足。有的开始整天担心对方可能会离开；有的又觉得自己太过屈就，应该再找更好的人。（而且，我们也都认识某些人，又担心别人离开，又觉得自己屈就）。 ^855812-15-13973-14332\n    - ⏱ 2021-09-07 11:20:09\n\n## 第十三章 成功的秘密\n\n- 📌 从定义上，革命就是无法预测。如果真能预测有革命，革命就永远不会成真。 ^855812-16-3367-3401\n    - ⏱ 2021-09-07 14:12:51\n\n## 第十四章 发现自己的无知\n\n- 📌 科学革命并不是“知识的革命”，而是“无知的革命”。真正让科学革命起步的伟大发现，就是发现“人类对于最重要的问题其实毫无所知”。 ^855812-17-5337-5400\n    - ⏱ 2021-09-07 14:51:11\n\n## 第十五章 科学与帝国的联姻\n\n- 📌 说来也算是老天有眼，到头来，全球有1/4的陆地、七大洲之中的两洲，名字就是来自一个名不见经传的意大利人，而他唯一做的事就只是有勇气说出“我们不知道”。 ^855812-18-12548-12623\n    - ⏱ 2021-09-07 16:54:48\n- 📌 虽然他们也痛恨阿兹特克人的统治，但他们既不认识西班牙人，更不知道发生在加勒比海地区的种族灭绝惨剧，只是天真地以为，有了西班牙人帮助，就能摆脱阿兹特克人的枷锁。他们从没想过，最后只是统治者从阿兹特克人换成了西班牙人。而且，他们也相信就算科尔特斯这几百个人心怀不轨，自己可以轻松把他们处理掉。于是，这批人为科尔特斯提供了数以万计的当地军队，让科尔特斯得以围攻特诺奇蒂特兰城，最后得以成功占领。 ^855812-18-18417-18611\n    - ⏱ 2021-09-07 17:08:19\n\n## 第十六章 资本主义教条\n\n- 📌 然而，这一切的立论基础必须取决于富人是不是用这些利润来新建工厂、雇用新员工，而不是将利润浪费在无生产力的活动上。所以，亚当·斯密不断强调的是“利润增加时，地主或织工就会雇用更多助手”，而不是说“利润增加时，守财奴就把钱全部藏得死死的，只有算钱的时候才拿出来”。 ^855812-19-7019-7149\n    - ⏱ 2021-09-08 09:45:01\n\n## 第十七章 工业的巨轮\n\n- 📌 蒸汽机种类繁多，但有一个共同的原则：燃烧某种燃料（例如煤），再用产生的热将水煮沸，产生蒸汽。接着蒸汽推动活塞、让活塞移动，而连接到活塞的任何装置也就跟着移动。这么一来，热能便转换为动能了！ ^855812-20-2682-2776\n    - ⏱ 2021-09-08 14:20:10\n\n## 第十八章 一场永远的革命\n\n- 📌 第二次大战期间，英国广播公司的新闻播送到纳粹占领下的欧洲地区，而每段新闻广播的开头就是大本钟报时钟声的现场直播，可以说正是自由的钟声。甚至还有些天才的德国物理学家，居然找出一套方法，只要靠着钟声在广播中的微小差异，就能判断伦敦当时的天气。对德国空军来说，这可是珍贵无比的战事情报。等到英国私密情报局也发现了这一点，就不再采用现场直播，而用一组录音来取代。 ^855812-21-4005-4182\n    - ⏱ 2021-09-08 16:09:52\n- 📌 究竟孰是孰非？其实需要时间来证明。我们只要回顾过往就会发现，自己对于过去历史的看法总是受到近几年事件的左右。如果这一章是写在1945年或是1962年，可能看法就会偏向悲观。但正因为已经来到2014年，整个看待现代历史的观点也就相对比较愉快。 ^855812-21-22455-22575\n    - ⏱ 2021-09-08 17:30:43\n\n## 第十九章 从此过着幸福快乐的日子\n\n- 📌 事实是，人类的主观感受没有任何实质或意义。主观感受就只是一种电光石火的波动，每个瞬间都在改变，就像海浪一样。不论你感受到的是快感或不快，觉得生命是否有着意义，这都只是一瞬间的波动而已。 ^855812-22-16964-17056\n    - ⏱ 2021-09-08 18:15:08\n\n## 第二十章 智人末日\n\n- 📌 我们这个现代晚期的世界，是有史以来第一次认为所有人类应享有基本上的平等，然而我们可能正准备要打造出一个最不平等的社会。纵观历史，上层阶级总是说自己比下层阶级更聪明、更强壮，整体而言更为优秀 ^855812-23-18296-18390\n    - ⏱ 2021-09-08 21:33:06\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7tazHNVNn  \n⏱ 2021-09-08 21:37:57\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%80%E4%B9%88%E6%98%AF%E5%90%83%E8%8B%A6":{"title":"什么是吃苦?","content":"\n# 什么是吃苦?\n\n真正的苦从来就不是穷,吃苦的本质是长时间为了一件事聚焦的能力，以及为了长时间聚焦做一件事的过程中，说放弃的娱乐生活、所放弃的无效社交、所放弃的无意义的消费生活，以及在这个过程中所忍受的孤独和不被理解。本质是一种自控能力，自制能力和坚持能力以及深度思考。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%80%E4%B9%88%E6%98%AF%E9%80%BB%E8%BE%91":{"title":"什么是逻辑?","content":"\n# 什么是逻辑?\n\n从已知命题中得出未知命题的过程叫推理，已知命题叫前提，未知命题叫结论。\n\n逻辑就确保推理和论证有效的规则 [[逻辑起作用的底层原理是什么? |逻辑凭什么确保有效推理的合法性]]\n\n都是为了扩大自己的认知\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%80%E4%B9%88%E6%98%AF%E9%A1%B9%E7%9B%AE":{"title":"什么是项目？","content":"\n项目就是为创建某一独特产品、服务或成果 而临时进行的一次性努力。  \n\n项目必须有三个特点\n\n- 临时\n- 独特\n- 渐进明细  \n\n这三个特点决定了它在运作过程中会遇到的所有挑战。\n\n## 「临时」：有明确的开始和关闭时间。\n\n你得立项，你得拿到人和钱，你得有个开工 时刻，你得有个明确的交付日期  \n\n这样说来像是什么“过好这一生”、“打开公司的新局面”、“我要创业”这些虽然都可以说是大事，但都不是项目  \n\n因为你这里没有交付日期，没明确什么叫 完成什么叫没完成。  \n\n像亚马逊创业初期贝佐斯连出奇招那个阶段  \n有些动作都是关键的战略选择，但也不是项目  \n\n- 赶上节日突发奇想就要从一个单纯卖书的网站增加卖玩具的业务  \n- 听说雅虎给机会就不顾一切先接下流量再说  \n\n但是，当贝佐斯做出决策说我们下周就要卖玩具，那这个玩具应该怎么卖，这个事儿应该怎么做好，这就是一个项目了。\n\n## 「独特」没有人做过，或者每次的变量都不一样。\n\n比如罗振宇跨年演讲，虽然是每年一次，但次次地点不同、局面 不同，特别是组织方式跟公司日常的工作 ，非常不一样，所以都是项目。  \n只要是项目就说明没有形成例行公事，你的 各种操作都必须针对这一次的目标专门设 计，对每个人的工作都必须专门安排，也可以说这是一种创造。\n\n## 「渐进明细」：因为之前没做过，很多细节问题都是随着项目的展开才知道的。\n\n这就意味着项目一定会有风险，甚至可能只有做起来才知道这事儿根本办不成。\n\n这就是为什么傅以斌一再强调项目的风险， 要求在计划过程中做很多迭代和模拟。  \n但计划毕竟是计划，总有些问题你就是想不到，所以不成功也是一种常态。  \n项目，也可以说是组织的一次投资行为， 风险是它固有的属性。\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%8B%E8%AF%8D":{"title":"介词","content":"\n# 介词\n\nwhich、what、who、how、\n\nhave、has、had\n\nform to\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%8E%E4%B8%80%E5%88%B0%E6%97%A0%E7%A9%B7%E5%A4%A7":{"title":"《 从一到无穷大 》","content":"\n# 《 从一到无穷大 》\n\n# 元数据\n\n\u003e [!abstract] 从一到无穷大\n\u003e - ![ 从一到无穷大|200](https://weread-1258476243.file.myqcloud.com/weread/cover/67/YueWen_26295687/t7_YueWen_26295687.jpg)\n\u003e - 书名： 从一到无穷大\n\u003e - 作者： 乔治·伽莫夫\n\u003e - 简介： 清华大学新生礼物，校长邱勇推荐！“大爆炸”理论推动者乔治·伽莫夫的顶级科普经典，风靡全球70余年，鼓舞一代代年轻人走上科学道路。这本书将会回答你如下问题：1.无穷大究竟有多大？2.空间有里外之分吗？3.为什么三维世界里的人无法想象四维空间？4.相对论是怎么“相对”的？5.我们怎么才能看到原子的尺寸？6.核反应时究竟在发生什么？7.生物与非生物的界限在哪里？一，二，三……快进入无穷大的科学世界吧！\n\u003e - 出版时间 2019-09-01 00:00:00\n\u003e - ISBN： 9787201151304\n\u003e - 分类： 科学技术-科学科普\n\u003e - 出版社： 天津人民出版社\n\n# 高亮划线\n\n## 第二章 自然数字和人造数字\n\n- 📌 21年，皮埃尔·费马（Pierre Fermat）在巴黎买了一本丢番图著作《算术》的法语新译本，其中就有关于毕达哥拉斯三角形的内容。读到这里的时候，费马在页边写了一条简短的笔记，他提出，方程x2+y2=z2有无穷多组整数解，但对于xn+yn=zn这样的方程[插图]，如果n大于2，那么该方程无解。“我有一个绝妙的办法可以证明这一点，”费马继续写道，“但这一页的页边太窄了，实在写不下。” ^26295687-10-8639-9005\n    - ⏱ 2022-02-09 10:48:57\n- 📌 。1770年，著名德国数学家莱昂哈德·欧拉出版了一本代数学著作，虚数在这本书中得到了广泛的应用，但欧拉在书中留下了这样的附言：“诸如[插图]，[插图]之类的表达都是不可能的数，或称虚数。因为它们代表负数的平方根，对于这样的数，也许我们只能说，它们不是零，但并不比零大，也不比零小，所以它们完全是虚构出来的数，或者说不可能的数。” ^26295687-10-12555-12985\n    - ⏱ 2022-02-09 10:53:22\n\n## 第三章 宇宙的奇异特性\n\n- 📌 欧拉的公式还证明了一个有趣的推论：正多面体只可能有五种，也就是图14中的那五个。 ^26295687-12-6457-6515\n    - ⏱ 2022-02-09 11:17:04\n- 📌 没有对称平面的物品可以归为两类——左手性的和右手性的。 ^26295687-12-14786-14813\n    - ⏱ 2022-02-09 11:41:41\n\n## 第五章 空间和时间的相对性\n\n- 📌 何物体的运动速度都不可能达到或者超过光速。这条基本公理的物理基础来自一个事实，无数实验直接证明了这一点：随着物体的运动速度趋近光速，它的惯性质量（这个值度量的是阻碍物体进一步加速的机械力）会趋近于无穷大。 ^26295687-14-16617-16773\n    - ⏱ 2022-02-10 15:36:30\n- 📌 从这个角度出发，爱因斯坦得出了一个重要的结论：引力现象只不过是四维时空世界的弯曲产生的效应。事实上，现在我们或许可以抛弃“太阳直接对行星产生引力，使之绕太阳作圆周运动”这个不准确的旧说法，更准确的描述应该是：太阳的质量弯曲了周围的时空，行星的世界线看起来之所以是图30中的样子，仅仅是因为，那个弯曲的空间中的测地线就是这样的曲线。 ^26295687-14-21529-21719\n    - ⏱ 2022-02-11 10:27:54\n\n## 第六章 下降的阶梯\n\n- 📌 将这样的理论推而广之，他们进一步解释说，铁、铜、金的性质之所以各不相同，是因为土原子和火原子在这些金属中的占比不一样。亮闪闪的黄金包含的火原子肯定比黑乎乎、暗沉沉的铁块多，这不是明摆着的事儿吗？既然如此，为什么不给铁加一点儿火，或者最好给铜加点儿火，把它们变成珍贵的金子呢？正是基于这样的逻辑，中世纪那些讲求实际的炼金术士才会在烟熏火燎的炉灶旁耗费无数心力，试图利用廉价的金属炼制出“人造黄金”。 ^26295687-16-3392-3619\n    - ⏱ 2022-02-11 10:36:55\n- 📌 不过，你可别以为给原子拍照有多简单，要拍摄这么小的物体，你必须考虑到，照射在物体上的光线波长必须小于拍摄对象的尺寸，否则照片肯定会糊成一片，就像波斯细密画绝不能用油漆刷来画！成天跟微生物打交道的生物学家深知其中的难处，因为细菌的尺寸（约0.0001厘米）正好跟可见光的波长差不多。为了提高照片的清晰度，他们只能用紫外线拍摄显微照片，因为这种光的波长比可见光短，所以拍摄效果更好。但分子的尺寸和晶格中分子之间的距离都太小了（0.00000001厘米），别说可见光，就连紫外线都达不到要求。要看清单个分子，我们只能借助波长只有可见光几千分之一的射线——换句话说，我们必须借助X射线。不过到了这里，我们又遇到了一个看似无法克服的难题：在实际操作中，X射线能够畅通无阻地穿透任何物质，不会发生折射，所以透镜和显微镜都无法在X射线下工作。当然，从医学角度来说，这种强穿透力、不折射的特性非常有用，如果X射线在穿过人体时发生了折射，那么最后我们得到的X光片就会糊成一片。但这样的特性似乎彻底扼杀了我们用X射线拍摄显微照片的可能性！ ^26295687-16-10493-10952\n    - ⏱ 2022-02-11 10:47:50\n- 📌 但是以不同原子的几何形状为基础解释其化学和物理特性的努力全都收效甚微，直到人们认识到，原子并不是几何形状各不相同的基本粒子，恰恰相反，它是由大量独立运动部件组成的相当复杂的装置，我们才真正迈出了理解原子特性的第一步。 ^26295687-16-13659-13767\n    - ⏱ 2022-02-11 10:53:15\n- 📌 事实上，汤姆孙发现，单个电子的质量只有氢原子质量的1/1840，这意味着原子质量主要来自带正电的组件 ^26295687-16-15017-15067\n    - ⏱ 2022-02-11 10:55:45\n- 📌 原子和太阳系不仅结构相似，还有其他很多共同点：原子核的质量相当于原子总质量的99.97%，而太阳系99.87%的质量都集中在太阳里；围绕原子核运行的电子之间的距离相当于电子直径的几千倍，太阳系内行星间的距离与行星直径的比值差不多也是这个数。不过，二者最重要的相似之处在于，原子核和电子之间的电磁力与距离的平方成反比，太阳和行星之间的引力也遵循同样的数学规律。所以电子沿圆形和椭圆形轨道绕着原子核运动，就像太阳系里的行星和彗星一样。 ^26295687-16-16011-16255\n    - ⏱ 2022-02-11 10:59:38\n- 📌 由于原子整体呈电中性，绕核运动的电子数量必然等于原子核携带的正电荷数量，根据α粒子因原子核的排斥而产生的偏移散射，我们又能直接估算出原子核携带的正电荷数量。 ^26295687-16-16338-16416\n    - ⏱ 2022-02-11 11:01:41\n- 📌 氦、氩、氖、氙等电子层完整的原子既不需要夺取也不必付出多余的电子，它们更喜欢自己跟自己玩，所以这些元素（所谓的“稀有气体”）化学性质很不活泼。 ^26295687-16-18633-18704\n    - ⏱ 2022-02-11 11:03:33\n- 📌 金属和其他材料很不一样，因为金属原子内部的外层电子与原子核的结合十分松散，所以常常会有一两个电子挣脱原子核的束缚，成为自由电子。这样一来，金属材料内就有大量漫无目的游荡的自由电子，就像一群无家可归的流浪汉。如果给金属丝通电，这些自由电子会顺着电压的方向狂奔，形成我们所说的电流。 ^26295687-16-18790-18929\n    - ⏱ 2022-02-11 11:06:25\n- 📌 金属之所以拥有优秀的导热性能，也是因为自由电子的存在——但这部分内容我们留到后面的章节再讲。 ^26295687-16-18958-19004\n    - ⏱ 2022-02-11 11:06:33\n- 📌 事实上，我们熟悉的力学定律和概念都是基于已有的观察经验建立起来的，而这些经验都来自与人类自身尺寸相仿的物体。后来我们开始运用这些规律解释另一些大得多的物体的运动，例如行星和恒星，结果获得了成功，所以我们才能极为准确地计算前后几百万年的各种天文现象。因此，我们毫不怀疑，这些熟悉的力学定律确实可以向外推广，解释大型天体的运动。尽管经典力学定律的确能解释巨型天体、炮弹、钟摆和玩具陀螺的运动，但电子的大小和质量只相当于最小的力学设备的亿万分之一。我们凭什么相信，同样的定律就一定适用于它呢？ ^26295687-16-20737-21009\n    - ⏱ 2022-02-11 11:09:53\n- 📌 经典力学的基本概念包括粒子运动的轨道和粒子沿轨道运动的速度。在任意给定时刻，运动的物质粒子必然占据空间中一个确定的点，物质粒子在不同时刻占据的点串联起来，就形成了它的运动轨道，这句话通常被视为不言自明的真理，它也是我们描述物体运动的基础。如果知道特定物体在两个不同时刻占据的位置之间的距离，再除以这两个时刻的时间间隔，就能算出该物体的运动速度。位置和速度，这两个概念奠定了整个经典力学的根基。直到不久前，恐怕还没有哪位科学家想到过，描述运动现象的这两个最基本的概念竟然会有瑕疵，要知道，从哲学的角度来说，这两个概念完全是先验的。 ^26295687-16-21270-21609\n    - ⏱ 2022-02-11 11:13:24\n- 📌 但是物理相互作用下限的存在彻底改变了讨论的前提，现在我们不能再随心所欲地削弱测量设备带来的干扰。这样一来，观察对运动的干扰变成了运动中不可或缺的一部分，物体运动的轨道也不再是数学意义上无限细的一条线，我们不得不将它视为空间中有一定厚度的弥散的条带。经典物理中数学意义上的清晰轨道变成了新力学里弥散的宽条。 ^26295687-16-22444-22664\n    - ⏱ 2022-02-11 11:19:02\n- 📌 为了应对量子力学中位置、速度、能量等参数的不确定性，我们需要一套取代经典力学方法的数学体系。 ^26295687-16-23289-23335\n    - ⏱ 2022-02-11 11:24:48\n\n## 第七章 现代炼金术\n\n- 📌 大部分元素都是由化学性质完全相同但原子量有所差异的不同原子组成的混合物。这些相似的原子在元素周期表中占据的位置也完全相同，所以它们被命名为同位素。 ^26295687-17-1618-1716\n    - ⏱ 2022-02-11 14:09:13\n- 📌 普劳特的假说应该表述为：不同种类的原子核由数量不等的基本氢原子核组成，氢原子核在物质结构中拥有如此特殊的地位，所以我们将之命名为“质子”。 ^26295687-17-1920-2007\n    - ⏱ 2022-02-11 14:09:41\n- 📌 这里必须说的是，我们不应将质子和中子视作两种完全不同的粒子，其实它们更像是电性有所差异的同一种基本粒子，我们称之为“核子”。事实上，我们已经知道，质子可以失去一个正电荷，从而变成中子，得到正电荷的中子又会变成质子。 ^26295687-17-2419-2526\n    - ⏱ 2022-02-11 14:10:20\n- 📌 在我们或许可以说，尽管已知的物质千姿百态，种类多不胜数，但追根溯源，它们其实都是两种基本粒子的不同组合：1.核子，物质的基本粒子，它可能是电中性的，也可能携带一个正电荷；2.电子，自由负电荷 ^26295687-17-2967-3112\n    - ⏱ 2022-02-11 14:11:07\n- 📌 鉴于核能的存在，我们的处境（或者更确切地说，不久前我们的处境）就像生活在零下温度环境中的因纽特人。他们周围唯一的固体是冰，唯一的液体是酒精。因纽特人从来不知道火为何物，因为摩擦冰块永远都起不了火；在他们心目中，酒精也不过是令人愉悦的饮料而已，因为他们无法将酒精加热到燃点温度以上。 ^26295687-17-15348-15488\n    - ⏱ 2022-02-11 14:24:43\n- 📌 不过千万别忘了，大部分化学反应要求的反应条件最多不过几百度，而核反应的起始温度可能高达几百万度！正是因为核反应的起始条件如此苛刻，我们才能放宽心过日子，整个宇宙也不会在一场惊天动地的爆炸中变成一大块银子。 ^26295687-17-16449-16551\n    - ⏱ 2022-02-11 14:25:49\n- 📌 50年前（1896年），贝可勒尔（Becquerel）发现了放射性的存在，我们由此第一次看到了分裂原子的可能性。事实上，人们发现，靠近元素周期表尽头的元素（例如铀和钍）释放的高穿透性射线（类似普通X射线）来自原子缓慢的自发衰变。科学家深入研究了这些新发现的现象，很快得出结论：重原子核会自发衰变，分裂成两个相差悬殊的部件。（1）其中一个部件非常非常小，人们称之为α粒子，其实它就是氦原子核；（2）失去α粒子的原子核残骸成了新形成的子元素原子核。初始铀原子核分裂释放α粒子，残余的子元素原子核被称为铀XI；后者经历了内部电荷调整过程以后会释放2个自由负电荷（普通电子），变成铀同位素的原子核，它比初始的铀原子核轻4个单位。接下来，释放α粒子的裂变过程和释放电荷的调整过程循环重复，最终我们得到了铅，这种元素的原子核看起来十分稳定，不会继续衰变。 ^26295687-17-16776-17172\n    - ⏱ 2022-02-11 14:29:11\n- 📌 既然所有重于银的原子核都不稳定，那么自发衰变的为什么只有铀、镭、钍这几种最重的元素？答案是这样的：虽然从理论上说，重于银的所有元素都应该被视为放射性元素，而且它们的确会缓慢衰变成更轻的元素；但在大多数情况下，这种自发衰变的速度极慢，我们根本不会注意到它的存在。因此，我们熟悉的碘、金、汞、铅等元素可能要过好几百年才有一两个原子发生衰变，这样的速度实在太慢，哪怕是最灵敏的物理设备也无法探测到它的存在。只有那些最重的元素才有足够强的自发衰变趋势，因此它们才会表现出明显的放射性。 ^26295687-17-17524-17787\n    - ⏱ 2022-02-11 14:30:00\n- 📌 如果能够设法用中子轰击靶标原子核产生中子，而且每次裂变产生的子代中子数量大于初始中子，那么这些粒子就会像兔子（见第九章第2节，图97）或被感染组织内的细菌一样繁殖。一个中子在极短的时间内就能产生数目可观的后代，足以轰击一大块靶标材料的每一个原子核。 ^26295687-17-27315-27439\n    - ⏱ 2022-02-11 14:44:09\n- 📌 正如我们之前看到的，越重的原子核裂变产生的能量越多，那么元素周期表中位置越靠后的原子核裂变碎片产生的中子肯定也越多。这样一来，金原子核裂变（我们还没有实现这个过程，因为它需要的初始能量太高）碎片释放的中子平均数量肯定比1小得多，铀核裂变碎片释放中子的平均数约等于1（每次裂变大约释放2个中子），对于那些更重的元素（例如钚）来说，平均每块碎片释放的中子数量可能大于1。 ^26295687-17-28413-28596\n    - ⏱ 2022-02-11 14:45:22\n- 📌 对分支链式反应的必要条件进行深入的理论和实际研究之后，科学家得出结论：在自然界所有的天然原子核中，只有一种原子核有可能发生这样的反应，它就是著名的轻同位素铀，铀235，它是唯一一种天然的可裂变物质。 ^26295687-17-29470-29587\n    - ⏱ 2022-02-11 14:46:25\n- 📌 但是自然界中没有纯净的铀235，它总是以极低的密度掺杂在不可裂变的重同位素铀238里（天然铀中铀235的占比通常只有0.7%，其余99.3%都是铀238）。所以天然铀很难产生链式反应，就像湿木头很难点燃。事实上，正是因为不活跃同位素的稀释作用，极易裂变的铀235才能在自然界中留存下来，不然的话，它们早就在快速链式反应中消耗光了。因此，要利用铀235蕴含的能量，我们要么先将它从更重的铀238中分离出来，要么想个办法抵消铀238的稀释作用，而不必真的将它剔除出去。实际上，在人类释放原子能的过程中，这两条路都有人走过，而且他们都获得了成功。 ^26295687-17-29623-29943\n    - ⏱ 2022-02-11 14:47:03\n- 📌 征服了铀之类重元素核裂变释放能量的难题以后，物理学家开始琢磨另一个相反的过程，核聚变。核聚变是指两个轻元素的原子核融合形成一个更重的原子核，同时释放出大量能量的过程。正如我们将在第十一章中看到的，太阳的能量就来自这样的聚变过程，普通的氢原子核在太阳内部发生剧烈的热碰撞，融合生成更重的氦原子核。要复制这种所谓的热核反应，使之造福于人类，最理想的聚变原材料是重氢，或者说氘，它少量存在于普通的水里。氘原子核（氘核）由1个质子和1个中子组成。两个氘核碰撞时会发生如下两种反应之一：2氘核→氦-3+1个中子；2氘核→氢-3+1个质子 ^26295687-17-33986-34303\n    - ⏱ 2022-02-11 14:54:14\n\n## 第八章 无序的规律\n\n- 📌 毫无疑问，这说明布朗运动实际上是物质看不见的热运动造成的结果，而我们通常所说的温度其实不过是度量分子热运动剧烈程度的一种标准。人们研究了布朗运动和温度之间的关系，结果发现，当温度达到−273℃（即−459℉）时，物质分子会完全停止热运动，所有分子归于静寂。显然，这就是宇宙中的温度下限，我们称之为“绝对零度” ^26295687-18-1628-1782\n    - ⏱ 2022-02-11 14:58:04\n- 📌 高温下剧烈的热碰撞不仅会将分子撕裂成原子，还会剥夺原子的外层电子。如果温度升高到几十万甚至几百万度，这种热电离过程就会变得越来越明显。这样极端的高温超过了我们能在实验室里达到的上限，但在恒星尤其是太阳内部却很常见。就连原子也无法在这样的酷热环境中幸存，它的所有外层电子都会被剥夺，物质最终会变成赤裸的原子核与自由电子组成的混合物，电子在空间中高速运动，以极其强大的力量互相碰撞。不过，尽管原子已经残缺不全，但物质仍保留了最基本的化学性质，因为它的原子核仍原封未动。如果温度有所下降，原子核将重新捕获电子，再次形成完整的原子。 ^26295687-18-4271-4558\n    - ⏱ 2022-02-11 15:05:26\n- 📌 由于金属外层存在表面张力，所以这些电子无法离开，[插图]但在金属材料内部，它们的运动几乎完全是自由的。如果给金属丝施加一个电压，这些自由电子将顺着电压的方向运动，产生电流现象。从另一方面来说，非金属通常是良好的绝缘体，因为它们的所有电子都被束缚在原子内部，无法自由运动。 ^26295687-18-11084-11344\n    - ⏱ 2022-02-11 15:09:40\n- 📌 两个事件发生的概率。我们可以从数学上证明（见第二章），正弦曲线下方的面积正好等于1；由于矩形的总面积为[插图] ，我们发现，火柴与边界线（火柴长度等于条纹宽度的情况下）相交的概率是：[插图] 。在这个案例中，π竟然出人意料地冒了出来，18世纪的科学家布丰伯爵（Count Buffon）首次观察到了这个有趣的现象，所以“火柴与旗帜”问题又叫布丰问题。勤勉的意大利数学家拉兹瑞尼（Lazzerini）真的做了这个实验，他扔了3408次火柴，结果观察到，火柴与边界线相交的情况一共出现了2169次。将这个结果代入布丰方程，那么[插图]，精确到了小数点后第七位！ ^26295687-18-25596-26335\n    - ⏱ 2022-02-11 15:45:39\n- 📌 房间中空气分布的例子告诉我们，分子各种分布状态出现的概率常常是一些很不方便的极小的数字（比如说，所有空气集中在半个房间中的概率是[插图]），所以我们一般用对数来指代它们。这个物理量叫作熵，在所有与物质不规律热运动有关的问题中，熵是一个非常重要的参数。刚才我们描述物理过程中概率变化的那句话可以重新表述为：物理系统中任何自发的过程必然朝着熵增的方向发展，直至最后达到熵最大的平衡态。这就是著名的熵增定律，又叫热力学第二定律（第一定律是能量守恒定律），你已经看到了，这条定律其实并不可怕。 ^26295687-18-29660-30141\n    - ⏱ 2022-02-11 15:49:01\n\n## 第九章 生命之谜\n\n- 📌 活细胞独特的基本性质包括下面几种能力：1.从周围介质中摄取自己需要的养料；2.将这些养料转化为生长发育所需的物质；3.活细胞的几何尺寸增长到一定程度以后会分成两个相似的细胞，其中每个细胞都跟自己原来的尺寸差不多，而且可以生长发育。当然，独立细胞组成的更复杂的生命体也普遍拥有这三种能力：“进食”“发育”和“繁殖”。 ^26295687-19-2991-3155\n    - ⏱ 2022-02-11 15:56:56\n- 📌 但基因到底是什么？或许基因也是一种复杂的“动物”，我们可以继续将它拆分成更小的生物单元？这个问题的答案非常清晰：不行。基因的确是最小的生物单元。我们不但确信基因拥有生命区别于非生命的所有特征，还可以很有把握地说，它和非生命复杂分子（例如蛋白质分子）的关系也十分密切，这些分子完全遵循我们熟悉的普通化学定律。 ^26295687-19-19851-20004\n    - ⏱ 2022-02-13 09:50:03\n- 📌 和其他化学反应一样，它遵循基本的化学动力学定律：温度每升高10℃，化学反应的速率大约就会提高一倍。 ^26295687-19-22607-22674\n    - ⏱ 2022-02-13 09:54:10\n- 📌 事实上，如果完全采用化学手段来研究病毒材料，你很容易发现，病毒也应该被视为一种结构精妙的化合物。 ^26295687-19-27348-27414\n    - ⏱ 2022-02-13 10:02:07\n\n## 第十章 不断扩展的地平线\n\n- 📌 事实上，要观察到月球相对于遥远恒星背景的视差，光学基线——也就是双眼之间的距离——至少应该达到几百英里的长度。当然，我们不必真的制造一台能将你的双眼拉开这么远的装置，比如说左眼在华盛顿，右眼在纽约，只需要同时从这两座城市拍摄星空背景上的月亮就行。把这两张照片放到立体镜里，你就能看到月亮悬挂在星空中。通过测量同一时刻在地球上不同地点拍摄的月球与星空的照片，天文学家发现，如果从地球表面的两个对跖点观察，月球的视差距离是1°24′5″。由此计算可得，地球到月亮的距离相当于地球直径的30.14倍，也就是384,403千米，或者说238,857英里。 ^26295687-21-5149-5422\n    - ⏱ 2022-02-13 10:09:30\n- 📌 既然我们可以利用地球本身的尺寸测量地球公转轨道的大小，那又为什么不能利用公转轨道的尺寸来测量恒星的距离呢？换句话说，从地球轨道的两端观察，我们或许有可能看到至少部分恒星的相对位移。当然，这意味着我们需要等待半年才能完成两次观察，但这又有何不可呢？ ^26295687-21-6562-6685\n    - ⏱ 2022-02-13 10:11:00\n- 📌 但事实上，银河并未分岔，你之所以会产生这样的错觉，只是因为太空中有一大团黑暗的星际尘埃和气体，它正好挡住了银心。银河中间的这片暗区与“河道”两侧漆黑的夜空不太一样，后者来自空旷宇宙的漆黑背景，而前者是因为不透明的暗云遮挡。中央暗区中寥落的几颗恒星实际上位于云团前方，也就是我们和暗云之间（图112）。 ^26295687-21-10698-10848\n    - ⏱ 2022-02-13 10:38:11\n- 📌 虽然我们的太阳控制着太阳系内的所有行星，但银心并不是一颗主宰本星系所有天体的超级恒星。对其他星系核心区域的研究（稍后我们再讨论这方面的内容）表明，星系中心依然由无数恒星组成，唯一的区别在于，这里的恒星密度远大于星系外围（也就是我们的太阳所在的区域）。 ^26295687-21-11256-11381\n    - ⏱ 2022-02-13 10:39:10\n- 📌 太阳绕着银心转一整圈大约需要2亿年。当然，这是一段漫长的时间，不过别忘了，我们的太阳系已经50亿岁了，也就是说，它已经带着整个家族的所有行星绕着银心转了差不多20圈。参照地球年的定义，我们可以将太阳的公转周期定义为“太阳年”，以这个标准来衡量，我们的宇宙只有20岁。 ^26295687-21-14028-14161\n    - ⏱ 2022-02-13 10:42:58\n- 📌 夜空中的恒星多不胜数，其中大多数恒星只会默默发光，但某些恒星的亮度会按照一定的规律变化，它们从明到暗，然后由暗复明，如此不断循环。这些巨型天体的脉动像心跳一样富有节律，它们的亮度也会随脉动发生周期性的变化。[插图]个头越大的恒星脉动周期越长，就像钟摆越长就摆得越慢。特别小的造父变星（以恒星的标准而言）只需几个小时就能完成一个周期，而那些巨无霸的脉动周期可能长达数年。越大的恒星当然就越亮，所以造父变星的脉动周期和平均亮度之间存在明显的联系。有的造父变星离我们很近，所以我们可以直接测量它们的距离，进而推算它们的实际亮度；借助这座桥梁，我们可以算出这种类型的恒星脉动周期和亮度之间的一般关系。 ^26295687-21-15847-16251\n    - ⏱ 2022-02-13 10:44:47\n\n## 第十一章 创世年代\n\n- 📌 这个假设基于所谓的“多普勒效应”：如果光源正在靠近我们，那么光的颜色会偏向光谱的紫端；反过来说，正在远离我们的光线看起来偏红。 ^26295687-22-25008-25071\n    - ⏱ 2022-02-14 15:08:08\n\n# 读书笔记\n\n## 第六章 下降的阶梯\n\n### 划线评论\n\n- 📌 当然，我们没有理由预先假设经典力学定律就一定无法解释原子内部细微部件的运动；但是从另一方面来说，如果真的遭遇了这样的失败，我们也不必过于惊讶。 ^16142247-7wZd28PtU\n    - 💭 当平常遇到事的时候也是如此，不去指望一条经验能适用所有情况，找出特定条件的范围。\n    - ⏱ 2022-02-11 11:12:42\n\n### 划线评论\n\n- 📌 原子结构非常稳定，原子内部的电子高高兴兴、不知疲倦地绕着中央的原子核绕圈，绝不损失任何能量，更没有坠落的迹象！ ^16142247-7wZcJqnMu\n    - 💭 那不是永动机了\n    - ⏱ 2022-02-11 11:08:05\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7x43yjJ0Z  \n⏱ 2022-02-14 15:41:17\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%8E%E5%8F%A5":{"title":"从句","content":"\n# 从句\n\n## 限定和非限定性从句\n\n[限定和非限定性从句区别\\_高三网](http://www.gaosan.com/gaokao/262510.html)\n\n定语从句。which 和 that 都可以引导限定性定语从句，但引导非限定性定语从句只能用 which,替代前面一个句子。意为“这…”。\n\n名词性从句（主语从句）。that 引导的从句作主语并且位于句首, that 在主语从句中无记义，但不能省略。  \n名词性从句。the reason…is that…之中的 that 引导表语从句。表示原因的表语从句也可以由 because 引导，其结构是：this / that is because…..\n\n定语从句。在表示地点的一些特定名词如 place, room, country, street 等之后，可接一个由 where 或 in which 引出的限制性定语从句。\n\n\\*\\*\n","lastmodified":"2023-09-18T14:54:47.502454286Z","tags":null},"/%E4%BB%99%E7%AB%A5%E5%85%AB%E5%8F%9B%E5%BE%92":{"title":"仙童八叛徒","content":"\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230619103950.png)\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A3%E6%89%BE-PDF":{"title":"代找 PDF","content":"\n会被咸鱼封号。参考咸鱼封号理由，最好考虑一下书籍盗版和国家管控问题，\n\n前景： 可以说就是体力活，一本两块，一个月 1000 本的话大概也就 2000  \n但是必须得先下场，才能有做软件的思路。充分发挥程序员的优势\n\n# 代找 PDF\n\n- [电子书网站大全](https://wx.zsxq.com/dweb2/index/topic_detail/211511885185551)\n- [千千学院海量电子书资源](https://docs.qq.com/doc/DTW5UdXVudm9HSWpT)\n\n## 豆瓣\n\n豆瓣读书页面，可以看到有PDF、mobi、epub等多种格式，收录了什么格式就会显示什么格式\n\n## Z站\n\n网址大家都知道，我推荐用客户端下载，第一稳定，第二库存较全，第三下载速度贼快，几百兆的文件只需要几秒钟，网页版可能得10分钟。\n\n## 无名图书\n\n[无名书籍](https://book123.info/)，好处是下载很方面，搜索库存大。坏处是24小时之内只能下载20本，有数量限制，\n\n## 古籍\n\nWindows 版本: https://pan.baidu.com/s/1i9XEg1y4iIcCoZEbeY6NJw?pwd=9yfh\n\n# 开干\n\n[[淘宝店铺]]\n\n资源存储到[[阿里云盘]]和[[夸克网盘]]上，顺便做拉新任务\n\n看后续能不能做一个[[Chrome插件]]或者[[小程序]]\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F":{"title":"代理模式","content":"\n## 例子\n\n- 事件冒泡\n- 防火墙代理：控制网络资源的访问，保护主题不让“坏人”接近。\n- 远程代理：为一个对象在不同的地址空间提供局部代表，在 Java 中，远程代理可以是另一个虚拟机中的对象。\n- 保护代理：用于对象应该有不同访问权限的情况。\n- 智能引用代理：取代了简单的指针，它在访问对象时执行一些附加操作，比如计算一个  \n  对象被引用的次数。  \n  写时复制代理：通常用于复制一个庞大对象的情况。写时复制代理延迟了复制的过程，当对象被真正修改时，才对它进行复制操作。写时复制代理是虚拟代理的一种变体，DLL（操作系统中的动态链接库）是其典型运用场景。\n\n## 总结\n\n代理模式包括许多小分类，在 JavaScript 开发中最常用的是虚拟代理和缓存代理。虽然代理模式非常有用，但我们在编写业务代码的时候，往往不需要去预先猜测是否需要使用代理模式。当真正发现不方便直接访问某个对象的时候，再编写代理也不迟\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5":{"title":"代码片段","content":"\n## 一些优秀的代码片段\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84":{"title":"代码重构","content":"\n## 提炼函数\n\n如果在函数中有一段代码可以被独立出来，那我们最好把这些代码放进另外一个独立的函数  \n中。这是一种很常见的优化工作，这样做的好处主要有以下几点。\n\n- 避免出现超大函数。\n- 独立出来的函数有助于代码复用。\n- 独立出来的函数更容易被覆写。\n- 独立出来的函数如果拥有一个良好的命名，它本身就起到了注释的作用\n\n## 合并重复的条件片段\n\n如果一个函数体内有一些条件分支语句，而这些条件分支语句内部散布了一些重复的代码，  \n那么就有必要进行合并去重工作。\n\n## 把条件分支语句提炼成函数\n\n在程序设计中，复杂的条件分支语句是导致程序难以阅读和理解的重要原因，而且容易导致一个庞大的函数。\n\n```javascript\nvar isSummer = function () {\n\tvar date = new Date();\n\n\treturn date.getMonth() \u003e= 6 \u0026\u0026 date.getMonth() \u003c= 9;\n};\n\nvar getPrice = function (price) {\n\t// if ( date.getMonth() \u003e= 6 \u0026\u0026 date.getMonth() \u003c= 9 ){\n\tif (isSummer()) {\n\t\t// 夏天\n\t\treturn price * 0.8;\n\t}\n\treturn price;\n};\n```\n\n## 提前让函数退出代替嵌套条件分支\n\n许多程序员都有这样一种观念：“每个函数只能有一个入口和一个出口。”现代编程语言都会限制函数只有一个入口。但关于“函数只有一个出口”，往往会有一些不同的看法。\n\n下面这段伪代码是遵守“函数只有一个出口的”的典型代码：\n\n```javascript\nvar del = function (obj) {\n\tvar ret;\n\tif (!obj.isReadOnly) {\n\t\t// 不为只读的才能被删除\n\t\tif (obj.isFolder) {\n\t\t\t// 如果是文件夹\n\t\t\tret = deleteFolder(obj);\n\t\t} else if (obj.isFile) {\n\t\t\t// 如果是文件\n\t\t\tret = deleteFile(obj);\n\t\t}\n\t}\n\treturn ret;\n};\n```\n\n重构后：\n\n```javascript\nvar del = function (obj) {\n\tif (obj.isReadOnly) {\n\t\t// 反转 if 表达式\n\t\treturn;\n\t}\n\tif (obj.isFolder) {\n\t\treturn deleteFolder(obj);\n\t}\n\tif (obj.isFile) {\n\t\treturn deleteFile(obj);\n\t}\n};\n```\n\n## 传递对象参数代替过长的参数列表\n\n## 尽量减少参数数量\n\n## 少用三目运算符\n\n## 合理使用链式调用\n\n使用链式调用的方式并不会造成太多阅读上的困难，也确实能省下一些字符和中间变量，但节省下来的字符数量同样是微不足道的。链式调用带来的坏处就是在调试的时候非常不方便，如果我们知道一条链中有错误出现，必须得先把这条链拆开才能加上一些调试 log 或者增加断点，这样才能定位错误出现的地方。\n\n## 用 return 退出多重循环\n\n假设在函数体内有一个两重循环语句，我们需要在内层循环中判断，当达到某个临界条件时退出外层的循环。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A5%E5%A4%AA%E5%9D%8A":{"title":"以太坊","content":"\n# 以太坊\n\n以太坊不同于比特币，是一个[[图灵完备]]的系统\n\n## 为了解决什么问题？\n\n当时，人们已经意识到了比特币背后这套体系的能力，并尝试在数字货币技术的基础上推广到更广泛的应用领域。但是开发者面临着一个难题：他们要么在比特币的大厦上添砖加瓦，要么就需要从头开始实现一个新的区块链。**在比特币基础上构建意味着必须接受比特币网络的种种限制，并尝试找到解决办法。比特币对数据存储的类型和规模有特殊的要求，这些要求限制了在比特币之上作为第二层解决方案可以运行的应用的类型。** 程序员所构建的应用只能建立在这些有限的变量、交易类型和数据之上，无法发挥公共区块链的众多优势。对于需要更多自由度和更复杂的应用，从头开始实现一个新的区块链是唯一的选择。但是从头开始实现一个新的区块链也意味着需要在基础架构、测试等领域白手起家。\n\n## 历史\n\n- 2013 年 10 月，[[Vitalik Buterin]] 向 Mastercoin 团队提出了一个更具通用性的想法——可以用于替代 Mastercoin 专用合约语言的更灵活和脚本化（但还不是图灵完备）的合约机制。\n- 2013 年 12 月，Vitalik 分享了一份白皮书，这份白皮书勾勒了以太坊背后的思想：一个图灵完备的通用目的的区块链。一些人阅读了白皮书并给 Vitalik 发回了反馈，帮助他逐步地完善这个想法。\n- 2015 年 7 月 30 日，第一个以太坊区块被挖矿成功。“世界计算机”开始为全世界提供服务。\n- 以太坊开启了通用目的区块链用于构建多种应用的道路。很快，以太坊的愿景扩展为用于去中心化应用（DApp）的编程平台。[[DApp]] 代表了更为广泛的“智能合约”。\n\nVitalik Buterin 在 2017 年 9 月撰写了一篇名为《以太坊史前回忆》的文章，以第一人称描述了以太坊早期发展的精彩历程。你可以在这里阅读这篇文章：[《以太坊史前回忆》](http://vitalik.ca/general/2017/09/14/prehistory.html)。\n\n## 以太坊的组件\n\n前文“区块链的组件”中所描述的内容，在以太坊中所对应的组件如下：\n\n- **点对点（P2P）**：网络以太坊运行在 Ethereum Main Network 上，这是一个通过 TCP 30303 端口寻址的网络，网络层运行的协议名为-D ΞVp2p。\n- **共识规则** : 以太坊的共识规则，由以太坊黄皮书（见后文中的“扩展阅读”）中的参考标准进行精确定义。\n- **交易**：以太坊交易是一个网络消息，主要包含交易的发送方、接收方、价值和数据载荷。\n- **状态机**：以太坊的状态转换由以太坊虚拟机（EVM）处理，这是一个基于栈的虚拟机，执行 bytecode（字节码指令）。被称为“智能合约”的 EVM 程序采用高级语言（例如 Solidity）编写，并编译为通过 EVM 执行的字节码。\n- **数据结构**：以太坊的区块链以数据库（通常采用 Google 的 LevelDB）的方式保存在每一个节点之上，区块链内包含了交易和系统的状态，经过哈希处理的数据保存在 Merkle Patricia Tree 数据结构之内。\n- **共识算法**：以太坊使用比特币的共识模型 Nakamoto Consensus，它使用顺序单一签名块，由 PoW 加权重要性来确定最长链，从而确定当前状态。但是，有计划在不久的将来转向代号为 Casper 的 PoS 加权投票系统。\n- **经济安全性**：以太坊当前使用名为 Ethash 的工作量证明算法，这个算法迟早将被放弃，并切换到 PoS。\n- **客户端** ：以太坊有多个可以互相交互的客户端软件实现，其中最广泛使用的是 Go-Ethereum（Geth）和 Parity。\n\n## 遇到的问题\n\n### 图灵完备中遇到 DDos 攻击\n\n但是根据图灵的理论，在真正运行合约之前，以太坊实际上无法预先判断一个合约是否会运行终止，或者它需要运行多久，也许这个合约会陷入死循环一直运行。。如果无法提前预估，那么以太坊如何防止智能合约过度使用资源呢？\n\n#### Gas\n\n为了应对这个挑战，以太坊引入了名为 gas 的计量机制。EVM 在执行智能合约时，它会仔细地计算每一个执行指令（计算量、数据访问，等等）。每一个指令都有一个预先定义好的开销，以 gas 为单位。当以太坊交易触发了智能合约的执行时，交易中必须包含这个智能合约执行过程中所需要的计算资源开销的上限。如果执行过程中的资源开销量超过了交易中指定的 gas 上限，那么 EVM 就会主动终止这个合约的执行。以太坊通过 gas 机制，在保证图灵完备计算的同时，限制了程序可以使用的资源量。\n\n##### 如何在以太坊世界计算机上获得 gas 以支付计算开销？\n\n你不会在任何交易所找到 gas。它只能作为交易的一部分购买，并且只能通过以太币购买。以太币需要与交易一起发送，并且需要明确标记 gas，以及可接受的 gas 价格。\n\n## 钱包\n\n[[MetaMask]]、[[Jaxx]]、[[MyEtherWallet]]、[[Emerald Wallet]]  \n[[私钥管理]]\n\n## 如何加密保证不会泄密\n\n这里密码学可以分为对称加密和非对称加密  \n对称加密就是两边都具有相同的秘钥对同一信息加密，这样的加密方式对秘钥的保存  \n非对称加密举个例子来说就是，你可以很容易的通过两个质数得到一个和，但你很难从一个大数中得出是哪两个质数。以太坊用的加密算法就是根据椭圆圆锥曲线得到的两个值，进行模乘运算，但进行反向运算是几乎不可能的。  \n公钥和私钥一起表示一个以太坊账户，公钥用于可访问账户管理（也就是地址），而私钥用于控制账户内持有的以太币，并控制使用智能合约时所需的认证程序。\n\n[[哈希算法]]\n\n### 公钥\n\n每个以太坊公钥都是椭圆曲线上的一个点，也就是说，每个公钥都是一组 x、y 坐标，这个坐标正好满足椭圆曲线方程。  \n简单地说，以太坊的公钥由两个数字组合在一起。这两个数字由私钥经过单向计算得来。这意味着通过私钥计算获得公钥是非常容易的，但是你不能反过来通过公钥算出它所对应的私钥。这个神奇的数学算法造就了不可篡改和安全的数字签名，用来证明以太币的所有权，以及对合约进行控制。\n\n## 以太坊地址\n\n以太坊地址是唯一标识符，从公钥或者合约通过单向哈希函数 [[Keccak-256]] 计算而来。\n\n## 学习资料\n\n[# 以太坊智能合约 —— 最佳安全开发指南](https://github.com/ConsenSys/smart-contract-best-practices/blob/master/README-zh.md)  \n[精通以太坊：开发智能合约和去中心化应用](https://weread.qq.com/web/reader/c0532740718247c1c0545f7kc20321001cc20ad4d76f5ae)\n\n### 密码学\n\n现代密码学与其数学函数的内容，可以进行以下扩展阅读：\n\n- 密码学：https://en.wikipedia.org/wiki/Cryptography 。·\n- 陷门函数：https://en.wikipedia.org/wiki/Trapdoor_function 。\n- · 质因数分解：https://en.wikipedia.org/wiki/Integer_factorization 。·\n- 离散对数：https://en.wikipedia.org/wiki/Discrete_logarithm 。·\n- 椭圆曲线密码学：https://en.wikipedia.org/wiki/Elliptic-curve_cryptography 。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%A5%E6%96%AF%E6%8B%89":{"title":"以斯拉","content":"\n以斯拉是位大祭司，来自耶路撒冷一个具有影响力的祭司家族，生活的年代比[[耶利米]]晚了一个世纪。以斯拉精通法律，曾经担任波斯帝国的高官。但后来，他为了重振犹太民族，将摩西的法律传给犹太人，他放弃了自己的高位，向当时波斯帝国的皇帝薛西斯请求返回耶路撒冷。\n\n在得到薛西斯的同意后，以斯拉带领了一大批犹太人回到耶路撒冷。根据《圣经》中的记载，他虔诚地向上帝祈祷，承认过去犹太人所犯的罪，希望犹太人能够改过。他的祈祷感动了百姓，大家无不因此而痛哭。百姓们于是接受了以斯拉的思想，并在以斯拉的带领下重建了圣殿。犹太的历史，也进入了第二圣殿时期。\n\n以斯拉的事迹被记录在《圣经∙以斯拉记》中。在这一章中，以斯拉对犹太人的告诫，对后来的犹太教徒和基督徒都产生了极大的影响，他们的生活态度在很大程度上是来源于此的，我挑选一些重要的给你讲讲。比如第一，以斯拉强调在神面前要有所敬畏，虔诚；第二，以斯拉劝诫犹太人要为神努力工作，甘心奉献，快乐地从事上帝的工作会得到神的嘉许和祝福。第三，神会始终如一地提供百姓的需要，并且祝福相信他的人。另外，为人要谦卑，有错必改，不要结交不良的朋友。最后，就是要约束自己的欲望\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%B7%E5%80%BC%E6%88%91%E5%AF%B9%E6%8A%95%E8%B5%84%E7%9A%84%E6%80%9D%E8%80%83":{"title":"《 价值：我对投资的思考 》","content":"\n# 《 价值：我对投资的思考 》\n\n# 元数据\n\n\u003e [!abstract] 价值：我对投资的思考\n\u003e - ![ 价值：我对投资的思考|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/958/33577958/t7_33577958.jpg)\n\u003e - 书名： 价值：我对投资的思考\n\u003e - 作者： 张磊\n\u003e - 简介： 全书共3个部分10个章节，介绍了张磊的个人历程、他所坚持的投资理念和方法以及他对价值投资者自我修养的思考，还介绍了他对具有伟大格局观的创业者、创业组织，以及对人才、教育、科学观的理解。书中包含大量珍贵资料，不仅有首次提出的7大高瓴公式，详细拆解的10多个投资案例，还有11张精致手绘彩插和19张珍贵照片。\n\u003e - 出版时间 2020-09-01 00:00:00\n\u003e - ISBN： 9787572201882\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 浙江教育出版社\n\n# 高亮划线\n\n## 第1章 价值的底色\n\n- 📌 人生中很重要的一件事是，找一帮你喜欢的、真正靠谱的人，一起做有意思的事。 ^33577958-8-4421-4457\n    - ⏱ 2021-02-02 15:16:56\n- 📌 读书、思考、实践，对这个世界的好奇和探索，使我在很小的时候就明白，追求事业和梦想，必须对自己有所承诺，着眼于长远，全神贯注并全力以赴。在不同的际遇中，学习所有能学习到的最高标准，从而获得理解与洞察的能力，这是我一直以来坚持的长期主义。我对投资的思考·　构建属于自己的知识体系和思维框架，是塑造投资能力的起点。·　在快速变化的市场中寻得洞见，不仅需要掌握金融理论和商业规律，还要全面回顾历史的曲折演进，通晓时事的来龙去脉，更要洞悉人们的内心诉求。·　价值投资不是数学或推理，不能纸上谈兵，必须像社会学的田野调查一样，理解真实的生产生活场景，才能真正掌握什么样的产品是消费者所需要的、什么样的服务真正有意义。·　人生中很重要的一件事是，找一帮你喜欢的、真正靠谱的人，一起做有意思的事。 ^33577958-9-3270-3917\n    - ⏱ 2021-02-02 15:19:56\n\n## 第4章 价值投资方法与哲学\n\n- 📌 投资中最贵的不是钱，而是时间。做投资非常重要的是时间管理，把时间投入到怎样的问题上和怎样的人身上，是决定投资能否成功的基础性因素。 ^33577958-25-3289-3354\n    - ⏱ 2021-02-02 16:51:09\n- 📌 因此，在未来的商业逻辑中，企业从求赢变成不断追求新的生长空间，从线性思考变成立体思维，从静态博弈变成动态共生 ^33577958-26-6163-6220\n    - ⏱ 2021-02-02 17:00:43\n\n## 第5章 价值投资者的自我修养\n\n- 📌 晚清名臣张之洞在修建卢汉铁路时提出了“储铁宜急，勘路宜缓，开工宜迟，竣工宜速”的指导原则，这句话用来形容克服投机的心态尤为贴切 ^33577958-33-1877-1940\n    - ⏱ 2021-02-03 14:56:05\n- 📌 同时，在刚一开始时就充分讨论，这样在最早看这个生意的时候，就有不断反馈的过程，而不是等到有结论的时候再去反馈，因为有结论了再去反馈则需要克服更多人性的弱点。所以这个自我反馈其实是在过程中的反馈，而不是对结论的反馈。 ^33577958-34-3452-3559\n    - ⏱ 2021-02-03 15:19:44\n\n## 第7章 持续创造价值的卓越组织\n\n- 📌 。从某种程度上说，不是组织雇用了员工，而是员工使用了组织的公共设施和服务。同时，赋能型组织是一个文化载体，员工因为享受这里的文化，从而获得身份认同、使命认同 ^33577958-57-2118-2196\n    - ⏱ 2021-02-04 14:34:13\n\n## 附录 我的演讲和文章\n\n- 📌 我们不可能拥有真理，我们只能无限接近它”。那这时你就需要一个能做到“理性的诚实”的人和你一起对同一件事情从不同的角度去争论，去辩论，去讨论，真理总是越辩越明的。 ^33577958-81-2364-2444\n    - ⏱ 2021-02-04 17:06:58\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7nROjhByP  \n⏱ 2021-02-04 18:26:19\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BB%B7%E5%80%BC%E6%88%91%E5%AF%B9%E6%8A%95%E8%B5%84%E7%9A%84%E6%80%9D%E8%80%83%E5%BC%A0%E7%A3%8A":{"title":"价值：我对投资的思考（张磊）","content":"\n# 价值：我对投资的思考（张磊）\n\n## 提出问题\n\n什么是价值？\n\n这本书的核心观点是什么？\n\n我们该如何选股？\n\n我们应该怎么看待理财？\n\n## 读书笔记\n\n苏联作家米哈依尔·肖洛霍夫（Mikhail Sholokhov）创作的长篇小说《静静的顿河》\n\n读书、思考、实践，对这个世界的好奇和探索，使我在很小的时候就明白，追求事业和梦想，必须对自己有所承诺，着眼于长远，全神贯注并全力以赴。在不同的际遇中，学习所有能学习到的最高标准，从而获得理解与洞察的能力，这是我一直以来坚持的长期主义。我对投资的思考·　构建属于自己的知识体系和思维框架，是塑造投资能力的起点。\n\n- 在快速变化的市场中寻得洞见，不仅需要掌握金融理论和商业规律，还要全面回顾历史的曲折演进，通晓时事的来龙去脉，更要洞悉人们的内心诉求。\n- 价值投资不是数学或推理，不能纸上谈兵，必须像社会学的田野调查一样，理解真实的生产生活场景，才能真正掌握什么样的产品是消费者所需要的、什么样的服务真正有意义\n- 生中很重要的一件事是，找一帮你喜欢的、真正靠谱的人，一起做有意思的事。\n\n神奇的1994年\n\n1994年4月20日，一条64Kbps的国际专线从中关村地区教育与科研示范网络(5)联入世界互联网，实现了中国与国际互联网的全功能接入\n\n尝试可能只是意气，但坚持却是勇气\n\n从更长期看，21世纪很有可能是属于中国的世纪，这十几年只是整个历史大周期中很早期的阶段，冰山才刚刚露出一角，还有很大的机会往前推进。\n\n《证券分析》 - 投资者的圣经\n\n零售业研究\n\n沃尔玛和凯马特\n\n沃尔玛 采用农村包围城市的政策，深耕农村，并是美国最早运用高科技，将计算机、数据引用到零售业的公司之一，最大的私有卫星系统，坚持每日低价，不需要精打细算\n\n凯马特 占据城市核心地段，凯马特会搞活动式促销，消费者在促销时大量购物，在非促销时延迟购物，这导致供应链扭曲，库存奇高，供应商苦不堪言；\n\n有点像淘宝双十一和拼多多啊= =\n\n好市多（Costco） 通过成本价售卖，所以价格会比竞品低，靠会员费\n\n但有意思的是，对于有些成本价很低的商品，消费者不相信价格会那么便宜，或者说不相信那么便宜的商品是好的商品，于是好市多又把价格定得高于成本但略低于竞争对手的价格。这样，它的营收就不仅仅来源于会员费，还包括零售价差。\n\n奥乐齐 最大的特点就是几乎所有的商品都没有品牌，他们认为品牌会产生广告费，这些都会转嫁到消费者身上。\n\n零售是和人联系非常紧密的生意，它突出解决的是“安全感”“便利性”“幸福感”的问题。\n\n时间是好生意与好创业者的朋友，\n\n每一个投资人都要搞清楚的是，能随着时间的流逝加深护城河的，才是“资产”，时间越久对生意越不利的，则是“费用”。\n\n**投资中最贵的不是钱，而是时间。做投资非常重要的是时间管理，把时间投入到怎样的问题上和怎样的人身上，是决定投资能否成功的基础性因素。**\n\n如果在投资企业5年、10年之后尚不退出，看起来似乎是“长期投资”，但如果不去复盘和迭代，“长期投资”就成了思维和行动懒惰的借口，就变得毫无意义。\n\n对于一家企业来说，如果能够在变化的时代浪潮和市场环境中不断地创新，具备从一条曲线跳到另一条曲线的能力，我们就可以认为它具备了不断深挖护城河的能力。\n\n**在未来的商业逻辑中，企业从求赢变成不断追求新的生长空间，从线性思考变成立体思维，从静态博弈变成动态共生**\n\n如果说价值投资的出发点是发现价值的话，其落脚点应该是创造价值。\n\n**价值投资者显然很难找到被极度低估的投资标的，更不可能仅仅通过翻阅公司财务报表或者预测价值曲线就发现投资机会。**同时，技术进步使得企业及其所处环境发生了巨大演变，新经济企业的估值方法也与传统企业完全不同，寻找可靠的、前瞻性的新变量成为价值投资演化的核心所在。\n\n第一性原理的最大价值在于两点，其一是能够看清楚事物的本质，其二是能够在理解本质的基础上自由地创新。\n\n晚清名臣张之洞在修建卢汉铁路时提出了“储铁宜急，勘路宜缓，开工宜迟，竣工宜速”的指导原则，这句话用来形容克服投机的心态尤为贴切。\n\n**价值投资中的“价值”并不是绝对的低市盈率，而是综合考虑买入股票的各项指标，例如公司开展的是不是可以让人理解的业务，未来的发展潜力，以及现有的营收、市场份额、有形资产、现金持有、市场竞争等。**\n\n**规避风险陷阱的办法之一就是本杰明·格雷厄姆所说的寻求安全边际。把情况想到最坏，看看最坏的情况发生后还有哪些次生伤害，有没有反身性(30)，看看灾难来临时有没有自救手段或者“逃生舱”，始终对不确定性保持理性的谦卑，这些都是安全边际的内涵。另外一个角度就是判断企业持续创造价值的能力，持续创造价值就是最大限度地减少风险，这可以理解成以攻为守。**\n\n靠谱的人才：\n\n- 自驱型。自驱型的人寻找事情背后的意义，追求人生的意义感，拥有专注解决问题的最佳效率，而不需要更大的组织规模。\n- 时间敏感型\n- 有同理心的人。有同理心的人往往习惯于换位思考和通盘考虑，而不是机械地完成任务。\n- 终身学习者。拥有成长型思维（GrowthMindset）的人更加重视学习和挑战，把学习作为终身的乐趣和成就，而不是短暂的、功利性的斩获。\n\n看医药。研发投入，恒瑞医药，百济神州\n\n零售的关键不仅仅在于商品，还在于体验，包括购买前、中、后的一系列体验，使得消费者随时可触达、随时可决策、随时可终结。\n\n“传统行业+‘ABC’”，“ABC”指人工智能（AI）、大数据（Big Data）、云计算（Cloud），\n\n贝壳找房正在做的，就是打造在未来大居住交易基础设施中非常重要的一个平台，并且努力将科技和整个产业相结合。\n\n需求端来看，人们过去在线下找房、看房的需求正在发生历史性的、向线上的迁移，贝壳找房创新性地通过真房源系统、增强现实（AR）、虚拟现实（VR）等科技手段来丰富找房、看房、选房的消费体验\n\n从供给端来看，就“如何优化房源委托、带看、服务、交付等环节，为消费者匹配最合适的房源、提供最好的资产配置服务”这个问题，企业无论采用线上化的方式，还是科技赋能手段，都有巨大的发挥空间。\n\n经纪人合作网络机制，并且将它对全部从业机构和从业人员开放，使得全行业的经纪人都能够在统一的运营平台上提供服务，以确保房地产经纪人之间实现有序、透明、高效的合作，提高房地产经纪人的服务效率和房产交易效率，从而在不损害消费者利益的前提下提高房地产经纪人的收入水平，使其以更好的心态为消费者提供服务。值得一提的是，这种机制在国外往往由被称为“多重上市服务系 统”（Multiple Listing Service，简称MLS）的行业自律系统来维护，贝壳找房的这项创举对于整个行业来说都是一项了不起的探索。贝壳找房结合中国国情，创建了具有中国特色的MLS，并将其开放给了全行业，将企业目标和社会责任有机地结合起来，这的确可以说是一项了不起的成就。\n\n我们不可能拥有真理，我们只能无限接近它”。那这时你就需要一个能做到“理性的诚实”的人和你一起对同一件事情从不同的角度去争论，去辩论，去讨论，真理总是越辩越明的。\n\n## 读后感\n\n这本书前半本我是想给三颗星的，有点读着很正确的鸡汤，但实际没有品位出什么来的感觉，后面半本对各行各业的看法，思考的角度，如何深入的调研可以说是极大的打开了我的视野。作为一本给投资人看的书，现在能体会到的还不够多，对于如何选股的帮助也一般。相信价值投资的力量，做时间的朋友。这是最近我最常听到的投资准则，但知易行难，比如高瓴早期看好京东并希望其能之间物流系统完成亚马逊没有完成的是，在坚定持有8年后选择抛售，然后近两年京东又暴涨。我想这应该是高瓴一个对价值投资的打脸，我们要引以为鉴。\n\n### 什么是价值?\n\n价值是经过深入研究以后，帮助和公司建立自己的护城河，通过高科技结合传统行业进行产业升级，并长期的看好其未来，和他一起成长，长期持有\n\n### 这本书的核心观点是什么？\n\n做时间的朋友\n\n### 我们该如何选股？\n\n我现在没有很多一手资料，目前是想要选一个护城河深的行业并做好持有十年的准备，也把高瓴推荐的几个股加入自选继续观察\n\n### 我们应该怎么看待理财？\n\n既然持股是一件长期的事情，我准备把他作为教育和养老基金的配置，准备将金额的10%-20% 投入股市，50%投入基金定投，将生活费保持在30%以下。最近准备把10只基收缩到3只基，更好掌控，选好赛道，做时间的朋友！\n\n## 读书记录\n\n2021.01.30 - 2021.02.05 一刷完成\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E4%BC%9A%E9%A5%AE%E7%AF%87":{"title":"《会饮篇》","content":"\n在《会饮篇》中，柏拉图则阐述了什么是爱，什么是美。我们今天知道有一个被称为“柏拉图式恋爱”的说法，其实就来自于柏拉图对爱的理解。在柏拉图看来，爱有三个层次，也就是迷恋肉体的、凡俗的爱，钟爱灵魂的、天上的爱，以及最终抽象的，对美的追求。至于美，也有三个层次，外在的形体之美，内在的知识之美，以及境界最高的自在自足的美的本身。\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E4%BC%AF%E7%BD%97%E5%A5%94%E5%B0%BC%E6%92%92%E6%88%98%E4%BA%89":{"title":"伯罗奔尼撒战争","content":"","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BC%B0%E5%80%BC%E7%9A%84%E6%A0%87%E5%B0%BA":{"title":"《 估值的标尺 》","content":"\n# 《 估值的标尺 》\n\n# 元数据\n\n\u003e [!abstract] 估值的标尺\n\u003e - ![ 估值的标尺|200](https://weread-1258476243.file.myqcloud.com/weread/cover/17/YueWen_37595152/t7_YueWen_37595152.jpg)\n\u003e - 书名： 估值的标尺\n\u003e - 作者： 马喆\n\u003e - 简介： 《估值的标尺》是一本立足估值分析的价值投资实战工具书。 股价短期可能是市场随心所欲在出价，但长期一定围绕股票的内在价值上下波动。作者十年磨一剑，通过实践经验，试着用生意的思维方式制作了一把“估值的标尺”，去测算股票的内在价值。本书通过独到的生意思维、逻辑思维、保守主义思维形成科学的价值投资观，结合估值的标尺、定性定量分析和实践案例解析，分享有效的价值投资方法论，剖析人性与投资的联系，希望投资者树立理性、客观的投资态度，帮助投资者在价值投资的路上少走弯路，有所收获。\n\u003e - 出版时间 2021-03-15 00:00:00\n\u003e - ISBN： 9787111671718\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 推荐序一 如何能像巴菲特一样长寿\n\n- 📌 做投资最怕的是“心中没底”，心中没底的人，眼看着股价越涨越高，便忍不住要去追；眼看着股价跌了又跌，便禁不住要割肉。 ^37595152-4-1408-1465\n    - ⏱ 2021-07-27 11:08:13\n\n## 第七节 手机是好生意吗：爱施德公司年报带来的思考\n\n- 📌 有一次，招商证券的客户经理在股票市场暴跌时问到我：“马总，股价这么暴跌，您不害怕吗？”我回答：“我是天天满仓，没有一天持有现金。我从不恐慌。因为我知道，自己是花了80元买进今天值100元，五年后值200元的股票。当然，我很理解其他人的恐慌，因为他们是用1000元买进今天值100元，五年后值50元的股票。我们有着本质的不同。” ^37595152-13-4623-4786\n    - ⏱ 2021-07-27 11:31:41\n\n## 第十五节 耐心是最大的美德\n\n- 📌 我曾经坚持730天风雨无阻地跑步，无论刮风下雨，无论出差或感冒，只因为我在心里曾经问过自己：“你能坚持每天跑步两年吗？”自律和耐心是在残酷的资本市场中生存的必备法则。我能够在股票投资上赚到钱，就是因为拥有耐心。 ^37595152-28-658-763\n    - ⏱ 2021-07-27 15:04:47\n\n## 第三章 保守主义投资思维\n\n- 📌 我宁可拥有一家一年只赚12%的麦当劳加盟店，也不愿意去买入“一年内可能上涨100%也可能下跌50%”的股票。 ^37595152-29-2513-2567\n    - ⏱ 2021-07-27 15:12:53\n\n## 第五节 集中投资\n\n- 📌 。我们常常会听到这样的说法：“我确实不太了解那只股票，但还好，我买的并不多。”人们就是这样草率对待自己感觉不重要的事情。但当要选择把身家押到少数2~3只股票上时，所有人都会马上变得谨小慎微。 ^37595152-33-1206-1301\n    - ⏱ 2021-07-27 15:18:25\n\n## 第六节 风险比收益更重要\n\n- 📌 投资股票，控制风险比获得短期收益更重要。投资者不应对具体股票标的设定收益目标，必须小心评估投资风险。一旦发现某家公司存在巨大风险，即使这家公司同样存在股价暴涨的可能性，也应该选择放弃。这就是保守主义的投资思想。 ^37595152-34-1390-1495\n    - ⏱ 2021-07-27 15:21:58\n- 📌 永远不投机炒股，永远不买进有问题的公司，永远不买进高估的股票，这都是我进入股票市场时就给自己定下的原则。 ^37595152-34-2071-2123\n    - ⏱ 2021-07-27 15:24:24\n- 📌 我深深地知道，对一个人最致命的一击就是用错误的方法赚了大钱 ^37595152-34-2229-2258\n    - ⏱ 2021-07-27 15:24:28\n- 📌 我们的每一个投资决定，都不仅仅是为了未来几年能赚多少钱，而是为了不管在什么情况下，永远不能丢失掉我们的本钱。 ^37595152-34-2754-2808\n    - ⏱ 2021-07-27 15:25:02\n\n## 第二节 估值的标尺是什么\n\n- 📌 投资者不能拿着上市公司交给我们的税后净利润使用估值的标尺。我们需要评估出真实的净利润。在很多情况下，自由现金流更贴近于“估值的标尺”中的“真实的净利润”。 ^37595152-37-3913-3993\n    - ⏱ 2021-07-27 15:30:34\n\n## 第七节 巴菲特对估值的定义\n\n- 📌 一家公司的内在价值是就是其未来十年可以为股东创造的税后净利润总和 ^37595152-42-679-711\n    - ⏱ 2021-07-27 15:40:13\n\n## 第四节 挤掉财务报表中的水分\n\n## 第五节 寻找最棒的商业模式\n\n- 📌 投资者最重要的工作就是去寻找肉眼看不见，且又粗又长的树根，然后用合理的价格买下来。 ^37595152-54-2184-2225\n    - ⏱ 2021-07-27 16:56:18\n\n## 第八节 买入价格的安全边际\n\n- 📌 价格是一种安全边际，品质也是一种安全边际。投资者用0.5元买进现在内在价值1元的股票，少付出的0.5元是股票投资中价格的安全边际。投资者持有的优质公司股票，内在价值从现在的1元增长到十年后的2元是品质的安全边际。 ^37595152-57-535-645\n    - ⏱ 2021-07-27 17:09:11\n- 📌 内在价值与买入价格也是完全不同的概念，专业投资者只有在内在价值基础上为买入价格预留出足够的安全边际才能确保获利，而买入价格和品质是两种不同的安全边际。我们可以设计一个数学公式：P=V(1+sv%)n/(1+sp%)n式中，P是买入价格；V是当下内在价值；sv%是内在价值复合增长率；sp%是预期复合收益率；n是投资年限。 ^37595152-57-1403-1642\n    - ⏱ 2021-07-27 17:11:03\n\n## 第四节 禀赋效应：摘掉眼镜看世界\n\n- 📌 禀赋效应，是指一个人一旦拥有某件物品，那么他对该物品价值的评价要比没拥有时大大增加。禀赋效应是由人类与生俱来的自视过高基因决定的。应该说，每个人或多或少都有禀赋效应。 ^37595152-66-698-781\n    - ⏱ 2021-07-27 18:26:32\n\n## 第十节 人性博弈\n\n- 📌 谁都知道资产价格泡沫会让实体制造业受到伤害，但谁又真愿意放弃眼前的既得利益呢？股票市场的太多人都知道长期持有优质公司必然赚钱，但谁又真的放得下明天的股票市场报价呢？ ^37595152-72-1903-1985\n    - ⏱ 2021-07-27 22:31:16\n- 📌 邱国鹭先生讲过的一句话：“对一个人最致命的事情就是用错误的方法赚了大钱。” ^37595152-72-3387-3424\n    - ⏱ 2021-07-27 22:32:41\n\n# 读书笔记\n\n## 第四节 挤掉财务报表中的水分\n\n### 划线评论\n\n- 📌 所以从投资的角度，中国铝业确实是没有什么投资价值。400多亿元市值也绝对谈不上便宜。 ^16142247-7s6RvZRMD\n    - 💭 2021.07.26 去看了下 马上千亿了，是开始盈利了吗\n    - ⏱ 2021-07-27 16:49:37\n\n### 划线评论\n\n- 📌 市净率 ^16142247-7s6RpOYsT\n    - 💭 市净率（Price-to-Book Ratio，简称P/B PBR）指的是每股股价与每股净资产的比率。 市净率可用于股票投资分析，一般来说市净率较低的股票，投资价值较高，相反，则投资价值较低；但在判断投资价值时还要考虑当时的市场环境以及公司经营情况、盈利能力等因素。\n    - ⏱ 2021-07-27 16:48:06\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7s7hfI8hZ  \n⏱ 2021-07-27 23:22:36\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BC%BD%E5%88%A9%E7%95%A5%E4%BC%BD%E5%88%A9%E8%8E%B1":{"title":"伽利略·伽利莱","content":"\n# 伽利略·伽利莱\n\n#卡片/人物卡\n\n- 国籍：意大利\n- 生平：1564 年 2 月 15 日－1642 年 1 月 8 日\n- 身份：心理学家，语言学家。\n- 简介：物理学家、数学家、天文学家及哲学家\n\n伽利略·伽利莱（Galileo Galilei ；1564 年 2 月 15 日－1642 年 1 月 8 日），意大利物理学家、数学家、天文学家及哲学家，科学革命中的重要人物。伽利略被誉为“现代观测天文学之父”、“现代物理学之父”、科学方法之父、“科学之父”及“现代科学之父”。\n\n## 比萨斜塔上的扔球 实验\n\n这次名垂青史的实验是伽利略的一个学生维瓦尼（Vincenzio Viviani）在为老师写的传记中描述的。根据维瓦尼的记述，伽利略在比萨担任教授时（大约 25 岁），特地召集了比萨大学的所有教授和学生，请他们来观摩斜塔实验。他从塔上扔下了两个不同重量的球，结果发现它们同时落地，于是推翻了亚里士多德体系。\n\n### 可是，伽利略真的在比萨斜塔上做过这次实验吗？？\n\n- 唯一的来源是维瓦尼的记述，而维瓦尼 1638 年才成为伽利略的助手，而当时与所谓的斜塔实验已经过去差不多 50 年的光阴！\n- 历史学家们很快就发现维瓦尼所著的伽利略传记里充斥了吹嘘、夸大和不真实的描述。\n- 就算伽利略真的在 1589 年爬上了比萨斜塔，面对他的学生们扔了两个球。也不能证明什么\n  1. 事实上，早于伽利略 1000 年，公元 6 世纪的菲罗波努斯就明确地描述过类似的落体实验\n  2. 1533 年，贝内德蒂建议用轻重物体来实际检验亚里士多德的理论，而斯蒂文则当真进行了试验，并于 1586 年发表了结果。\n  3. 考虑到空气阻力的因素，要达到两个球以匀速下落这样的平衡，需要一个非常高的高度，而不幸的是，比萨斜塔不够高\n\n### 20 世纪末的复现\n\n20 世纪末，科学史研究者们曾按部就班地重做了伽利略的大部分实验，高速摄像机显示，当你同时放开两个球时，它们的表现果然和伽利略记载的一模一样！只不过，你肯定猜不到其中的原因，原来事情是这样的：当你同时拿着两只球时，拿重球的那只手，其肌肉总是会比拿轻球的那只手更疲劳一些。所以当一个人自以为“同时”放开两个球的时候，拿重球的那只手总是会反应“慢一拍”，也就是说，他必然会不自觉地先松开拿轻球的那只手，而这是无意识的举动。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BD%8E%E4%BB%A3%E7%A0%81":{"title":"如何开发","content":"\n1. 给开发使用的低代码，生成一个代码模板，要做成灵活的很难，得动态的生成代码  \n   灵活性肯定不如开发  \n   竞品方案： 模板代码 +AI + 组件封装  \n   Bebel，模板字符串\n2. 传统的拖拉拽生成页面，不生成代码，这种灵活但是开发量大\n\n# 如何开发\n\n# 灵魂之问\n\n- 低代码、怎么动态加载渲染一个组件，底层怎么实现？\n\n# 参考资料\n\n- [阿里低代码引擎 | LowCodeEngine](https://lowcode-engine.cn/index)\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BD%9B%E6%95%99%E5%85%B4%E8%B5%B7%E7%9A%84%E5%8E%9F%E5%9B%A0":{"title":"佛教兴起的原因","content":"\n# 佛教兴起的原因\n\n首先是印度在进入稳定的农耕文明之后，能够生产出足够支撑大量人口不从事生产，而是由俗家民众供养饮食。这些出家人被称为沙门，他们专心思考和追求宇宙的真理，因此在宗教和文化上出现了各种非婆罗门的思想。\n\n另一方面，在由婆罗门所主导的印度社会中，除了少数僧侣外，各个社会阶层缺少对于提升自己社会地位的渴望，整个社会缺少活力，普通百姓在现实生活找不到出路和心灵寄托。因此，为了寻求心灵上的慰藉，各种沙门宗教得以在印度盛行。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84%E6%B3%95%E5%BE%8B%E5%B8%B8%E8%AF%86":{"title":"《 你不可不知的法律常识 》","content":"\n# 《 你不可不知的法律常识 》\n\n# 元数据\n\n\u003e [!abstract] 你不可不知的法律常识\n\u003e - ![ 你不可不知的法律常识|200](https://weread-1258476243.file.myqcloud.com/weread/cover/73/YueWen_859643/t7_YueWen_859643.jpg)\n\u003e - 书名： 你不可不知的法律常识\n\u003e - 作者： 张志强\n\u003e - 简介： 酒后出事，同席者承担多大责任？样品误当新品卖，是否构成消费欺诈？车借给朋友出了事故，责任由谁承担？是不是所有的合同都可以采用电子签名？“小三”有权分得遗产吗？夫妻购买的小产权房，离婚时如何分割？父债子还，天经地义吗？借款人跑了，如何讨债？如何约定民间借贷的利息才合法？购买学区房，卖房人不迁走户口怎么办？老赖的住房不会被执行吗？这些问题都是生活中大家非常关注的，也是常常厘不清的。《你不可不知的法律常识》从生活与消费，夫与妻关系、父母与子女、资产与理财、企业经营与管理、诉讼与仲裁、犯罪与刑罚这7个方面入手，选取了与日常生活密切相关的100个问题，用非常接地气的语言，生动而严谨地进行点对点的讲解，非常适合大家查阅式阅读。\n\u003e - 出版时间 2017-05-01 00:00:00\n\u003e - ISBN： 9787515819556\n\u003e - 分类： 社会文化-法律\n\u003e - 出版社： 中华工商联合出版社\n\n# 高亮划线\n\n## 5.遇到警察查证件，没带身份证怎么办？\n\n- 📌 ，盘查一般由两名以上民警进行；应当身着警服，未穿警服的，应当出示警察证 ^859643-10-1304-1339\n    - ⏱ 2020-11-17 00:03:46\n\n## 7.车借给朋友出了事故，责任由谁承担？\n\n- 📌 法院认为崔某具有合法驾驶资格，借用车辆时并未醉酒，且所借车辆也未存在故障或者明显的安全隐患，被告蒋某作为车辆出借人对此次事故的发生并无过错，因此其不承担赔偿责任 ^859643-12-861-941\n    - ⏱ 2020-11-17 00:08:14\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BD%A0%E6%98%AF%E4%BD%A0%E5%90%83%E5%87%BA%E6%9D%A5%E7%9A%84%E5%90%83%E5%AF%B9%E5%B0%91%E7%94%9F%E7%97%85%E7%97%85%E4%BA%86%E8%BF%99%E6%A0%B7%E5%90%83":{"title":"《 你是你吃出来的：吃对少生病，病了这样吃 》","content":"\n# 《 你是你吃出来的：吃对少生病，病了这样吃 》\n\n# 元数据\n\n\u003e [!abstract] 你是你吃出来的：吃对少生病，病了这样吃\n\u003e - ![ 你是你吃出来的：吃对少生病，病了这样吃|200](https://weread-1258476243.file.myqcloud.com/weread/cover/86/YueWen_920661/t7_YueWen_920661.jpg)\n\u003e - 书名： 你是你吃出来的：吃对少生病，病了这样吃\n\u003e - 作者： 夏萌\n\u003e - 简介： 《你是你吃出来的》是前安贞医院营养科主任夏萌总结自身患病经历和10万+临床病例写成。高血压、高血脂、糖尿病、冠心病等慢病人群都曾陷入同一个误区——误以为低油低脂保健康，其实多是蛋白质缺乏式营养不良；误以为只能终生服药或手术，忽略了饮食等生活方式改变带来的真正康复。作者结合实例提出：要预防疾病，先回到史上人类进化突飞猛进阶段的食谱——{植物类食物65%+动物类食物35%}，一日三餐才是真正的保健品；针对已患慢病人群，提出“四分法”，讲解冠心病、甲状腺结节、胃炎、心悸、便秘、高血压、痛经、抑郁、老年痴呆14种常见慢病饮食治病方法，帮助患者控制疾病和恢复健康。中国人到底怎样吃才健康？一本书重建健康饮食新认知——吃对少生病，病了这样吃。\n\u003e - 出版时间 2017-09-01 00:00:00\n\u003e - ISBN： 9787539060453\n\u003e - 分类： 医学健康-健康\n\u003e - 出版社： 江西科技出版社\n\n# 高亮划线\n\n## 前言\n\n- 📌 大家可能不知道，面条这种食物，吸收得太快，很容易升血糖，也很容易饿。他选了这种食物做晚餐，除了痛快痛快嘴，百害而无一利 ^920661-4-7478-7537\n    - ⏱ 2021-06-29 15:15:30\n- 📌 因为你已经开始运动，并且控制了饮酒，现在又开始从饮食上努力调整，这些都是降血糖的有效方法，此时如果加上药物降血糖的力量，很容易出现低血糖的症状，轻则昏迷，重则死亡。 ^920661-4-7924-8006\n    - ⏱ 2021-06-29 15:18:40\n\n## 我们活在快餐当道的世界，身体却困在了石器时代\n\n- 📌 七大营养素，包括：● 碳水化合物（又称为糖类，包括葡萄糖、果糖、麦芽糖、淀粉等）● 蛋白质（分为必需氨基酸和非必需氨基酸）● 脂类（分为脂肪和类脂，脂肪又叫甘油三酯，分为必需脂肪酸和非必需脂肪酸；类脂包括磷脂、胆固醇、胆固醇脂、糖脂）● 维生素（分为脂溶性维生素和水溶性维生素）● 矿物质（分为常量元素和微量元素）● 膳食纤维（分为可溶性膳食纤维和不可溶性膳食纤维）● 水 ^920661-6-4773-5190\n    - ⏱ 2021-06-29 15:26:50\n\n## 防治慢病怎么吃：注重结构型营养素和营养密度\n\n- 📌 您平时特爱吃主食，对吧？主食是碳水化合物，吃到身体中会转化为脂肪存在肚子上，所以您的肚子大。但是皮肤、肌肉、骨头等部位的细胞主要成分是磷脂、蛋白质和胆固醇，您吃的食物没有这些营养，细胞就长不出来，所以您的胸骨怎么都长不好，伤口皮肤怎么都愈合不了。这种情况下，多吃肉类、鸡蛋、酸奶和猪肝，伤口才能快点儿长好。您现在吃的这些不长细胞结构成分只给能量，所以伤口总也长不好，出不了院 ^920661-8-3726-3913\n    - ⏱ 2021-06-30 16:35:38\n- 📌 食物进入人体内吸收和释放的顺序，基本上都是首先使用碳水化合物，而脂肪和蛋白质排在后面，在碳水化合物转化成的葡萄糖不够用的时候才贡献出来。 ^920661-8-5636-5704\n    - ⏱ 2021-06-30 16:37:34\n\n## PART 02 不生病的奥秘——七大营养素平衡\n\n- 📌 七大类营养素，分别是碳水化合物、蛋白质、脂类[插图]、维生素、矿物质、膳食纤维和水。 ^920661-9-1141-1377\n    - ⏱ 2021-06-30 16:40:46\n\n## 碳水化合物平衡：体力消耗量是重要参照\n\n- 📌 其实这些食物中，米饭、土豆、粉丝、粉条都是碳水化合物。 ^920661-12-3848-3875\n    - ⏱ 2021-06-30 17:16:57\n\n## 脂类平衡：每日摄入量不能低于总能量的30%\n\n- 📌 反式脂肪酸有很多好听的名字，比如：植物氢化油、人造黄（奶）油、人造植物黄（奶）油、人造脂肪、氢化油、起酥油、植脂末等。 ^920661-13-7696-7755\n    - ⏱ 2021-06-30 17:32:36\n- 📌 哪些食物中含有反式脂肪酸呢？我来列举一些大家特别熟悉的：蛋糕、糕点、饼干、面包、蛋黄派、沙拉酱、炸薯条、炸薯片、爆米花、巧克力、冰淇淋……这些食物大家都吃过吧？有的人甚至天天都在吃。 ^920661-13-7784-7875\n    - ⏱ 2021-06-30 17:33:43\n\n## 维生素平衡：极容易缺乏，很难过量\n\n- 📌 我们体内的维生素D有两个来源：第一，从动物类食物中直接获得。含维生素D的食物有：动物的肝脏、大脑、肺、脾，鸡蛋，牛奶，三文鱼，大马哈鱼，动物的骨头和皮肤也含有少量维生素D。第二，人体皮肤合成。人体的表皮与真皮内含有一定量的7-脱氢胆固醇，当受到阳光或紫外光照射时，可以经光化学反应形成前维生素D3，再经过肝脏和肾脏的羟化作用，最后转化为有活性的维生素D3。我们的老祖宗都不缺维生素D，因为他们的食物中不缺乏肉类，在外面打猎时又能获得充足的阳光。 ^920661-14-5519-5849\n    - ⏱ 2021-06-30 18:30:24\n\n## 矿物质平衡：四两拨千斤\n\n- 📌 钙的最好来源是奶和奶制品，奶中不但钙含量丰富，而且吸收率也很高，具体包括牛奶、羊奶、驴奶、酸奶、奶酪、奶片，等等。一般人每天最好喝300毫升牛奶。如果能够吃奶酪就更好了，因为在所有的奶制品中奶酪含钙量最高，同时也好消化。不能耐受奶制品的人怎么办呢？还有一些食物含钙较高，要注意经常摄取，包括芝麻、芝麻酱、虾皮、海藻类（海带、紫菜、裙带菜）、大杏仁、西蓝花、豆类、瓜子，等等。 ^920661-15-5886-6102\n    - ⏱ 2021-07-01 14:38:43\n- 📌 ◆ 镁藏在新鲜绿叶菜和海产品中含镁多的食物多为植物性食物，特别是新鲜的绿叶蔬菜。但是由于新鲜绿叶蔬菜中还含有草酸、植酸等物质，这些物质会阻止镁的吸收，所以想补镁，在吃绿叶蔬菜时最好用开水焯一下。坚果、粗粮和豆类也不错，海产品中的镁不仅含量高，而且容易吸收，所以大家可以多吃一些海带、紫菜和裙带菜。蛋白质类也要多吃，因为多摄食蛋白质所分解的氨基酸有利于镁的吸收，临床上爱吃蛋白质和乳类制品的人就常常不缺镁。另外，对正常人来说，由于肾的调节作用，食物中的镁摄入过多一般不会发生镁中毒。但当一个患者肾功能不全，又需要服用大剂量的药物性镁时，就容易发生镁中毒。由于镁与钙、钾、钠离子共同维持着神经肌肉的兴奋性，所以如果患者出现肌肉抽搐，就是咱们平时所说的“抽筋”，我们脑海中要反应的是“一定缺钙，还有可能缺镁”。所以一来一定要补充钙，二来看看补钙效果；如果补钙效果不好，还要关注是不是缺镁。 ^920661-15-8191-8727\n    - ⏱ 2021-07-01 14:42:00\n- 📌 第一，矿物质因为必须来自外界，所以如果不注意摄入就很容易缺乏，需要重视。第二，矿物质在人体中的含量不到5%，但是人体的几乎所有重要功能都会涉及，必须重视。第三，食物与药品中矿物质营养素的区别。从食物中摄取的矿物质一般不会中毒；而一些微量元素（也属于矿物质），尤其是通过药品来补充的，如果短时间摄入过多易中毒，甚至成为潜在的致癌物质。微量元素指的就是占生物体总质量的0.01%以下且为生物体所必需的一些元素，如铁、硅、锌、铜、碘、溴、硒、锰等。人体所需的微量元素大多都能在食物中找到。一瓶补铁的口服液其铁元素含量不见得比一根鸡腿的铁含量多，而且鸡肉中的铁是血红素铁，很容易被人体吸收利用。所以，给孩子补充微量元素，家长要做的不是去药店，而是平时多下厨房。第四，注意食物中植物性与动物性矿物质的差别。矿物质既来自植物类食物，也来自动物类食物。相对来说，来自动物类食物中的矿物质更好吸收。 ^920661-15-16209-16716\n    - ⏱ 2021-07-01 15:00:35\n\n## 膳食纤维平衡：粗粮吃多了会营养不良\n\n- 📌 水果最好是连皮吃，这样膳食纤维可以多吃一些。 ^920661-16-3685-3707\n    - ⏱ 2021-07-01 15:17:23\n\n## 水平衡：不是每天8杯水那么简单\n\n- 📌 怎么判断自己一天的饮水量是否合适呢？主要观察两项指标：一个是看自己渴不渴，渴了才喝水是不对的。饮水量合适的情况下，人是不应该感觉口渴的。另一个是观察尿液的颜色和排尿量。正常情况下尿液是淡黄色的，一天的排尿量是1500毫升左右，一般3～4小时排尿一次。如果半天不想上厕所，或者排出的尿液是深黄色的，那就说明饮水量不足了；反之，如果频频如厕，且尿液像水一样清，那就喝得有些过多了。 ^920661-17-2944-3219\n    - ⏱ 2021-07-01 15:21:57\n\n## 世上最好的药：早餐、午餐和晚餐\n\n- 📌 早晨，人刚起床的时候是空腹，胆囊里已经充满了胆汁，这是半夜里肝脏合成的胆汁，在天亮前排到了胆囊中。早餐时如果吃油性食物，胆囊会立即收缩，排泄胆汁，这样可以防止胆结石的形成。 ^920661-22-1890-1976\n    - ⏱ 2021-07-01 15:44:40\n- 📌 冰箱里事先准备好已经做熟的主食（玉米、馅饼、包子等）。牛奶一周买一次，把一个星期的量准备好。坚果是早就剥好壳的腰果、核桃等，装在瓶子里，放在冰箱里储存。鸡蛋事先煮好，一次多煮几个。家里再储备点水果、黄瓜和西红柿。好了，一切准备就绪，早餐就可以做得非常快：用微波炉把主食热一下，牛奶用电磁炉加热，烧开后立即离开电磁炉，然后从冰箱里拿出煮鸡蛋剥好扔到牛奶里，这样鸡蛋吃起来不会太凉，牛奶还能迅速降温。牛奶里除了放鸡蛋，还要放坚果，最后还要放一勺蜂蜜。再加上半根黄瓜或者一个小苹果，也可能是一根香蕉。这份早餐只需要十分钟就能解决，而且一上午不觉得饿，精力充沛。 ^920661-22-5138-5444\n    - ⏱ 2021-07-01 15:47:51\n- 📌 中式早餐组合：第一种：包子（碳水化合物）+鸡蛋（蛋白质）+果蔬汁（维生素+膳食纤维）。第二种：烙饼（碳水化合物）+鸡蛋、牛奶（蛋白质）+水果（维生素+膳食纤维）。第三种：火烧（碳水化合物）+鸡蛋、肉类、豆浆（蛋白质）+ 蔬菜（维生素+膳食纤维）。第四种：五谷杂粮饭（碳水化合物）+鸡蛋、牛奶（蛋白质）+水果（维生素+膳食纤维）。西式早餐组合：第一种：全麦面包（碳水化合物）+火腿、鸡蛋（蛋白质）+果蔬汁（维生素+膳食纤维）。第二种：土豆（碳水化合物）+鸡蛋、牛奶（蛋白质）+果蔬汁（维生素+膳食纤维）。 ^920661-22-6067-6521\n    - ⏱ 2021-07-01 15:48:47\n- 📌 我们一起看看过午不食减肥法的危害，看完之后，你就会明白瘦身和健康究竟哪个更重要。第一，胃病缠身。如果十几个小时不吃东西，让胃里空着，胃部会因为饥饿而收缩，出现上腹部疼痛。很多人觉得忍一忍挺过去就好了，但如果你长期坚持这样做，过多的胃酸没有食物中和，会损伤胃黏膜，患上胃病是迟早的事情。第二，内分泌紊乱。很多女性采用过午不食减肥的方法后，发现月经不正常了，严重者还会出现不孕等各种疾病。第三，抵抗力下降。过午不食减肥法虽然在某种程度上是可以减掉体重的，但是减少的这些重量里包含了许多肌肉丢失的成分，这不仅会导致肌肉无力，你还会发现你的抵抗力在下降，感冒、发烧也一直困扰着你。 ^920661-22-9715-10088\n    - ⏱ 2021-07-01 16:01:35\n\n## 没有放之四海而皆准的食谱\n\n- 📌 其实很多营养摄入都是有窗口期的，孩子的营养摄入比例会随着年龄的增长不断变化。0～6个月，脂肪在营养素中所占比例最高，达到47%，几乎占了一半。随着年龄的增加，脂肪比例逐渐降低，到了4岁，与成年人的比例相当，占总能量的25%～30%。这个量不能再降低，否则会影响大脑发育和脂溶性维生素的摄入。0～6个月的孩子只喝母乳、牛奶或者配方奶，不吃粮食和蔬菜，也能够很快长大，说明母乳、牛奶和配方奶已经包含了人体需要的所有营养成分。孩子6个月时，开始加辅食。第一个加的辅食就是鸡蛋，鸡蛋里有磷脂、蛋白质和胆固醇，而且鸡蛋富含的磷脂是卵磷脂，正好是大脑生长发育最好的原材料。以后孩子的辅食再逐渐增加粮食和蔬菜，慢慢过渡到普通饮食。 ^920661-24-6161-6556\n    - ⏱ 2021-07-01 16:33:32\n\n## 肉蛋奶类：普遍吃得太少而不是过多\n\n- 📌 建议可以通过吃鸡蛋来获取卵磷脂。但需要注意一点，卵磷脂怕高温，高于50℃就会丧失其功能。所以，做鸡蛋时要注意时间不要太长，蛋黄刚一凝固就要关火。 ^920661-26-3356-3428\n    - ⏱ 2021-07-01 16:41:19\n- 📌 牛奶是一种近乎完美的食物人体所需要的各种营养物质除了膳食纤维外，其他营养素都可以在牛奶中获取。牛奶由近300种元素组成，其中含有多种丰富的人体所必需的营养元素，如蛋白质、脂肪、乳糖、维生素、钙、磷等。牛奶不仅营养组合完整，而且相当平衡。平衡与合理的营养组合，有利于机体的吸收利用。牛奶中的干物质占11%～13%，其余的是水分。每100毫升的牛奶中，蛋白质占3.2克，脂肪占3.7克，碳水化合物占4.8克，钙110～120毫克，磷93毫克，铁0.2毫克，维生素A39微克，维生素B10.04毫克，维生素B2 0.13毫克，维生素C 1毫克，烟酸0.2毫克。每100毫升牛奶，可提供的能量为69千卡 ^920661-26-9297-9732\n    - ⏱ 2021-07-01 16:49:15\n- 📌 简单来说，乳糖不耐受人群可以这样做：第一，选用低乳糖或脱乳糖的奶产品饮用。第二，选用酸奶或奶酪。第三，脱敏疗法。喝牛奶的时候遵循由少到多、从疏到密的原则逐渐增加饮奶量，逐渐适应。尽量不空腹喝奶，如果要喝牛奶，就放到餐后。 ^920661-26-13401-13598\n    - ⏱ 2021-07-01 16:52:57\n\n## 上皮组织：人体80%以上肿瘤的发生地\n\n- 📌 维生素A能维持上皮细胞的正常生长与分化，防止呼吸道、消化道、泌尿道、肠道的上皮细胞功能减退，抑制上皮细胞肿瘤的发生。如果维生素A摄入不足，就会使上皮细胞分化不良，细胞再生的速度受阻。 ^920661-32-18300-18391\n    - ⏱ 2021-07-01 18:05:12\n\n## 神经组织：最容易被饿着的指挥系统\n\n- 📌 什么样的食物中卵磷脂多？鸡蛋、肝脏和大豆。什么样的食物中胆碱多？肝脏、蛋黄，其次是红肉、奶制品。什么样的食物中维生素B12多？在人类的饮食中，维生素B12的主要来源是动物类食物，而植物类食物基本上都不含维生素B12。什么样的食物中维生素E多？芝麻、核桃仁、花生米、瓜子、瘦肉、乳类、动物肝、蛋黄和黄绿色蔬菜。什么样的食物中不饱和脂肪酸多？植物油、深海鱼和坚果。大家是不是发现神经细胞所需的重要营养成分主要在这几类食物中？蛋类、肉类、肝脏、坚果、植物油类、深海鱼及黄绿色蔬菜，这几类食物是大脑最重要的营养源。 ^920661-35-7216-7689\n    - ⏱ 2021-07-01 18:24:10\n\n# 读书笔记\n\n## 防治慢病怎么吃：注重结构型营养素和营养密度\n\n### 划线评论\n\n- 📌 地中海膳食结构 ^16142247-7rrMuW9qd\n    - 💭 1、 以种类丰富的植物食品为基础，包括大量水果、蔬菜、土豆、五谷杂粮、豆类、坚果、种子；  \n2、 对食物的加工尽量简单，并选用当地、应季的新鲜蔬果作为食材，避免微量元素和抗氧化成分的损失；  \n3、烹饪时用植物油（含不饱和脂肪酸）代替动物油（含饱和脂肪酸）以及各种人造黄油，尤其提倡用橄榄油；  \n4、脂肪占膳食总能量的最多35%，饱和脂肪酸只占不到7%~8%；  \n5、适量吃一些奶酪、酸奶类的乳制品，最好选用低脂或者脱脂的；  \n6、 每周吃两次鱼或者禽类食品(项研究显示鱼类营养更好)；  \n7、一周吃不多于7个鸡蛋，包括各种烹饪方式(也有建议不多于4个)；  \n8、 用新鲜水果代替甜品、甜食、蜂蜜、糕点类食品；  \n9、每月最多吃几次红肉，总量不超过7到9两(340到450克)，而且尽量选用瘦肉；  \n10、适量饮用红酒，最好进餐时饮用，避免空腹。男性每天不超过两杯，女性不超过一杯。  \n11、除平衡的膳食结构之外，地中海式饮食还强调： 适量、平衡的原则，健康的生活方式，乐观的生活态度，每天坚持运动。 [1]\n    - ⏱ 2021-06-30 16:39:31\n   \n\n# 本书评论\n\n## 书评 No.1\n\n每个人都应该学点营养学的知识 ^16142247-7rtpvP1kq  \n⏱ 2021-07-01 18:21:54\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BF%A1%E6%81%AF":{"title":"信息","content":"\n# 信息\n\n**比尔·盖茨在 Ted 演讲上讲了一个非洲人民抗疟疾的故事。**  \n这是一句完整的表达。  \n但它是信息，不是知识。  \n信息是对各种数据或文字的连接，它能准确表达一个意思，从而降低信息传递中的不确定性。\n\n## 什么样的信息最有价值\n\n一种信息，可以帮你从新的角度来核实现有信息的真实性，及早识破虚假夸大的信息；  \n另外一种信息，是给你对于能源/财富的寻觅，提供一条全新的替代的通路。\n\n提高自身全方位多角度的获取信息的能力，是最好的投资，比物理世界很多投资要高效得多。一块钱换来的有效信息，让你识别真相，增加选择，可能避免犯下一百块钱甚至一千块， 一万块的错误。即使 99%的信息最后无用，只要 1%有用，就值了。\n\n低成本获取高价值的信息，以创造更多选择权 ；有更多选择权，就更有时间和资源去建设自身的信息获取和整合的能力，从而增加更多选择 ； 有了更多选择，才发现可以不做那些原来以为必须要做的事；看似无所事事，但背后决策机制，常人并不知晓。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E4%BF%AE%E7%9C%9F%E4%B8%96%E7%95%8C":{"title":"《 修真世界 》","content":"\n# 《 修真世界 》\n\n# 元数据\n\n\u003e [!abstract] 修真世界\n\u003e - ![ 修真世界|200](https://weread-1258476243.file.myqcloud.com/app/assets/bookcover/book_cover_default_imported_04.png)\n\u003e - 书名： 修真世界\n\u003e - 作者：\n\u003e - 简介：\n\u003e - 出版时间\n\u003e - ISBN：\n\u003e - 分类：\n\u003e - 出版社：\n\n# 高亮划线\n\n## 铁索不离 【第二更】\n\n- 📌 没用的家伙！连一个没成年的火球都打不过，还天魔兵，天个屁啊！左莫在心里破口大骂！这些话刚从心中闪过，背上的逆龙爪猛地激烈颤动，它似乎听到左莫的骂声。一股比刚才不知强大多少倍的浩然凶厉气息，如同暴怒般，猛然冲进左莫的体内！三千烦恼丝似乎也明白到了紧要关头，对逆龙爪的缠绕松动许多。逆龙爪的这股气息极其强大，一冲入左莫体内，便把太阳晶种的热流冲得七零八落。左莫感觉到背上的逆龙爪在不断地颤动，左莫有一种错觉，逆龙爪就像一个粗豪的大汉，在得意无比地哈哈大笑。但是左莫不仅没有欢呼，反而差点惨点出来。这股逆龙爪气息强大无比，冲散了太阳晶种的热流，在他体内肆虐。凶厉无比的杀意，在迅速地摧毁他的身体！该死！左莫连哭的心都有，好在太阳晶种无法容忍被打败，又是一股炽热无比热流，从裂缝里钻出来，扑向逆龙爪的凶厉之气。 ^CB-7RYEMyEMCEf46bS6cN-598-2769\n    - ⏱ 2022-09-26 23:42:28\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%80%92%E8%A3%85%E5%8F%A5":{"title":"倒装句","content":"\n# 倒装句\n\n英语倒装句分两种，一是完全倒装、二是部分倒装。  \n完全倒装的四种主要类型：\n\n1. here 和 there 位于句首时的倒装\n2. away 和 down 等位于句首时的倒装\n3. [[状语]]或者[[表语]]位于句首时的倒装\n4. 分词和不定式置于句首的倒装\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%BA%90":{"title":"值得关注的信息源","content":"\n想要一样的 RSS 订阅的话，导入下面这个 xml 即可  \n[[Inoreader Feeds 20230731.xml]]  \n\n## 无 rss 源\n\n### Andy的 blog\n\n他曾参与设计和开发 iOS 系统，之后又在可汗学院领导研发团队。你很难定义他是一名工程师，因为他的[个人网站](https://andymatuschak.org/)里真是包罗万象，尤其是有很多关于认知科学和学习的文章。\n\n## 其他\n\n### 少数派\n\n - 网页链接: http://sspai.com/feed\n - 介绍: 少数派是一个关注移动互联网的在线发现平台，提供最新的科技资讯、产品评测、应用推荐等内容。\n\n### Growth Weekly Subscribers Archive Feed\n\n - XML链接: https://us6.campaign-archive.com/feed?u=e4582460499f4aadae1a90e2b\u0026id=d2c14f8a94\n - 介绍: Growth Weekly Subscribers Archive Feed是一份关于增长和营销的邮件订阅归档，提供有关增长策略、市场营销技巧等方面的内容。\n\n### Smashing Magazine\n\n - 网页链接: https://www.smashingmagazine.com/\n - 介绍: Smashing Magazine是一个以设计和开发为主题的在线杂志，提供有关网页设计、前端开发、用户体验等方面的文章和教程。\n\n## ### 财经\n\n - 介绍: 财经是一个关于金融和经济的主题分类。\n\n### Nick Szabo:法律/加密学/科学史/金融学/计算机科学杂家\n\n - 网页链接: http://unenumerated.blogspot.com/\n - 介绍: Nick Szabo是一位涉猎广泛的学者，他在法律、加密学、科学史、金融学和计算机科学等领域具有丰富的知识和见解，他的博客提供了相关的文章和观点。\n\n### 硅谷王川\n\n - 网页链接: https://chuan.us/\n - 介绍: 现居于硅谷的一个开发，对区块链比较看好\n\n### 莫大韭菜 的 bilibili 空间\n\n - XML链接: https://rsshub.xiaopang.fun/bilibili/user/video/525121722\n - 网页链接: https://space.bilibili.com/525121722\n - 介绍: 莫大韭菜是一位在bilibili平台上活跃的UP主，他的空间提供了相关视频的订阅源。\n\n## 知识管理\n\n### 遥行的得到主页 - 动态\n\n - XML链接: https://rsshub.xiaopang.fun/dedao/user/35z49NXgYKw83aXLeYWxnpb0lEQLP2\n - 网页链接: https://m.igetget.com/native/mine/account#/user/detail?enId=35z49NXgYKw83aXLeYWxnpb0lEQLP2\n - 介绍: 遥行是得到App上的一个作者，他的主页提供了最新的动态订阅源。\n\n### 即凉 的 bilibili 空间\n\n- XML链接: https://rsshub.xiaopang.fun/bilibili/user/video/628098275\n- 网页链接: https://space.bilibili.com/628098275\n- 介绍: 即凉是一位在bilibili平台上活跃的UP主，他的空间提供了相关视频的订阅源。\n\n### L先生说\n\n - XML链接: https://feed.hamibot.com/api/feeds/614016631269c358aa10f5e3\n - 网页链接: https://mp.weixin.qq.com/\n - 介绍: L先生是一位在微信公众号上活跃的作者，他的文章涉及各种主题，包括知识管理、个人成长等。\n\n## 个人博客\n\n### 二丫讲梵\n\n- 网页链接: https://wiki.eryajf.net/\n- 介绍: 二丫讲梵是一位在个人博客上分享技术和生活的作者，他的博客提供了相关文章的订阅源。\n\n### dwqs/blog Issues\n\n- 网页链接: https://github.com/dwqs/blog/issues\n- 介绍: dwqs/blog Issues是一个GitHub上的仓库，提供了相关问题和讨论的订阅源。\n\n### Platform Thinking +\n\n- 网页链接: https://pt.plus/\n- 介绍: Platform Thinking +是一个关于平台思维和产品管理的博客，提供了相关文章的订阅源。\n\n### 明远的自留地\n\n- 网页链接: https://mayandev.github.io/\n- 介绍: 明远的自留地是一位在个人博客上分享技术和生活的作者，他的博客提供了相关文章的订阅源。\n\n### 阮一峰的网络日志\n\n- 网页链接: http://www.ruanyifeng.com/blog/\n- 介绍: 阮一峰的网络日志是一位知名的技术博主，他的博客上发布了大量关于编程、技术和互联网的文章。\n\n### 小胡子哥的个人网站\n\n- 网页链接: https://www.barretlee.com/\n- 介绍: 小胡子哥的个人网站是一位前端工程师的个人博客，他在博客上分享了很多关于前端开发的经验和技术文章。\n\n### GeekPlux\n\n- 网页链接: http://geekplux.com/\n- 介绍: **GeekPlux是一位在个人博客上分享技术和生活，主要web3**\n\n## 前端\n\n### 支付宝体验科技\n\n - XML链接: http://rsshub.xiaopang.fun/zhihu/zhuanlan/c_1543658574504751104\n - 网页链接: https://www.zhihu.com/column/c_1543658574504751104\n - 介绍: 支付宝体验科技是一个知乎专栏，专注于分享支付宝的体验设计和技术实践。\n\n### SegmentFault腾讯新闻前端团队 最新的文章\n\n - XML链接: https://segmentfault.com/feeds/blog/tnfe\n - 网页链接: https://segmentfault.com/blog/tnfe\n - 介绍: SegmentFault腾讯新闻前端团队是一个团队博客，提供了最新的前端技术文章和讨论。\n\n### 掘金专栏-阿里巴巴大淘宝技术\n\n - XML链接: http://rsshub.xiaopang.fun/juejin/posts/395479919373991\n - 网页链接: https://juejin.cn/user/395479919373991/posts\n - 介绍: 掘金专栏-阿里巴巴大淘宝技术是一个在掘金平台上的专栏，分享了阿里巴巴大淘宝技术团队的文章和经验。\n\n### 冴羽\n\n - XML链接: http://rsshub.xiaopang.fun/github/issue/mqyqingfeng/Blog\n - 网页链接: https://github.com/mqyqingfeng/Blog/issues\n - 介绍: 冴羽是一位前端工程师，在GitHub上分享了很多关于前端开发的问题和解决方案的讨论。\n\n### 前端精读\n\n - XML链接: https://github.com/ascoders/weekly/releases.atom\n - 网页链接: https://github.com/ascoders/weekly/releases\n - 介绍: 前端精读是一个关于前端开发的订阅源，汇集了各种前端技术文章和资源的推荐。\n\n### TNT-Weekly\n\n - XML链接: https://github.com/tnfe/TNT-Weekly/commits.atom\n - 网页链接: https://github.com/tnfe/TNT-Weekly/commits/master\n - 介绍: TNT-Weekly是一个前端技术团队的周刊，提供了最新的前端技术文章和讨论。\n\n### Frontend Focus\n\n - XML链接: https://frontendfoc.us/rss/\n - 网页链接: https://frontendfoc.us/\n - 介绍: Frontend Focus是一个关于前端开发的订阅源，提供了最新的前端技术文章和资源的推荐。\n\n### InfoQ推荐\n\n - XML链接: https://rsshub.app/infoq/recommend\n - 网页链接: https://www.infoq.cn/\n - 介绍: InfoQ推荐是一个关于软件开发和技术的订阅源，提供了最新的技术文章和行业动态。\n\n### Aotu.io\n\n - XML链接: https://aotu.io/atom.xml\n - 网页链接: https://aotu.io/\n - 介绍: 京东凹凸实验室的 blog\n\n### 奇舞周刊\n\n - 网页链接: https://weekly.75.team/\n - 介绍: 奇舞周刊是一个前端技术团队的周刊，提供了最新的前端技术文章和讨论。\n\n### FEX 百度 Web 前端研发部\n\n - 网页链接: http://fex.baidu.com/\n - 介绍: FEX 百度 Web 前端研发部是百度公司的前端团队，分享了前端开发的最新技术和经验。\n\n### JavaScript Weekly\n\n - 网页链接: https://javascriptweekly.com/\n - 介绍: JavaScript Weekly是一个关于JavaScript开发的订阅源，提供了最新的JavaScript技术文章和资源的推荐。\n\n### Taobao FED | 淘系前端团队\n\n - 网页链接: http://taobaofed.org/\n - 介绍: Taobao FED | 淘系前端团队是淘宝公司的前端团队，分享了前端开发的最新技术和实践经验。\n\n### Web前端 腾讯AlloyTeam Blog\n\n - 网页链接: http://www.alloyteam.com/\n - 介绍: 腾讯AlloyTeam是腾讯公司的前端团队，致力于成为业界卓越的Web团队。他们的博客提供了关于前端开发的最新技术和实践经验的文章。文章的资料都很不错\n\n### 奇虎360技术博客\n\n - 网页链接: http://blogs.360.cn/\n - 介绍: 奇虎360技术博客是奇虎360公司的技术团队的博客，分享了关于网络安全、移动安全和大数据等方面的技术文章和研究成果。\n\n### 美团技术团队\n\n - 网页链接: https://tech.meituan.com/feed/\n - 介绍: 美团技术团队是美团公司的技术团队，他们的博客分享了关于互联网技术和工程实践的文章和经验。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%81%87%E8%AE%BE%E6%BC%94%E7%BB%8E%E6%B3%95":{"title":"假设演绎法","content":"\n# 假设演绎法\n\n假设演绎法背后的基本思想是从一个或一组假设（或者更宽泛地说，一个理论）可以演绎出一系列可经观察得来的结果，然后去验证这些结果是否可以观察得到。如果可以观察得到，那么基于我们在前面讨论过的与证实推理相关的一些原因，这就被认为是支持了这个假设；如果没有观察到所预言的结果，那么同样基于我们之前在不证实推理部分中所讨论过的原因，这就会被当成证明假设不成立的证据。\n\n让我们再快速讨论一点：假设演绎法所关心的通常不是假设本身是如何形成的，而是对假设进行辩护或证实。在科学哲学中，这个区别（也就是假设是如何形成的与假设是如何被证明或证实之间的区别）通常被描绘为**发现语境**与**辩护语境**的差异。\n\n同样地，假设演绎法，归根结底也就是证实和不证实推理，在科学中毫无疑问扮演了一个重要角色。然而，基于我们在前面探讨过的命题，尽管假设演绎法是在科学中运用的一个方法，但称它就是科学方法却会令人产生误解。\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%81%87%E9%9D%A2%E5%89%8D%E5%A4%9C":{"title":"《 假面前夜 》","content":"\n# 《 假面前夜 》\n\n# 元数据\n\n\u003e [!abstract] 假面前夜\n\u003e - ![ 假面前夜|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/817/856817/t7_856817.jpg)\n\u003e - 书名： 假面前夜\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 被调到大阪柯尔特西亚酒店工作的山岸尚美，注意到了客人在说谎。另一方面，调查发生在东京的杀人事件的新田浩介盯上了一个男人，男人表示案发当晚自己在大阪，却不肯说出酒店的名字。即使被怀疑杀人也要保守的秘密到底是什么？\n\u003e\n\u003e - 出版时间 2016-05-01 00:00:00\n\u003e - ISBN： 9787544263122\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n貌似连着看了两本交换杀人案件  \n ^16142247-6UqFcmgME  \n⏱ 2017-10-23 21:33:21\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%81%87%E9%9D%A2%E9%A5%AD%E5%BA%97%E6%96%B0%E4%BF%AE%E7%8F%8D%E8%97%8F%E7%89%88":{"title":"《 假面饭店（新修珍藏版） 》","content":"\n# 《 假面饭店（新修珍藏版） 》\n\n# 元数据\n\n\u003e [!abstract] 假面饭店（新修珍藏版）\n\u003e - ![ 假面饭店（新修珍藏版）|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/992/842992/t7_842992.jpg)\n\u003e - 书名： 假面饭店（新修珍藏版）\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 东京都内发生了三起难以理解的连续杀人事件。嫌疑犯杳无踪迹，警方只能从现场留下的暗号推断出，下一次犯罪现场将在东京柯尔特西亚大饭店。搜查一课的年轻刑警新田浩介化装成饭店员工潜入搜查，配合他的是饭店的资深前台——山岸尚美。因为工作理念的差异，二人冲突不断，然而在一次次矛盾产生和化解的过程中，二人逐渐建立起了深厚的信任。与此同时，他们也在一步步靠近真相。\n\u003e\n\u003e - 出版时间 2016-08-01 00:00:00\n\u003e - ISBN： 9787544283830\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6UjgnkGO6  \n⏱ 2017-10-19 00:47:38\n","lastmodified":"2023-09-18T14:54:47.506454307Z","tags":null},"/%E5%81%8F%E5%A5%BD%E9%80%86%E8%BD%AC":{"title":"实例","content":"\n# 实例\n\n## 去商店不幸中弹\n\n\u003e 假设，某人走进了附近的一家便利店，里面恰巧发生了抢劫案，他不幸中弹。你认定他是因中弹而导致右臂残疾。你的任务就是给这起抢劫案中的受害者设定赔偿金额。此人住所附近有两家商店，其中一家是这个人常去的。请思考以下两种情况：·抢劫案发生在此人常去的那家商店。·此人常去的那家商店的店主要去参加一个葬礼，商店不营业，这个人就去了另一家商店，而就在那家商店里，他中弹了。此人中弹的那家商店是否会对此人的赔偿有影响？\n\n大家都会认同在这两种情况下，赔偿金应该相同。  \n但是另一个实验中，每位受试者都只看到了一种情况，并用金钱来衡量这个人的受害程度。他们发现（你肯定也猜到了）如果受害者受伤的商店是他不常去的那家而不是他常去的那家，他得到的赔偿会**更多**。  \n不幸的是，只有在将两种情况放到一起看时，才能得出这个原则，而现实生活中，这两种情况不可能同时发生。我们通常用受试者组间模式体验生活，在这种模式中，可能会改变你的想法且有鲜明对比的方案并不存在，当然了眼见即为事实。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%82%A8%E8%83%BD":{"title":"储能","content":"\n# 储能\n\n储能概念龙头股：\n\n1、宁德时代 300750，全世界动力电池的龙头公司。新能源存储的方式有很多种，电池可能是最常见的，所以作为国内率先具备国际竞争力的动力电池制造商之一才会广受关注。\n\n2、比亚迪 002594，2010 年进军光伏储能领域，公司全产业链布局储能板块，是北美市场最大的电池储能供应商。\n\n3、固德威 688390，全世界逆变器十大公司之一，公司已经逐步发展到储能全线二十多个系列光伏逆变器产品，可以说在全球具有核心竞争能力。\n\n4、阳光电源 300274，专注于新能源汽车动力电池系统、储能系统的研发、生产和销售，是全球最有经验的储能设备及系统解决方案供应商。\n\n5、派能科技 688063，公司是行业领先的储能电池系统提供商，专注于磷酸铁锂电芯、模组及储能电池系统的研发、生产和销售。\n\n6、科士达 002518，公司是最早布局并拥有储能核心技术的公司之一，储能产品远销海外地区。其与宁德时代合资公司，预计今年年中开始投产，公司的储能业务有望迎来高速增长。\n\n7、亿纬锂能 300014，生产的锂离子电池产品广泛应用于消费电子、动力和储能领域，子公司亿纬赛恩斯被认定为广东省储能动力电池系统工程技术研究中心\n\n8、国轩高科 002074，公司是中国动力电池产业最早进入资本市场的民族企业，拥有新能源汽车动力电池、储能、输配电设备等业务板块，近年来持续开拓国內外储能市场。\n\n9、科陆电子 002121，储能产品链完善，包括储能电池、PCS(双向变流器)、BMS(电池管理系统)、EMS(能量调度系统)等核心技术，国内锂电池储能市场占有率第一。\n\n10、上能电气 300827，公司储能逆变器相关产品已大规模应用在光伏+储能、风电+储能等领域。公司主要产品包含光伏逆变器、储能双向变流器，与华能集团清洁能源技术研究院达成战略合作，已共同为多个储能示范项目提供了光伏储能系统解决方案。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%83%E8%AE%A4%E7%9F%A5":{"title":"元认知","content":"\n一种思考方式，比如在读书时，这些人确实会思考他们所读的内容。这个过程往往是看不见的。这些读者的内心独白听起来像：“这个想法让我想起……”，“这一点与……冲突”，“我真的不明白如何……”等等。如果他们做笔记的话，他们最做下自己的总结、分析而不仅仅只是摘抄\n\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%89%E4%BC%8F":{"title":"光伏","content":"\n# 光伏\n\n## 钙钛矿\n\n目前主流仍然是晶硅做成的单晶或多晶硅太阳能电池。这是第一代太阳能电池，也有部分薄膜电池，也就是第二代电池。薄膜电池其实就是在玻璃板上加了一层可以将光能转化为电能的化合物，可以用在建筑外墙上。\n\n钙钛矿比起这两者，最大的优势就是能将更多光能转化成电能。现在晶硅电池只能将 23%光能转化为电能，哪怕用最新型的异质结或 Topcon 技术，转化率也只能达到 27-28%——这已经是晶硅电池的极限，薄膜电池的效率更低，只有晶硅电池一半。\n\n如果用钙钛矿材料，光能转电能理论上能达到 33%，如果几块叠加在一起做成电池快，转化率能超过 50%。\n\n相比硅料，钙钛矿原料便宜、纯度要求也不如硅料高。在后续生产时，钙钛矿不需要很高的加工温度，不少环节甚至不需要真空。它还能和晶硅电池兼容，做成晶硅+钙钛矿的电池组。\n\n制造材料便宜、制造过程要求也更宽松，还能兼容其他材料，自然成本更低。现在以硅为原料的电池批发价高达 500-1000 美元/kw，钙钛矿电池价格只有一半，重量只有十分之一。如果能大规模用在电动车上，在有限空间中能装进更多电池，里程数会明显增长，价格可能还更便宜。很多建筑也能以低价安装光伏组件发电。\n\n### 相关公司\n\n[[昆山协鑫光电材料有限公司]]  \n[[极电光能]] , 背后汽车巨头[[长城集团]]  \n[[纤纳光电]]  \n双碳行业明星创业公司拿投资的习惯，他们更偏好政府基金、产业投资或者长期跟踪相关领域的基金。前者会带来政策、税收、土地优惠，后者有技术和行业人脉资源。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%89%E7%8E%AF%E6%95%88%E5%BA%94":{"title":"光环效应","content":"\n# 光环效应\n\n#卡片/术语卡  \n如果你赞同一个总统的政见，你可能也会喜爱他的声音及着装。喜爱（或讨厌）某个人就会喜爱（或讨厌）这个人的全部——包括你还没有观察到的方面——这种倾向就叫做光环效应。\n\n我们对一个人性格特征的观察顺序是随机的。然而，顺序的确很重要，因为光环效应注重第一印象，而后续信息在很大程度上都被消解掉了、\n\n我采取的避免光环效应的评卷方法遵循了一个普遍原则：[[消除错误的关联]]！\n\n- 在开始讨论某个问题之前，先让与会的每一位成员各自写下简短的意见阐明自己的观点。这个过程很好地利用了小组里不同知识和见解的价值。而开放性讨论这一常规做法总会注重那些发言早而又强势的人的意见，使得其他人一味附和他们的观点。\n- 如果某个案件有多个目击证人，在录口供之前，这些证人是不能获准讨论案件的。这样做不仅是为了防止不怀好意的证人相互串通，还避免了没有偏见的证人相互影响。交流过各自目击过程的证人容易在证词中犯相似的错误，降低了他们所提供信息的总体价值。减少信息来源中的冗赘信息总是没错的。\n\n光环效应通过夸大评估的一致性来保持简单和连贯的特点：好人只做好事，坏人全都很坏。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%89%E7%94%B5%E6%95%88%E5%BA%94":{"title":"光电效应","content":"\n# 光电效应\n\n原来是这样的：当光照射到金属上的时候，会从它的表面打出电子来。原本束缚在金属表面原子里的电子，不知是什么原因，暴露在一定光线之下的时候，便如同惊弓之鸟纷纷往外逃窜，就像见不得光线的吸血鬼家族。\n\n总而言之，对于特定的金属，能不能打出电子，由光的频率说了算。而打出多少电子，则由光的强度说了算。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%8B%E5%8A%B3%E7%8B%84%E4%B9%8C%E6%96%AF%E6%89%98%E5%8B%92%E5%AF%86":{"title":"克劳狄乌斯·托勒密","content":"\n# 克劳狄乌斯·托勒密\n\n#卡片/人物卡\n\n- 国籍：希腊裔、罗马公民\n- 生平：约 100 年－168 年\n- 身份：数学家、天文学家、地理学家、占星家\n- 简介：托勒密的著作在数几个领域代表了古希腊、罗马科学的最高成就，特别是盛行了 1400 年的地心說。托勒密的地心说提出了以地球为中心的宇宙模型，也被称为托勒密系统（Ptolemaic system）。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%A8%E5%B1%8B%E5%AE%9A%E5%88%B6":{"title":"全屋定制","content":"\n# 全屋定制\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230802211814.png)\n\n## 衣柜\n\n- 挂衣区下挂 6cm\n- 挂衣区高 93，挂裤子区 91\n- 叠衣区 30-40\n\n## 橱柜\n\n- 不用 PET，不好打理\n- 地柜一定要做拉篮\n- 不要做收纳盒，平板拉篮就好\n- 做台下盆，水槽下面做透气孔\n- 如果有柜腿不用塑料的\n- 水槽柜要用铝箔保护起来\n- 水槽的最大宽度？\n\n## 鞋柜\n\n- 换鞋凳 高度 45\n- 挂衣勾 1.8m\n- 鞋柜层板做活动的，\n- 下方悬空 15cm\n- 鞋柜柜门上可以安一个全身镜\n- 鞋柜底部留透气孔\n\n## 餐边柜\n\n- 上方免拉手\n- 下方 C 型槽\n\n## 阳台柜\n\n- 包管那里多做隔层\n\n## 卫生间柜\n\n- 可以用多层板\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%A8%E5%B1%8B%E6%99%BA%E8%83%BD":{"title":"全屋智能","content":"\n## 水电交底\n\n- 电动窗帘：窗帘盒内预留五孔电源线，**从顶端向下45cm处**预留五孔电源。也可以在窗帘盒内侧好顶留零火线。\n- 窗帘盒宽度 ：直轨单轨窗帘盒宽度**15CM-20CM**之间，直轨双轨窗帘盒宽度**20CM-25CM**之间，L型异型单轨**25CM**双轨**30CM**\n- 窗帘盒顶端 ：窗帘盒顶端**加装细木工板**，以助于窗帘轨道的安装。\n- 开关布线 ：**所有的开关都需要加装零线**（智能开关最多三开，86底盒）想加装联排边框需提前购买（开关联排）\n- 床头开关 ：所有的卧室床头**都不需要双控线**，只需要单独预留一个底盒，底盒内预留零火线，（或者用无线开关，不需要底盒）\n- 背景音乐 ：每个房间都要预留一个当箱线到背景普乐主机和零火线（主机内盘提前购买）电视采要连接普结的话需要预留一根普频线需要低普炮也要一根警频线\n- 智能摄像头 ：防盗门外，预留五孔插座，便于以后给摄像头供电（无需预留网线）或者想要安装摄像头的位置\n- 天然气报警器 ：需要在燃气灶Ï的斜上方，集成吊顶内，预留五孔电源。\n- 智能毛巾架 ：需要在想要放置智能毛巾架的地方规划好电源\n- 人体存在传感：如果要安装人体存在传感器需要在安装的位置预留220插座给人体存在供电\n- 场景面板：需要单独顶留一个86盒（底盒内预留出零火线）给场景面板供电\n- 联排边框：86底盒并排摆放，最好是联排底盒\n- 镜前灯电源、l镜前灯控制线直接放在卫生间开关内即可又便于智能控制（买镜前灯需注意无需购买镜前自带触摸开关的否侧将无法控制\n- 水浸关闭阀门：需要在室内总水阀处好预留五孔电源线，（安装机械手用）\n- 网铬覆盖：通往每个房间最少一根网线(6类网线以上)客厅电视柜3根（有一根给网路机顶盒一根给路由一根返回弱电线分给每个房间）\n- 扫地机器人：(自动上下水的扫地机器人请提前预留上下水，最好放卫生问)给扫地机器人预留好电源位置，确认好扫地机器人所在位置\n- 激光投影：需要在想要安装激光投影的位置预留电源线，电动幕布需要在安装幕布的上方预留电源线（购买幕布时需告知电源位置）\n- 智能床氛围灯：需要在床后预留电源线位置在床中问高度（地脚线上就可以）\n- 语音音响：需要在放置语音音响的位置预留出5孔电源\n- 智能门：给防盗门处预留220v电源，给智能门供电\n- 网关预留：插座每个房间多预留一个五孔插座，（给网关供电）\n\n懒是人类的第一进步动力\n\n## 协议\n\n- [[ziggbe]] 延迟低，可断电使用\n- 蓝牙 mesh，延迟比 zigbee 高点，但可接受，可断电还是用\n- 无线 mesh，狗都不用，断电就完蛋\n\n## 生态\n\n苹果 homekit、[[米家生态]]、[[华为智能家居生态]]\n\n## 统计各个区域情况\n\n统计各个区域有几路灯，\n\n### 玄关\n\n常用场景：离家模式、外出模式、日常模式\n\n- 玄关+厨房一路\n- 餐边柜灯带一路\n- 客厅灯带一路，双控\n- 客厅射灯一路，双控\n\n### 餐厅\n\n- 主灯 1 盏\n- 射灯 4 盏\n\n### 客厅\n\n常用场景：日常、观影、柔和、氛围、窗帘、空调\n\n- 主射灯 8 盏\n- 幕布灯带+ 背景灯带\n\n### 卧室\n\n常用场景：总开关、常用、睡眠、起夜、窗帘、空调\n\n- 主射灯 6 盏\n- 窗帘灯带 + 空调口灯带\n- 斗柜底灯带+ 书房6 盏射灯\n- 衣帽间4 盏\n\n### 卫生间\n\n- 射灯3 盏\n- 灯带一条\n\n## 场景\n\n### 开门亮灯、出门关灯\n\n### 观影模式\n\n### 起夜模式\n\n## 购买清单\n\n- 网关\n- 开关：零动开关，智能开关\n- 智能灯：需要做渐明渐暗就要智能灯\n- 各类传感器\n- 窗帘轨道\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%AC%E4%BC%97%E5%8F%B7":{"title":"如何 涨粉","content":"\n主页 | OpenWrite 辑器 - 可以直接将公众号文章抓取到后台，便于后续的进一步编辑。 2. **Typora** 可见即可得，但是现在收费了 3. [mdnice](www.mdnice.com/) mdnice 也是一款 markdown 渲染软件，但直接用它来编写文章不太方便。可以和 Typora 结合 4. [**二十次幂**](www.ershicimi.com/) 用来查看一个公众号的历史发文，也可以看对应的阅读量，非常直观。 5. [OpenWrite](https://openwrite.cn/) 可以一键同步到各大博客平台。目前支持 CSDN/博客园/简书/掘金/B 站/今日头条，等等，并且也一直在适配新的平台。\n\n# 如何 涨粉\n\n## 内容 为王\n\n如何才算是一篇好内容？一般有几个维度可以判断：\n\n1. 其他号主愿意转载\n2. 阅读量比平均阅读量高，越高越好\n3. 在看、点赞、评论明显比其它文章高\n\n## 资料引流\n\n如果短期里无法做出好内容，那么还有一个重要之道，就是**资料引流**。人都是懒惰的，同时人也都有贪便宜的心态。所以利用这两个人性的弱点，就可以为自己带来大量粉丝！\n\n那么资料哪里来的？现在互联网这么发达，要整理一些资料简直不能再简单了。\n\n1. 万能的淘宝/闲鱼了解一下（比如搜索「Linux 电子书」，「Java 面试资料」等等）\n2. 同行公众号，也会分享很多资料，借用一下（一般在公众号的菜单栏里会有）\n3. 同领域的贴吧、论坛、豆瓣，也会分享大量资料（直接在对应平台上搜索「Linux」就行）\n\n## 流量互换\n\n1. 找同类型、同等级的公众号主\n2. 使用西瓜数据、二十次幂等等工具\n\n# 变现手段\n\n1. **广告**\n2. **流量主**  \n    当你开通流量主之后，每篇推文末尾都会有个广告卡片，你点击一下就会有一定的收益。一般来讲点击一下就有 1 元左右的收入，但也不一定。\n3. **打赏**\n4. **分销**  \n    也有很多公众号，除了头条是原创干货外，剩下的 7 条全部是商品分销，据说销量非常可观。\n5. **服务**\n\n# 参考链接\n\n[最新公众号 SEO 核心玩法，自动引流躺着赚钱](https://articles.zsxq.com/id_w49kf59uhiwj.html)  \n[linux 领域头部公众号复盘](https://shimo.im/docs/DjCGWkXvYK6J9q9y)  \n[达叔经济学](https://articles.zsxq.com/id_dh7xw7mee4ic.html)  \n[自动化卖群](https://articles.zsxq.com/id_mxmdqczaowsp.html)  \n[普通人如何通过细分市场找到机会](https://articles.zsxq.com/id_pt1urnv5g4ah.html)  \n[Kris 的自律训练营](https://articles.zsxq.com/id_ovpgq17o092a.html)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%AC%E7%A7%AF%E9%87%91":{"title":"公积金","content":"\n# 公积金\n\n[杭州住房公积金管理中心 楼盘查询](http://gjj.hangzhou.gov.cn/col/col1598691/index.html)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%B0%E5%B0%8F%E6%AC%A2":{"title":"兰小欢","content":"\n# 兰小欢\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%B3%E4%BA%8E%E6%97%85%E6%B8%B8":{"title":"关于旅游","content":"\n# 关于旅游\n\n#生活类/攻略\n\n[鳗鱼の青甘小环线](https://mp.weixin.qq.com/s/QwyE0w-bdAhZto4uObs85A)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%85%B3%E9%94%AE%E8%AF%8D%E5%92%8C%E6%A0%87%E7%AD%BE%E7%9A%84%E5%BC%82%E5%90%8C":{"title":"关键词和标签的异同","content":"\n关键词对一张卡片的提炼\n\n本身不包含内容\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%85%E5%AE%B9":{"title":"内容","content":"\n# 内容\n\n什么样的内容，读者喜欢看呢？只需要记住 8 个词：金钱、异常、捷径、性暗示、罪恶、神秘感、死亡、民族主义。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%85%E5%AE%B9%E6%91%98%E8%A6%81%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95":{"title":"内容摘要加密算法","content":"\n# 内容摘要加密算法\n\n- 把一个不定长摘要定长结果\n- 摘要 yanglaoshi -\u003e x\n- 雪崩效应\n- 加密不可逆\n\n```JavaScript\n//Hex编码是以4比特作为一个单位编码，用4是因为计算机进位是2的倍数，而为了能把比特串分割开来，最适中就是取16进制；所以Hex编码就是16进制编码；\n//MD5\nvar md5c = crypto.createHash(\"md5\").update(\"加密内容ABCD1234\").digest(\"hex\");\nconsole.log(\"MD5加密后结果： %s\", md5c);\n//sha-1 or sha - 2\nvar SHA1 = crypto.createHash(\"sha1\"/* sha2 */).update(\"加密内容ABCD1234\").digest(\"hex\");\n\n// SHA256加密(Hmac方式)\n// HMAC是密钥相关的哈希运算消息认证码，HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。\nconst HMAC = crypto.createHmac('SHA256', key).update(value).digest('base64');\n```\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F":{"title":"内网穿透","content":"\n\nDDNSTO，小白使用\nfrp， github 70kstar\n\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%99%E4%BD%9C":{"title":"写作","content":"\n# 写作\n\n- [[L先生的写作课]]\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%99%E4%BD%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E5%9B%B0%E9%9A%BE":{"title":"写作为什么困难","content":"\n# 写作为什么困难\n\n我们之所以会觉得写作很难，是因为我们往往想一次就完成写作的几个步骤：\n\n1. 从大脑中搜索出文章所需的论点；\n2. 将论点组织成文章的大纲；\n3. 将大纲落实成纸面上的文字。\n\n而我们大脑中的知识就好似一张网络，或者说一片散沙，写作时我们往往一时间难以确定我们拥有什么观点（想不起来），这些观点如何与文章主题相关。这意味着我们需要花费一定精力去回想观点，还要花费一定精力将回想起来的观点形成文章的大纲。同时，文章大纲向纸面文字转换也需要花费我们一定的精力。**传统写作方式之所以让人觉得困难，就是因为其将回想论点的困难、选择论点的困难、搭建大纲的困难、构思行文的困难全部汇集到了一起，让我们一次解决。** 因此，如果想降低写作的难度，就要摒弃传统的写作方式，让几种困难分开出现。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%99%E4%BD%9C%E7%9A%84%E5%A5%BD%E5%A4%84":{"title":"写作的好处","content":"\n写文章是一个有很多好处的事情，但是这里有个前提，**写作一定不能被他人限定议题或者时间**，不能太在意读者的点击率。要凭着自己的兴趣写，不断探索 “邻近可能性” ，这样才能有创意，才能有持续的动力，才能有高质量的东西。\n\n写作是一个需要大量输入的事，他迫使你去收集更多的信息，阅读更多的书籍，**在获得新的数据之后，你会发现你以前的错误观点就自然而然地改变了**\n\n写文章可以方便自己更好地复盘。人的记忆随着时间的流逝很容易变得模糊，如果有文章留下，就可以更清晰地回顾当时的思路，发现自己的不足，并予以纠正。否则人们可能会误以为自己一贯正确，然后继续重复一些低级的错误。\n\n写文章能得到读者的反馈，他能让你以不同的角度的审视自己的文章，这是闭门造车做不到的\n\n稍微复杂一点的问题，靠直接根本是思考不出来的，根据金字塔原理，人最多大概只能记忆 7 个节点。写作内存是无限大的，可以渐进式的加深自己的思考\n\n可以不断长期积累，而且这些积累可以不断反复引用。这种滚雪球的积累效应是惊人的。\n\n**这是一种 1 对 N 的社交，而 N 可以不断增加无上限。长期看其传播效率和有效性远远大于任何其它社交方式**。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%86%AF%E5%94%90%E6%88%90%E4%BA%8B%E5%BF%83%E6%B3%95":{"title":"《 冯唐成事心法 》","content":"\n# 《 冯唐成事心法 》\n\n# 元数据\n\n\u003e [!abstract] 冯唐成事心法\n\u003e - ![ 冯唐成事心法|200](https://weread-1258476243.file.myqcloud.com/weread/cover/22/YueWen_35138325/t7_YueWen_35138325.jpg)\n\u003e - 书名： 冯唐成事心法\n\u003e - 作者： 冯唐\n\u003e - 简介： 他是热爱文艺的管理专家，是精通麦肯锡与曾国藩成事学的商业领袖，是医学博士出身的投资人。10年麦肯锡战略规划经验，5年华润医疗集团创始心得，5年中信资本投资管理启示——冯唐20年持续跨界成事经验，凝结成这本《冯唐成事心法》。冯唐说：“我将自己二十年职业管理生涯中吃过的苦、踩过的雷、翻过的山、见识过的人，总结为‘冯唐成事心法’。”以西方麦肯锡管理方法为经，以中国经典成事智慧为纬，融合冯唐20年职场亲身实践的经验，以冯唐独特观点+方法语录提炼+丰富运用场景+经验案例+实战方法为内容框架，助你在现实中修行，在工作中求法，在沟通中识人，在思考中升级。写给每一个想干事、能干事、持续成大事的人。\n\u003e - 出版时间 2020-12-01 00:00:00\n\u003e - ISBN： 9787559646996\n\u003e - 分类： 经济理财-管理\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n## 用好你的天赋\n\n- 📌 我不得不说，人要学会敬畏，因为天赋还是硬硬地在那里，天赋还是比后天努力更重要。如果你要做到九十分、九十五分以上，甚至你要做到一百分以上，那老天在你出生时给你的天赋就实在太重要了。 ^35138325-3-1605-1694\n    - ⏱ 2021-06-25 15:21:10\n\n## 如何平衡工作和生活\n\n- 📌 ，四个“有所”：一有所逼，二有所专，三有所规，四有所贪。 ^35138325-5-492-520\n    - ⏱ 2021-06-25 15:33:16\n\n## 做自己熟悉的行业\n\n- 📌 从近乎一张白纸的、二十几岁的小咨询顾问，在很短的时间内做到某个行业的专家，甚至能给这个行业的管理者相关的经验，这是怎么做到的？下边是相关秘籍。 ^35138325-7-1156-1227\n    - ⏱ 2021-06-25 16:04:39\n- 📌 .先知道一百个关键词。 ^35138325-7-1232-1243\n    - ⏱ 2021-06-25 16:04:32\n- 📌 2.找三到五个专家跟他们坐下来谈半天到一整天。没有傻问题，尽量多问问题。你可以一开始就跟专家讲，你对这个行业一无所知，只是一个通用管理顾问，现在想跟他聊聊，谢谢他能来，然后一个个问题、事无巨细地问下去。 ^35138325-7-1839-1940\n    - ⏱ 2021-06-25 16:04:55\n- 📌 3.找三到五本专著，仔细地看完。在咨询工作中，我遇到过各种各样奇葩的项目，我不可能把这些都学了 ^35138325-7-1990-2037\n    - ⏱ 2021-06-25 16:05:04\n- 📌 4.价值最大化。价值最大化或者影响最大化，而不是挣钱。追求挣很多钱的，往往没有挣到钱；追求挣很大名的，最后也没有挣出很大名。你应该追求的是价值最大化或影响最大化。 ^35138325-7-2553-2634\n    - ⏱ 2021-06-25 16:05:52\n\n## 如何对待妒忌和贪婪\n\n- 📌 首先要努力。努力并不是为了完完全全去掉人性，去掉贪婪和妒忌，而是要守住底线。你可以妒忌，可以贪心，但是你不能害别人。这是在处理妒忌和贪婪上的底线——不害人。其次要宽容。既然你都会妒忌，会贪婪，那对于别人的妒忌和贪婪之心，特别是针对你的，一笑置之，不加批判，因为换了你也可能这样 ^35138325-9-1909-2051\n    - ⏱ 2021-06-25 16:30:23\n\n## 如何战胜自己，战胜逆境\n\n- 📌 推功揽过。把功劳推给其他人：“这件事做得好，其中有你更大的功劳。”一旦出现问题，这个级别的最高责任人首先要说：“这件事我负责，是我考虑得不周全。”之后再说：“这件事其实是有一二三四个内因和外因……”从表面来看，这只是表述次序的不同，多数人是先辩解理由，再说自己可能也做错了一点点，但效果是完全不一样的。多做推功揽过，你会发现身边的朋友越来越多，你的事情做得越来越好。 ^35138325-10-1993-2176\n    - ⏱ 2021-06-25 16:41:28\n\n## 什么是终极领导力\n\n- 📌 “不着急”，说的是对时间的态度。“不害怕”，说的是对结果的态度。“不要脸”，说的是对别人评论的态度。 ^35138325-20-3393-3451\n    - ⏱ 2021-06-28 11:22:03\n\n## 你需要知道的职场沟通规范\n\n- 📌 在你表达意见之前，先问三个问题，再发表自己的意见。这三个问题是：你对这个问题是怎么想的？为什么这样想？有没有其他解决方案？当然这三个问题可以有各种各样的变化，可以是五个问题，甚至是十个问题。但是，下次在你发表意见之前，先至少问三个问题。如果经常这么做，甚至形成这种习惯之后，你会发现自己的沟通能力上了一个台阶。 ^35138325-21-406-561\n    - ⏱ 2021-06-28 11:23:47\n- 📌 少大言”就是越具体越好。情况是什么样子的？背后的关键原因是什么？结论是什么？希望解决的具体措施是什么？越具体越好，不要用那些常用的套话，多用一些具体的、实实在在的街面上的话来表达，这样在职场交流里，反而效果要好得多。 ^35138325-21-1202-1310\n    - ⏱ 2021-06-28 11:24:58\n\n## 成事者的自我修养\n\n- 📌 后来随着年纪越来越大，见的事情越来越多，发现这些似乎无用的东西，构筑了人健全的三观。实际上，这是人见识的一部分。有了这些见识，人才可以把一个相对细小、具体的东西，放在一个更宏观的环境中来看待，这样才能更好地去处理一些事情。 ^35138325-47-1781-1892\n    - ⏱ 2021-06-28 14:57:38\n\n## 多谈问题，少谈道理\n\n- 📌 时代越接近现代，信息越庞杂，人越容易空谈，是非越容易混淆，庸众越容易狂欢，骗子越容易生存。你看平常的朋友圈、自媒体，是不是经常会如醍醐灌顶般赞同不已。哪怕你是受过高等教育，你先看谁的文章，先看哪篇文章，都能影响你对一个看似非黑即白的问题的看法。 ^35138325-56-619-741\n    - ⏱ 2021-06-28 15:49:36\n\n## 建立长期互相滋养的关系\n\n- 📌 麦肯锡的一个方法论，就是如何给正面的负反馈。如果你想给别人提意见的时候，用什么样的方法最有建设性？（1）我观察到你说了什么话，做了什么事：一、二、三、四……（2）因为你这么做了，说了一、二、三、四……对我的影响是一、二、三、四……我哪里不舒服了、不爽了。（3）我观察到你做的事情对我产生的影响，我给你的建议是一、二、三、四……正面地给出负面的反馈。 ^35138325-60-4709-4895\n    - ⏱ 2021-06-28 16:55:41\n\n## 如何成功转型\n\n- 📌 简单地说，在有冲动乱改战略的时候，请管住自己，这样对团队的好处要远远大于坏处。 ^35138325-64-3432-3471\n    - ⏱ 2021-06-28 17:41:22\n- 📌 先求稳当，次求变化。先以运营现金流为正、为首要目的，先养活自己，再求发展。 ^35138325-64-3537-3574\n    - ⏱ 2021-06-28 17:42:59\n\n## 如何累身不累心\n\n- 📌 三岁孩儿虽道得，八十老人行不得。 ^35138325-67-2539-2555\n    - ⏱ 2021-06-28 18:10:10\n\n# 读书笔记\n\n## 成事之人的七大特质\n\n### 划线评论\n\n- 📌 身体体重指数 ^16142247-7roJfM0Z8\n    - 💭 体质指数(BMI)=体重(kg)/身高 (m)^2  \n成人的BMI数值  \n体重指数, 男性, 女性  \n过轻, 低于20, 低于19  \n适中, 20-25, 19-24  \n过重, 25-30, 24-29  \n肥胖, 30-35, 29-34  \n非常肥胖, 高于35, 高于34\n    - ⏱ 2021-06-28 16:29:58\n   \n\n## 建立长期互相滋养的关系\n\n### 划线评论\n\n- 📌 摆摆龙门阵 ^16142247-7roKnSaaC\n    - 💭 “摆龙门阵”里的“摆”字，作动词解，含有说、谈、讲解、陈述之意。“摆”字后面紧随着的“龙门阵”三字，意即拉家常话。“摆龙门阵”，指的就是谈天说地，吹牛闲聊。\n    - ⏱ 2021-06-28 16:47:14\n   \n\n## 结束语 成事到底为了什么\n\n### 划线评论\n\n- 📌 曾国藩这段话，是写给江忠源、左宗棠的。他们三个人有共同点：一、都是书生；二、都是精英；三、都能带兵、练兵、打仗；四、都亲临一线。这段话其实有浓浓的儒家精英意识，身逢乱世、衰世，精英应该干点什么？ ^16142247-7roQoethV\n    - 💭 “今日百废莫举，千疮并溃，无可收拾。独赖此精忠耿耿之寸衷，与斯民相对于骨岳血渊之中。冀其塞绝横流之人欲，以挽回厌乱之天心，庶几万有一补。不然，但就局势论之，则滔滔者吾不知其所底也。”\n    - ⏱ 2021-06-28 18:18:56\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7roRbLupn  \n⏱ 2021-06-28 18:31:08\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%87%80%E6%B0%B4%E5%99%A8":{"title":"净水器","content":"\n## 迷瞪\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513193236.png)\n\n饮用水焦虑，厂家制造伪需求\n\n**微量水素主要靠食物**，水补不如食补\n\n小时候喝井水也没事\n\npp 棉 1-10 微米，只能过滤大颗粒\n\n超滤，过滤 0.01,可以做直饮水过滤，但前提是水质好\n\n纳滤，做的品牌比较少，脱盐率低，水质偏硬，\n\nRO 机 ，过滤掉所有杂质，只有水，借鉴于海鸥\n\nRO 膜主要看脱盐率和寿命\n\n脱盐率指的是对离子的去除，一般能达到 95%以上 （ 自来水 TDS 一般 400多，滤后 40 左右  \n寿命，前置滤芯一年一换，以制水量算寿命，膜不堵净水量没少就不用换\n\n- 水质越差寿命越低\n- 废水比越高越影响寿命，别关注这点 无所谓\n\n800G （G指加仑）一直 开着，24 小时制水量 800 加仑，也就是每分钟 2.08 升，330m的可乐罐需要 10s\n\n流量越大，需要的泵功率越大，噪音越大\n\n### 溢价点\n\n#### 零陈水\n\n为了解决 头杯水 TDS 高的问题\n\n#### 降噪音\n\n通过加吸音棉\n\n#### 集成水路\n\n集成水路需要单独开模。非必须属性\n\n#### 地区性问题\n\n北方需要电辅热功能\n\n#### 加热龙头\n\n热水直出，但是按进水温度 15 摄氏度，加热到 90°，出水量也就在 150G 左右，也就是装满一个可乐罐要一份多分钟\n\n也有产品会增加一个 储存热水的桶\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%87%A0%E4%B8%AA%E8%87%AA%E5%AA%92%E4%BD%93%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%BC%98%E5%8A%A3%E5%8A%BF%E5%92%8C%E9%9A%BE%E7%82%B9":{"title":"几个自媒体平台的优劣势和难点","content":"\n# 几个自媒体平台的优劣势和难点\n\n普通人在自媒体赚钱的难度：小红书简单、抖音中等、B 站困难、公众号梦魇\n\n## 公众号为什么难做\n\n1. 看完，没意义。点赞，没意义。收藏，没意义。留言，没意义。转发，意义很小。分享到朋友圈，才有意义。而用户的分享意愿，越来越低了。 2.没有算法加持的公众号，这条内容爆了，阅读 10 万，平均涨粉 1000 。按照打开率 3% ，下一条阅读量：多了 30 而已…… 3.从用户的角度出发，视频所带来的内容消费体验，在绝大多数领域，确实都要好于「图文」形式；所以，「元素更丰富、呈现更直白」的视频看多了，图文就很难让用户「解渴」了（阈值变化）。  \n   在这样的大环境下，除了「信息密度大」的硬核干货（天然适合图文），大部分类别的内容，都在被不断的「降维打击」。\n\n## B 站更需要硬实力\n\nB 站中视频的内容长度，对于用户来说，意味着更高的「机会成本」。在一个相对完整的时间段（比如午休、通勤路上），我们可能只会看完 2、3 条内容，用户当然有理由把有限的机会，留给熟悉的 UP 主，以及热榜上的爆款内容。\n\n而无论是留给前者，还是后者，都意味着：在 B 站，套路不好用，需要「硬实力」。\n\n## 抖音、快手、视频号\n\n视频类的 无论抖音、快手、视频号，都需要数据背书，也就是完播率，点赞，收藏数。\n\n对于提升抖音「完播率」：画面（一秒钟的第一眼），重要于「用户刷到时的点赞数」（数据背书），重要于「文案」（五秒钟的第一句）。对于普通人是一个难题。\n\n## 小红书简单的原因\n\n小红书比抖音简单的「直接原因」：这款产品的设计逻辑，和抖音有本质的区别\n\n抖音，沉浸式：第一眼最重要。  \n小红书，信息流：封面图最重要。\n\n小红书抖音这些公域平台的复购远不如微信\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%87%BA%E5%9B%BD%E8%87%AA%E7%94%B1%E8%A1%8C":{"title":"出国自由行","content":"\n## tips\n\n### 机场\n\n- 走机场优先通道，能节省很多排队时间。有apec卡用 apec，大部分机场带小孩或者老人也可以走，可以咨询下工作人员\n\n### 关于换汇\n\n建议**使用银联卡在当地atm机取款**。查询本地不支持的话，可以提前换成美元， 通用货币。\n\n### 关于安全\n\n不一定是致命危险，主要是防盗防抢防骗\n\n   - 车停在有保安的地方。贵重物品不放后座位\n   - 低调点，不带名表名包\n   - 背包前置，尽量买个防割包\n   - 景区人多处，过马路时，上下地铁，公交时，上下出租车时，只要身边有人在附近，不要拿手机\n   - 突遇小意外，关注自己的贵重物品。（比如水溅到了\n   - 不要在偏僻街巷行动。遇到有纠纷不要凑热闹，\n   - 不要在路上玩手机，小心飞车党\n\n### 关于网络\n\n- 可以在淘宝买上网卡，最好买当地的，华为可以用天际通，小米也可以用小米漫游。国内服务商在外也不能用谷歌地图\n- 缓存离线地图，缓存攻略，很多地方没信号\n\n### 其他\n\n- 过海关的时候不要替任何人带行李！！\n- 买礼物的时候一定要注意标记，现在很多国家的某些违禁品已经合法化了，\n- 出外打工务必记住当地大使馆电话和报警电话，可以补办护照之类的\n- 做好安全备份策略，比如多带一个备用手机放酒店，钱财不要全放在身上，保证自己遭遇困境后依然还有脱困的手段。\n- 在小红书找一下当地的中国人，通常是的当地的中国留学生，然后加好友沟通询问一些攻略和注意事项，\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B":{"title":"函数式编程","content":"\n函数式编程思维的目标：程序执行时，应该把程序对结果以外的数据的影响控制到最小。\n\n## 副作用\n\n副作用（Side Effect）的主体是一个“过程”，即我们在命令式编程中提到的函数、方法等。副作用指这个“过程”运行后，不只是对传入值操作产生传出值，还对这两个值以外的部分产生了影响。\n\n## react hooks\n\n在类组件中，我们使用成员方法带来配置型声明式的编码风格，Hooks 的设计思想是使用升级版的函数式组件，以更清晰的过程来厘清事件流转。这也是我认为 React 使用 Hooks 后的理想方向。ReactHooks 的官方介绍中提到了 Hooks 的“动机”，其中包含组件之间复用状态逻辑的便捷化、复杂组件易理解程度等内容。React 在类组件非常成熟的情况下推动这些特性，是为了实现 React 事件流的清晰化。\n\n#### useState\n\n```js\n// 申明变量_state、生成标记\n// 申明两个方法，分别对应useState所在函数组件和它被调用镶嵌的位置\nconst _state = [], _genIndex = 0;\nconst reRenderThisComponet = （state, contextCptFunc) =\u003e contextCptFunc(state)\nconst componetAnchorPosition = contextCptFunc =\u003e getCptParentPosition(contextCptFunc)\n\nfunction useState (initialState, contextCptFunc) {\n  const currentIndex = _genIndex;\n  if (_state[currentIndex] === undefined) { _state[currentIndex] = initialState }\n  const setState = newState =\u003e {\n    _state[currentIndex] = newState;\n    // 在外层重新render调用state的组件, 虚拟调用\n    ReactDOM.render(reRenderThisComponet(_state, contextCptFunc),\n      componetAnchorPosition);\n    _genIndex = 0;\n  }\n  _genIndex += 1;\n  return [_state[currentIndex], setState];\n}\n```\n\nReact Hooks 的意义更多是承担函数组件之间的衔接和调用作用。\n\n## [[柯里化函数]]\n\n## Point-Free\n\n函数式编程中有一种**Point-Free**风格，可以理解成**无参调用**。  \n\n可以让我们只关心入参和出参，不关心数据流动过程\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729171821.png)\n\n## 纯函数\n\n **Pure** 纯函数，无副作用：任意时刻以相同参数调用函数任意次数得到的结果都一样。\n\n## 惰性计算\n\n惰性计算的含义就是在真正调用到的时候才执行，中间步骤不真实执行程序。这样可以让我们在运行时创建很多基础函数，但并不影响实际业务运行速度，唯有业务代码真实调用时才产生开销。\n\n## 参考资料\n\n- [深入理解函数式编程（上） - 美团技术团队](https://tech.meituan.com/2022/10/13/dive-into-functional-programming-01.html)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6":{"title":"参考资料","content":"\n函数组件任何情况下都会重新渲染。它并没有生命周期，但官方提供了一种方式优化手段，那就是 React. Memo。\n\n## 更新情况\n\n如果不实现 shouldComponentUpdate 函数，那么有两种情况触发重新渲染。\n\n- 当 state 发生变化时。这个很好理解，是常见的情况。\n- 当父级组件的 Props 传入时。无论 Props 有没有变化，只要传入就会引发重新渲染。\n\n## 高阶组件\n\n[高阶组件在函数组件中的运用](https://www.developerway.com/posts/higher-order-components-in-react-hooks-era)\n\n# 参考资料\n\n[一篇非常棒的对比文章](https://overreacted.io/how-are-function-components-different-from-classes/)，这篇文章很长，但是通篇都在论证这一句话：\n\n\u003e **函数组件会捕获 render 内部的状态，这是两类组件最大的不同。** \u003e **函数组件更加契合 React 框架的设计理念**。  \n\u003e UI = render (data)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%80%E7%89%87%E7%94%B5%E6%B1%A0":{"title":"刀片电池","content":"\n刀片电池能量密度达 140-160Wh/kg\n\n## 安全\n\n视频显示，刀片电池在被钢针穿透后，表面温度仅在 30℃~60℃ 之间，不仅没有明火，甚至连烟雾都没有冒出；三元锂电池则剧烈燃烧，表面温度超过 500℃。在针刺试验之外，刀片电池还通过了挤压、炉温、浸水、过充等严苛测试，全面安全性能得到了充分验证。\n\n## 续航时间\n\n不可否认的是，磷酸铁锂电池相比三元锂电池具有更高的稳定性和安全性，但是它的能量密度却不及三元锂电池，这就导致用磷酸铁锂电池的车型续航里程要比同级别搭载三元锂电池的车型少一大截。\n\n但是刀片电池却能做到不输一般三元锂的续航\n\n## **先进制造工艺**\n\n传统[动力电池](https://nev.ofweek.com/KW-donglidianchi.html \"动力电池\")以卷绕的形式生产电芯，而刀片电池采用叠片工艺。相比卷绕结构，叠片结构有着更均匀一致的电流密度、优良的内部散热性能、更适合大功率放电。因此刀片电池有着更好的循环特性、安全特性和能量密度。\n\n比亚迪刀片电池的充电循环寿命超 4500 次，即电池充电 4500 次后衰减低于 20％，寿命是三元锂电池的 3 倍以上，也超过了普通的磷酸铁锂电池，刀片电池的等效里程寿命可突破 120 万公里。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%86%E4%BA%AB%E6%88%91%E7%9A%84%E7%94%9F%E6%B4%BB%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F":{"title":"分享我的生活管理系统","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [分享我的生活管理系统](https://mp.weixin.qq.com/s?__biz=MzAxNTY0NjEzNg==\u0026mid=2247486010\u0026idx=1\u0026sn=ffabb2f5bc27276e1045f4f2a5c595f8\u0026scene=21#wechat_redirect)\n- tag：#\n- date: [[ 2022-02-21  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 知识管理方面，我用的依然是自己践行了很多年的「INK-P 管理法」 —— 在笔记软件里建立 4 个笔记本，分别叫 Inbox、Note、Knowledge 和 Project。\n- 1）Inbox：存放一切收集到的内容，以及现阶段我正在跟踪和关注的事物。\n- 基本上来说，有三种内容，我会把它们从「每日生活」中拎出来，写到 Inbox 里面：我关注的、需要跟踪的新闻大事件；比较重要的概念、理论、知识点；一切灵光一闪的灵感和想法。\n- Type（多选格式）：文章的标签。方便我快速找到对应的内容，比如「美食」「投资」「商业」「编程」……这里着重提一下：很重要的一个标签是「研究」。我会把所有的论文、文献打上这个标签，这样，当我需要查阅文献时，筛选所有「研究」标签下的条目，就能一目了然。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%86%E4%BA%AB%E6%A8%A1%E6%9D%BF":{"title":"为什么读这本书","content":"\n# 为什么读这本书\n\n# 这本书讲了什么\n\n# 我从这本书收获到了什么\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%86%E6%9E%90%E4%B8%8E%E6%80%9D%E8%80%83%E9%BB%84%E5%A5%87%E5%B8%86%E7%9A%84%E5%A4%8D%E6%97%A6%E7%BB%8F%E6%B5%8E%E8%AF%BE":{"title":"《 分析与思考：黄奇帆的复旦经济课 》","content":"\n# 《 分析与思考：黄奇帆的复旦经济课 》\n\n# 元数据\n\n\u003e [!abstract] 分析与思考：黄奇帆的复旦经济课\n\u003e - ![ 分析与思考：黄奇帆的复旦经济课|200](https://weread-1258476243.file.myqcloud.com/weread/cover/96/YueWen_34527944/t7_YueWen_34527944.jpg)\n\u003e - 书名： 分析与思考：黄奇帆的复旦经济课\n\u003e - 作者： 黄奇帆\n\u003e - 简介： 《分析与思考——黄奇帆的复旦经济课》是黄奇帆教授在复旦大学所做的关于中国经济的讲座合集。《分析与思考——黄奇帆的复旦经济课》共收录了12次讲座，根据主题分为“宏观调控”“基础货币”“资本市场”“房地产发展”“对外开放”“中美经贸”六个部分。除此之外，还收录了黄奇帆教授回顾他亲身参与改革开放40年经济发展中的重大事件的4篇文章作为附录。《分析与思考——黄奇帆的复旦经济课》所谈的都是改革开放进入新时期以来的重点、热点问题，从现实出发，运用经济学理论总结改革开放的经验，为推进新时期经济改革和扩大开放，提供了深入的思考。《分析与思考——黄奇帆的复旦经济课》的研究方法高屋建瓴，采用“问题—结构—对策”的方法，面对各种问题时，先研究问题、分析问题，找到问题结构性的、体制性的、机制性的、制度性的短板，通过改变问题的联系方式、边界条件，使得问题朝着理想的方向和预期的目标转化。全书深入浅出，既有学理上的深刻性，又有丰富的例证，表述生动，保持了演讲的特色，富有吸引力，可读性强，无论是专业研究者还是普通读者，都可以从中受益。\n\u003e - 出版时间 2020-07-01 00:00:00\n\u003e - ISBN： 9787208164321\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 上海人民出版社\n\n# 高亮划线\n\n## 宏观调控\n\n- 📌 金融创新中加杠杆的办法一共有六种。第一种叫高息揽储。第二种叫刚性兑付。第三种是资金池。第四种是错配。第五种是通道，通道可能把债权变成股权，就可能产生底数不清的资金流。第六种是嵌套，通道以后还可以嵌套。嵌套的时候一定有抽屉协议，表述为优先级和劣后级两种资金 ^34527944-4-16149-16276\n    - ⏱ 2021-07-19 15:57:20\n- 📌 从理论上说，一个社会，资本市场长期资本的来源，至少可以有十种以上的合规资金：一是企业年金；二是政府建立的养老、医疗等社会保险基金；三是商业保险公司的保险基金；四是各类企业，包含国有、民营企业的自有闲置的资金；五是富余家庭可用于投资的资金；六是政府财力组建的各种产业基金或引导基金；七是各类专业的资本运营公司或LP类投资公司的投资资金；八是各类金融机构按股权投资比例授予的融资融劵的资金；九是商业银行资本金合规比例下的股权投资资金；十是境外合规投资资金 ^34527944-4-20786-21011\n    - ⏱ 2021-07-19 16:01:36\n\n## 互联网金融发展中的经验教训、原则、特征、路径和风险防范\n\n- 📌 ，五大现代信息科技在安全问题上存在“三元悖论”，即安全、廉价、便捷三者不可能同时存在。 ^34527944-7-11137-11180\n    - ⏱ 2021-07-27 10:45:17\n\n## 基础货币\n\n- 📌 布雷顿森林体系运作20余年后，欧洲主要国家普遍在低通胀的情况下实现了经济的快速恢复。但是在欧洲经济快速发展的时期，美国由于越南战争导致的大额军费开支和国内的经济增速放缓，政府的财政赤字不断增加。与此同时，美国在国际贸易中的逆差不断增大，西方国家出现美元过剩，纷纷将手中的美元兑换成黄金。黄金价格在20世纪60年代早期已经超过了官方定价35美元/盎司，金价的上涨造成美元大幅贬值，美元危机第一次暴露出来。为了维持黄金官价水平及美元对外价值，美国不得不抛售黄金以平抑金价、稳定美元汇率。但美元与黄金固定兑换比例已经积重难返 ^34527944-8-7754-8013\n    - ⏱ 2021-07-29 17:28:26\n- 📌 大规模超发货币，使得财政赤字货币化，还有以下明显好处：第一，滥发美元可以减轻美国国债的压力，因为这样美国可以用更便宜或打折的方式偿还美国国债；第二，滥发美元有助于缓解美国政府的财政压力，以实现选民所要求实行的社会项目，从而避免不利于政治选举的选项，如提高税收等；第三，滥发美元容易与经济增长相混淆，而经济增长又容易与经济健康增长相混淆。滥发美元在经济下行时期缓冲了危机，同时掩盖了未来的通货膨胀；第四，滥发美元导致名义资产价格上涨，从而给公民制造了创造财富的假象，哪怕是他们手中资产的实际购买力已经下降。 ^34527944-8-9376-9628\n    - ⏱ 2021-07-28 10:00:26\n- 📌 布雷顿森林体系下的美元循环模式是依靠对外投资流出美国，以国际收支经常项目顺差形式回流。战后世界各国资源紧缺、产能低下，通过进口大量美国的商品和服务来维系百姓的正常生活。同时，美国利用贸易顺差流回的美元对国外进行直接投资，包括证券、信贷等多种渠道，享受各国战后重建的发展红利，成为资本净输出国。 ^34527944-8-10194-10340\n    - ⏱ 2021-07-29 17:42:35\n- 📌 美国货币锚的失控，对全世界的货币政策都产生了严重负面影响。锚定美元的货币陷入了两难境地。一方面，由于经济危机影响，各行业需求萎缩，失业率大幅攀升，需要提高货币供应、降低利率缓冲危机影响。另一方面，由于大部分锚定美元的国家均为发展中国家或自身实力相对较弱，在危机中外资出于资产保值考虑，纷纷选择美国国债或黄金作为避险资产，导致外资大幅外流。外资的流出叠加国内的量化宽松政策，往往导致本国货币大幅度贬值，雪上加霜。 ^34527944-8-15983-16188\n    - ⏱ 2021-07-28 10:15:39\n\n## 面向未来的人民币发行制度\n\n- 📌 “买国债发行货币”的三方面好处。其一，“扩大国债在货币政策操作中的运用，推动实施国债作为公开市场操作主要工具的货币政策机制”。换言之，这实际上是要用国债来替代央行票据。其二，“健全国债收益率曲线的利率传导机制”。换言之，这是希望将国债收益率作为整个经济和金融市场的基准利率，从而为其他市场主体和投资交易提供利率基准。其三，“强化国债作为基准金融资产的作用，使国债达到准货币的效果”。换言之，有了国债来作为央行公开市场政策操作的主要工具，就可以通过买卖国债来吞吐基础货币，国债就具有了准货币的功能。 ^34527944-9-1664-1912\n    - ⏱ 2021-07-29 17:59:22\n- 📌 美联储负责发行现钞，现钞作为信用货币，其偿付能力须由主权信用背书，而美联储并不具有主权信用，因此必须通过购买美国国债为现钞发行提供主权信用担保，故其国债持有量与现钞发行量基本相等 ^34527944-9-3627-3716\n    - ⏱ 2021-07-28 10:37:11\n\n## 对外开放\n\n- 📌 至于转基因这件事，公说公有理，婆说婆有理，这是一个科学讨论的问题，我不认为电视台过多地讨论是合理的，因为在没有严肃的科学认证和学术讨论的前提下，诉诸公众媒体搞全社会讨论，只会引发民粹主义的浮躁。 ^34527944-14-24523-24620\n    - ⏱ 2021-07-29 09:27:15\n\n## 中美经贸\n\n- 📌 当今世界有个奇特的怪圈，发展中国家辛辛苦苦给发达国家打工，好不容易收入了美元，又将这些美元低利息地、上万亿美元地借给发达国家，买了发达国家的国债，而发达国家又将这些低息外汇，投资到发展中国家，赚取10%以上的高额回报 ^34527944-16-5712-5820\n    - ⏱ 2021-07-29 10:23:43\n\n## 近十年美国政府债务演变格局和风险含义\n\n- 📌 总之，解决危机最不能容忍的办法有三种：一是不能为了掩盖矛盾、缓和矛盾而把现在的危机推向未来，导致未来更大的危机；二是不能用一个倾向掩盖另一个倾向，走极端，采取一种措施解决一个危机而引发另一个更为严重的危机；三是不能以邻为壑地把自己的问题转嫁给别人，利用自己的强国地位、货币信用为所欲为 ^34527944-17-6988-7130\n    - ⏱ 2021-07-29 10:54:20\n\n## 后记 授业解惑是人生再学习再研究最好的生活方式\n\n- 📌 我们通常认为博览群书并广泛学习，能使人收获更多知识，掌握更多技能。但在读书过程中，如果没有自由的灵魂，独立意志很容易被人影响，最终沦落为人云亦云，结果可能比不读书更糟。所以在获取知识的过程中，独立思考、亲自调查是至关重要的。 ^34527944-24-1681-1793\n    - ⏱ 2021-07-29 15:10:36\n\n# 读书笔记\n\n## 宏观调控\n\n### 划线评论\n\n- 📌 平稳调控M2增长率 ^16142247-7rUBevKge\n    - 💭 广义货币供应量（M2）是指流通于银行体系之外的现金加上企业存款、居民储蓄存款以及其他存款，它包括了一切可能成为现实购买力的货币形式，通常反映的是社会总需求变化和未来通胀的压力状态\n    - ⏱ 2021-07-19 15:20:58\n   \n\n## 近十年美国政府债务演变格局和风险含义\n\n### 划线评论\n\n- 📌 十年下来到2017年，美国政府债务总量从2007年的9万亿美元上升一倍多，达到20.44万亿美元，是GDP的105.4%。要知道，美国联邦政府债务并不包括州、市县地方政府债务。如果加上50个州和市县地方政府的5万多亿美元债务，总量接近26万亿美元，全美政府债务与GDP之比已达到130%左右。 ^16142247-7s9wtBZxr\n    - 💭 截至2021年3月1日，美国国债规模超过28万亿美元，高出GDP约30％，平均每个家庭将负担约28万美元，每人将负担约8.5万美元。\n    - ⏱ 2021-07-29 10:48:24\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7s9RahfBP  \n⏱ 2021-07-29 16:04:17\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%86%E7%B1%BB%E7%9A%84%E6%96%B9%E6%B3%95":{"title":"分类的方法","content":"\n# 分类的方法\n\n常见的分类方法有这样五种：\n\n- 二分法\n- 矩阵法\n- 公式法\n- 过程法\n- 要素法\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%86%E8%AF%8D":{"title":"分词","content":"\n# 分词\n\n分词就是具有动词及形容词二者特征的词，尤指以-ing 或-ed,-d,-t,-en 或-n 结尾的英语动词性形容词，具有形容词功能，同时又表现各种动词性特点，如时态、语态、带状语性修饰语的性能及带宾词的性能。分词分为现在分词和过去分词两种，是一种非谓语动词形式。现在分词和过去分词主要差别在于：现在分词表示“主动和进行”，过去分词表示“被动和完成”（不及物动词的过去分词不表示被动，只表示完成）。分词可以有自己的[[状语]]、宾语或逻辑主语等。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%98%E6%93%8E%E8%A5%BF%E6%96%B9%E7%8E%B0%E4%BB%A3%E6%80%9D%E6%83%B3%E8%AE%B2%E4%B9%89":{"title":"《刘擎西方现代思想讲义》","content":"","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E5%88%9B%E4%B8%9A":{"title":"创业","content":"\n# 创业\n\n# 创业的条件\n\n## 你已经定型了，想走出自己的路\n\n\u003e\"你是一块特殊形状的拼图。你可以改变自己的形状，适应公司现有的空缺。那是传统的方案。  \n\u003e但是，还有另一种对你和世界通常都更好的方案：围绕你自己的形状，发展出一幅新的拼图。这就是我所做的，我是一个非常奇怪的形状。\"  \n她的意思是，你为别人打工，就必须变成别人要求的样子。但这并不是你内心想要的，如果你想顺应自己的内心和天赋，就应该创业。\n\n这话没错，但是有一个前提才能成立：**你已经定型了，很难被外界塑造了。**这个时候，你走自己的路，内心满意度会高一些。我觉得这是创业的第一个条件。\n\n据我观察，大部分的中国年轻人，达不到这个条件。他们都没有定型，人生观和世界观还在发展中。典型的表现就是，说不出自己想做什么，也不知道自己的竞争力在哪里。\n\n## **要有可行的项目**\n\n不能先注册公司，再找项目。而且，你的项目最好是用户愿意付费的，有的同学的创业项目是拍短视频和直播，我觉得不靠谱。\n\n## 能够承受负的现金流\n\n**能够承受负的现金流。**刚开始创业，很可能没有或很少收入，每天却要支出，压力巨大。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%9B%E6%96%B0%E8%80%85":{"title":"《 创新者 》","content":"\n# 《 创新者 》\n\n# 元数据\n\n\u003e [!abstract] 创新者\n\u003e - ![ 创新者|200](https://weread-1258476243.file.myqcloud.com/weread/cover/33/YueWen_908185/t7_YueWen_908185.jpg)\n\u003e - 书名： 创新者\n\u003e - 作者： 沃尔特·艾萨克森\n\u003e - 简介： 《创新者》是沃尔特·艾萨克森继全球畅销书《史蒂夫·乔布斯传》之后的又一部力作，不仅讲述了计算机和互联网从无到有的发展历程，为我们生动地刻画出数字时代的创新者群像，还深度挖掘互联网的精神内核，解读了“诗意科学”这个重大主题。在近200年的数字化进程中群星闪耀，艾萨克森从第1个计算机程序的创造者、浪漫主义诗人拜伦之女埃达·洛夫莱斯伯爵夫人说起，细数了这一群将科学与人文融合的创新者，他们包括第1台通用型的电子计算机的创造者莫奇利、科学家冯·诺依曼、仙童半导体公司的“八叛逆”、天才图灵、英特尔的格鲁夫、微软的比尔·盖茨、苹果公司的乔布斯、谷歌的拉里·佩奇等。这些拥有不羁创意的先锋者、黑客、天才、企业家们，并不是孤立的存在，他们秉承着开放与共享的精神，通过跨越世代的合作，让科技实现了创造性的飞跃，而他们沉淀下来的社会和文化力量成为了滋养创新的坚实土壤。展现在我们面前的这一卷大气磅礴的创新图景，彰显了数字时代的独有气质，即科技和艺术完美交织的奇迹，这也是天才乔布斯一生所追求的主题。只有理解了互联网的精髓实质，才能成为下一个引领时代的创新者。\n\u003e - 出版时间 2017-04-01 00:00:00\n\u003e - ISBN： 9787508671642\n\u003e - 分类： 经济理财-管理\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n这本书断断续续读了很久之前的人名都已经记得不是很清了不过对我的计算机历史补全还是起了很大作用（对断章取义宣传比尔盖茨大学睡觉辍学的人表示鄙视） ^16142247-7bpe5Uayg  \n⏱ 2019-09-15 20:43:38\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%9D%E8%AF%86%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F":{"title":"初识操作系统","content":"\n# 初识操作系统\n\n## 计算机组成原理\n\n这个问题是可计算的吗？\n\n不可计算问题\n\n- 无穷问题\n- 停机问题\n\n## 人工智能\n\n此外，包括停机问题、包括 NP 问题在内的很多问题，虽然不能解决，但可以努力让计算机的解决方案超过人类的水平，这就是人工智能。\n\n## 冯诺依曼模型\n\n#### CPU\n\n64位和32位的区别\n\n在进行2^32次内的计算是没有区别的，但是进行2^64的数字时 32位就需要把拆成2个2^32来进行低位计算 然后再进位。\n\n## 不支持递归的程序语言如何实现递归程序？\n\n计算机编程语言用**栈**来实现递归函数。\n\n栈的使用方法是不断往上堆数据，所以需要一个栈指针（Stack Pointer， SP）指向栈顶（也就是下一个可以写入的位置）。每次将数据写入栈时，就把数据写到栈指针指向的位置，然后将 SP 的值增加。\n\n为了提高效率，我们通常会用一个特殊的寄存器来存储栈指针，这个寄存器就叫作 Stack Pointer，在大多数芯片中都有这个特殊的寄存器。一开始，SP 指向 0x100 位置，而 0x100 位置还没有数据。\n\n## class的实现\n\n首先一个 class 会分成两个部分，一部分是数据（也称作属性），另一部分是函数（也称作方法）。\n\nclass 有一个特殊的方法叫作构造函数，它会为 class 分配内存。构造函数执行的时候，开始扫描类型定义中所有的属性和方法。\n\n- 如果遇到属性，就为属性分配内存地址；\n- 如果遇到方法，方法本身需要存到正文段（也就是程序所在的内存区域），再将方法的值设置为方法指令所在的内存地址。\n\n当我们调用一个 class 方法的时候，本质上是执行了一个函数，因此和函数调用是一致的：\n\n1. 首先把返回值和返回地址压栈；\n2. 然后压栈参数；\n3. 最后执行跳转。\n\n总结：\n\n1. 我们写的程序需要翻译成指令才能被执行，这个翻译工具叫作编译器。\n2. 平时你编程做的事情，用机器指令也能做，所以从计算能力上来说它们是等价的，最终这种计算能力又和图灵机是等价的。如果一个语言的能力和图灵机等价，我们就说这个语言是图灵完备的语言。现在市面上的绝大多数语言都是图灵完备的语言，但也有一些不是，比如 HTML、正则表达式和 SQL 等。\n3. 我们通过汇编语言构造高级程序；通过高级程序构造自己的业务逻辑，这些都是工程能力的一种体现。\n\n## SSD、内存和 L1 Cache 相比速度差多少倍？\n\n我们希望存储器速度快、体积小、空间大、能耗低、散热好、断电数据不丢失。但在现实中，我们往往无法把所有需求都实现。\n\n下面我们举几个例子，带你深入体会一下，比如：\n\n1. 如果一个存储器的体积小，那它存储空间就会受到制约。\n2. 如果一个存储器电子元件密度很大，那散热就会有问题。因为电子元件都会产生热能，所以电子元件非常集中的 CPU，就需要单独的风扇或者水冷帮助电子元件降温。\n3. 如果一个存储器离 CPU 较远，那么在传输过程中必然会有延迟，因此传输速度也会下降。\n\n### 存储器分级策略\n\n既然我们不能用一块存储器来解决所有的需求，那就必须把需求分级。\n\n一种可行的方案，就是根据数据的使用频率使用不同的存储器：高频使用的数据，读写越快越好，因此用最贵的材料，放到离 CPU 最近的位置；使用频率越低的数据，我们放到离 CPU 越远的位置，用越便宜的材料。\n\n具体来说，通常我们把存储器分成这么几个级别：\n\n1. 寄存器；\n2. L1-Cache；\n3. L2-Cache；\n4. L3-Cahce；\n5. 内存；\n\n   内存的主要材料是半导体硅，是插在主板上工作的。因为它的位置距离 CPU 有一段距离，所以需要用总线和 CPU 连接。因为内存有了独立的空间，所以体积更大，造价也比上面提到的存储器低得多\n\n   内存速度大概在 200~300 个 CPU 周期之间。\n\n6. 硬盘/SSD。\n\n   SSD 也叫固态硬盘，结构和内存类似，但是它的优点在于断电后数据还在。内存、寄存器、缓存断电后数据就消失了。内存的读写速度比 SSD 大概快 10~1000 倍。\n\n### 缓存的算法\n\n#### 方案1\n\nCPU 读取到一个内存地址，我们就增加一个条目。当我们要查询一个内存地址的数据在不在 L1- 缓存中的时候，可以遍历每个条目，看条目中的内存地址是否和查询的内存地址相同。如果相同，我们就取出条目中缓存的值。\n\n这个方法需要遍历缓存中的每个条目，因此计算速度会非常慢，\n\n#### 方案2\n\n这里，我们可以用一个数学的方法。比如有 1000 个内存地址，但只有 10 个缓存条目。内存地址的编号是 0、1、2、3，…，999，缓存条目的编号是 0~9。我们思考一个内存编号，比如 701，然后用数学方法把它映射到一个缓存条目，比如 701 整除 10，得到缓存条目 1。\n\n用这种方法，我们每次拿到一个内存地址，都可以快速确定它的缓存条目；然后再比较缓存条目中的第一列内存地址和查询的内存地址是否相同，就可以确定内存地址有没有被缓存。\n\n延伸一下，这里用到了一种类似哈希表的方法：地址 % 10，其实就构成了一个简单的哈希函数。\n\n## Linux\n\n`ls -F`就可以看到当前目录下的文件和它的类型。\n\n- ` * `结尾的是可执行文件；\n- `= `结尾的是 Socket 文件；\n- `@ `结尾的是软链接；\n- `| `结尾的管道文件；\n- 没有符号结尾的是普通文件；\n- `/ `结尾的是目录。\n\n### 文件的增删改查\n\n`man touch` manual 说明书\n\nmkdir 新建目录\n\ntouch 新建文件\n\nls 查看文件目录\n\nrm 删除目录 remove 缩写\n\ncat `cat /ect/hosts/` 查阅\n\n### 进程\n\n应用的可执行文件是放在文件系统里，把可执行文件启动，就会在操作系统里（具体来说是内存中）形成一个应用的副本，这个副本就是进程。\n\nps 查看当前进程\n\n## Linux 内核和 Windows 内核有什么区别？\n\n### 内核的能力\n\n- 对于一个现代的操作系统来说，它的内核至少应该提供以下 4 种基本能力：\n- 管理进程、线程（决定哪个进程、线程使用 CPU）\n- 管理内存（决定内存用来做什么）；\n- 连接硬件设备（为进程、和设备间提供通信能力）；\n- 提供系统调用（接收进程发送来的系统调用）。\n\n## GC回收算法\n\n吞吐量，暂停时间，使用空间三者不可兼得。\n\n标记的过程主要分为 3 个步骤：\n\n- 如果对象在白色集合中，那么先将对象放入灰色集合；\n- 然后遍历节点的所有的引用对象，并递归所有引用对象；\n- 当一个对象的所有引用对象都在灰色集合中，就把这个节点放入为黑色集合。\n\n## 计算机网络\n\n每个课程都不够深入，这部分 去看\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E5%88%A4%E6%96%AD%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%B3%95":{"title":"判断数组的方法？","content":"\n## 判断数组的方法？\n\n```JavaScript\nconst arr = []\n\nArray.isArray(arr)\n\nObject.prototype.toString.call(arr) === '[object Array]'\n\ntoString.call(arr) === '[object Array]'\n\narr instanceof Array\n\narr.constructor===Array\n\n```\n\n1. ES6 新增的 `isArray` 方法\n2. 通过 `Object` 类型的副属性 class 判断\n3. 判断是否在 `Array` 的原型链上\n4. 判断 `constructor` 是不是 `Array`\n\n#### toString 不是对象原型链上的方法吗，为什么可以直接 toString()\n\n而常量是没有方法的，为什么能够调用方法呢？答案是这样的，五种基本类型除了 `null`、`undefined` ` 以外都有与之对应的特殊的引用类型——包装类型。当代码被解释执行时，底层会对基本类型做一个类型转换，即将基本类型转换成引用类型，这样就可以调用相应引用类型有权访问到的方法。\n\n[[toString#isArray]]\n其实就是**方法二**的一种封装，所以总结下 通过 **原型链**、**构造函数**和 **Object 副属性**三种方法判断\n\n说到这里，我去写下如何判断各种类型。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E6%98%AF%E5%90%A6%E5%85%B7%E5%A4%87%E6%8A%95%E8%B5%84%E8%B5%A2%E5%AE%B6%E8%B5%84%E6%A0%BC%E7%9A%8411%E4%B8%AA%E9%97%AE%E9%A2%98":{"title":"判断自己是否具备投资赢家资格的 11 个问题","content":"\n# 判断自己是否具备投资赢家资格的 11 个问题\n\n判断自己是否具备投资赢家资格的 11 个问题：\n\n1. 能区分投资和交易吗？\n2. 买入和卖出存在标准吗？\n3. 想显得自己很富有吗？\n4. 有 5 年内用不到的钱吗？\n5. 收入稳定吗？\n6. 好胜心强吗？\n7. 和普通大众生活在一起吗？\n8. 着急挣钱吗？\n9. 对复利有所了解吗？\n10. 这个月信用卡的还款还不完会转入下个月吗？\n11. 属于耳根子软的类型吗？\n\n对这些问题，如果“是”的答案有 5 个以上，那你就绝对不能开始投资。且不说投资，很可能连储蓄都无法正常进行。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%88%AB%E9%97%B9%E4%BA%86%E8%B4%B9%E6%9B%BC%E5%85%88%E7%94%9F":{"title":"《别闹了，费曼先生》","content":"\n# 《别闹了，费曼先生》\n\n#input\n\n## Meatdata\n\n- author：\n- link：[走近费曼丛书：别逗了，费曼先生-R·P·费曼 R·莱顿-微信读书](https://weread.qq.com/web/reader/cd732ca05c88b3cd7c63d59kecc32f3013eccbc87e4b62e)\n- tag：\n- date: [[2022-06-21]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n- [[理查德·费曼]]\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BB%8E%E6%96%B0%E6%89%8B%E5%88%B0%E5%A4%A7%E5%B8%88":{"title":"《 刻意练习：如何从新手到大师 》","content":"\n# 《 刻意练习：如何从新手到大师 》\n\n# 元数据\n\n\u003e [!abstract] 刻意练习：如何从新手到大师\n\u003e - ![ 刻意练习：如何从新手到大师|200](https://weread-1258476243.file.myqcloud.com/weread/cover/95/YueWen_843464/t7_YueWen_843464.jpg)\n\u003e - 书名： 刻意练习：如何从新手到大师\n\u003e - 作者： 安德斯·艾利克森 罗伯特·普尔\n\u003e - 简介： 本书是两位作者合作撰写的，一位是心理学家，另一位是科学作家。10多年前，我们开始经常探讨杰出人物和“刻意练习”这个主题，并在5年前开始认真地围绕这个主题写书。在那段时间，本书在我们两人的思想碰撞中慢慢成形，以至于我们现在都难以分辨，书中的哪一部分观点由谁提出。我们只知道，本书由我们两人合写，比由我们单独去写要好得多，也完全不同。\n\u003e - 出版时间 2016-11-01 00:00:00\n\u003e - ISBN： 9787111551287\n\u003e - 分类： 个人成长-认知思维\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 推荐序\n\n- 📌 人的学习受到情境的制约或促进。你要学习的东西将实际应用在什么情境中，那么你就应该在什么样的情境中学习这些东西。 ^843464-8-938-993\n    - ⏱ 2021-01-28 10:57:11\n\n## 引言 天才存在吗\n\n- 📌 学习不再是挖掘某人潜力的方式，而是发展这种潜力的方式。我们可以创造自己的潜力。 ^843464-14-1229-1268\n    - ⏱ 2021-01-28 11:17:30\n\n## 第1章 有目的的练习\n\n- 📌 一旦某个人的表现达到了“可接受”的水平，并且可以做到自动化，那么，再多“练习”几年，也不会有什么进步 ^843464-18-2388-2438\n    - ⏱ 2021-01-28 13:47:23\n- 📌 不论你在努力做什么事情，都需要反馈来准确辨别你在哪些方面还有不足，以及怎么会存在这些不足。 ^843464-19-2823-2868\n    - ⏱ 2021-01-28 13:51:05\n- 📌 有目的的练习：走出你的舒适区，但要以专注的方式制订明确的目标，为达到那些目标制订一个计划，并且想出监测你的进步的方法。还要想办法保持你的动机 ^843464-20-3430-3500\n    - ⏱ 2021-01-28 14:00:09\n\n## 第3章 心理表征\n\n- 📌 技能与心理表征之间的关系是一个良性循环：你的技能越娴熟，创建的心理表征就越好；而心理表征越好，就越能有效地练习，以磨炼技能。 ^843464-36-2765-2827\n    - ⏱ 2021-01-28 16:47:31\n\n## 第4章 黄金标准\n\n- 📌 不论什么时候，只要有可能，最佳的方法几乎总是找一位优秀的教练或导师 ^843464-41-8517-8550\n    - ⏱ 2021-01-28 17:54:36\n\n## 第6章 在生活中运用刻意练习原则\n\n- 📌 从事有目的的练习十分重要，不能只是漫无目的地重复同样的动作，而不制订提高与进步的清晰目标。 ^843464-51-680-725\n    - ⏱ 2021-01-29 10:57:47\n- 📌 反复做一件事情，目的是找出你在哪些方面存在不足，并且聚焦于在那些方面取得进步，试着采用不同的方法来提高，直到你最终找到适合自己的方法。 ^843464-52-3695-3762\n    - ⏱ 2021-02-01 11:08:18\n\n## 第7章 成为杰出人物的路线图\n\n- 📌 创新者几乎无一例外地在各自的领域或行业中工作了很长时间，已经成为杰出人物，然后再开始开辟新的天地。 ^843464-62-1276-1325\n    - ⏱ 2021-02-01 14:36:34\n\n## 第8章 怎样解释天生才华\n\n- 📌 这就是相信天生才华的危险性。它往往使人们假设，有些人生来就具有某些方面的天赋，而另一些人则不具备，而你可以很早就分辨他们之间的这些差别。如果你相信这种观点，那么，你就是在鼓励和支持“有天赋”的那些人，并打击其他的人，从而制造自我实现的预言。 ^843464-71-3741-3861\n    - ⏱ 2021-02-01 18:16:25\n\n# 读书笔记\n\n##\n\n\n### 划线评论\n\n- 📌 这就是相信天生才华的危险性。它往往使人们假设，有些人生来就具有某些方面的天赋，而另一些人则不具备，而你可以很早就分辨他们之间的这些差别。如果你相信这种观点，那么，你就是在鼓励和支持“有天赋”的那些人，并打击其他的人，从而制造自我实现的预言。 ^16142247-7nNeX6jQU\n    - 💭 真的很对，仔细想想我一直觉得自己数学好的蜜汁自信就是从幼儿园开始的早慧表现，得到了身边人的夸奖，使我变得自信，以及想要更好的学习数学(事实上并没有更聪明）。 所以多多给予小孩子 最初的表扬吧而不是给出不擅长的预言。与之相反的可能是唱歌吧\n    - ⏱ 2021-02-01 18:19:46\n\n## 第2章 大脑的适应能力\n\n### 划线评论\n\n- 📌 所以，对游客来说，最好的建议是别想着租一辆带车载导航的车去环游伦敦，而是要靠这座城市的出租车司机把你带到想去的地方 ^16142247-7nGTqJgxP\n    - 💭 在《与爱因斯坦月球漫步》中似乎也用了伦敦的司机记忆了这个城市线路的例子，也许伦敦的‘乱象’着实令人印象深刻\n    - ⏱ 2021-01-28 14:11:07\n\n## 第6章 在生活中运用刻意练习原则\n\n### 划线评论\n\n- 📌 我给约书亚就如何跨越停滞阶段提了一些建议，他回去后接着练习。他在自己写的书《与爱因斯坦月球漫步》（Moonwalking with Einstein）中讲述了这个故事，但最重要的是，约书亚确实大幅度地提高了记忆的速度，最终赢得了2006年美国记忆锦标赛的冠军。 ^16142247-7nMNCYjhw\n    - 💭 上一本书看的就是这本，让人惊讶的巧合，举一样的例子好像也不奇怪了\n    - ⏱ 2021-02-01 11:22:33\n\n# 本书评论\n\n## 书评 No.1\n\n人的天赋不足以拉开差距，所有差距都是日积月累的刻意练习，以及不断的修订错误，得到反馈中拉大的 ^16142247-7nOvyYXfG  \n⏱ 2021-02-02 14:20:04\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E6%99%AF%E7%90%86%E8%AE%BA":{"title":"前景理论","content":"\n# 前景理论\n\n人在不确定条件下的决策选择取决于结果与预期的差距而非单单结果本身\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96":{"title":"前端优化","content":"\n# 前端优化\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172953.png)\n\n- [[PWA]]:Progressive Web Apps,渐进式Web应用开发，旨在增强Web能力，缩小与原生应用的差距并创建与其类似的用户体验  \n- [[Lighthouse]]:自动化测试工具，用于测试页面的性能并提出优化建议  \n- [[SSR]]:Server Side Rendering,在服务端请求数据并组装HTML的渲染方式  \n- NSR:Native Side Rendering,在客户端提前请求数据并组装HTML的渲染方式  \n- Rehydration:俗称“注水”，复用服务端渲染生成的DOM结构及数据，并执行事件绑定逻辑来启动页面的过程\n\n看起来优化手段很多，其实可以分为三个阶段 `HTTP 获取资源阶段`、`HTML 解析渲染阶段`、`运行时优化`\n\n在结合指标进行针对性的阶段优化即可\n\n## Http 优化\n\nHTTP 优化有两个大的方向：\n\n- 减少请求次数\n- 减少单次请求所花费的时间\n\n（http 缓存）=\u003e [[DNS]] =\u003e tcp 连接 =\u003e http 连接 =\u003e 解析并渲染（并逐步请求页面中的其它资源）\n\n### **分析优化地方**\n\n使用谷歌 Performance 开发者工具\n\n[[LightHouse]]\n\n### **优化包的大小**\n\n[[webpack-bundle-analyzer]] 检测包依赖大小\n\n- UglifyJsPlugin 压缩过程中对碎片化的冗余代码（如 console 语句、注释等）进行自动化删除： （webpack4 默认使用）\n- require.ensure（vue-router 配置路由，使用 webpack 的 require.ensure 技术，也可以实现按需加载。）\n- 开启 [[Gzip]] （需要后端配合）\n- [[Tree-shaking]]、代码分割、移除用不上的依赖项等；\n- [[Webpack 优化]]\n\n### **浏览器层面的 tcp 连接限制**\n\n1. 如果处于 http1.1\n   - 既然对同一域名做了限制，那么可以切分为多个域名，有的放图片，有的放视频，这不就可以突破限制了吗！这里还有一点好处，在原来未切分域名的时候，就算是请求一个小图标，主站的 cookie 也会被带上，十分浪费流量。\n   - 减少连接数，我们也可以将一些体积较小的资源合并起来，这也就是雪碧图、资源内联等\n1. 升级 [[HTTP 2]]，从而实现单个 tcp 连接并行发送 http\n\n### **图片优化**\n\n- JPG 适用于呈现色彩丰富的图片，在我们日常开发中，JPG 图片经常作为大的背景图、轮播图或 Banner 图出现。\n\n  \u003e 复杂的、色彩层次丰富的图片，用 PNG 来处理的话，成本会比较高，我们一般会交给 JPG 去存储。\n\n[[无损图像格式]]\n\n- 图标使用 SVG\n- 雪碧图（CSS Sprites） 通过减少请求数优化\n\n### **通过缓存优化**\n\n#### **强缓存**\n\n通过 expires 设置过期时间（http1.1 后新增 **Cache-Control** 来替代）\n\n**Cache-Control 属性：**no-store no-cache max-age public private（**默认值**。） （详情在[[HTTP 缓存]]）\n\n#### **协商缓存**\n\n协商缓存机制下，浏览器需要向服务器去询问缓存的相关信息，进而判断是重新发起请求、下载完整的响应，还是从本地获取缓存的资源。\n\n（304）如果服务端提示缓存资源未改动（Not Modified），资源会被**重定向**到浏览器缓存，\n\n通过 last-modified 和服务器文件最后时间做对比\n\nEtag 不单单指判断时间，还判断是否有变动，优先级也更高。当 Etag 和 Last-Modified 同时存在时，以 Etag 为准。\n\n包括但不限于使用浏览器缓存、[[HTTP 缓存]]、后台缓存，比如使用 [[Service Worker]]、[[PWA]] 等技术\n\n### **CDN 优化**\n\n#### **将静态资源放到不同域名的 CDN 中**\n\n同一个域名下的请求会不分青红皂白地携带 Cookie，而静态资源往往并不需要 Cookie 携带什么认证信息。把静态资源和主页面置于不同的域名下，完美地避免了不必要的 Cookie 的出现！\n\n同时也可以突破 一组{host,port}最多允计打开 **6 个 HTTP 和 6 个 HTTPS 连接。**\n\n### [[PRPL 模式]]\n\n## 渲染阶段的优化\n\n### 提前渲染\n\n- 使用服务端直出渲染，减少页面二次请求和渲染的耗时；[[SSR]]\n- 使用[[骨架屏]]\n- 使用秒看技术，通过预览的方式（比如图片）提前将页面内容提供给用户；\n\n### 优化 DOM\n\n总结起来有三种方式可以优化 HTML：**缩小文件的尺寸（Minify）**、**使用 gzip 压缩（Compress）**、**使用缓存（HTTP Cache）**。\n\n### 优化 CSSOM\n\n和优化 DOM 策略一样，但是 CSS 还有一个可以影响性能的因素是：**CSS 会阻塞关键渲染路径**。\n\nCSS 资源的处理有几个特点：\n\n- CSS 下载时异步，不会阻塞浏览器构建 DOM 树\n- 但是会阻塞渲染，也就是在构建 render 时，会等到 css 下载解析完毕后才进行（这点与浏览器优化有关，防止 css 规则不断改变，避免了重复的构建）\n- 有例外， `media query` 声明的 CSS 是不会阻塞渲染的\n\n#### 媒体查询\n\n通过改变媒体查询，让 css 不阻塞首屏渲染，当仍在当前页面生效\n\n```css\n\u003clink href=\"style.css\"rel=\"stylesheet\"media=\"print\"onload=\"this.media='all'\"\u003e\n```\n\n关于 CSS 的加载最佳实践：**[Critical CSS](https://github.com/addyosmani/critical)**。\n\n**Critical CSS 的意思是：把首屏渲染需要使用的 CSS 通过 style 标签内嵌到 head 标签中，其余 CSS 资源使用异步的方式非阻塞加载。**\n\n所以 Critical CSS 从两个方面解决了性能问题：\n\n1. **减少关键资源的数量**（将所有与首屏渲染无关的 CSS 使用异步非阻塞加载）\n2. **减少关键路径的长度**（将首屏渲染需要的 CSS 直接内嵌到 head 标签中，移除了网络请求的时间）。\n\n#### 避免使用@import\n\n使用 link 标签 css 标签是**并行下载**，\n\n而使用 `@import` ，两个 CSS 变成了**串行加载**，前一个 CSS 加载完后再去下载使用 `@import` 导入的 CSS 资源。\n\n**所以避免使用 `@import` 是为了降低关键路径的长度。**\n\n### 遇到 JS 脚本资源\n\nJS 脚本资源的处理有几个特点：\n\n- 阻塞浏览器的解析，也就是说发现一个外链脚本时，需等待脚本下载完成并执行后才会继续解析 HTML\n- 浏览器的优化，一般现代浏览器有优化，在脚本阻塞时，也会继续下载其它资源（当然有并发上限），但是虽然脚本可以并行下载，解析过程仍然是阻塞的，也就是说必须这个脚本执行完毕后才会接下来的解析，并行下载只是一种优化而已  \n- [[JS 带 async 和 defer 的区别]]\n\n### 遇到 img 图片类资源\n\n遇到图片等资源时，直接就是异步下载，不会阻塞解析，下载完毕后直接用图片替换原有 src 的地方\n\n### 通过合理使用浏览器 GPU 合成，提升浏览器渲染效率；\n\n[[Chrome关键渲染路径#如何利用合成优化]]\n\n### 离屏渲染\n\n使用离屏渲染，在页面不可见的地方提前进行渲染（比如 Canvas 渲染）\n\n### 动画帧率\n\n通过将页面渲染帧率保持在 60FPS 左右，提升页面交互和渲染的流畅度。\n\n比如一些 js 动画，用[[requestAnimationFrame]]\n\n## 运行时优化\n\n### **减少重绘和回流**\n\n我们每操作一次 DOM（不管是为了修改还是仅仅为了访问其值），都要过一次“桥”。\n\n（栗子：\n\n1. 多次控制 DOM 情况，先用 js 进行处理，待计算完毕再提交给浏览器发出重计算请求\n2. 多个 style 更改，写进一个 class 进行 add）\n\n重绘不一定导致回流，回流一定会导致重绘\n\n平时用的比较多的就是动画脱离文档流，另外可以使用\n\n**提取组件的 CSS 到单独到文件**\n\n当使用单文件组件时，组件内的 CSS 会以 `\u003cstyle\u003e` 标签的方式通过 JavaScript 动态注入。这有一些小小的**运行时开销**，将所有组件的 CSS 提取到同一个文件可以避免这个问题，也会让 CSS 更好地进行压缩和缓存。\n\n## [[Vue 优化]]\n\n## [[React 性能优化]]\n\n### 长任务拆分\n\n通过将 Javscript 大任务进行拆解 + 并行计算的方式，有效地降低整体计算耗时，比如使用 [[Web Worker]]；\n\n### 使用[[Webassembly]]\n\n### 其他\n\n- 算法或存储结构，提升计算效率\n   - VSCode 使用红黑树优化文本缓冲区的计算；\n- 使用计算缓存，减少运算次数。\n- 将计算过程提前，减少计算等待时长\n   - [[AOT技术]]\n- 避免复杂递归，导致的栈溢出\n- 避免存在全局泄露，比如全局变量、及时删除引用\n- 使用[[享元模式]]，减少对象创建，减少内存\n\n## 总结说法\n\n首先从 http 请求方面着手优化\n\n一般都是亮点，减少请求和减少包体积\n\n比如图片来说，可以通过选择合适的图片格式，比如 jpg，png，webp 等小体积格式，图标尽量是用 SVG\n\n另外我有通过写一个 node 小工具将图片再次通过 tinypng 再次压缩，\n\n另外 如果公司资源足够的话，可以将静态资源放静态服务器部署 CDN，可以减少不必要的 cookie 携带和突破 HTTP 的请求限制，\n\n像 js 等请求后置，避免阻塞关键路径渲染\n\n另外就是从缓存着手，静态资源走强缓存，其他资源尽量走协商缓存，\n\n包体积方面基本都是从 webpack 配置着手，比如进行配置 gzip、代码压缩，treeshark，去除 console 等等进行优化\n\n另外从 DOM 上优化 对频繁触发事件进行防抖节流措施，减少 DOM 操作，使用文档碎片，动画脱离文档流，使用 RAF，优化无限滚动的虚拟列表，进行异步的视图更新\n\n其次就是用户体验方面的优化，使用骨架屏和 SSR 渲染\n\n另外就是框架方面的合理运用，异步等待的恰当使用。\n\n## 参考资料\n\n[\u003c 前端性能量化标准 \u003e](https://developer.aliyun.com/article/598162)\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E5%87%BD%E6%95%B0%E5%BC%8F":{"title":"前端函数式演进","content":"\n# 前端函数式演进\n\n## 编程范式\n\n我们经常接触的有以下两种。\n\n1. 告诉机器怎么利用穷举、跳转和记忆，逐步完成我们交付的事情（ **命令式** )\n2. 告诉机器我们想要什么（**声明式**），由机器按照已在编译器中实现的策略来完成任务。\n\n### 命令式编程\n\n我们一般将命令式编程理解为顺序编程加一些控制流程的语句，比如运算语句、循环语句（while、for）、条件分支语句（if）、无条件分支语句（goto、程序调用）。\n\n### 面向对象\n\n面向对象把计算机程序视为一组对象的集合，而每个对象都可以接收并处理其他对象发来的消息，换句话说，面向对象认为计算机程序的执行过程就是一系列消息在各个对象之间的传递。\n\n框架中的组件概念。大家可以暂时放下 Class 类的内容，思考一下组件或者前端的业务模块是怎样实现继承（扩展）、封装、多态和消息传递的。是不是就是一种面向对象变成的例子\n\n### 元编程\n\n在元编程模式下执行开发者编写的代码时，可以改变其他程序（或者自身）的行为，或者在运行代码时完成部分本应在代码编译时完成的工作。\n\n## [[函数式编程]]\n\n## 前端稳定性\n\n### 用户交互时\n\nReact 的 Fiber 思想和游戏、动画按帧渲染一样，都是追求间隙稳定态的表现。\n\n**SPA 的优势在于能通过 Web 应用间的高耦合结构，提前部署业务逻辑更多的可能性并做一些预处理工作，进而大量节省网络通信和服务端负载的成本，提供更流畅的交互体验。SPA 最大的缺点是冗余数据集中性能消耗大，在保障前端数据安全时会存在更大的负担。**\n\n### 代码编译时\n\n一些代码编译时常用的辅助工具，比如 Webpack 打包构建工具，同时集成了 Babel 适配、Typescript 转换、Lint 检校，以及一些框架如 Vue 的模板解析能力\n\n### 系统开发时\n\n使用 Redux 之类的工具会增加前端代码运行的圈复杂度，加之前端分层类型的多样性，维护者很难基于历史代码梳理已有的业务逻辑。如果我们将核心代码更换成较为合理的函数式逻辑，或者使用函数式工具和规范对已有逻辑进行归纳，就可以明显提高代码的可读性和代码运行时的可调试性，这也是对历史代码进行升级、改造的方法之一。\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86":{"title":"前端多项目管理","content":"\n# 前端多项目管理\n\n在业务多起来以后，就会遇到项目需要拆分出来，这时候就需要[[微前端]]来拆分\n\n同时要把项目拆分成多个项目，公共项目、一期、二期，通过[[Lerna]]来组织管理的话可能会遇到组件里面会用到一些全局的数据或者环境变量什么的，可能这些没法获取的问题\n\n所以更推荐使用[[MFSU]]来组织管理\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8":{"title":"前端安全","content":"\n# 前端安全\n\n## 思维脑图\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172935.png)\n\n## [[同源策略]]\n\n## [[XSS]]\n\n## [[CSRF]] 攻击：陌生链接不要随便点\n\n## [[DDOS]] 攻击\n\n## [[沙箱环境]]\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96":{"title":"前端工程化","content":"\n# 前端工程化\n\n统一代码风格\n\nLint 工具相当于为 js 增加了编译过程，在代码部署运行前进行静态分析，找到出错的地方和不规范的代码。\n\n**总结一下 ESLint 的作用及优势：**\n\n- **检查语法错误，避免低级 bug；**\n\n\u003e 比如：api 语法错误、使用了未定义的变量、修改 const 变量\n\n- **统一团队代码风格**\n\n\u003e 比如：使用 tab 还是空格，使用单引号还是双引号等\n\n- **确保代码遵循最佳实践**\n\n## [[commitlint]]\n\n[[Eslint]]  \n[[Prettier]]\n\n## husky/lint-staged\n\n```JavaScript\nnpx mrm lint-staged\n\n//package.json\n\"husky\": {\n  \"hooks\": {\n    \"pre-commit\": \"lint-staged\"\n  }\n},\n```\n\n他具有三个钩子：\n\n1. `\"pre-commit\": \"npm run lint\"`，在`git commit`前执行`npm run lint`检查代码格式。\n2. `\"commit-msg\": \"node script/verify-commit.js\"`，在`git commit`时执行脚本`verify-commit.js`验证 commit 消息。如果不符合脚本中定义的格式，将会报错。\n3. `\"pre-push\": \"npm test\"`，在你执行`git push`将代码推送到远程仓库前，执行`npm test`进行测试。如果测试失败，将不会执行这次推送\n\n## workflow\n\n在.git/workflows 文件夹创建一个 xx.yml 文件\n\n以我的博客自动部署为例\n\n```yml\nname: GitHub Actions Build and Deploy Demo\non:\n  push:  // 可以使用数组\n    branches:\n      - master // 这部分代表监听每一次到 master 分支的 push ，有一次 push 就会执行一次 actions 。\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest //一个名为 build-and-deploy 的工作需要在 ubuntu-latest 环境中运行，这是因为后文 actions 脚本是在 ubuntu 编写的，所以要求环境使用 ubuntu 。\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master\n\n    - name: Build and Deploy\n      uses: JamesIves/github-pages-deploy-action@master\n      env:\n        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}  // 配置的秘钥\n        BRANCH: gh-pages  // 发布的分支\n        FOLDER: docs/.vuepress/dist // 上传的文件地址\n        BUILD_SCRIPT: npm install \u0026\u0026 npm run docs:build  // 需要执行的脚本\n```\n\n代码查看：https://github.com/chelseachen007/Blog\n\n## webhooks\n\n这是一种自己全量操作的服务器部署方法，在私有服务器上接收 github 传输过来的请求，并做出对应的 docker 部署操作\n\n具体操作看 [[Docker]]\n\n## 代码\n\n详细代码都在 git 文件，并且附有详细的 webpack 配置，为后续实现一个完整的脚手架做好准备 https://github.com/chelseachen007/engineer\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%88%86%E4%BA%AB":{"title":"前端性能优化分享","content":"\n前端的优化主要分为两部分，页面性能和构建速度，今天我们主要讲的是页面性能的优化  \n\n想要优化，需要先了解到一些指标，才能知道哪里需要优化，优化到什么水平才行。另外，优化千万不要过早优化。  \n\n但是，了解指标之前我们先来回顾下[[Chrome关键渲染路径]] ，有助于我们更好的理解指标  \n\n具体一些参数可以看[[网站性能衡量标准]],也可以从另一维度理解[[Performance#关键性能指标]]  \n\n了解完后，我们使用[[Lighthouse]]，来获取相关数据\n\n```\nlighthouse --locale=zh http://mithras-test.zswl.cn:8888/workbench --view --emulated-form-factor=desktop // 桌面端\n```\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230824142431.png)\n\n通常来说，前端的性能分析可以从**时间**和**空间**两个角度来进行。\n\n- 时间：常见耗时，如页面加载耗时、渲染耗时、网络耗时、脚本执行耗时等。\n- 空间：资源占用，包括 CPU 占用、内存占用、本地缓存占用等。\n\n## 具体优化\n\n### 资源大小优化\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230824143807.png)\n\n- 减少 echarts 包的大小\n\n```js\n// 避免全量引入\nimport * as echarts from 'echarts'\n\n// 按需引入\nimport 'echarts/lib/chart/line';\n```\n\n因为现在默认打成 dll 包， 默认引入了 echarts.min.js\n\n- 类似moment、dayjs 只用一个和去掉 locale\n- 压缩首页图片，通常使用`tinypng`\n\n### 升级成 [[HTTP 2]]\n\n## 内部做了已经做了的优化\n\n大部分可以根据[[前端性能优化]]中，一一对应寻找过去\n\n### 路由懒加载\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230824142043.png)  \n已经做了 ，也包了\u003cSuspense/\u003e ,但是没生效\n\n### [[HTTP 缓存]]\n\nindex.html 不缓存，其他资源走协商缓存\n\n### 文件大小和分包\n\n大部分都在 [[Webpack 优化]]中\n\n没时间写了，去[[前端优化]]和[[前端性能  \n优化]]对应找下\n\n## 数值监控\n\n[[错误监控系统]]\n\n## 自动化\n\n[[Chrome DevTools Protocol]]\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%BA%AE%E7%82%B9":{"title":"文件上传","content":"\n# 文件上传\n\n## 如何做出亮点\n\n1. 上传文件格式验证\n   - 验证后缀，但是无法防范恶意改名文件\n   - [[二进制流验证]] （hexdunm） 一个可靠的文件校验\n2. 断点续传\n   - 对文件进行切片，计算 md5 然后按数组上传\n3. 秒传，计算 Md5 然后进行比较\n   - 大文件 使用 webwork 计算\n   - fiber 架构，利用空闲时间计算\n   - 对文件进行抽样数据再计算 md5\n4. 并发数控制+错误重试\n   - 并发 + tcp 冷启动\n5. 思考\n   - 碎片清理\n   - 文件碎片存储在多个机器上\n   - 文件碎片备份\n   - 兼容性更好的 [[requestIdleCallback]]\n   - 抽样 hash + 全量 hash 双重判断\n   - websocket 推送\n   - cdn\n   - …\n\n## 不同事件上传 + 进度条\n\n拖拽上传\n\n```JavaScript\ndrag.addEventListener(\"dragover\", () =\u003e {});\ndrag.addEventListener(\"dragleave\", () =\u003e {});\ndrag.addEventListener(\"drop\", () =\u003e {});\n```\n\n## 上传文件格式验证\n\n- 验证后缀，但是无法防范恶意改名文件\n- [[二进制流验证]] （hexdunm） 一个可靠的文件校验\n\n## 断点续传\n\n计算 hash 这种事都可以放入 [[Web Worker]]，不会阻塞渲染进程\n\n1. 整个文件进行 hash 计算，1.5 个 G 大概需要 20s\n2. 切片以后计算，再合并计算, 看并发数量\n\n[[requestIdleCallback]]\n\n### 时间切片\n\n```js\n\n```\n\n## 秒传\n\n结合[[布隆过滤器]] 的思想，以 2M 的切片为例，取首尾各一个切片，其他切片只取首中尾各两个字节后，合并后计算 hash，1.5G 的文件大概只需要 1s\n\n```js\n    async calculateHashSample() {\n      return new Promise(resolve =\u003e {\n        const spark = new SparkMD5.ArrayBuffer();\n        const reader = new FileReader();\n        const file = this.container.file;\n        // 文件大小\n        const size = this.container.file.size;\n        let offset = 2 * 1024 * 1024;\n\n        let chunks = [file.slice(0, offset)];\n\n        // 前面100K\n\n        let cur = offset;\n        while (cur \u003c size) {\n          // 最后一块全部加进来\n          if (cur + offset \u003e= size) {\n            chunks.push(file.slice(cur, cur + offset));\n          } else {\n            // 中间的 前中后去两个字节\n            const mid = cur + offset / 2;\n            const end = cur + offset;\n            chunks.push(file.slice(cur, cur + 2));\n            chunks.push(file.slice(mid, mid + 2));\n            chunks.push(file.slice(end - 2, end));\n          }\n          // 前取两个字节\n          cur += offset;\n        }\n        // 拼接\n        reader.readAsArrayBuffer(new Blob(chunks));\n        reader.onload = e =\u003e {\n          spark.append(e.target.result);\n\n          resolve(spark.end());\n        };\n      });\n    }\n\n\n```\n\n## 并发数控制+错误重试\n\n```js\n\n\nasync sendRequest(forms, max=4) {\n  return new Promise(resolve =\u003e {\n    const len = forms.length;\n    let idx = 0;\n    let counter = 0;\n    const start = async ()=\u003e {\n      // 有请求，有通道\n      while (idx \u003c len \u0026\u0026 max \u003e 0) {\n        max--; // 占用通道\n        console.log(idx, \"start\");\n        const form = forms[idx].form;\n        const index = forms[idx].index;\n        idx++\n        request({\n          url: '/upload',\n          data: form,\n          onProgress: this.createProgresshandler(this.chunks[index]),\n          requestList: this.requestList\n        }).then(() =\u003e {\n          max++; // 释放通道\n          counter++;\n          if (counter === len) {\n            resolve();\n          } else {\n            start();\n          }\n        });\n      }\n    }\n    start();\n  });\n}\n\nasync uploadChunks(uploadedList = []) {\n  // 这里一起上传，碰见大文件就是灾难\n  // 没被hash计算打到，被一次性的tcp链接把浏览器稿挂了\n  // 异步并发控制策略，我记得这个也是头条一个面试题\n  // 比如并发量控制成4\n  const list = this.chunks\n    .filter(chunk =\u003e uploadedList.indexOf(chunk.hash) == -1)\n    .map(({ chunk, hash, index }, i) =\u003e {\n      const form = new FormData();\n      form.append(\"chunk\", chunk);\n      form.append(\"hash\", hash);\n      form.append(\"filename\", this.container.file.name);\n      form.append(\"fileHash\", this.container.hash);\n      return { form, index };\n    })\n-     .map(({ form, index }) =\u003e\n-       request({\n-           url: \"/upload\",\n-         data: form,\n-         onProgress: this.createProgresshandler(this.chunks[index]),\n-         requestList: this.requestList\n-       })\n-     );\n-   // 直接全量并发\n-   await Promise.all(list);\n     // 控制并发\n+   const ret =  await this.sendRequest(list,4)\n\n  if (uploadedList.length + list.length === this.chunks.length) {\n    // 上传和已经存在之和 等于全部的再合并\n    await this.mergeRequest();\n  }\n},\n\n```\n\n## 碎片清理\n\n如果很多人传了一半就离开了，这些切片存在就没意义了，可以考虑定期清理，当然，我们可以使用[node-schedule](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fnode-schedule%2Fnode-schedule \" https://github.com/node-schedule/node-schedule\") 来管理定时任务比如我们每天扫一次 `target`，如果文件的修改时间是一个月以前了，就直接删除把\n\n```js\n[let start = function(UPLOAD_DIR){ // 每5秒 schedule.scheduleJob(\"*/5 * * * * *\",function(){ console.log('开始扫描') scan(UPLOAD_DIR) }) }](\u003c// 为了方便测试，我改成每5秒扫一次， 过期1钟的删除做演示\nconst fse = require('fs-extra')\nconst path = require('path')\nconst schedule = require('node-schedule')\n\n// *    *    *    *    *    *\n// ┬    ┬    ┬    ┬    ┬    ┬\n// │    │    │    │    │    │\n// │    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n// │    │    │    │    └───── month (1 - 12)\n// │    │    │    └────────── day of month (1 - 31)\n// │    │    └─────────────── hour (0 - 23)\n// │    └──────────────────── minute (0 - 59)\n// └───────────────────────── second (0 - 59, OPTIONAL)\nlet start = function(UPLOAD_DIR){\n    // 每5秒\n    schedule.scheduleJob(\"*/5 * * * * *\",function(){\n        console.log('开始扫描')\n        scan(UPLOAD_DIR)\n    })\n}\n\n\n```\n\n## 大文件切片下载\n\n- 使用 http 的 Range 这个 header 就可以切片下载了 [[HTTP问题#HTTP 如何处理大文件的传输？]]\n- Content-length 整片下载通过这个知道进度条\n","lastmodified":"2023-09-18T14:54:47.514454347Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7":{"title":"前端构建工具","content":"\n# 前端构建工具\n\n# 打包工具\n\n- Grunt\n- Gulp\n- [[Webpack]]\n- [[Rollup]]\n- [[muji迁移vite]]  \n\n## 区别\n\n1. Gulp/Grunt 是一种能够优化前端工作流程的工具，比如自动刷新页面、combo、压缩 CSS/JavaScript、编译 Less/Sass 等。\n2. Webpack/Rollup 是一个 JavaScript 的模块打包器，用于整合编译成最终的代码。\n3. 其中，Rollup 通常用来构建库，Webpack 更适合用来构建应用程序。\n\n# 依赖管理\n\n- [[npm]]\n- [[Yarn]]\n- [[pnpm]]\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BE%AE%E5%89%8D%E7%AB%AF":{"title":"《 前端架构：从入门到微前端 》","content":"\n# 《 前端架构：从入门到微前端 》\n\n# 元数据\n\n\u003e [!abstract] 前端架构：从入门到微前端\n\u003e - ![ 前端架构：从入门到微前端|200](https://weread-1258476243.file.myqcloud.com/weread/cover/71/YueWen_26351259/t7_YueWen_26351259.jpg)\n\u003e - 书名： 前端架构：从入门到微前端\n\u003e - 作者： 黄峰达\n\u003e - 简介： 本书是一本围绕前端架构的实施手册，从基础的架构规范，到如何设计前端架构，再到采用微前端架构拆分复杂的前端应用。本书通过系统地介绍前端架构世界的方方面面，来帮助前端工程师更好地进行系统设计。前端架构包含以下五部分内容。?设计：讲述了架构设计的模式，以及设计和制定前端工作流。?基础：通过深入构建系统、单页面应用原理、前端知识体系等，来构建出完整的前端应用架构体系。?实施：通过与代码结构的方式，介绍如何在企业级应用中实施组件化架构、设计系统和前后端分离架构。?微前端：引入6种微前端的概念，以及如何划分、设计微前端应用，并展示了如何实现这6种微前端架构。?演进：提出更新、迁移、重构、重写、重新架构等架构演进方式，来帮助开发人员更好地设计演进式架构本书适合想要成为优秀前端开发工程师（初中级），或致力于构建更易于维护的系统架构的开发人员、技术主管、软件架构师和软件项目经理等。\n\u003e - 出版时间 2019-06-01 00:00:00\n\u003e - ISBN： 9787121365348\n\u003e - 分类： 计算机-编程设计\n\u003e - 出版社： 电子工业出版社\n\n# 高亮划线\n\n## 4.1 依赖管理工具\n\n- 📌 过去前端的基础设施不完善，没有统一的软件包中心，开发者需要在搜索引擎或者GitHub上找到代码库，然后下载解压，再从中复制出代码文件、资源文件等。 ^26351259-37-2089-2162\n    - ⏱ 2021-06-16 17:44:29\n\n## 11.1 更新\n\n- 📌 其遵循的版本号格式是：主版本号．次版本号．修订号，如1.2.3中的1是主版本号，2是次版本号，3是修订号。其版本号递增规则如下。◎ 主版本号：当你做了不兼容的API修改。◎ 次版本号：当你做了向下兼容的功能性新增。◎ 修订号：当你做了向下兼容的问题修正。 ^26351259-88-1438-1658\n    - ⏱ 2021-06-18 15:39:52\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6":{"title":"框架对比","content":"\n实际上，浏览器页面更多的不只是静态页面的渲染，还包括点击、拖拽等事件操作以及接口请求、数据渲染到页面等动态的交互逻辑，因此我们还常常需要更新页面的内容。\n\n要理解前端框架为什么如此重要，需要先看看在框架出现前，前端开发是如何实现和用户进行交互的。\n\nJquery 仅是实现一个问答卡片的编辑就需要编写不少的代码，大多数代码内容都是为了拼接 HTML 内容、获取 DOM 节点、操作 DOM 节点。\n\n可见，前端框架提供了便利的数据绑定、界面更新、事件监听等 API，我们不需要再手动更新前端页面的内容、维护一大堆的 HTML 和变量拼接的动态内容了。  \n使用前端框架对开发效率有很大的提升，同时也在一定程度上避免了代码可读性、可维护性等问题。这也是为什么前端框架这么热门，大家都会使用它来进行开发的原因。\n\n## 模板引擎\n\n当用户对页面进行操作、页面内容更新，我们需要实现的功能流程包括：\n\n1. 监听操作；\n2. 获取数据变量；\n3. 使用数据变量拼接成 HTML 模板；\n4. 将 HTML 内容塞到页面对应的地方；\n5. 将 HTML 片段内需要监听的点击等事件进行绑定。\n\n可以看到，实现逻辑会比较复杂和烦琐。\n\n如果使用前端框架，我们可以：\n\n1. 使用将数据变量绑定到 HTML 模板的方式，来控制展示的内容；\n2. 配合一些条件判断、条件循环等逻辑，控制交互的具体逻辑；\n3. 通过改变数据变量，框架会自动更新页面内容。\n\n这样，我们可以快速高效地完成功能开发，代码的可读性和维护性都远胜于纯手工实现。\n\n# 框架对比\n\n## Vue\n\n[[Vue 问题]]  \n[[Vue]]\n\n## React\n\n[[React]]  \n[[《 前端面试宝典之 React 篇 》]]  \n[[Hooks]]  \n[[深入浅出搞定React]]\n\n## Angular\n\n[[Angular]]\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96":{"title":"前端模块化","content":"\n# 前端模块化\n\n`CommonJS`、`AMD`、`CMD`都是社区对模块定义的规范，而`NodeJS`、`RequireJS`，`seaJS`则分别是对这三种规范的实现。\n\n以下按时间线了解这几种规范\n\n## CommonJS\n\ncommonJs**规范**通过简单的 API 声明服务器的模块，目标是让 JavaScript 可以运行在**浏览器之外**的所有地方。Node.js 就是借鉴 CommonJs 实现了一套非常易用的模块系统，以及 NPM 对模块规范的完美支持是的 Node.js 应用开发事半功倍。\n\n- require：用来引用模块\n- export:用来导出模块\n  - module.exoirts:对外导出一个对象\n  - exports.xxx:可以对外导出多个对象\n\n**注意：核心是 module.exports，exports 只是 module.exports 的引用而已**\n\n在每个模块代码执行之前，Node.js 都会将它包裹在这样一个函数里\n\n```JavaScript\n(function (exports, require, module, __filename, __dirname) {});\n```\n\n### 特点\n\nCommonJS 是一个非浏览器端的 JS 规范， Nodejs 就是基于 commonjs 实现了一套实用的文件管理系统。\n\n有以下特点:\n\n- 一个文件就是一个模块；\n- 使用 require () 载入模块，使用 module.exports 输出模块，因此各个模块间可以进行交互；\n- 不支持异步加载。\n\n不能用在浏览器端的原因：\n\n1. 模块文件中没有函数包裹，变量直接暴露到全局\n2. 浏览器端文件是异步并行下载，不适合同步的依赖加载方式\n\n#### JSON 文件\n\n- 通过 `fs.readFileSync()` 加载\n- 通过 `JSON.parse()` 解析\n\n#### 加载大文件\n\n- require 成功后会缓存文件\n- 大量使用会导致大量数据驻留在内存中，导致 GC 频分和内存泄露\n\n#### exports\n\n- exports 是 module 的属性，默认情况是空对象\n- require 一个模块实际得到的是该模块的 exports 属性\n- `exports.xxx` 导出具有多个属性的对象\n- `module.exports = xxx` 导出一个对象\n\n```JavaScript\n// module-2.js\nexports.method = function() {\n  return 'Hello';\n};\n\nexports.method2 = function() {\n  return 'Hello again';\n};\n\n// module-1.js\nconst module2 = require('./module-2');\nconsole.log(module2.method()); // Hello\nconsole.log(module2.method2()); // Hello again\n```\n\n## AMD 和 require.js\n\nAMD 是为了弥补 commonjs 规范在浏览器中目前无法支持 ES6 的一种**异步解决方案**。异步模块定义规范（AMD）制定了定义模块的规则，这样模块和模块的依赖可以被异步加载。这和浏览器的异步加载模块的环境刚好适应（浏览器同步加载模块会导致性能、可用性、调试和跨域访问等问题）。\n\n```JavaScript\ndefine(\"alpha\", [\"require\", \"exports\", \"beta\"], function (\n  require,\n  exports,\n  beta\n) {\n  exports.verb = function () {\n    return beta.verb();\n    //Or:\n\n    return require(\"beta\").verb();\n    if (false) {\n      // 即便没用到某个模块 ,还是提前执行了\n      alpha();\n    }\n  };\n});\n```\n\n## UMD\n\n为了兼容 AMD 和 CommonJS 的规范，通用模块定义（UMD）模式被提出，它在兼容两者的同时，也支持了传统的全局变量模式。使你的模块能  \n同时能运行在 Node. Js 环境和浏览器环境中\n\n示例：\n\n```js\n(function (root, factory) {\n\tif (typeof define === \"function\" \u0026\u0026 define.amd) {\n\t\t// AMD\n\n\t\tdefine([\"jquery\"], factory);\n\t} else if (typeof exports === \"object\") {\n\t\t// CommonJS\n\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// 全局变量\n\n\t\troot.returnExports = factory(root.jQuery);\n\t}\n})(this, function ($) {\n\t// ...\n});\n```\n\n## CMD 和 Sea.js\n\nCMD 是另一种 js 模块化方案，它与 AMD 很类似，不同点在于：**AMD 推崇依赖前置、提前执行**，**CMD 推崇依赖就近、延迟执行**。\n\n```JavaScript\ndefine(function (require, exports, module) {\n  var a = require(\"./a\"); //在需要时申明\n  a.doSomething();\n\n  if (false) {\n    var b = require(\"./b\");\n    b.doSomething();\n  }\n});\n```\n\n## ESModule\n\nES 模块的目标是创建一个同时兼容 `CommonJs` 和 `AMD` 的格式，使语法更加紧凑，通过编译时加载，**在编译时就能确定模块的依赖关系**，比 `CommonJS` 模块的加载效率更高。而在异步加载和配置模块加载方面，则借鉴 AMD 规范，执行效率、灵活度都远远好于 `CommonJS` 写法。总的来说，ES Module 的优势如下：\n\n- 语法更加紧凑\n- 结构更适用于静态编译（静态类型检查、优化等）\n- 对循环应用的支持更好。\n- 用法简单，不需要关注实现细节\n- 采用声明式语法：没有 require 关键字\n- 程序化加载 API：可以设置模块如何加载并按需加载\n\nES6 模块跟 Common 不一样，js 对脚本进行静态分析的时候，只生成一个只读引用，等到脚本真正执行的时候才会通过引用模块中获取值，所以 es6 是动态引用，并不会缓存值\n\n关于循环引用：import 语句的静态加载语义意味着可以确保通过 import 相互依赖的 \"foo\" 和 \"bar\" 在其中任何一个运行之前，二者都会被加载、解析和编译。所以它们的环依赖是静态决议的.\n\n我们应该大胆拥抱 ESModules, `snowpack` 和 `webpack` 的 `tree-shaking` 通过静态编译进行大幅优化。\n\n## **CommonJS 与 ES6 Modules 规范的区别**\n\n- CommonJS 模块是**运行时加载**，ES6 Modules **是编译时输出接口**\n- CommonJS 输出是**值的拷贝**；ES6 Modules 输出的是**值的引用**，被输出模块的内部的改变会影响引用的改变\n- CommonJs 导入的模块路径可以是一个表达式，因为它使用的是 require()方法；而 ES6 Modules 只能是字符串\n- CommonJS `this` 指向当前模块，ES6 Modules `this` 指向 `undefined`\n- 且 ES6 Modules 中没有这些顶层变量：`arguments`、`require`、`module`、`exports`、`filename`、`dirname`\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E7%AE%80%E5%8E%86%E5%BA%93%E5%AD%A6%E4%B9%A0":{"title":"前端简历库学习","content":"\n# 前端简历库学习\n\n[[本6-预期38K-架构]]  \n[[大专-2.5年-很强]]  \n[[磐冲-5年-p7]]  \n[[王德发-本3-p6]]  \n[[ones-本2 - 30k]]\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6%E5%BA%93":{"title":"前端组件库","content":"\n# 前端组件库\n\n## modal 组件\n\n- 做拉伸的时候需要考虑 bodyStyle 在全局可能不止一个，会冲突\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98":{"title":"前端编程题","content":"\n# 前端编程题\n\n## 设计一个`Autocomplete`组件\n\n今天是又是一个理论题，不一样的是针对逻辑思维的拷问，设计`Autocomplete`组件（又叫搜索组件、自动补全组件）时，你会如何设计？需要考虑什么问题呢？\n\n如果不知道 `Autocomplete` 组件是什么的，你可以观察下 Google 的搜索框，多实验几次就知道啦…\n\n### 通用组件\n\n我们设计组件的原则，首先要看的就是组件的通用性、可移植性和扩展性，组件的粒度要小，其次就是保证安全性。\n\n### 功能思考\n\n1. 支持模糊搜索，自动补全\n2. 一键清空\n3. 支持同步，异步搜索\n4. 保存历史搜索记录\n\n### 设计概要\n\n支持 slot 扩展，\n\n支持 input，change，blur 等事件\n\n注意安全性，提交的时候先转义\n\n注重性能，添加防抖节流函数\n\n注重业务侧和用户体验是最重要的，不要为了实现而实现，在保证用户体验的前提下，多思考下对其他组件和其他协作开发者的影响。\n\n## 说一下你们权限的控制，路由权限以及按钮权限\n\n## 假设要设计一个全局的弹窗组件你会怎么设计？\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83":{"title":"前端规范","content":"","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1":{"title":"前端路由","content":"\n# 前端路由\n\n一般来说，前端路由的实现，会包括两种模式：\n\n1. History 模式\n2. Hash 模式\n\n## History 模式\n\n### 在 history 中跳转\n\n使用 window.history.back()、window.history.forward()和 window.history.go()方法，可以实现在用户历史记录中向后和向前的跳转。\n\n### 添加和修改历史记录中的条目\n\n使用 history.pushState () 和 history.replaceState () 方法，它可以操作浏览器的历史栈，同时不会引起页面的刷新（可避免页面重新加载）。\n\n### 监听页面路由切换\n\n使用 pushState () 和 replaceState () 来修改路由信息，通过 popstate 事件监听页面路由变化，来进行页面的局部更新，这便是 History 的路由模式。\n\n## Hash 模式\n\nHash 模式使用的是从井号(#)开始的 URL（锚）片段，主要依赖 Location 对象的 hash 属性（location.hash）和 hashchange 事件，包括：\n\n### 使用 location.hash 来设置和获取 hash\n\nlocation.hash 的设置和获取，并不会造成页面重新加载，利用这一点，我们可以记录页面关键信息的同时，提升页面体验。\n\n### 监听 hashchange 事件\n\n当页面的 hash 改变时，hashchange 事件会被触发，同时提供了两个属性：newURL（当前页面新的 URL）和 oldURL（当前页面旧的 URL）。\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86":{"title":"前端问题收集","content":"\n# 前端问题收集\n\n组件库相关问题  \n项目自己搭的？如何做 treeshaking  \n如何做版本号管理  \nless 如何做按需加载  \nwebpack 如何优化  \nts 泛型  \n怎么通过实例拿到构造函数  \nextend 原理  \nObject.create 原理  \n虚拟列表原理  \n浏览器缓存原理  \n并发调度\n\nMutationObserver 不能监控到的点\n\nVue 的 keep-alive 缓存机制\n\nHttp2 和 Http3 的优化？你有实践吗\n\n深拷贝的实现? 函数，Map 的拷贝\n\n最近读的书对你影响最大的\n\n###\n\n\n- 清除浮动\n- 盒子模型\n- 原型链寻址，引用地址更改\n- 事件冒泡捕获，事件委托\n- webpack 优化\n- Vue 优化点\n- 双向绑定原理\n- 响应式原理\n- 文件的预加载和懒加载\n- webpack 打包后的文件，依赖分析\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95":{"title":"好问题收录","content":"\n# 好问题收录\n\nps: 尽量能通过文章来解释清楚\n\n- **你有做过好项目吗？**  \n  这里的“好项目”是指：你能在项目中从 0 到 1 打造应用的基础设施、确定应用的工程化方案、实现应用构建和发布的流程、设计应用中的公共方法和底层架构。\n- **你知道 Vue.js 完整版本和运行时版本的区别吗？**\n- **请你手写一个“匹配有效括号”算法，你能做到吗？**\n- **如何设计一个 C 端 Polyfill 方案？**  \n  如果不清楚@babel/preset-env 的 useBuiltIns 不同配置背后的设计理念，何谈了解 Babel？更别说设计一个性能更好的降级方案了。\n\n## 前端工程化\n\n[[工程效率问题收集]]\n\n- 候选人通常可能被问到的问题包括：\n- 做了很多的管理端/H5，有考虑过怎么提升开发效率吗？\n- 你的项目里，有没有哪些工作是可以用工具完成的？\n- 项目中有进行组件和公共库的封装吗？\n- 如何管理这些公共组件/工具的兼容问题？\n- 日常工作中，如何提升自己的工作效率？\n- 团队作战并非单打独斗，那么如何设计工作流程，打造一个众人皆赞的项目根基？\n- 项目依赖纷繁复杂，如何做好依赖管理和公共库管理？\n- 如何深入理解框架，真正做到精通框架和准确拿捏技术选型？\n- 从最基本的网络请求库说起，如何设计一个稳定灵活的多端 Fetch 库？\n- 如何借助 Low Code 或 No Code 技术，实现越来越智能的应用搭建方案？\n- 如何统一中后台项目架构，提升跨业务线的产研效率？\n- 如何开发设计一套适合业务的组件库，封装分层样式，最大限度做到复用，提升开发效率？\n- 如何设计跨端方案，“Write Once，Run Everywhere”是否真的可行？\n- 如何处理各种模块化规范，以及精确做到代码拆分？\n- 如何区分开发边界，比如前端如何更好地利用 Node.js 方案开疆扩土？\n\n## 错误监控系统\n\n[[错误监控系统]]\n\n- 如何监听路由切换\n- 如何监听所有的页面按钮点击\n- 如何监控一个人的在线时间\n- 监控数据采集时是否会丢数据\n- 性能上报上报哪些数据\n- 如何实现插件化 \u0026 按需加载 [[错误监控系统#学习资料]]\n- 监控 SDK 如何做逻辑解耦 \u0026 多平台？[[错误监控系统#学习资料]]\n- 监控项目的上报策略和上报优化\n- 削峰限流的实现逻辑\n- 监控告警是怎么实现的\n- 服务端错误聚合的实现方式\n- 是否有考虑到错误信息相同，但是不是同一个错误的场景\n- message 是动态变化的，但是实际上是属于同一个错误怎么处理？  \n  前端获取到错误信息时，不生成错误`hash`，而是原样发送给后端，由后端采用一个`字符串相似度`算法，判断能不能`聚合`到一起；\n- 前端暴力削峰有没有考虑以用户为比例；\n- LCP 的值，如果被骨架屏干扰怎么办；\n- 上报 PV 还附带哪些数据\n- 如何重写底层的 XMLHttpRequest\n- 为什么要自研监控平台\n  - 可以实现前后端全链路 API 监控\n  - 接入公司缺陷管理平台（`bug`平台，`实现一系列的监控告警闭环流程`）\n  - 可以自定义业务的监控维度和数据分析维度（`一些具有独特监控角度的业务，需要自研`）\n  - 为什么不用 [[Sentry]]\n- 上报失败怎么处理\n\n## Vue\n\n[[Vue 问题]]\n\n- 说说 Vue3 和 Vue2 的响应式原理吧\n- 为什么要用 Proxy，区别在哪里；\n\n  \u003e **小提示**：先回答`Vue2`响应式的缺点；再点明换了`Proxy`后的好处；\n\n- 那 Vue3 为什么要用 Reflect 呢  \n  **小提示**：这一题答清`reflect`的`this`问题修正就可以了，其余的内容看自己的理解进行回答；\n- Vue3/2 对数组都做了特殊处理吗\n- Vue3 相比 Vue2 除了响应式还有没有别的区别\n- 来个经典问题：Computed 计算属性原理，怎么实现惰性求值\n\n## 浏览器原理\n\n[[Chrome问题]]\n\n- 说说缓存机制\n- 浏览器解析到 JS 和 CSS 时是如何处理的？\n- [[JS 带 async 和 defer 的区别]]\n- 如果同时出现多个 async 或 defer 怎么解析；\n- 了解哪些浏览器安全方面的问题\n\n## 计算机网络问题\n\n[[HTTP问题]]\n\n- HTTP2、HTTP3 聊聊\n- 服务器推送这个特性为什么要特别说一下\n- 队头阻塞了解吗？聊一聊；\n- Quic 基于 UDP 如何保证了可靠性？\n\n## React 问题\n\n[[React问题]]\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE":{"title":"项目总结","content":"\n# 项目总结\n\n- [[虚拟滚动列表]]\n- [[错误监控系统]] 和 [[异常监控系统]]\n- [[大文件上传]]\n- [[防止白屏]]  \n- [[圈选组件优化]]\n- 异常监控插件\n- 大数据优化\n- [[Webpack 优化]]\n- [[前端工程化]]\n- [[多种格式预览]]\n- [[瀑布流布局]]\n- [[网页换肤]]\n- [[无限滚动列表]]\n- [[前端多项目管理]]  \n- [[脚手架]]  \n- [[前端组件库]]  \n- [[微前端]]\n- [Web 端实时防挡脸弹幕（基于机器学习） | 风痕 · 術\u0026思](https://hughfenghen.github.io/posts/2023/06/21/body-mask-danmaku/)\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%89%AF%E4%B8%9A":{"title":"副业","content":"\n\u003e **赚钱不是因为你做了某个项目就应该赚钱，而是因为你做这个项目的能力超过了80%以上的人。**\n\n# 副业\n\n- 一切生意都是人群生意，**都是围绕用户和需求的生意。**\n- 绝大多数好项目，起点是一个别人根本看不上的垃圾项目，在做的过程中，经过仔细专研和迭代，不断突破边界，并经历反复横跳和回退，最终，打开了新世界。问我选哪个副业，我都只有一个回答： **随便选哪一个，开始就行，反正终点都不是你一开始选的那个。**\n- 其实我真不认为大部分的人都有主业，很多人连主业都没弄清楚就想着随大流各种副业尝试了\n- 副业刚开始时不要去追求什么性价比，思考下如果副业失败最坏的情况可以接受，那就勇敢去做吧。就像生财里面说的，出来混最重要的是出来。先谋生再谋发展。\n- **普通人做 IP 的难度，约等于普通学生考清华**\n- 从[[定位]]、[[内容]]、[[引流]]到[[变现]]，每个环节都要清清楚楚，才能高效出成绩。\n- [[个人副业剖析]]\n- [摆脱程序员思维](https://wx.zsxq.com/dweb2/index/topic_detail/581515152425254)\n\n就像[技术赚钱实践指南](https://w91h2gmtrn.feishu.cn/docx/HJTtd44mZoTWPbxQwXncLHW1nje)里说的，先进入业务，再发现机会，再利用技术优势去做，是条很好的路径\n\n# 寻找需求\n\n- [Indie Hackers: 自由职业论坛](https://www.indiehackers.com/)  \n- [[需求收集箱]]  \n- [[如何寻找需求]]\n- [[如何做出海产品]]\n\n# 效率提升\n\n- [影刀RPA+百度墨斗鱼项目+指纹浏览器+GPT实现做合格的甩手掌柜 -](https://px1hmn4sqj.feishu.cn/docx/KIHRdQMZDokB2WxaXtfcw1Yrn5b)\n\n# 推荐书籍\n\n 大圣推荐 ：《一人公司方法论》《商业百科》《增长黑客》《启示录》《运营之光》《优势谈判》\n\n# 项目\n\n**我把内容属性做了归类：短视频、中长视频、文章、SEO、社群交集等等。**\n\n短视频主流平台：[[抖音]]、[[快手]]、[[小红书]]、[[TikTok]]、[[视频号]]，  \n中长视频主流平台：[[B 站]]、头条/西瓜、爱优腾、Youtube，  \n文章类主流平台：[[知乎]] 、头条、百家、 各论坛/站点，  \nSEO 主流方向：百度、搜狗、抖音 SEO、头条 SEO、知乎 SEO，  \n社群：[[知识星球]]\n\n方式方法：[[个人IP |原创]]、[[混剪]]、[[基金经理说的视频搬运]]\n\n区分化运营：知乎的 slogan 是：有问题就会有答案，所以切入的唯一指标就很简单的——“回答问答数量”\n\n今日头条的 slogan 从“你关心的就是头条”改成“看见更大的世界”，前者是你关心=兴趣推荐，后者更大的世界是加注搜索市场，现在，你发现头条在搜索这个板块做得很优秀，唯一指标就可以是“踩到的关键词”\n\n## AI 项目\n\n- 做一个导购网站，\n- 做一些专属定制化的，比如用 [[chatgpt]] 创作一篇专属于孩子的故事，然后用 [[Midjourney]] 生成插画\n- 做自媒体，用 chatgpt 找到定位、起频道名等等都可以问\n- 做一个讲细分领域的 chatgpt,各行各业的 gpt 教学\n\n## 自媒体\n\n[[几个自媒体平台的优劣势和难点]]\n\n## 远程工作\n\n目标退休前找到一个远程工作  \n[[远程工作]]\n\n## 外包项目\n\n不太看好，扯皮多没提升，如果有熟人推荐最好  \n但是不妨碍收集\n\n## 外网写作搬运\n\nMedium 写作  \n[在 Medium 上写作赚美金的基本流程](https://medium.com/%E5%86%99%E4%BD%9C%E4%B9%8B%E8%B7%AF/%E5%BC%80%E5%A7%8B%E5%9C%A8medium%E4%B8%8A%E5%86%99%E4%BD%9C%E4%B9%8B%E6%97%B6-%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E5%87%A0%E7%82%B9%E4%BA%8B%E9%A1%B9-deeb25ad7018)\n\n## 拉新\n\n- [阿里网盘拉新](https://articles.zsxq.com/id_baimp0ef5aip.html)\n- https://w3pw88qoub.feishu.cn/docx/Ku4pdrB75o4aW7xxcxoc8Hi6n1d\n\n## [[创业]]\n\n[购买和出售初创公司所需的一切。](https://acquire.com/)\n\n## [[Mediabuy]]\n\n## 卖课\n\n做什么最终都会走向卖课  \n没做课前先卖课  \n“你的课程体量有多大,你花了多少时间做,完全跟你的定价无关,你的课程定价取决于你的用户。 ”\n\n- [细分定位IT录播课，实现每月被动收入5万+ - 飞书云文档](https://o52qsmsc2s.feishu.cn/docs/doccnkX6Sm8Txm19Roh52KC5ZWe)\n\n# 别人的创业经历\n\n- [一个创业程序员的35岁人生总结（终极版](https://mp.weixin.qq.com/s?__biz=MzIyNTY0MDM5OQ==\u0026mid=2247483777\u0026idx=1\u0026sn=2b6e887aadf4c4a2e9b4223f56920881\u0026chksm=e87deb21df0a6237b8de91932344871155cc8997c5e9f952fa56166f605c7ac6549f71aaecd2#rd)\n- [一个独立创造者的五年](https://mp.weixin.qq.com/s/x6PLSIMn_1qcKnXWPT-J-Q)\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95":{"title":"鉴权与加密算法","content":"\n# 鉴权与加密算法\n\n## 加密算法\n\n### [[base64]] 加密\n\n### [[内容摘要加密算法]]（MD5、SHA1、SHA256、SHA512）\n\n### 内容加密解密类又分为： 对称加密解密（AES），非对称加密解密(RSA)\n\n可逆！\n\n#### 对称加密算法 AES\n\n```JavaScript\n//AES对称加密\nvar secretkey = \"passwd\";//唯一（公共）秘钥\nvar content = \"需要加密的内容ABC\";\nvar cipher = crypto.createCipher('aes192', secretkey);//使用aes192加密\nvar enc = cipher.update(content, \"utf8\", \"hex\");//编码方式从utf-8转为hex;\nenc += cipher.final('hex');//编码方式转为hex;\n//\n//AES对称解密\nvar decipher = crypto.createDecipher('aes192', secretkey);\nvar dec = decipher.update(enc, \"hex\", \"utf8\");\ndec += decipher.final(\"utf8\");\nconsole.log(\"AES对称解密结果：\" + dec);\n```\n\n#### **RSA 非对称加密**\n\n先使用 openSSl 生成 `公钥` 和 `私钥`\n\n```cmd\nopenssl genrsa -out privatekey.pem 1024\nopenssl rsa -in privatekey.pem -pubout -out publickey.pem\n```\n\n公钥一般用来进行加密，而私钥一般用来进行解密，当然你也可以颠倒过来使用，私钥加密公钥解密都是可以的（只是一般不这么使用）。\n\n```JavaScript\nconst fs = require(\"fs\");\n\nconst privatepem2 = fs.readFileSync(\"./privatekey.pem\");//私有key【需要 pem 编码的key】server.pem\nconst publicpem2 = fs.readFileSync(\"./publickey.pem\");//公有key【需要 pem 编码的key】cert.pem\nconst prikey2 = privatepem2.toString();\nconst pubkey2 = publicpem2.toString();\n// 加密方法\nvar encrypt = (data, key) =\u003e {\n    // 注意，第二个参数是Buffer类型\n    return crypto.publicEncrypt(key, Buffer.from(data));\n};\n// 解密方法\nvar decrypt = (encrypted, key) =\u003e {\n    // 注意，encrypted是Buffer类型\n    return crypto.privateDecrypt(key, encrypted);\n};\n\nconst plainText = \"我是RSA非对称加密字符串内容\";\nconst crypted = encrypt(plainText, pubkey2); // 加密\nconst decrypted = decrypt(crypted, prikey2); // 解密\nconsole.log(\"RSA非对称解密结果:%s\", decrypted.toString());\n```\n\n### 内容签名类（RSA+SHA1 或 RSA+SHA256 或 RSA+MD5 等等）\n\n“信息内容签名”其实和我们日常中对纸质文件进行签名是一个道理。又称为“数字签名”，包括报文摘要。报文摘要和非对称加密一起，提供数字签名的方法。\n\n数字签名主要是**保证信息的完整和提供信息发送者的身份认证和不可抵赖性**，这其中，“完整性”主要就是由报文摘要提供的，报文摘要就是用来防止发送的报文被篡改。\n\n**使用流程：**\n\n- 使用 RSA 私钥进行签名（对信息报文生成的摘要进行私钥签名）生成签名串，一般是 16 进制字符串\n- 使用 RSA 公钥进行签名校验（验明正身）\n\nJWT 中的第三段签名就是内容签名的概念，将令牌头和参数信息进行摘要后生成一个全新的签名。\n\n实际案例可以学习 [[HTTPS]]\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8A%A8%E6%95%88":{"title":"动效","content":"\n- [PAG官网 | PAG动效](https://pag.art/)\n\n  \u003e 它的最大特点是跨平台，只要做一次动画，就能用在**所有平台**（手机、Web、小程序、Windows、Linux、Mac……）\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA":{"title":"《 动物农场 》","content":"\n# 《 动物农场 》\n\n# 元数据\n\n\u003e [!abstract] 动物农场\n\u003e - ![ 动物农场|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/912/22781912/t7_22781912.jpg)\n\u003e - 书名： 动物农场\n\u003e - 作者： 乔治·奥威尔\n\u003e - 简介： 《动物农场》是奥威尔最优秀的作品之一，是一则入木三分的反乌托的政治讽喻寓言。农场的一群动物成功地进行了一场“革命”，将压榨他们的人类东家赶出农场，建立起一个平等的动物社会。然而，动物领袖，那些聪明的猪们最终却篡夺了革命的果实，成为比人类东家更加独裁和极权的统治者。\n\u003e - 出版时间 2010-09-01 00:00:00\n\u003e - ISBN： 9787532751457\n\u003e - 分类： 文学-经典作品\n\u003e - 出版社： 上海译文出版社\n\n# 高亮划线\n\n## 第七章\n\n- 📌 自从琼斯离开农场一直到今天以前，还没有哪一只动物杀过另一只动物。连一只老鼠也不曾被杀。 ^22781912-9-6397-6440\n    - ⏱ 2022-04-12 17:37:36\n- 📌 “我怎么也想不明白。我实在没法相信这等事会发生在我们农场。一定是我们自己在什么地方出了纰漏。据我看来，解决的办法只有一个——更加努力工作。从今以后，每天早晨我要提前整整一小时起身。” ^22781912-9-6666-6757\n    - ⏱ 2022-04-12 17:38:12\n- 📌 。如果说紫苜蓿在心中为自己设计过什么关于未来的蓝图的话，那幅蓝图上将是一个摆脱了饥饿和鞭子的动物社会，大家一律平等，工作各尽所能，强者卫护弱者，就像在听少校演讲之夜紫苜蓿用她的前腿卫护一窝失恃的小鸭那样。可是，理想的动物社会没有盼到，而他们反倒落入了这样一个时代：谁也不敢说出自己的想法，动辄狂吠不止的恶犬到处横行，你不得不眼睁睁看着你的同志在招认了丑恶罪行后被撕成碎片——她不知道怎么会闹成这样的。 ^22781912-9-7263-7463\n    - ⏱ 2022-04-12 17:40:20\n\n# 读书笔记\n\n## 第一章\n\n### 划线评论\n\n- 📌 所有生灵中唯独人是光消费不生产的。人不会产奶，不会下蛋；人力气太小，拉不动犁；人跑得不够快，逮不着兔子。然而人却是所有动物的主子。人使唤动物干活，却只给动物少得不能再少的一点回报，仅仅为了不让他们饿死，而其余的部分悉数被人据为己有。 ^16142247-7ysM33ZPx\n    - 💭 只有工人阶级才是掌握生产力的，却被少数资本占为己有\n    - ⏱ 2022-04-12 15:54:22\n   \n\n## 第二章\n\n### 划线评论\n\n- 📌 琼斯被扫地出门，庄园农场是动物们的了。 ^16142247-7ysMRaRwr\n    - 💭 开始是想建立一个工农主导的社会，我猜后面仍会变成资本主义社会，因为共富是反人性的\n    - ⏱ 2022-04-12 16:06:42\n   \n\n## 第五章\n\n### 划线评论\n\n- 📌 其实，他们此刻正在听哪一位发言，必定会发现自己认为这一位说的有理。 ^16142247-7ysOgAvvm\n    - 💭 大多人无法判断言论的正确性，所以所谓的民主也就变成了老爷们自己的判断，引导着乌合之众做出判断\n    - ⏱ 2022-04-12 16:28:14\n   \n\n## 第七章\n\n### 划线评论\n\n- 📌 “啊，那就不同了！”拳击手说。“既然拿破仑同志这样说，那一定错不了。” ^16142247-7ysSxqkT2\n    - 💭 拳击手代表了有一定学识的知识分子，但容易迷信权威或者榜样\n    - ⏱ 2022-04-12 17:33:27\n   \n\n# 本书评论\n\n## 书评 No.1\n\n好看，五星推荐。看开头第一篇的时候就想到这是一个从工农起来反抗，然后变成和资本共同生存的故事，因为共富是反人性的。但是这本书还是深深地震撼了我，读到最后才知道了这是苏联建立的过程，但我每一章都看到现在中国的影子，我不知道什么时候，我们会开始排挤完真正想建设社会主义的人，接受造谣，甩锅，七戒律不断减少，无能为力，直到一代一代没有了社会主义的记忆。愿能保持独立思考，至少做一只驴，拒绝成为绵阳和拳击手。 ^16142247-7yt83gszI  \n⏱ 2022-04-12 21:30:20\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8A%A8%E7%89%A9%E5%BA%84%E5%9B%AD%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB":{"title":"动物庄园读书分享","content":"\n# 动物庄园读书分享\n\n首先介绍下[[乔治·奥威尔]]\n\n介绍下故事背景和[[《 动物庄园 》#读前准备 |人物介绍]]\n\n大致的讲下 故事发展\n\n几点启发\n\n- 历史总是不断的重复，在苏联发展的过程中都是例子，要承认人的本性是自私的。\n- 从小的教育是很重要的，如果被洗脑又有信息差的话，就成了猪们圈养的动物了\n- 作为一只猪，老少校真的实现共产吗，貌似只是觉得上面还有着”人“\n- 如果我是一只猪，我会去致力于为大家谋福利吗，很难的吧\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8A%A8%E7%94%BB":{"title":"动画","content":"\n## [[auto-animate]]\n\n自动添加动画\n\n## 3D 拖动交互东湖\n\n[tweet 效果展示](https://twitter.com/vaibhav_khulbe/status/1671159569618456585?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1671159569618456585%7Ctwgr%5Ee3106fa2854ed9e4dd08af4207cc9f336abf01bd%7Ctwcon%5Es1_\u0026ref_url=https%3A%2F%2Fwww.bram.us%2F2023%2F06%2F21%2Fsynchronize-videos-3d-models-to-scroll-driven-animations%2F)\n\n```js\nconst trackAnimationProgress = (animation, cb, precision = 5) =\u003e {\n  let progress = 0;\n\n  const updateValue = () =\u003e {\n    if (animation \u0026\u0026 animation.currentTime) {\n      let newProgress = animation.effect.getComputedTiming().progress * 1;\n      if (animation.playState === \"finished\") newProgress = 1;\n      newProgress = Math.max(0.0, Math.min(1.0, newProgress)).toFixed(precision);\n\n      if (newProgress != progress) {\n        progress = newProgress;\n        cb(progress);\n      }\n    }\n    requestAnimationFrame(updateValue);\n  };\n\n  requestAnimationFrame(updateValue);\n}\n\ndocument.querySelectorAll('.subject').forEach($subject =\u003e {\n  trackAnimationProgress($subject.getAnimations()[0], (progress) =\u003e {\n    // Do something with progress\n  });\n});\n```\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8B%92%E5%86%85%E7%AC%9B%E5%8D%A1%E5%B0%94":{"title":"勒内·笛卡尔","content":"\n# 勒内·笛卡尔\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8C%BA%E5%9D%97%E9%93%BE":{"title":"区块链","content":"\n# 区块链\n\n## 组件\n\n一个公开的公共区块链通常包含以下组件：\n\n- 一个连接参与各方的点对点网络，用于传播交易和区块数据包，基于标准的“gossip”协议。· 以交易形式体现的消息，代表状态的转换。\n- 一组共识规则，用于管理构成交易的内容以及实现有效的状态转换。·\n- 一个状态机，根据共识规则处理交易。\n- 一组串联在一起的、由加密算法保证其安全的区块，这些区块是所有已验证和已接受的状态转换的记录日志。\n- 一个共识算法，用于在区块链上实现控制的去中心化，这类算法通过强制参与者之间的合作以实现共识规则的有效执行。\n- 在博弈论上合理的激励方案（例如，工作量证明、区块奖励），以在开放环境中经济地保护状态机。\n- 上述一个或多个开源软件实现（“客户端”）。\n\n并不是所有的区块链都是一样的。当有人向你展示一个区块链时，你应该能够提出问题来明确这个区块链背后的含义。应该问清楚这个区块链所对应的上述每个组件的描述，以及这个区块链是否具备开放、公共等特征。\n\n# 区块链游戏\n\n## 区块链游戏为什么一定会失败\n\n拿[[CryptoKitties]]举例，他的玩法是通过养育猫，混合生出独一无二的猫。  \n“小猫的价格首先取决于稀有性，这取决于基因方面。第二个维度是市场上有多少只小猫，\"\n\n- 更多的玩家意味着更多的需求，但这也意味着更多的机会通过繁殖新猫来创造供应。这很快稀释了每个 NFT 的稀有性。\n- 以太坊使用一种称为gas的费用来定价交易成本。交易的任何高峰——购买、生育等都会导致汽油费飙升。这让每次交易都需要 100 美元以上  \n**高昂的费用不仅仅是CryptoKitties的问题。这对整个[[区块链]]来说都是一个问题**  \n\n大多数区块链游戏现在使用侧链，一个独立存在的区块链，但连接到另一个更突出的“父”区块链。链通过桥梁连接，便于在每个链之间转移代币。\n\n然而，即使是这种新策略也存在问题，因为侧链被证明不如父区块链安全。对Axie Infinity使用的侧链Ronin的攻击使黑客逃脱了相当于6亿美元的损失。Polygon是区块链游戏经常使用的另一个侧链，它不得不修补一个漏洞，使8.5亿美元面临风险，\n\n# 区块链的优势\n\n- 区块链技术的本质是把全球个体经济人和机器之间的价值交换的壁垒和成本降到几乎为零。最终要达到这个愿景，需要各种基础设施的成熟和普及。\n\n**中心的存在，本质上是和多样化，创新性，鲁棒性是背道而驰的.** 这句话要怎么证明他\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8C%BB%E4%BF%9D":{"title":"医保","content":"\n个人账户和统筹账户  \n个人账户要交工资的 2%，公司交 8%到统筹账户\n\n今年账户是去年工资的估算值，历年是扣除所有后剩余的余额\n\n统筹账户是大病医疗，一般有起付线和封顶线  \n报销的比例也不同，一般来说能跑社区医院（90%） 不跑三甲医院\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%81%E5%80%8D%E6%AF%94%E4%B8%A4%E5%80%8D%E6%9B%B4%E5%AE%B9%E6%98%93":{"title":"十倍比两倍更容易","content":"\n很多人因为一种不假思索的本能，以为财富的增长就是对现在做的事情上加倍努力，这是 2x (两倍数) 的思维。\n\n10x (十倍数) 的增长，长期看，实际上比两倍更容易。因为，你一旦以 10x 的视野来要求自己，就会主动强迫自己过滤，放弃，拒绝掉各种长期增长潜力有限的机会 (甚至是骗局)，你会让自己高度聚焦，只做哪种有潜力让自己十倍增长的事情。这个过滤方式，对人也适用。这种放弃，和自己的日常习惯一开始是冲突的，很多人不愿意割舍，抵触情绪严重。因此必须冷静坐下来认真推演，从思想上彻底理解，“果断放弃”低价值行为或机会，对于长期 10x 的必要性。\n\n因为你果断拒绝了很多低价值机会，反而时间更多了。更多的时间让你可以聚焦深入的研究，提高自己在底层用第一性原理识别和捕捉高价值机会的能力。\n\n因为你在架构设计上就强迫自己不断积累各种新的微小的优势，迟早会有一天你会获得突破，实现 10x 的梦想\n\n这也跟巴菲特持有的如果你人生只有十次投资机会，你就会谨慎的进行每一次投资的理念一样。\n\n\u003e 如果做一个思想实验，你要把自己的净资产三十年增加一千倍。听上去目标很宏大，很难达到,你的第一个直觉反应是：根本不可能！但把它拆解一下，就是每十年增加十倍。(以下计算为简化的目的，不考虑税收因素). 再分解一下，就是每五年 3.2 倍。\n\u003e\n\u003e  如何做到五年 3.2 倍？按照简单的倒推，这需要每年 26%左右的回报。但事物的发展从不是一直向前，没有波折的。实际情况是，市场常常不断在牛熊之间像个神经病一样的大幅波动。为了捕捉到大幅的回报，五年里面大部分时间需要等待，积累信息和资源，等到机会来了，在大家都恐慌和缺乏资源的时候，(在全面分析基本面的各种定性定量因素后) 觉得某个投资五年内大概率有远超 3.2 倍的回报，才出手。\n\u003e\n\u003e 理解这个逻辑框架后，就必须谢绝大部分市场上的噪音和诱惑。对绝大部分事情都说不。对外界各种试图空手套白狼的邀约和闲扯，没有确定性的短线交易，不了解的东西，调研成本太高的东西，潜在回报不能远大于下行风险的东西，没有进入一种持续自我强化的垄断性状态的东西，等等，说不。五年至少 3.2 倍成为一条简单粗暴的红线。不去碰红线以外的东西，成为一种自觉的自律。\n\u003e\n\u003e “说不”之后豁然开朗。这意味着你相比之前有大把的闲暇时间，可以深入的，按照自己的节奏调研。然后持续发掘出新的，别人无法真正理解和彻底实践的机会。这样当外人以为你只是运气.幸存者偏差和事后诸葛亮时，你只是笑一下，不去解释。\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99":{"title":"单一职责原则","content":"\n就一个类而言，应该仅有一个引起它变化的原因。在 JavaScript 中，需要用到类的场景并不太多，单一职责原则更多地是被运用在对象或者方法级别上，因此本节我们的讨论大多基于对象和方法。\n\n因此，SRP 原则体现为：一个对象（方法）只做一件事情。\n\nSRP 原则在很多设计模式中都有着广泛的运用，例如[[代理模式]]、[[迭代器模式]]、[[单例模式]]和[[装饰者模式]]。\n\n## 优缺点\n\nSRP 原则的优点是降低了单个类或者对象的复杂度，按照职责把对象分解成更小的粒度，这有助于代码的复用，也有利于进行单元测试。当一个职责需要变更的时候，不会影响到其他的职责。\n\n但 SRP 原则也有一些缺点，最明显的是会增加编写代码的复杂度。当我们按照职责把对象分解成更小的粒度之后，实际上也增大了这些对象之间相互联系的难度。\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F":{"title":"单例模式","content":"\n## 坏的单例\n\n```js\nvar createLoginLayer = (function () {\n\tvar div;\n\treturn function () {\n\t\tif (!div) {\n\t\t\tdiv = document.createElement(\"div\");\n\t\t\tdiv.innerHTML = \"我是登录浮窗\";\n\t\t\tdiv.style.display = \"none\";\n\t\t\tdocument.body.appendChild(div);\n\t\t}\n\t\treturn div;\n\t};\n})();\n```\n\n## 通用的惰性单例\n\n上一节我们完成了一个可用的惰性单例，但是我们发现它还有如下一些问题。\n\n- 这段代码仍然是违反单一职责原则的，创建对象和管理单例的逻辑都放在 createLoginLayer  \n  对象内部。\n- 如果我们下次需要创建页面中唯一的 iframe，或者 script 标签，用来跨域请求数据，就  \n  必须得如法炮制，把 createLoginLayer 函数几乎照抄一遍：\n\n抽离出通用的单例\n\n```js\nvar getSingle = function (fn) {\n\tvar result;\n\treturn function () {\n\t\treturn result || (result = fn.apply(this, arguments));\n\t};\n};\n```\n\n## 总结\n\n单例模式是一种简单但非常实用的模式，特别是惰性单例技术，在合适的时候才创建对象，并且只创建唯一的一个。更奇妙的是，创建对象和管理单例的职责被分布在两个不同的方法中，这两个方法组合起来才具有单例模式的威力\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95":{"title":"单点登录","content":"","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8":{"title":"单页应用","content":"\n## 优缺点\n\n### 优点\n\n1. 通用的静态资源（比如 jQuery、Axios、Boostrap 等）不需要重新加载；\n2. 页面的数据状态和用户状态依然保留；\n3. 局部页面内容更新，页面切换快，用户体验好。\n\n### 缺点\n\n单页应用相比多页应用的优势主要在于页面切换时。在首次打开的时候，多页应用可以直接返回用于最终渲染的页面，而单页应用则需要自行进行计算和组装，中间过程很可能还涉及数据的二次请求，因此会比多页应用慢。\n\n除此之外，由于搜索引擎只识别 HTML 内容，单页应用更多依赖 Javascript 进行 HTML 拼接，因此对 SEO（search engine optimization 简写为 SEO，搜索引擎优化）的支持不友好，很可能会影响搜索引擎中的排名。\n\n如今不少前端框架也支持服务端渲染（SSR，Server-Side-Rendering），通过提供 Node. Js 服务的方式，在服务端完成页面内容的拼接，直接返回给前端。相对的，单页应用的渲染方式，也被称为客户端渲染（CSR，Client-Side-Rendering）。\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%97%E4%BA%AC":{"title":"南京","content":"\n## 美食\n\n - 李记锅贴 ，南京市秦淮区打钉巷1号\n","lastmodified":"2023-09-18T14:54:47.518454367Z","tags":null},"/%E5%8D%9A%E5%BC%88%E6%80%9D%E7%BB%B4":{"title":"博弈思维","content":"\n# 博弈思维\n\n把读者当做对手  \n思考读者可能会有什么预期（行动）  \n再给予他们超出预期的惊喜（策略）\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%9A%E5%BC%88%E8%AE%BA":{"title":"零和博弈","content":"\n# 零和博弈\n\n# 非零和博弈\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E5%B0%94%E6%B3%A2%E6%99%AE%E5%B0%94":{"title":"卡尔·波普尔","content":"\n# 卡尔·波普尔\n\n## 证伪主义\n\n总的来说，波普认为科学强调的应该是尝试对理论进行反驳，而不是证实理论。根据波普的观念，对很多理论来说，找到证实证据实在太容易了。借用波普所使用的一个例子，也就是弗洛伊德的精神分析法，波普认为这个理论所做出的“预言”已经非常概括化，几乎任何一个事件都可以被解读为证实了这个理论。因此，这种理论的证实证据对波普来说就变得无关紧要了。\n\n从某个意义上来说，对于波普而言，一个理论所冒的风险越大，它的科学性就越强。举个例子，由于刚刚提到的这些原因（也就是爱因斯坦的理论做出了一个明确而又夸张的预言，因此冒着很快就会被证明有误的风险），爱因斯坦的理论与诸如弗洛伊德的精神分析法相比，就是一个更好的科学理论范例。总的来说，对于波普而言，这就是好的科学的特点，也就是科学应该强调证伪而不是证实，应该努力寻找有风险的理论。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E5%88%86%E7%B1%BB":{"title":"卡片分类","content":"\n# 卡片分类\n\n如果读书获得的卡片，我会有怎么样的希望。  \n我希望我在下次阅读到这个名词的时候，能够知道他是什么意思  \n我希望如果是一个方法 我能知道这个能有什么应用  \n我希望如果是一个结论 他有什么实例可以论证吗\n\nWHAT,WHY,HOW\n\n怎么分？索引卡片，汇总卡片，知识卡片？\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E5%A4%A7%E6%B3%95%E7%9A%84%E7%A5%9E%E5%A5%87%E4%B9%8B%E5%A4%84-%E9%80%9A%E8%AF%86%E9%83%A8%E8%90%BD":{"title":"卡片大法的神奇之处 - 通识部落","content":"\n## Meatdata\n\n- author：\n- link： [卡片大法的神奇之处 | 通识部落  \n     results matching \"\"No results matching\"\"](https://xunyun.gitbooks.io/omwmemory01/content/chapter03/note8.html)\n- tag：#\n- date: [[2021-12-31]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 心理学家实验发现，大脑偏爱纸质书。对于好书和需要深度研读的图书，最好以纸质书为主；电子书在元认知、记忆回放、深度理解、工作记忆加工、注意力持续时间上弱于纸质书\n- 现在我一定要找到这个知识点的源头，从源头想当时为什么他们要这么去写，之后再找一些鲜活的例证去证明它。就像读完书后要考虑应用，写代码也要实践，因此自己会再找更多的体会，这样才是一张完整的卡片。\n- 虚拟卡片有什么好处呢？这样的卡片的所有内容都长在了自己的大脑里，可以依靠大脑想象任意裁剪。大脑的好处在于成本足够低，卡片的转换和连接迅速。自己仿佛魔术师一样不断的进行拼接，这时学习的复杂度降低，容量却增加了。\n- 和硕大的背包比起来，盒子的容量是有限的，需要想清楚自己要放什么样的东西进去， 这样就会降低负荷，并且放进去的东西质量也更高，我们的卡片有些类似，容量小的好处是负荷降低，放进去的是线索、是高质量的内容。\n- 就像小的时学历史一样，会背某某人在什么时间做了什么事情，看起来似乎无聊，可是当我们主动探索某一知识点的时候，这些内容却能给我们非常大的帮助，能够在大的时间周期上，对于过去发生的事情产生一个正确的概念。反常识能够让我们要通过理性的思考。金句卡可以为未来的写作和输出去做准备，同时帮助我们更好理解原来的知识点。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E6%A8%A1%E6%9D%BF":{"title":"卡片模板","content":"\n### 起源\n\n### 一句话介绍\n\n### 具体概念\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%BB%8E%E9%98%85%E8%AF%BB%E5%88%B0%E5%86%99%E4%BD%9C":{"title":"《 卡片笔记写作法：如何实现从阅读到写作 》","content":"\n# 《 卡片笔记写作法：如何实现从阅读到写作 》\n\n# 元数据\n\n\u003e [!abstract] 卡片笔记写作法：如何实现从阅读到写作\n\u003e - ![ 卡片笔记写作法：如何实现从阅读到写作|200](https://weread-1258476243.file.myqcloud.com/weread/cover/15/YueWen_39136896/t7_YueWen_39136896.jpg)\n\u003e - 书名： 卡片笔记写作法：如何实现从阅读到写作\n\u003e - 作者： 申克·阿伦斯\n\u003e - 简介： 卢曼的“盒中笔记”通常很简短，因为这些只是他庞大繁杂研究中的索引，等需要时，他会借由这些线头进行延伸思考，然后不断链接知识要点，从而形成自己的知识树。你也可以试试。\n\u003e - 出版时间 2021-06-01 00:00:00\n\u003e - ISBN： 9787115564672\n\u003e - 分类： 文学-语言文字\n\u003e - 出版社： 人民邮电出版社\n\n# 高亮划线\n\n## 推荐序一 像卢曼一样写卡片\n\n- 📌 在这里，需要介绍一个超出多数人常识的原理：必要难度（Desirable Difficulty）。这是认知科学最新研究成果，是认知科学家比约克夫妇（Robert A.Bjork \u0026 Elizabeth Ligon Bjork）在近30年前提出的，之后历经了两代认知科学家、数十个认知科学实验室发展，目前已成为认知科学中关于学习与记忆的主流理论。什么是必要难度理论？人类记忆存在广泛且普遍的元认知错觉，会误将“记住了”当成“学会了”。如果将人的大脑粗陋地比作一块硬盘，假设你的每次记忆都是往这块硬盘中写入内容，那么，可以近似地将记忆想象成无限的内容，但硬盘上的这些信息会相互争夺空间。人的记忆有两种基本机制：存储与提取。比约克率先区分了记忆竞争的两种不同类型：存储强度（storage strength）与提取强度（retrieval strength）。以前，人们习惯性地认为，记得越快，学习效果越好。简言之，存储越容易，提取就越快。但他的实验发现了与常识相反的结论：“存储与提取负相关”，也就是说，存入记忆越容易，提取出来越困难；反之，如果你有些吃力地存入，知识提取会更方便。 ^39136896-6-2013-2557\n    - ⏱ 2021-11-21 10:29:05\n- 📌 理。而卢曼比他们更精细，针对不同记忆提取场景，做了很多优化。卢曼经常使用的索引可以分为以下四类。第一类是主题索引。当某个主题的内容积累得足够丰富，卢曼就会做一张主题索引卡，对这个主题进行概览。主题索引卡上会汇集所有相关笔记的编码或链接，每条笔记会用一两个词或一个短句简要说明核心内容。这类索引，相当于给了你一个进入某一主题的入口。第二类与主题索引类似，只不过不是对某一主题的概览，而是针对盒子里相近位置的卡片所涉及的所有不同主题进行概览。第三类是在当前卡片上做索引，标明这条笔记逻辑上的前一条是什么、后一条是什么（这些卡片在盒子里的位置可能并不挨着）。第四类，也是最常用的索引形式，就是简单的“笔记-笔记”连接。两条笔记可能完全没有关系，把它们关联在一起，往往会产生出乎意料的新思路。通过这些关联操作，我们能更好地对卡片内容进行组合、拼接、提取，从而产生更高质量的内容。 ^39136896-6-2814-3333\n    - ⏱ 2021-11-21 10:30:02\n\n## 推荐序三 用卡片笔记积累你的知识复利\n\n- 📌 从本质上讲，卡片笔记写作法不是一种“技巧”，而是一个“系统”，一种存储和组织知识、扩展记忆以及生成新连接和想法的系统。简单来说，就是把你感兴趣或者将来可能会用到的知识收集起来，然后用一种像集装箱一样标准化的方式，去处理这些笔记，建立笔记之间的联系，供你使用。 ^39136896-8-772-901\n    - ⏱ 2021-11-21 10:34:01\n\n## 译者序\n\n- 📌 以往教授笔记方法的图书多以两类为主：一类是教授记笔记的形式，比如一页纸法、九宫格法、思维导图法；另一类则以教授原理为主，如费曼笔记法、康奈尔笔记法、PQ4R法等。 ^39136896-9-699-780\n    - ⏱ 2021-11-21 10:36:38\n- 📌 为什么要记笔记？我们看书学习时会产生自己的思考，这样的洞见来之不易，如果不记笔记，往往会转瞬即逝，因此记笔记可以巩固我们的思考成果。自己的思考并不意味着完全不同于原始的知识，有时哪怕是精简一下语言，调整一下语序，使得下一次再查看时不需要花费和第一次一样多的时间，那么我们花在第一次学习上的时间也就有了价值。更不要说像本书建议的那样，用自己的语言，以标准化的格式记下笔记，再在笔记之间建立联系，产生更多新的想法了。一个笔记系统不仅可以是我们的外接大脑，也可以是生产力的助推器。 ^39136896-9-1626-1863\n    - ⏱ 2021-11-21 10:38:31\n- 📌 如果读者只是从网上浏览了别人分享的关于这本书的书摘，那么这种既不是自己的理解又没有语境的干货，就很难在自己的知识、情感和实践层面等找到契合点，这就是教育学上讲的“惰性知识”，自然很难为己所用。如果读者看过原书，也有了自己的思考，却没能记得住，或者习惯性地用一句“一看就会、一做就废”来搪塞自己，那么可能忽视了学习心理学上关于成功模仿的四要素——观察、保持、复现和动机。 ^39136896-9-3193-3377\n    - ⏱ 2021-11-21 10:42:05\n\n## 第一章 绪论\n\n- 📌 在德国，教授通常在开始公开演讲时，会介绍自己的课题，卢曼也被问到他主要研究的课题是什么。他的回答堪称经典。他简洁地回答道：“我的研究课题是社会理论，持续时间是30年，成本为零”（Luhmann,1997）。要知道，在社会学中，“社会理论”可是所有课题之母。 ^39136896-11-7020-7148\n    - ⏱ 2021-11-21 11:01:00\n- 📌 卢曼并不只是照抄他所读过的文章中的观点或引文，而是将其从一个语境转化到另一个语境。这很像翻译，不同的语境用不同的词描述，但是要尽量真实地保持原意。 ^39136896-11-11182-11255\n    - ⏱ 2021-11-22 10:20:13\n- 📌 如果把他的卡片盒看成是个人的维基百科或纸上的数据库，那将是相当具有误导性的。它们之间显然有相似的地方，但其微妙的差异才正是这个系统的独特之处。 ^39136896-11-11785-11856\n    - ⏱ 2021-11-22 10:21:21\n\n## 关于写作，你需要注意的几个问题\n\n- 📌 SQ4R是“浏览（Survey）、提问（Question）、阅读（Read）、复述（Recite）、修订（Revise）、复习（Review）”6个英文单词的首字母缩写。它是一种阅读方法，但肯定又会很快被新一代阅读方法SQ5R（管它代表什么）取代 ^39136896-14-2103-2226\n    - ⏱ 2021-11-22 10:40:28\n\n## 简洁是最重要的\n\n- 📌 而永久笔记则是以另一种方式写出来的，让你即使已经忘记了当时所取材的上下文，仍然可以理解它们。 ^39136896-16-4849-4895\n    - ⏱ 2021-11-22 10:49:48\n- 📌 永久存放在卢曼卡片盒里的笔记只有文献笔记和永久笔记。前者可以非常简短，因为上下文很明显就是它们所指的文本。后者则需要写得更加谨慎和细致，因为它们需要一目了然 ^39136896-16-5128-5206\n    - ⏱ 2021-11-22 10:50:15\n- 📌 与项目有关的笔记可以是以下内容：·手稿中的评论；·与项目有关的文献收集；·大纲；·草稿片段；·备忘录；·待办事项；·当然还有草稿本身。 ^39136896-16-6100-6349\n    - ⏱ 2021-11-22 10:51:30\n\n## 让工作推动你前进\n\n- 📌 写永久笔记也是一样，它还内置了另一个反馈循环：用文字表达自己的想法，会让我们思考自己是否真的想清楚了。当我们试图将其与之前写的笔记联系起来时，很容易发现矛盾、不一致或重复的地方。虽然这些内置的反馈循环并不能取代同行或上级的反馈，但唯独这些反馈是随时可用的，可以帮助我们每天都有少许、多次的进步。 ^39136896-18-2827-2974\n    - ⏱ 2021-11-22 11:11:15\n\n## 第三章 成功写作的六个步骤\n\n- 📌 事实上，人们之所以认为他们可以在多任务处理方面做得更好，并认为这样可以提高生产力，原因不外乎两个：一是缺乏对比，或缺乏可以提供客观数据的外部测量；二是心理学家所说的“曝光效应”，即做某件事的次数多了，人们就会相信自己已经很擅长做这件事，而不考虑实际表现 ^39136896-19-1952-2078\n    - ⏱ 2021-11-22 11:14:18\n- 📌 写论文不仅仅是在键盘上打字，它还包括阅读、理解、思索、产生想法、建立联系、区分术语、寻找合适的词语、结构化、组织、编辑、修正和重写等。 ^39136896-19-2262-2329\n    - ⏱ 2021-11-22 11:14:37\n- 📌 虽然我们对人类长期记忆能力的估计并不一致，而且颇具猜测成分，但心理学家过去在谈到短期记忆容量时的看法是一致的：我们最多可以同时在脑海中保存7±2件事 ^39136896-19-8652-8726\n    - ⏱ 2021-11-22 11:25:07\n\n## 阅读和理解\n\n- 📌 我们从文本的具体语境中提取出来的是在特定语境中服务于特定目的、支持特定论点的观点，并不一定属于我们自己的理论体系，也不一定符合我们自身的语言习惯。要想将这些观点融入我们自己的思维体系，并放到卡片盒里，就必须用我们自己的话对其进行转述。所谓转述，并不是要随意改变原来的意思，使之适合我们，而是用不同的文字尽可能真实地表述原意。同样地，即使是复制引文而不改变其用词，其含义也会因为上下文的剥离而发生改变。这是初学者常常犯的错误，最终只能带来拼凑的想法，永远无法形成连贯的思路。 ^39136896-20-1274-1510\n    - ⏱ 2021-11-22 11:33:23\n- 📌 许多学习指南都建议人们从确定假设或主题开始线性地进行写作，这必然会导致更多的确认偏差。首先，基本上你在开始研究前就已经预设了立场，把你当下的理解定为研究的预期结果而非起点，这导致后期你的认知都会具有片面性 ^39136896-20-5033-5135\n    - ⏱ 2021-11-22 14:00:30\n- 📌 辨别模式、质疑所用框架，并发现不同作品间差异的能力，是进行批判性思考并审视文本或谈话背后观点的先决条件。能够对问题、论断和信息进行重新构架，甚至比拥有广博的学识更重要，因为如果没有这种能力，我们就无法将知识用于实践。值得欣慰的是，这些技能是可以习得的，只是需要刻意练习（Ericsson,Krampe,and Tesch-Römer,1993;Anders Ericsson,2008）。单纯进行阅读、在句子下面画线或者背诵原文都不能算是刻意练习，做卡片盒笔记才是。 ^39136896-20-8234-8467\n    - ⏱ 2021-11-22 14:13:52\n- 📌 外，我们也不应该低估写作的好处。在口头表达时，我们很容易掩饰毫无根据的主张，还可以用自信的手势来跳过论证的漏洞，或者不顾自己是否知道自己的意思，随口说一句“你知道我的意思”。但写在纸上的时候，这些手法过于明显，像“那就是我所说的！”这样的叙述很容易被查证。“写下来”最重要的好处是，当我们对某件事情的理解达不到自己以为能达到的程度时，它能帮助我们正视自己的观点。 ^39136896-20-8921-9102\n    - ⏱ 2021-11-22 14:10:05\n- 📌 阅读，尤其是重复阅读，很容易使我们误以为自己理解了一篇文章。重复阅读是特别危险的，这是因为存在曝光效应（mere-exposure effect）：当我们熟悉某事物的时候，会开始相信自己已经理解了，最大的问题是，我们还会对其越发喜欢 ^39136896-20-9188-9304\n    - ⏱ 2021-11-22 14:12:14\n\n## 记卡片盒笔记\n\n- 📌 当我们想着已有的笔记来做新的笔记时，我们考虑到的东西会比我们自身记忆中可用的信息更多。这是非常重要的，因为我们自身记忆提取信息的方式并不总是理性而合乎逻辑，而是会遵循心理规则。而且大脑也不会严格根据神经信号客观地储存信息。当我们每次试图提取信息时，都会重建和改写记忆。 ^39136896-21-3442-3576\n    - ⏱ 2021-11-22 14:30:33\n- 📌 将一个想法嵌入卡片盒里已有的上下文中，一个常见的方法是写出它为什么对自己的思路很重要。例如，我最近读了穆莱纳森（M ullainathan）和莎菲尔（Shafir）写的《稀缺：我们是如何陷入贫穷与忙碌的》（2013），他们研究了稀缺的体验如何影响认知并导致决策过程的变化；帮助读者理解以下问题：为什么几乎没有时间或金钱的人有时会做一些在别人看来毫无意义的事情？为什么面对最后期限的人有时会在各种任务之间疯狂切换？为什么钱少的人有时会把钱花在外卖等看似奢侈的事情上？在别人看来，一次只做一件事情，或者批量购买食材并自己做饭更有意义。这本书的有趣之处在于，作者并没有对这些行为进行质问甚至没有进行评判，而是把它作为一种普遍的人类现象进行研究。 ^39136896-21-4862-5181\n    - ⏱ 2021-11-22 14:37:21\n- 📌 “选择是构建我们思维之船的龙骨，从容量有限的记忆来讲，选择的作用更为明显。相反，如果我们什么都记，那么大多数情况下应该与什么都没记住是一样的，并且我们再次回想某个东西时所花的时间和第一次学习它时所用的时间一样长，这样我们的思想就永远不能进步。”（WilliamJames,1890） ^39136896-21-6522-6664\n    - ⏱ 2021-11-22 14:40:56\n- 📌 斯泰因等人以一个正在学习静脉和动脉区别的生物学新手为例，说明了这是多么常见的现象：“（他）可能会发现一开始很难理解和记住动脉壁厚、有弹性、没有瓣膜、而静脉弹性较差、壁较薄、有瓣膜”（Stein et al.,1984）。但只要稍微阐述一下这种区别，并提出适当的问题，比如“为什么会这样？”学生就可以把这些知识与之前的知识（比如对压力的理解和心脏的功能）联系起来。只要将这些知识与“心脏将血液压入动脉”这一常识联系起来，他们马上就会知道，这些动脉壁需要承受很大的压力，在静脉中，血液流回心脏的压力更小，这意味着动脉需要比静脉壁更厚。当然，静脉就需要有瓣膜来防止血液回流。一旦理解了，他们就几乎不可能忘记关于静脉和动脉的属性和差异等知识。 ^39136896-21-11330-11647\n    - ⏱ 2021-11-22 15:07:08\n- 📌 卡片盒迫使我们提出许多阐述性的问题：它意味着什么？它与某事有什么联系？它与某事有什么区别？它与什么相似？卡片盒没有按主题分类，这是积极建立笔记之间联系的前提条件。只要联系是有意义的，不同的笔记之间也可以建立联系。 ^39136896-21-12182-12288\n    - ⏱ 2021-11-22 15:11:04\n\n## 发展想法\n\n- 📌 比较笔记还能帮助我们发现矛盾、悖论或对立，这是促进洞见产生的重要因素。当我们意识到自己曾经将两个相互矛盾的想法都看成真理时，我们就知道自己的看法出问题了。发现问题是一件好事，因为只有这样自己才能解决问题。 ^39136896-22-6965-7067\n    - ⏱ 2021-11-22 15:23:53\n- 📌 查理·芒格写道：“第一条规则是，如果你只记住了一些孤立的事实，并试图硬凑起来使用，你就不可能真正理解任何事。如果事实不能在一个理论框架中相互联系，那么你就无法将它们派上用场。你的脑子里必须有一些思维模型，你必须把你的直接和间接经验运用到这些模型里。你可能已经注意到了，一些学生试图死记硬背，以此应付考试，那么，他们在学校和生活中都会失败。你必须把经验融入许多模型组成的框架中。” ^39136896-22-8936-9125\n    - ⏱ 2021-11-22 15:32:27\n\n## 分享你的洞见\n\n- 📌 更糟糕的是，我们往往最喜欢出现在大脑中的第一个想法，而且不管它是否有实际意义，我们通常也不想放弃它（Strack and M ussweiler,1997）。即使你想通过召集更多人一起进行头脑风暴来克服这种局限也无济于事，通常人越多，好点子就越少，并且越会被禁锢在一个更小的话题范围内（Mullen,Johnson,and Salas,1991）。[22] ^39136896-23-1702-1941\n    - ⏱ 2021-11-22 16:00:56\n\n# 读书笔记\n\n## 阅读和理解\n\n### 划线评论\n\n- 📌 而如果记笔记时没有明确的目的，就很难意识到它在一个大项目中的重要意义，就会感觉记笔记更像是一件苦差事。有时候，写长篇摘抄的意图是好的，但这是不可持续的；有时候，只给句子画线，在空白处写评论，这几乎等于没有做笔记；而更多的时候，读书的同时并没有做笔记，对于写作而言，这几乎相当于根本没有读过这本书。在卡片盒系统中，一切都是为了在卡片盒中积累足够数量的有用笔记，这给我们的阅读和做文献笔记指明了清晰的方向。 ^16142247-7v01FDui2\n    - 💭 初学者这几条可以说是完全命中，输入足够多的情况下，却没有办法有输出。在看到Obsidian后，对卡片笔记盒有一点了解后，我感觉这会是改变我写作的方法。\n    - ⏱ 2021-11-22 11:38:43\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%88%86%E4%BA%AB":{"title":"为什么要写卡片笔记","content":"\n# 为什么要写卡片笔记\n\n我想大家应该都会有这种困扰，就是自己读了一本书，当时也许会觉得很好,但是过了一段时间后，就会忘得一干二净，但是读书笔记又不像背单词这类，可以通过 [[艾宾浩斯记忆曲线]] 来记忆。  \n直到我接触到了 [[Obsidian]] 这个软件, 被他的双向链接吸引到了，但是还是没有明白我们应该如何对卡片进行分类，卡片写作的粒度应该如何划分。  \n接着就去阅读了 [[《 卡片笔记写作法 》]] 这本书\n\n# 收获到了什么\n\n- 如何做一个[[渐进式总结笔记]]\n- 了解[[卡片笔记法#Zettelkasten的优缺点 |卡片笔记的优缺点]]\n\n# 参考文章\n\n**其实这里最好是链接到自己的[[Notion]]或者别的收集软件做的剪报，防止以后链接被删除后找不到原文**\n\n- [为什么你要用卡片笔记法？ - 少数派](https://sspai.com/post/67923)\n\n  \u003e 想想看，如果有这样一台电脑，你要不要买？\n  \u003e\n  \u003e - 存储空间极为狭小，很容易装满，经常自动删除一些资料，以便腾挪空间\n  \u003e - 时不时会对已存内容进行修改，且不告知用户\n  \u003e - 处理简单问题，工作起来很顺畅；一旦遇到复杂问题，立即自己关机躺倒不干\n\n- [卡片笔记之困与秩序的重建 - 少数派](https://sspai.com/post/68607)\n\n  \u003e **科学的分类法+主题索引+知识卡片=更加行之有效的知识（笔记）管理系统。**\n\n- [如何构建自己的笔记系统？ - 知乎](https://www.zhihu.com/question/23427617/answer/1461195696)\n  - [[中图法]]\n  - [[写作为什么困难]]\n- [如何构建笔记系统-实际操作篇 - 知乎](https://zhuanlan.zhihu.com/p/353521308)\n\n  \u003e 由于篇幅巨大，阅读笔记往往需要拆分，也就是进行所谓的“原子化”。需要注意的是，原子化并没有对应的原则。实际上学界并没有规定什么样的内容可以视为一个知识单位，或者说知识单元。因此，“知识原子”的构造其实全凭个人：你觉得这篇笔记的粒度已经足够细了，那么它就已经原子化了。这里提供一些实践经验：如果你觉得在这篇笔记中获取信息是困难的，那它一定不是原子化的；如果你直觉上觉得这篇笔记上包含了几个知识点，那么就大胆的拆分它；当你引用该笔记中某些内容、但这些内容不能被标题所概括时，它就不是原子化的\n\n- [卢曼卡片盒笔记法介绍 (Introduction to the Zettelkasten Method) • Zettelkasten Method](https://zettelkasten.de/introduction/zh/)\n- [关于如何组织永久笔记的回答 - 知乎](https://zhuanlan.zhihu.com/p/410217489)\n- [双向链接时代的快速无压记录 - 知乎](https://zhuanlan.zhihu.com/p/427336729)\n- [「对笔记系统的思考」卡片笔记之困与秩序的重建 - 经验分享 - Obsidian 中文论坛](https://forum-zh.obsidian.md/t/topic/201)\n- [我的笔记系统和制卡流程演示 - 经验分享 - Obsidian 中文论坛](https://forum-zh.obsidian.md/t/topic/386)\n- [如何构建自己的笔记系统？ - 知乎](https://www.zhihu.com/question/23427617/answer/1684652104)\n- [我的阅读工作流（2021 版） - 少数派](https://sspai.com/post/69922)\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E6%B3%95":{"title":"卡片笔记法","content":"\n自下而上的学习法，不要在意学习到的知识会结出什么样的果实，让你能跟随你的兴趣去学习\n\n# 卡片笔记法\n\n卢曼的 Zettelkasten 概念，在卢曼的 Zettelkasten 「卡片盒笔记法」中，「索引」是它为每张卡片建立的「数字编号」，通过在卡片中不断插入相关联的「索引」，使得所有知识组成了一张网络，才会让卢曼能够有如此高效的产出。\n\n## 什么是 Zettelkasten?\n\n德国学者 Niklas Luhmann(尼克拉斯·卢曼)是德国当代重要的社会学家。卢曼作为社会系统理论的创新者,被视为卓越的社会学大家,他的一生中一共出版了 70 多本书和 400 多篇学术著作。卢曼在不借助计算机的情况下拥有如此大的产岀,完全归功于他自己总结的一套笔记管理方法, Zettelkasten 也被称为「卡片盒笔记法」或「卡片笔记法」。\n\n## 三种笔记\n\n### 闪念笔记\n\n用于捕捉脑海里的每一个想法，并尽量和笔记产生关联\n\n### 文献笔记\n\n文献笔记是为了最终写成卡片盒中的永久笔记，因此它只是一个过程，不必在这上面分散太多的注意力，而永久笔记才是真正增加卡片盒价值的地方。记文献笔记时，你可以使用任何技术，例如使用十种颜色的下画线和“SQ8R”技术，只要它们对理解阅读内容和获得有用笔记有帮助就行。但这些都只是你做永久笔记前的额外步骤，并不会直接增加卡片盒的价值。你需要把对文本的理解做成一定形式的文献笔记，这样在做永久笔记时才有具体的素材。  \n但不要把记文献笔记本身变成一个大工程。文献笔记应当简短而有助于写永久笔记，除此以外，其他事情要么可以帮助达到这一目的，否则就是对注意力的分散。\n\n可以在文献笔记后记录你想要问的问题，然后在其他时候阅读到这个问题的答案是可以记录到这个卡片中，随着时间的流逝，你对这个问题的解答和理解就会越来越深。\n\n### 永久笔记\n\n永久笔记需要你的笔记相对原子化，也即需要完整到可以脱离上下文，并且简洁、清晰。  \n**长短不是问题，重要的是这张卡片对于笔记网络的贡献**\n\n## Zettelkasten 的优缺点\n\n### 优点\n\n- 真正的将卡片[[原子化]]，可以随意的进行排列组合\n- 同样是原子化的优点，将写作分割在平时，而不是写作时去回忆论点，再去找资料 [[写作为什么困难]]\n- 容易与其他卡片进行关联想象，产生出新的 idea\n- 通过关联搜索，而不是靠记忆去搜索，参考[[双向链接#双链 VS 单链|双链VS单链]]\n- 他内置一个反馈循环: 用文字表达自己的想法，会让我们思考自己是否真的想清楚了。当我们试图将其与之前写的笔记联系起来时，很容易发现矛盾、不一致或重复的地方。\n- 他不会使你写出来的文章有严重的立场倾向，因为在写之前你也不知道会出现怎么样的排列组合\n- 他可以使我们拥有辨别模式、质疑所用框架,并发现不同作品差异的能力。能够拥有对作品进行重构的能力。这是需要[[《 刻意练习 》]] 的能力，而阅读和划线则不是\n\n### 缺点\n\n这本书没写\n\n# [[即凉的卡片笔记写作法]]\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A1%E8%AF%BA%E6%A8%A1%E5%9E%8B":{"title":"卡诺模型","content":"\n# 卡诺模型\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615144743.png)\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%A2%E7%91%9F%E7%A6%8F":{"title":"卢瑟福","content":"\n# 卢瑟福\n\n卢瑟福本人是一位伟大的物理学家，这是毋庸置疑的，但他同时更是一位伟大的物理导师。他以敏锐的眼光去发现人们的天才，又以伟大的人格去关怀他们，把他们的潜力挖掘出来。在卢瑟福身边的那些助手和学生，后来绝大多数都出落得非常出色，其中更包括了为数众多的科学大师。\n\n[[尼尔斯·玻尔]]、[[保罗·狄拉克]]、[[詹姆斯·查德威克]]、[[布莱克特]]、[[沃尔顿]]（E.T.S. Walton）和 [[考克劳夫特]]（John Cockcroft）、英国人索迪（Frederick Soddy）, 1921 年获得诺贝尔化学奖。匈牙利人赫维西（George von Hevesy）, 1943 年获得诺贝尔化学奖。德国人哈恩（Otto Hahn）, 1944 年获得诺贝尔化学奖。英国人鲍威尔（Cecil Frank Powell）, 1950 年获得诺贝尔物理奖。美国人贝特（Hans Bethe）, 1967 年获得诺贝尔物理奖。苏联人卡皮察（P.L.Kapitsa）, 1978 年获得诺贝尔化学奖。\n\n除去一些稍微疏远的情况外，卢瑟福一生至少培养了 10 位诺贝尔奖得主（还不算他自己本人）。当然，在他的学生中还有一些没有得到诺贝尔奖但同样出色的名字，比如汉斯·盖革（Hans Geiger，他后来以发明了盖革计数器而著名）、亨利·莫塞莱（Henry Moseley，一个被誉为有着无限天才的年轻人，可惜死在了“一战”的战场上）、恩内斯特·马斯登（Ernest Marsden，他和盖革一起做了 α 粒子散射实验，后来被封为爵士）……\n\n卢瑟福的实验室被后人称为“诺贝尔奖得主的幼儿园”。他的头像出现在新西兰货币的最大面值——100 新西兰元上面，作为国家对他最崇高的敬意和纪念。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%B0%E5%BA%A6":{"title":"重要的节日","content":"\n# 重要的节日\n\n印度的节日多到数都数不过来的地步。而且很多节日不是一天，是连续的好几天。\n\n## 排灯节\n\n各个早期文明在耕作收获之后都有相应的节日举行庆祝活动。排灯节就是印度教徒和锡克教徒庆祝丰收的节日，大家向财富女神致敬，感谢她为大家带来丰收。\n\n排灯节是一连五天，以灯火和烟花为标志。它寓意着善良、光明和知识，战胜了邪恶、黑暗和愚昧。在节日期间，印度所有建筑物都装饰着许多油灯。人们相信，这些灯会将财富女神引导到家中。\n\n## [[湿婆]]节\n\n湿婆节的梵语名字是“伟大的湿婆之夜”，是为了纪念湿婆与帕尔瓦蒂的美妙婚姻。\n\n**在任何宗教信仰很浓的社会里，神的纪念日自然是全社会盛大的节日，印度教也不例外。**\n\n## 桑格拉提节\n\n桑格拉提节也是印度节日中少有的每年都按照公历日期过的节，因为这个节日是为了庆祝太阳回归，天气开始转暖，因此日期是根据太阳的位置而定的，每年都是1月14日。桑格拉提的意思是“太阳的力量”。印度人认为太阳的热量给所有的人带来了蔬菜、水果等农业收成，以及大家的财富。因此在这一天，民众向女神提毗（Devi）奉献各种水果和蔬菜，并接受她的祝福。印度教的苦行僧则要到河里沐浴。虽然印度的纬度较低，但是这个时候天气还是非常寒冷的，不过这挡不住大家的热情。据统计，桑格拉提节曾经有150万人一起在恒河沐浴。\n\n## 黑天圣诞节\n\n黑天圣诞节里面的“黑天”不是指晚上，而是指印度教主神之一的毗湿奴的第八个化身，这个化身的名字叫做黑天。当然“黑天”是一种中文的翻译，它真实的含义是深色。[[毗湿奴]]的形象就是深色皮肤。\n\n## 洒红节\n\n洒红节是印度历春分的那一天，类似于中国的春节。在节日期间，人们互相抛洒水和颜料，抹红，洒红节的名称由此而来。\n\n## 十胜节\n\n十胜节来源于印度史诗《罗摩衍那》，有几千年的传统。这个节日是庆祝印度教教徒心目中的英雄罗摩与[[十首魔王罗波那]]大战十日，并最后大获全胜，所以叫做“十胜节”。十胜节持续的时间非常长，长达10天。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8D%B3%E5%87%89%E7%9A%84%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95":{"title":"即凉的卡片笔记写作法","content":"\n不得不说，即凉对卡片笔记的理解越来越深了，比2021 年刚关注她的时候说的深刻很多\n\n# 即凉的卡片笔记写作法\n\n卢曼的[[卡片笔记法]]的手法比较远\n\n和[[费曼学习法]]很像，鼓励你用自己的话来描述，借此来提升自己的输出能力。但卡片笔记法提供了个更好的组织方式\n\n**学习和阅读的时候，重要的自己的想法**\n\n- 第一步，用自己的话表达\n- 第二步，记闪念笔记 [[flomo]] 、[[谷歌 Keep]]\n- 第三步，整理卡片笔记\n- 第四步，成立话题\n- 第五步，寻找反馈\n\n前两步很简单不说了\n\n[[Roam research]] 或者 [[logseq]]\n\n## 如何整理卡片笔记\n\n- 尽量不要产生重复的笔记，搜一下库，进行合并和删除\n- 卡片在哪里不重要，重要的是关联\n- 建议第一句是标题加粗，看了以后不用看正文\n- 制定一些统一的规则，让卡片笔记盒不乱\n\n为什么不用 [[Obsidian]] 而用 [[Roam research]]\n\n文章里面会有很多观点，而关联两篇文章，需要阅读整个文章，效率会变低很多\n\nRoam 的粒度就很细,但是 [[Obsidian#^c7c3e1]] 也可以链接到块， 使用` 文件名 ^`\n\nObsidian 适合做写作的最终一环，无论这里怎么修改，都不会改变卡片盒里最初的观点，产生隔离\n\n[[谷歌 Keep]] =\u003e [[Roam research]] 卡片笔记盒 =\u003e [[Obsidian]]长文写作\n\n### 如何关联卡片笔记\n\n[[关键词和标签的异同]]\n\n- 关键词关联（不必只是一个词，也可以是一句话。不必只有一个，也可以是多个\n- 和卡片之间的关联\n   - 笔记之间的链接比索引重要一百倍\n\n我们需要发散思考，所以需要把这两个方向都考虑到  \n\n- 卡片和关键词的关系，就是在同一个主题下的观点  \n- 卡片和卡片，不同主题之间的串联\n\n### 卡片笔记的索引和维护\n\n成立索引，关注你在意的**少数关键词**\n\n\u003e 索引的作用是作为某个重要思路的切入点，索引不用记录全邵笔记，记录重点的就行，通过重点笔记能句多找到相关子内容。”-----《卡片笔记写作法》\n\n1. 定期回顾，把重复的观点删除，把啰嗦的观点优化\n2. 常备份\n3. 与其他的信息隔离（不要和任务清单放一起\n\n## 卡片库的实际运用\n\n1. 1\n2. 利用索引去发现，\n3. 善用搜索\n4. 利用页面总览中的“热度”来发现灵感\n5. 成立话题应该是卡片阅读的最后一步，\n\n\u003e “怎样写作？  \n\u003e 不要为一个观点去进行头脑风暴，而是从现有的链条中发散主题。  \n\u003e 如果有更有希望的想法已经成型，就不要执着于前一个想法。”  \n\u003e 一《卡片笔记写作法》\n\n## 付诸实际\n\n学习从来不是有终点的，而是一个不断获取反馈，反复优化自己的循环,在这个循环中，你会逐步获得成长。\n\n卡片笔记难得不是笔记和工具，而是背后关联思考的逻辑\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8E%9F%E5%88%99":{"title":"《 原则 》","content":"\n# 《 原则 》\n\n# 元数据\n\n\u003e [!abstract] 原则\n\u003e - ![ 原则|200](https://weread-1258476243.file.myqcloud.com/weread/cover/23/YueWen_921568/t7_YueWen_921568.jpg)\n\u003e - 书名： 原则\n\u003e - 作者： 瑞·达利欧\n\u003e - 简介： 华尔街投资大神雷·达里奥白手起家40多年的生活与工作原则，比尔·盖茨、罗辑思维、吴晓波、张瑞敏、潘石屹、万维钢、傅盛等人力荐。瑞·达利欧是全世界顶尖投资家、企业家之一，对冲基金公司桥水创始人。桥水创立至今为客户赚取的收益远远超过历史上任何一家对冲基金。达利欧认为桥水的成功源自他所奉行的一套原则，而这些原则也是他一生中学到的最重要的东西。达利欧认为，我们可以像看待机器一样看待生活、管理、经商和投资，并将其系统化为一系列原则。这本书阐述了他的原则的两大基石——极度求真、极度透明，并介绍了以此为基础的创意择优，以及基于可信度评价的决策机制。书中500多条原则将帮助我们保持开放心态，看清现实，正确评价自己和他人，从容面对做决策、打造强大团队等问题，更进一步深入认识自我，实现不断成长。达利欧相信，自己的成功并非因为个人的特质，而是因为他从失败中学会了做人、做事的原则，而大多数人和公司都可以运用他的这些原则更好地实现自己的目标。\n\u003e - 出版时间 2018-01-01 00:00:00\n\u003e - ISBN： 9787508684031\n\u003e - 分类： 经济理财-管理\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 3 做到头脑极度开放\n\n- 📌 听听其他人的观点并加以考虑，绝不会削弱你独立思考、自主决策的自由，只会让你在决策时有更宽广的视角。 ^921568-15-4997-5046\n    - ⏱ 2020-02-11 16:38:25\n- 📌 在我看来，人们在发生分歧时变得愤怒是毫无意义的，因为大多数分歧与其说是威胁，不如说是学习的机会 ^921568-15-7220-7267\n    - ⏱ 2020-02-11 16:45:41\n\n# 读书笔记\n\n##\n\n### 划线评论\n\n- 📌 金本位制 ^16142247-7eZ7F70v3\n    - 💭 以一定量的黄金为货币单位铸造金币，作为本位币；金币可以自由铸造，自由熔化，具有无限法偿能力，同时限制其它铸币的铸造和偿付能力；辅币和银行券可以自由兑换金币或等量黄金；以黄金为唯一准备金\n    - ⏱ 2020-02-08 17:46:18\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8E%9F%E5%AD%90%E5%8C%96":{"title":"原子化","content":"\n# 原子化\n\n“原子（atom）”是源于古希腊[朴素唯物主义](https://baike.baidu.com/item/%E6%9C%B4%E7%B4%A0%E5%94%AF%E7%89%A9%E4%B8%BB%E4%B9%89/285145)哲学的一个概念，指构成物质的最小单元，它可以独立存在且相互之间联系微弱。基于原子的这一特性，一些学者和思想家们，借用“原子化（atom-ized）”这个概念来比喻社会生活中人与人之间围绕某个核心抱团，团内结构严密，团与团之间关系松散，团外人与人之间孤独冷漠的变动趋势或状态。\n\n## 物理的原子\n\n原子（atom），是指化学反应不可再分的基本微粒。原子在化学反应中不可分割，但在物理状态中可以分割。原子由原子核和绕核运动的电子组成。原子构成一般物质的最小单位，称为元素。\n\n## CSS 的原子\n\n让我联想到前端中 CSS 的原子化，出现了类似于[[TailwindCSS]]这样的库\n\n```javascript\n\n```\n\n## 笔记的原子\n\n我一直在想，[[卡片笔记法]]的原子是最简单的标签或者名字好 还是 以 一个问题为标题会比较好\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%8C%E5%90%91%E9%80%9A%E8%AE%AF%E6%96%B9%E5%BC%8F":{"title":"双向通讯方式","content":"\n# 双向通讯方式\n\n常见的双向通信方式包括 HTTP 短轮询（polling）、HTTP 长轮询（long-polling）、XHR Streaming、Server-Sent Events、Websocket 等。\n\n其中，最简单粗暴的莫过于 HTTP 短轮询，客户端每隔特定的时间（比如 1s）便向服务端发起请求，获取最新的资源信息。该方式会造成较多的资源浪费，尤其当服务端内容更新频率低于轮询间隔时，就会造成服务端资源、客户端资源的浪费。除此之外，过于频繁的请求也会给服务端造成额外的压力，当服务端负载较高的时候，甚至可能导致雪崩等情况发生。\n\nHTTP 长轮询解决了短轮询的一些问题，长轮询实现特点主要为当客户端向服务端发起请求后，服务端保持住连接，当数据更新响应之后才断开连接。然后客户端会重新建立连接，并继续等待新数据。此技术的主要问题在于，在重新连接过程中，页面上的数据可能会过时且不准确。\n\n相比 HTTP 长轮询，XHR Streaming 可以维护客户端和服务端之间的连接。但使用 XHR Streaming 过程中，XMLHttpRequest 对象的数量将不断增长，因此在使用过程中需要定期关闭连接，来清除缓冲区。\n\nSSE（Server-Sent Events）方案思想便是 XHR Streaming，主要基于浏览器中 EventSourceAPI 的封装和协议。它会对 HTTP 服务开启一个持久化的连接，以 text/event-stream 格式发送事件，会一直保持开启直到被要求关闭。\n\n最后我们来介绍 WebSocket，它实现了浏览器与服务端全双工通信。前面我们提到，HTTP 短轮询、长轮询都会带来额外的资源浪费，因此 Websocket 在实现实时通信的同时，能更好地节省服务端资源和带宽。\n\n由于不再需要通过 HTTP 协议通信，省去请求头等内容设置，Websocket 数据格式会更加轻量，通信更加高效，性能开销也相应地降低。除此之外，不同于 HTTP 协议，Websocket 协议没有同源限制，因此客户端可以与任意服务端通信。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220627170752.png)\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%8C%E5%90%91%E9%93%BE%E6%8E%A5":{"title":"双向链接","content":"\n# 双向链接\n\n## 什么是双向链接\n\n## 双向链接软件\n\n[[Obsidian]]、 [[Roam research]]、[[我来]]、[[葫芦笔记]] 都是比较好用的双链软件\n\n## 双链 VS 单链\n\n之前在论坛上讨论这套快速无压记录方法的时候，就被问到一个问题，**那就是在大纲双链笔记的 daily notes 流程中，针对我当时在帖子里举的一个例子，新增一条关于「logseq 的配置技巧」这个主题的内容需要为这个节点加上一个名叫 [[logseq]]/配置 的锚文本，可是假如使用没有双向链接的传统笔记软件、甚至用 typora 这种纯粹的编辑器，也可以先搜出 logseq - 配置.md 这篇文档，然后把新增的内容写进去，既然大家都是差不多的逻辑，那大纲双链笔记上这套 daily notes 流程到底有什么优越性呢？**\n\n我觉得这是一个直击本质的好问题，所以在这篇文章里，一定要给大家再次展示一下这两种记录方式的详细对比。当时我在论坛上是拿 logseq 举例的，在这里直接给大家重述一遍。\n\n### 虚假的折腾\n\n假设有这样一个场景，今天我逛了一下 logseq 论坛，看到别人说新版本通过修改 `:ui/show-empty-bullets?` 变量可以显示或隐藏内容为空的 bullets，我觉得这个设置可能会有用，于是我想把这个配置方法在笔记软件里快速记录下来。\n\n然后我打开 logseq 做记录，步骤如下：\n\n**第一步**：跳转到 daily notes 页面\n\n**第二步**：在 daily notes 的第一行直接写下\n\n```text\n- [[logseq/配置]]\n  - `:ui/show-empty-bullets?` 变量：显示或隐藏空节点\n```\n\n**第三步**：记录完毕，切出 logseq 去做别的事\n\n### 真正的折腾\n\n还是同一个情境，要是我用 typora 来记录，步骤如下：\n\n**第一步**：为了最快捷地打开 `logseq - 配置.md` 这个文件，当然是要好好利用各种搜索型效率软件了，于是我在 utools/Everything/Albert/Alfred 里搜索 `logseq 配置`，结果发现我并没有这个文件\n\n\u003e 这个时候第 1 个差别就已经体现出来了，在 logseq 里，我永远不用回忆 `logseq/配置` 这个页面是不是已经存在，直接在 daily notes 的第一行开写就行了\n\n**第二步**：搜索未果，我开始考虑换个关键词搜索，也许是我记错了文件名呢？万一我以前创建的文件名其实是叫做 `logseq - config.md` 呢？换了几个关键词搜索，发现我以前似乎真的没做过这方面的记录\n\n\u003e 第 2 个差别出现了，在 logseq 里，我不需要考虑自己之前是不是已经用别的名字创建过 `logseq/config`，我只需要直接在第一行写下 `- [[logseq/配置]]` 就行了，别的什么都不用考虑  \n\u003e 第 3 个差别：就算我以前已经有了 `logseq/config` 这个 page，那也不需要管它，因为 `logseq/配置` 和 `logseq/config` 这两个页面一定会在 `logseq` 这个父页面下共同展示，我可以在将来合并它们（*这里其实是我为了不打断语言表达故意口胡了一下，实际上 logseq 没有把 roam research 的合并页面功能学过来，这个功能看似不重要，但其实它是 roam research 最核心的功能之一，roam edit 和葫芦笔记是学到了的*）\n\n**第三步**：既然以前没有对应的 md 文件，那我就只能创建它了。创建一个新的 md 文件虽然不是什么高难操作，但是我在创建的时候就需要给它在文件系统上安排一个具体的位置，安排位置这个事情因人而异，但无论如何都是多了一层麻烦\n\n\u003e 第 4 个差别：在 logseq 里没有烦人的新建文件流程，就算我根本不对 md 文件分类，新建文件这个步骤还是烦人\n\n**第四步**：终于新建好了 `logseq - 配置.md` 这个文件，但是我已经忘了刚才想记录的是什么\n\n\u003e 第 5 个差别：用 logseq 记录，到达路径很短，心智负担几乎为零；用 typora 记录，到达路径很长，心智负担巨大\n\n**第五步**：我查看系统剪贴板，终于回想起了要记录的东西，开始记录\n\n**第六步**：终于记录完毕了，我逛完论坛关闭了网页，然后又开始了读文献时间，读了一阵子之后，我有一条突发的阅读心得想快速记录下来，于是我唤出了 utools/Everything/Albert/Alfred，再次重走上面的曲折心路历程\n\n\u003e 第 6 个差别：如果是用 logseq 记录，我只需要再次在 daily notes 页面的第一行写下：\n\n```text\n- [[文献/文献名]]\n  - 这个思路真是妙鸭\n- [[logseq/配置]]\n  - `:ui/show-empty-bullets?` 变量：显示或隐藏空节点\n```\n\n对比完毕，这两种方式看似差不多，实际上是天壤之别。请各位摸着良心说，**究竟谁更折腾**？\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%8D%E5%B8%B8%E8%AF%86%E5%8D%A1":{"title":"反常识卡","content":"\n#卡片/反常识卡\n\n- 印象：\n- 正确：\n- 例子：\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F":{"title":"发布—订阅模式","content":"\n# 发布—订阅模式\n\n发布—订阅模式又叫观察者模式，它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知。在 JavaScript 开发中，我们一般用事件模型来替代传统的发布—订阅模式。\n\n## 必须先订阅再发布吗\n\n在某些情况下，我们需要先将这条消息保存下来，等到有对象来订阅它的时候，再重新把消息发布给订阅者。就如同 QQ 中的离线消息一样，离线消息被保存在服务器中，接收人下次登录上线之后，可以重新收到这条消息。\n\n这种需求在实际项目中是存在的，比如在之前的商城网站中，获取到用户信息之后才能渲染用户导航模块，而获取用户信息的操作是一个 ajax 异步请求。当 ajax 请求成功返回之后会发布一个事件，在此之前订阅了此事件的用户导航模块可以接收到这些用户信息。\n\n为了满足这个需求，我们要建立一个存放离线事件的堆栈，当事件发布的时候，如果此时还没有订阅者来订阅这个事件，我们暂时把发布事件的动作包裹在一个函数里，这些包装函数将被存入堆栈中，等到终于有对象来订阅此事件的时候，我们将遍历堆栈并且依次执行这些包装函数，也就是重新发布里面的事\n\n## 全局事件的命名冲突\n\n## 缺点\n\n当然，发布—订阅模式也不是完全没有缺点。创建订阅者本身要消耗一定的时间和内存，而且当你订阅一个消息后，也许此消息最后都未发生，但这个订阅者会始终存在于内存中。另外，发布—订阅模式虽然可以弱化对象之间的联系，但如果过度使用的话，对象和对象之间的必要联系也将被深埋在背后，会导致程序难以跟踪维护和理解。特别是有多个发布者和订阅者嵌套到一起的时候，要跟踪一个 bug 不是件轻松的事情。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%98%E7%8E%B0":{"title":"变现 逻辑","content":"\n# 变现 逻辑\n\n1. 关注别人的需求，而不是自己的需求\n2. 你了解到习以为常的事，可能 99%的人不知道\n3. 跳出粉丝数量决定论，如果没有一个完整的变现逻辑，大 V 也只能靠一些小广告，但是老实说广告的变现效率挺低的\n\n除了  \n![[《爆款小红书：从零到百万粉丝的玩赚策略》#变现 |小红书变现]] 中提到几种\n\n扩展一下，课程变现不一定要自己去开训练营，也可以是链接别人的，虽然收益没有自己做多，但是你可以横向发展\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%A4%E5%9F%83%E5%8F%8A":{"title":"古埃及","content":"\n# 古埃及\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230130110310.png)\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%A4%E5%B8%8C%E8%85%8A":{"title":"古希腊","content":"\n## 古希腊的科学\n\n真正意义上的[[科学]]，其实是由古希腊文明发展出来的。\n\n古希腊发展出科学，有两位科学家扮演了重要的角色，他们分别是古希腊的科学家[[泰勒斯]]，以及随后的数学家和哲学家[[毕达哥拉斯]]。他们不仅仅是古希腊，甚至可以说是整个人类构建知识的分水岭。\n\n在毕达哥拉斯之后，古希腊的学者们在他的基础上，开创了一种新的方法获得知识。那就是从已经被证明的结论出发，推导出符合逻辑的新结论，然后一个个新的结论叠加起来，就形成了系统性的学科。当然，这并不是说古希腊人放弃了依靠观测和测量获得知识的做法，而是说他们多了一条新的途径\n\n### 为什么是古希腊？\n\n这里面的原因是多方面的，但是最重要的有三个。\n\n**第一，商业文明给古希腊人带来了自由和闲暇。****今天全世界的科学界都认为，自由和闲暇是过去产生科学和今天发展科学的必要前提条件。**\n\n**第二，古希腊地处地球上气候最舒适的地中海气候带，那里冬暖夏凉，生活相对容易。** 因此古希腊人对物质生活没有太高的要求，每天的饮食就是面包，橄榄油和葡萄酒。但是，他们对于知识的渴望却远远超出其他早期文明。在古希腊人看来，发现一个真理是一件最令人喜悦的事情。据说当初毕达哥拉斯发现了勾股定理之后，杀了一百头牛庆祝。这对很多其他早期文明的人来讲是匪夷所思的\n\n**第三，古希腊人具有其他民族所没有的思辨能力。** 当然，这不是说其他早期的民族没有懂得思辨思维的人，而是说古希腊人的思辨特点最为突出。而这一特点又和他们普遍喜欢辩论有关。古希腊人辩论的话题，既有当时的时政，也有关于自然的奥秘。古希腊甚至出了一些有名的“杠精”，比如提出飞毛腿阿喀琉斯追不上乌龟这个悖论的芝诺。而辩论和较真，也是科学发展不可或缺的一环。\n\n### 古希腊三哲\n\n[[苏格拉底]]和他的学生[[柏拉图]]以及柏拉图的学生[[亚里士多德]]\n\n## [[希波战争]]\n\n## [[伯罗奔尼撒战争]]\n\n这场战争几乎席卷希腊的所有城邦，于是也被一些学者称为“古代世界大战”\n\n## 城邦\n\n[[雅典]]和[[斯巴达]]这两个城邦对古希腊世界几乎起到了决定性的作用。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%A4%E5%BE%B7%E6%9B%BC":{"title":"古德曼","content":"\n# 古德曼\n\n#卡片/人物卡  \n这个人百度百科居然没有\n\n- 国籍：\n- 生平：1954.9.18 -\n- 身份：心理学家，语言学家。\n- 简介：\n\n[[绿蓝问题]]\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%A4%E6%A0%BC%E5%88%97%E5%B0%94%E8%8E%AB%E9%A9%AC%E5%8F%AF%E5%B0%BC":{"title":"古格列尔莫·马可尼","content":"\n# 古格列尔莫·马可尼\n\n古列尔莫·乔瓦尼·马里亚·马可尼（意大利语：Guglielmo Giovanni Maria Marconi，1874 年 4 月 25 日－1937 年 7 月 20 日），意大利工程师，专门从事无线电报设备的研制和改进；1909 年诺贝尔物理学奖得主。\n\n马可尼在 1895 年春季利用电磁波作通信试验，但是向意大利政府请求资助未果。1896 年在英国进行了 14.4 公里的通讯试验成功，并取得专利。1897 年起又进行了一系列的无线电通信实验，他在伦敦成立马可尼无线电报公司。1901 年 12 月 12 日，马可尼的研究小组，在纽芬兰接收到从英国发送出来的第一个横跨大西洋的无线电信号。1924 年受封为侯爵，成为贵族。1932 年发现高频波。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%AF%E5%BE%97%E6%80%A7%E5%90%AF%E5%8F%91%E6%B3%95":{"title":"可得性启发法","content":"\n# 可得性启发法\n\n我们问自己，**人们在想要估计某类事件的出现频率时到底是怎么做的**，这些事件包括“人在 60 岁之后的离婚概率”或“（是否是）危险的植物”等。我们认为这种自问就是启发法。这些问题的答案很简单：从记忆中搜寻这类问题的实例，如果搜寻过程既轻松又顺畅，这些事的发生概率就会被判断为很大。我们将可得性启发法定义为通过“实例呈现在脑中的轻松程度”来判断概率的过程。\n\n## 可得性偏见\n\n容易因为媒体报道的评估而有所改变。\n\n\u003e 以下是他们发现的一个样例：\n\u003e\n\u003e - 中风致死的数量几乎是所有意外事故致死总数的 2 倍，但 80%的受试者却判断意外事故致死的可能性更大。\n\u003e - 人们认为龙卷风比哮喘更容易致死，尽管后者的致死率是前者的 20 倍。\n\u003e - 人们认为被闪电击中致死的概率比食物中毒要小，不过，前者致死率却是后者的 52 倍。\n\u003e - 得病致死是意外死亡的 18 倍，但两者却被认为概率相等。\n\u003e - 意外死亡被认为是糖尿病致死率的 300 倍，但真正的比率却是 1：4。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%AF%E8%AF%81%E4%BC%AA%E6%80%A7":{"title":"可证伪性","content":"\n# 可证伪性\n\n#卡片/术语卡\n\n## 简介\n\n从某个意义上说，可证伪性非常直接明确。它是对待理论的一种态度。具体来说，对某个具体理论，当你觉得存在一种“这个理论也许不正确”的可能性时，你所持的态度就是可证伪性。\n\n复杂因素：\n\n- 面对不正确的预言时，通常更合理的做法是摒弃一个或几个辅助假设，而不是放弃整个理论。那么摒弃多少个辅助假设，才算“足够多”，从而让人可以放弃一个理论\n- 书中举例的史蒂芬认为的证据是：以经文为基础的证据（比如新发现的经文，或者对现有经文更新更好的解读，等等）\n- 在这里，非常关键又很有难度的一个命题是，什么样的证据可以算作是有意义的证据。\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%8F%B2%E8%92%82%E5%A4%AB%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0":{"title":"《 史蒂夫·乔布斯传 》","content":"\n# 《 史蒂夫·乔布斯传 》\n\n# 元数据\n\n\u003e [!abstract] 史蒂夫·乔布斯传\n\u003e - ![ 史蒂夫·乔布斯传|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/327/217327/t7_217327.jpg)\n\u003e - 书名： 史蒂夫·乔布斯传\n\u003e - 作者： 沃尔特·艾萨克森\n\u003e - 简介： 史蒂夫·乔布斯是一位极具创造力的企业家，史蒂夫·乔布斯有如过山车般精彩的人生和犀利激越的性格，充满追求完美和誓不罢休的激情，史蒂夫·乔布斯创造出个人电脑、动画电影、音乐、手机、平板电脑以及数字出版等6大产业的颠覆性变革。史蒂夫·乔布斯的个性经常让周围的人愤怒和绝望，但其所创造出的产品也与这种个性息息相关，全然不可分割的，正如苹果的硬件和软件一样。两年多的时间，与史蒂夫·乔布斯40多次的面对面倾谈……\n\u003e - 出版时间 2011-10-01 00:00:00\n\u003e - ISBN： 9787508630069\n\u003e - 分类： 经济理财-商业\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第五章 Apple I\n\n- 📌 这让乔布斯很不高兴，他埋怨道：“我们可没有多余的芯片。”事实的确如此。他把霍姆斯调到了厨房桌子上去负责记账和文书工作，他自己负责焊接。他们做完一块电路板后，就交到沃兹尼亚克手中。“我会把装好的主板连接上电视机和键盘进行测试，看看能不能工作，”他说，“如果能工作了，我就把它装进盒子里，如果不能的话，我还要找出哪只管脚没插好。”保罗·乔布斯也停下了自己修理汽车的副业，这样一来苹果公司的一帮人就能占用整个车库了。他在车库里放了一张长长的旧工作台，在他刚弄好的石膏板墙上挂了一张电脑示意图，还装了一排贴好标签的抽屉用来放零件。他还用好几台加热灯搭了一个高温箱，这样就可以测试主板在高温下连夜运转的状态。每当他的儿子脾气爆发的时候（这是很常见的现象），保罗·乔布斯就会把自己的冷静传输给他一些。 ^217327-9-12106\n    - ⏱ 2019-10-28 17:21:13\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n有的人注定成功 ^16142247-7cEZAf3G4  \n⏱ 2019-11-05 23:42:23\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%90%83%E9%9D%92%E8%9B%99":{"title":"吃青蛙","content":"\n# 吃青蛙\n\n你有没有过这种经历：  \n手上在做别的事情，脑海里却时常闪过一些放不下的念头：可能是一个任务、一个问题，或者一些难以介怀的事情。它们总在你不经意时闯入脑海，一直难以彻底消除。  \n比如：  \n下星期就要提交方案，但还差一个重要的 idea 没确定；  \n大后天有个重要的演讲，一直胡思乱想，觉得自己没准备好；  \n又或者，半个月后就是纪念日了，但还没想好买什么；  \n这些萦绕在脑海中的烦人问题，就称为「青蛙」∶ 它们未必是最重要的，未必是最紧急的，但却一直让  \n你心神不宁。  \n这种情况应该如何处理呢？一个建议就是：  \n在每一天的工作里，优先去处理它们。  \n这就叫做「吃青蛙」。如果说有一个最有效的[[时间管理]]方法，那一定非这一条莫属。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%90%88%E8%82%A5":{"title":"合肥","content":"\n# 合肥\n\n## 人情味\n\n2022.5.12，安徽省合肥市召开了今年第 50 次防疫工作会。会议上，合肥市委书记虞爱华说，无论是来的客人，返的家人，都欢迎，绝不拒之门外。包括来自中高风险地区的人员，无论是否提前报备，都随时可以光明正大来：  \n***不需要翻越高速护栏、藏匿于车子后备厢、伪造行程码。***\n\n- 他要求合肥的医院就算停诊也不能停急诊，不管有没有核酸报告，都要接待危重病人：\n- 虞书记说全市各县区不要搞“土政策”毁了全市一盘棋。\n- 比如他提到因为疫情暂停的公共交通要全部恢复运营，有的学校规定学生两周才能出一次校门，明显不妥。\n- 关于在校学生、失能老人、抗疫前线的志愿者相关的内容，虞书记讲得都很具体。比如要求机关直属公务员尽可能下沉到一线，减轻志愿者的压力，让他们合理排班，充分休息：***要让好心人有好报。***\n- 针对老年人，则要求排查全市 4000 多个小区的每一户，对失能老人的用药，食物物资配送，要做到不漏一户。\n\n## 数据\n\n- 2021，合肥常住人口增加了 9.5 万，GDP 挤进了全国 20 强。\n","lastmodified":"2023-09-18T14:54:47.522454387Z","tags":null},"/%E5%90%89%E5%B0%94%E8%BE%BE%E8%AF%BA%E5%B8%83%E9%B2%81%E8%AF%BA":{"title":"吉尔达诺·布鲁诺","content":"\n# 吉尔达诺·布鲁诺\n\n1600 年 2 月 17 日，吉尔达诺·布鲁诺（Giordano Bruno）被绑在罗马的鲜花广场上，被活活地烧死了。他的舌头被事先钉住，以防他临死前喊出什么异端的口号来。尽管这样，布鲁诺的句子还是流传了四百年而依旧震撼人心：你们在宣判的时候，比我听到判决时还要恐惧。\n\n## 并不是因为维护日心说而死\n\n对于布鲁诺的审判长达 8 年之久，他当真是因为坚持科学观点而受审的吗？根据学者们的研究，宗教裁判所先后对布鲁诺提出的指控足有 40 项之多，但其中的大部分还是关于神学和哲学方面的。例如，布鲁诺怀疑三位一体学说，否认圣母玛利亚的童贞，认为万物有灵，怀疑耶稣的生平事迹，对于地狱和犯罪的错误看法等，也包括他的一些具体行为，如亵渎神明、侮辱教皇、试图在修道院纵火、研究和施行巫术，等等。对于宇宙和太阳行星的看法当然也包括在其中，但远非主要部分。\n\n## 对日心说的维护也不是科学上的 理由\n\n布鲁诺支持[[尼古拉·哥白尼]]的日心说，是否出自科学上的理由呢？这更是一个牵强的说法。从任何角度来看，布鲁诺都很难称得上是一个“科学家”。他认为太阳处在中心地位，更多的是出自一种自然哲学上的理由，而绝非科学上的。布鲁诺甚至在著作中评述说，哥白尼的局限就在于他过分拘泥于数学中，而无法把握真正的哲学真理。  \n在科学史界有一种非常著名的看法：布鲁诺对于日心体系的支持，根源在于赫尔墨斯主义（Hermeticism）对其的深刻影响。赫尔墨斯主义是一种古老的宗教，带有强烈的神秘主义、泛神论和巫术色彩。这种宗教崇拜太阳，而哥白尼体系正好迎合了这种要求。布鲁诺的思想带着深深的宗教使命感，试图恢复这种古老巫术体系的繁荣。教会最后判了布鲁诺 8 条罪名，具体是哪些现在我们已经无从得知了，**不过很有可能，他主要是作为一个巫师被烧死的**！\n\n当然，我们无意贬低布鲁诺的地位。客观上来说，他无疑也对日心说的传播起到了积极的影响。而他对自由思想的追求，对个人信念的坚持，面对世俗的压力不惜反叛和献身的勇气，则更属于人类最宝贵的精神财富。但我们必须承认的是，在现代科学初生的那个蒙昧阶段，它和巫术、占星术、炼金术、宗教的关系是千丝万缕的，根本无法割裂开来。就算是作为现代科学奠基人的牛顿，他的神学著作和炼金活动也是数不胜数的。我们往往过分强调了那个时代科学与宗教的冲突，反过来又把许多站在教会对立面的人立为科学的典型，这在科学史研究中是非常需要避免的[[辉格式]] 解释（WhigInterpretation）倾向。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5":{"title":"同源策略","content":"\n# 同源策略\n\n跨域，是指浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对 JavaScript 实施的安全限制。\n\n所谓的同源是指，**域名、协议、端口**均为相同。\n\n同源策略限制了以下行为：\n\n- Cookie、LocalStorage 和 IndexDB 无法读取\n- DOM 和 JS 对象无法获取\n- Ajax 请求发送不出去\n\n| URL                                               | 结果 | 原因                                |\n| :------------------------------------------------ | :--- | :---------------------------------- |\n| `http://store.company.com/dir2/other.html`        | 同源 | 只有路径不同                        |\n| `http://store.company.com/dir/inner/another.html` | 同源 | 只有路径不同                        |\n| `https://store.company.com/secure.html`           | 失败 | 协议不同                            |\n| `http://store.company.com:81/dir/etc.html`        | 失败 | 端口不同 ( `http://` 默认端口是 80) |\n| `http://news.company.com/dir/other.html`          | 失败 | 主机不同                            |\n\n### **CORS**标准\n\n**CORS 是一个 W3C 标准，全称是\"跨域资源共享\"（Cross-origin resource sharing）。**\n\n它允许浏览器向跨源服务器，发出 XMLHttpRequest 请求，从而克服了 AJAX 只能同源使用的限制。\n\n浏览器一旦发现 AJAX 请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。\n\n因此，实现 CORS 通信的关键是服务器。只要服务器实现了 CORS 接口，就可以跨源通信。\n\n分为两种请求，一种是简单请求，另一种是非简单请求。只要满足下面条件就是简单请求\n\n- 请求方式为 HEAD、POST 或者 GET\n- http 头信息不超出一下字段：Accept、Accept-Language 、 Content-Language、 Last-Event-ID、 Content-Type(限于三个值：application/x-www-form-urlencoded、multipart/form-data、text/plain)\n\n如果 Origin 指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。\n\n```http\n   Access-Control-Allow-Origin: http://api.bob.com\n   Access-Control-Allow-Credentials:true\n   Access-Control-Expose-Headers: FooBar\n   Content-Type: text/html; charset=utf-8\n```\n\n上面的头信息之中，有三个与 CORS 请求相关的字段，都以 Access-Control-开头\n\n- **Access-Control-Allow-Origin** :该字段是必须的。它的值要么是请求时 Origin 字段的值，要么是一个\\*，表示接受任意域名的请求\n- **Access-Control-Allow-Credentials**: 该字段可选。它的值是一个布尔值，表示是否允许发送 Cookie。默认情况下，Cookie 不包括在 CORS 请求之中。设为 true，即表示服务器明确许可，Cookie 可以包含在请求中，一起发给服务器。这个值也只能设为 true，如果服务器不要浏览器发送 Cookie，删除该字段即可。\n- **Access-Control-Expose-Headers**:该字段可选。CORS 请求时，XMLHttpRequest 对象的 getResponseHeader()方法只能拿到 6 个基本字段：**Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma**。如果想拿到其他字段，就必须在 Access-Control-Expose-Headers 里面指定。\n\n#### withCredentials 属性\n\n##### 允许服务器读写 cookie\n\n需要注意的是，如果要发送 Cookie，Access-Control-Allow-Origin 就不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie 依然遵循同源政策，只有用服务器域名设置的 Cookie 才会上传，其他域名的 Cookie 并不会上传，且（跨源）原网页代码中的 document.cookie 也无法读取服务器域名下的 Cookie。\n\n##### 非简单请求\n\n非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 PUT 或 DELETE，或者 Content-Type 字段的类型是**application/json**。\n\n**非简单请求的 CORS 请求，会在正式通信之前，增加一次 HTTP 查询请求，称为\"预检\"请求（preflight）。**\n\n```http\nOPTIONS /cors HTTP/1.1\n   Origin: http://api.bob.com  //关键字段是Origin，表示请求来自哪个源。\n   Access-Control-Request-Method: PUT\n   Access-Control-Request-Headers: X-Custom-Header\n   Host: api.alice.com\n   Accept-Language: en-US\n   Connection: keep-alive\n   User-Agent: Mozilla/5.0...\n```\n\n除了 Origin 字段，\"预检\"请求的头信息包括两个特殊字段。\n\n- **Access-Control-Request-Method**：该字段是必须的，用来列出浏览器的 CORS 请求会用到哪些 HTTP 方法，上例是 PUT。\n- **Access-Control-Request-Headers**：该字段是一个逗号分隔的字符串，指定浏览器 CORS 请求会额外发送的头信息字段，上例是 X-Custom-Header\n\n服务器收到\"预检\"请求以后，检查了`Origin`、`Access-Control-Request-Method`和`Access-Control-Request-Headers`字段以后，确认允许跨源请求，就可以做出回应\n\n```http\nAccess-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\n```\n\n- **Access-Control-Allow-Methods**：该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次\"预检\"请求。\n- **Access-Control-Allow-Headers**：如果浏览器请求包括 Access-Control-Request-Headers 字段，则 Access-Control-Allow-Headers 字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在\"预检\"中请求的字段。\n- **Access-Control-Allow-Credentials**：该字段与简单请求时的含义相同。\n- **Access-Control-Max-Age**：该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是 20 天（1728000 秒），即允许缓存该条回应 1728000 秒（即 20 天），在此期间，不用发出另一条预检请求。\n\n一旦服务器通过了\"预检\"请求，以后每次浏览器正常的 CORS 请求，就都跟简单请求一样，会有一个 Origin 头信息字段。服务器的回应，也都会有一个`Access-Control-Allow-Origin`头信息字段。\n\n**CORS 与 JSONP 的使用目的相同，但是比 JSONP 更强大。JSONP 只支持 GET 请求，CORS 支持所有类型的 HTTP 请求。JSONP 的优势在于支持老式浏览器，以及可以向不支持 CORS 的网站请求数据。**\n\n### 跨域的解决办法\n\n#### **jsonp**\n\njsonp 跨域其实也是 JavaScript 设计模式中的一种代理模式。**在 html 页面中通过相应的标签从不同域名下加载静态资源文件是被浏览器允许的，**所以我们可以通过这个“犯罪漏洞”来进行跨域。一般，我们可以动态的创建 script 标签，再去请求一个带参网址来实现跨域通信\n\n虽然这种方式非常好用，但是一个最大的缺陷是，只能够实现 get 请求\n\n```JavaScript\n// create script\nscript = document.createElement(\"script\");\nscript.src = url;\ntarget.parentNode.insertBefore(script, target);\n```\n\n#### CORS\n\n后端配置 CORS 允许跨域即可\n\n#### nginx 反向代理跨域\n\n#### node 代理跨域\n\nnode 中间件实现跨域代理，是通过启一个代理服务器，实现数据的转发，也可以通过设置 cookieDomainRewrite 参数修改响应头中 cookie 中域名，实现当前域的 cookie 写入，方便接口登录认证。\n\n#### **iframe 跨域**\n\n```JavaScript\ndocument.domain + iframe 跨域\nwindow.name + iframe 跨域//window.names属性值在文档刷新后依然存在的能力\nlocation.hash + iframe 跨域\n```\n\n#### **postMessage 跨域**\n\nHTML5 全新的 API\n\n允许跨窗口通信，不论这两个窗口是否同源。\n\n#### WebSocket 协议跨域\n\nWebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。\n\nwebSocket 本身不存在跨域问题，所以我们可以利用 webSocket 来进行非同源之间的通信。\n\n#### 修改快捷方式\n\n谷歌浏览器 快捷方式添加 --args --disable-web-security --user-data-dir\n\n下面的那几种跨域看看就好了,平时主要使用的还是**CORS**、**JSONP**和**代理**\n\n### **Cookie 遵守同源策略吗？**\n\n也有，不过跟 AJAX 的同源策略稍微有些不同：\n\n- 当请求 [qq.com](https://link.zhihu.com/?target=http%3A//qq.com/) 下的资源时，浏览器会默认带上 [qq.com](https://link.zhihu.com/?target=http%3A//qq.com/) 对应的 Cookie，不会带上[baidu.com](https://link.zhihu.com/?target=http%3A//baidu.com/) 对应的 Cookie\n- 当请求 [v.qq.com](https://link.zhihu.com/?target=http%3A//v.qq.com/) 下的资源时，浏览器不仅会带上 [v.qq.com](https://link.zhihu.com/?target=http%3A//v.qq.com/) 的 Cookie，还会带上 [qq.com](https://link.zhihu.com/?target=http%3A//qq.com/) 的 Cookie\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%8E%E5%8F%B0%E7%BB%9F%E4%B8%80%E5%8C%96-Json":{"title":"目前的 json 串","content":"\n# 目前的 json 串\n\n## table\n\n```json\n{\neditable?: boolean | {\nform?: object\nelement?: React.ReactNode | FormType\noptions?: AppOptionType[] | string\nkeepEditing?: boolean\nforceRender?: boolean\ntransformDisplay?(value: any): any\n},\nrender: (val)=\u003e React.Node\n}\n\n```\n\n## form\n\n```typescript\ntype Element = FormType | ElementProps | React.ReactNode | ElementFunc;\n\ninterface FormItemConfig extends ZFormItemProps {\n\telement?: Element;\n\n\tlist?: (\n\t\tfields: FormListFieldData[],\n\n\t\toperation: FormListOperation,\n\n\t\tmeta: {\n\t\t\terrors: React.ReactNode[];\n\n\t\t\twarnings: React.ReactNode[];\n\t\t}\n\t) =\u003e React.ReactNode;\n\n\tchunk?: number | false | Chunk;\n\tgroup?: FormItemConfig[] | FormConfig;\n}\n```\n\n## desc\n\n```ts\n\n{\neditable?: boolean | {\nform?: object\nelement?: React.ReactNode | FormType\noptions?: AppOptionType[] | string\nkeepEditing?: boolean\nforceRender?: boolean\ntransformDisplay?(value: any): any\n},\nrender: (val)=\u003e React.Node\n}\n```\n\n## searchBar\n\n```ts\nexport interface SearchConfig extends SearchItemProps {\n\ttype?: FormType;\n\n\toptions?: string | DefaultOptionType[] | LoadOptions;\n\n\titemProps?: ZFormItemProps;\n\n\t[propName: string]: any;\n}\n\nexport type SearchItemsType = (SearchConfig | React.ReactNode)[];\n```\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%8E%E9%AA%8C%E6%A6%82%E7%8E%87":{"title":"后验概率","content":"\n# 后验概率\n\n**后验概率**是信息理论的基本概念之一。 在一个通信系统中，在收到某个消息**之后**，接收端所了解到的该消息发送的**概率**称为**后验概率**。 **后验概率**的计算要以先**验概率**为基础。 **后验概率**可以根据通过[[贝叶斯定理|贝叶斯公式]]，用先**验概率**和似然函数计算出来 。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%B4%E5%86%9B%E6%9D%A5%E4%BF%A1-%E4%B8%96%E7%95%8C%E6%96%87%E6%98%8E%E5%8F%B2":{"title":"《吴军来信-世界文明史》","content":"\n# 《吴军来信-世界文明史》\n\n# [[轴心时代]]\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E5%90%B4%E6%81%A9%E8%BE%BE-chatGPT-%E6%8F%90%E7%A4%BA%E8%AF%AD%E6%95%99%E7%A8%8B":{"title":"吴恩达 chatGPT 提示语教程","content":"\n## 什么是 LLM\n\n### 基础 LLM\n\n### 指令学习 LLM\n\n## 原则性技巧\n\n### 编写清晰明了的指令\n\n- 清晰不等于简短\n- 将文本和prompt 用符号分割开 可以是``` ```\n    - 可以是 ` ``` `\n    - 也可以是`\"\"\"`\n    - `---`\n    - `\u003cTag\u003e\u003c/Tag\u003e`\n- 要求结构化输出\n- 要求模型检查是否符合要求  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505203046.png)\n- 少样本提示，即在要求模型执行实际任务之前提供成功执行的案例\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505203334.png)\n\n### 给 AI 思考的时间\n\n- 指定完成任务的步骤  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505203552.png)\n- 指导模型自己解决问题，然后比较它的解决方案和学生的解决方案  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505204017.png)  \n ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505204107.png)\n\n### 记住模型的限制\n\n- 模型会编造一些很真实的错误\n  - 避免方法：让他找到引用文章，再追溯到源文件\n\n```\nReducing hallucinations:\nFirst find relevant information,\nthen answer the question\nbased on the relevant information.\n```\n\n## 如何迭代你的 prompt\n\n ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505204721.png)\n\n- 准备好结构化的 prompt\n- 给 AI 足够的思考时间\n- 思考为什么没有很好的回答，增加你需要的 prompt\n- 如此重复迭代\n\n## 对文本进行总结\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230505210116.png)\n\n1. 要有一个明确的目的\n\n## 可以用来做什么\n\n## 最佳实践是什么\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%B4%E6%99%93%E6%B3%A2%E9%81%87%E8%A7%81-2021%E5%BD%B1%E5%93%8D%E6%88%91%E4%BB%AC%E7%9A%84%E5%85%AD%E4%B8%AA%E5%91%A8%E6%9C%9F%E8%B7%A8%E5%B9%B4%E6%BC%94%E8%AE%B2%E5%85%A8%E6%96%87":{"title":"吴晓波：遇见 2021，影响我们的六个周期（跨年演讲全文）","content":"\n## Meatdata\n\n- author：\n- link： [吴晓波：遇见 2021，影响我们的六个周期（跨年演讲全文）](https://mp.weixin.qq.com/s/rN6oOjBr_60-I9r01p1brg)\n- tag： #年终总结\n- date: [[2022-01-04]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 我和我的同事做了这么一张图表，从 1820 年开始算起，到 2021 年的今天，再到预测的未来，中国和美国占全球 GDP 比重的变化图。1820 年，中国的经济总量在全球占比达到 33%，三分之一是咱们家的，如果历史停留在那一刻是多么美好。而美国当年在全球经济中的占比是 2%，存在巨大的落差。\n- 但是你知道，人类其实在那个时候已经进入工业革命了，1776 年瓦特改良了蒸汽机，1776 年亚当 · 斯密出版了[[《国富论》]]，1776 年杰斐逊等人发表了《独立宣言》，现代文明已经在欧洲和美国大地上熊熊燃起。那我们呢？是一个占全球 33% GDP 的最大农业国。然后历史开始转折，接着你看到美国的曲线大幅上升，中国开始大幅下降。到 1890 年代末的时候，美国超越了中国，成为全球第一大经济体。接着它继续往上升，经历一战、二战，中国继续往下行。这条曲线的最低点在 1987 年，中国那一年的 GDP 占全球比重只有 1.58%，低于 1820 年美国的水平。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%90%B4%E6%99%93%E6%B3%A2%E9%A2%84%E8%A7%81-2022K-%E5%9E%8B%E6%97%B6%E4%BB%A3%E7%9A%84%E6%96%B0%E6%B4%BB%E6%B3%95%E8%B7%A8%E5%B9%B4%E6%BC%94%E8%AE%B2%E5%85%A8%E6%96%87":{"title":"吴晓波：预见 2022，K 型时代的新活法（跨年演讲全文）","content":"\n## Meatdata\n\n- author：\n- link： [吴晓波：预见 2022，K 型时代的新活法（跨年演讲全文）](https://mp.weixin.qq.com/s/InU6_fcX1KSptzEQLKs7Hg)\n- tag： #年终总结\n- date: [[ 2022-01-05  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 通过政府政策支持、平台数字化营销解决方案、企业汇聚提供好产品，多方合作，让产品在这个 “K 型时代” 找到它的消费者，这是我们今天所看到的供给端优化的一个生动案例。\n- 你可以说它是坏事，因为芯片没有，你到汽车工厂去看看，都是缺芯片。朋友们，汽车芯片并不难，比电脑、手机芯片容易。原来为什么不做呢？原来德国人做得很好，荷兰人做得很好，瑞士人做得很好，我们干嘛要做呢？突然间断供了。\n- 上海和北京 20 多万户新中产、千万级家庭资产中的近 50% 是不动产，不能再增加了。而在过去的 5 年，中国的基民数量翻了两番，到 2021 年中国资产管理行业的规模超过了 125 万亿元，已经很大了。但如果跟美国比，中国新中产家庭的金融资产只有 48%，美国多少呢？81%。如果跟美国比较，仍然有非常大的增长空间。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%91%A8%E5%A4%8D%E7%9B%98":{"title":"周目标","content":"\n# 周目标\n\n- #Study\n- #Work\n- #Life\n\n# 事件记录\n\n- #Study\n- #Work\n- #Life’\n\n# 灵感记录\n\n- 灵感 1\n- 1\n\n# 反思\n\n## 目标重合度\n\n## 优化的空间\n\n## 方法论总结\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F":{"title":"命令模式","content":"\n# 命令模式\n\n命令模式是最简单和优雅的模式之一，命令模式中的命令（command）指的是一个执行某些特定事情的指令。\n\n命令模式最常见的应用场景是：有时候需要向某些对象发送请求，但是并不知道请求的接收者是谁，也不知道被请求的操作是什么。此时希望用一种松耦合的方式来设计程序，使得请求发送者和请求接收者能够消除彼此之间的耦合关系。\n\n命令模式的由来，其实是回调（callback）函数的一个面向对象的替代品。  \nJavaScript 作为将函数作为一等对象的语言，跟策略模式一样，命令模式也早已融入到了\n\nJavaScript 语言之中。运算块不一定要封装在 command.execute 方法中，也可以封装在普通函数中。  \n函数作为一等对象，本身就可以被四处传递。即使我们依然需要请求“接收者”，那也未必使用面向对象的方式，闭包可以完成同样的功能\n\n**跟许多其他语言不同，JavaScript 可以用高阶函数非常方便地实现命令模式。命令模式在 JavaScript 语言中是一种隐形的模式。**\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%92%B8%E9%B1%BC%E4%B9%8B%E7%8E%8B":{"title":"咸鱼之王","content":"\n金砖别乱花，包括不限于：盐场不加速，不买小鱼干，尽量不调科技，除宝箱外不买不打折的，不去花金砖刷新黑市，江湖黑市只买两个招募和宝箱，除非你普通杆子实在完不成月任务才买鱼竿。  \n竞技场尽量混低一级的，拿第一，比高一级的拿的宝箱，金砖要多\n\n然后来说一下攒金鱼期间攒资源的先后顺序：招募令不考虑。宝箱积分—＞金砖—＞鱼竿\n\n直到金砖攒够21w\n\n- 俱乐部 boss，吕布（或其他主力），孙策，鲁肃，太史慈，贾诩的阵容可以获得高分。\n- 鱼竿凑足320/160再使用\n- 盐罐子，每天首先秒两个金罐子，秒完之后顺序是银 金，铜，\n\n吕布=\u003e 诸葛=\u003e 公孙\n\n## 阵容\n\n### 推图\n\n常规情况下使用三将阵容:吕布、太史慈、蔡文或者张飞吕布前排1号位，太史慈和蔡文姬后排34号位，\n\n吕布扛不住使用五将阵容:吕布、荀彧、太史慈、蔡文姬、魏延200级，在原三将基础上+苟残和魏延，苟残2号位增加减伤和一定几率的控制，魏延200级尾速控第7小关小boss怒气和一定几率的控制。\n\n**6000关之后常规挂机推图阵容**  \n\n- 常规挂机推图阵容:吕布、荀彧、太史慈、蔡文姬、魏延200 级（魏延200级尾速控第7小关小boss怒气和一定几率的控制。\n- 卡关华佗、董卓这类回血小boss，荀彧换黄月英，董卓可以下玩具打\n- 诸葛、周瑜、小乔这类普攻是群体技能的小boss，魏延换张飞，通过加强控制，尽可能控制住boss，\n- (毒蛇boss、夏侯惊这类毒和灼烧持续掉血的小boss，太史慈和菜鸡换庞统和公孙攒通过公孙攒上阵以及阵亡给吕布挂上双重攻击和减伤，通过上阵庞统为吕布多增加一层乱世buff，加强吕布减伤和攻击力回血。\n- 打单独大boss，魏延200级换貂蝉200级，通过貂蝉普攻和大招都减怒气的技能特效，使boss无法放出技能\n\n### 爬塔\n\n## 灯神挑战\n\n咸鱼之王灯神挑战，四个国家阵容，每天都可以免费扫荡一次，扫荡卷每天可以领3张，建议如果你灯神挑战的层数底，每天领的扫荡卷可以存起来，等开到高层数，扫荡给的万能碎片多时，再使用。\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230910184749.png)\n\n## [[食神题库]]\n\n## 江湖黑市\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230830163718.png)  \n\n## 洗练\n\n[微信公众平台](https://mp.weixin.qq.com/s/MwX67wl1v7so0gxGdw78qg)\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%92%B8%E9%B1%BC%E4%BA%8C%E6%89%8B%E4%B9%A6":{"title":"咸鱼二手书","content":"\n# 咸鱼二手书\n\n第一步， 需要办理出版物经营许可证，参考 [# 如何办理出版物经营许可证](https://articles.zsxq.com/id_xgbhequwts90.html)\n\n# 参考链接\n\n- [二手书 0 分钟科学选品法，借力闲大师实现日赚 300](https://uhk55xjy84.feishu.cn/docx/XQ7xdU4pSot28uxCraac4zHZnkd)\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95":{"title":"哈希算法","content":"\n# 哈希算法\n\n加密哈希函数是一种单向的哈希函数，可以将任意长度的数据映射为固定长度的比特序列。这种“单向性”意味着，如果我们只知道哈希函数的输出值，还原出输入数据在计算上是不可能的。  \n\n要发现可能的输入值，唯一的方式就是暴力搜寻，检查每一个可能的输入是否能得到同样的输出值；便可以找到一些输入能产生同样的哈希值，也不一定就是我们想求的那个初始输入：因为哈希函数是“多对一”的函数。\n\n## 特征\n\n密码哈希函数的五个主要特性：\n\n- **确定性**：同样的输入信息总是会产生相同的输出哈希。\n- **可验证性**：计算任意输入信息量的哈希运算非常高效（线性的计算性能）。\n- **无关联性**：对于输入消息的微小改变（哪怕是只改变一个比特）都会对输出结果的哈希造成巨大的变化，而且这样的变化与之前的消息之间没有任何关联性。\n- **不可逆性**：从哈希反向计算得出输入的原始信息是不现实的，只能通过暴力穷举式的尝试。\n- **碰撞保护性**：几乎不可能找到能够得到同一个哈希输出的两个不同信息。这里的碰撞保护性对于防止伪造以太坊中的数字签名尤其重要。\n\n## 算法\n\n[[Keccak-256]]、\n\n# 参考资料\n\n- [Hashing 入门](https://samwho.dev/hashing/)\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%93%A5%E7%99%BD%E5%B0%BC%E4%BD%93%E7%B3%BB%E9%80%9A%E5%B8%B8%E8%A2%AB%E8%AE%A4%E4%B8%BA%E8%BF%9C%E8%BF%9C%E7%AE%80%E5%8C%96%E4%BA%8E%E6%89%98%E5%8B%92%E5%AF%86%E4%BD%93%E7%B3%BB%E8%80%8C%E4%B8%94%E5%9C%A8%E9%A2%84%E8%A8%80%E5%92%8C%E8%A7%A3%E9%87%8A%E6%96%B9%E9%9D%A2%E6%9B%B4%E8%83%9C%E4%B8%80%E7%AD%B9":{"title":"哥白尼体系通常被认为远远简化于托勒密体系，而且在预言和解释方面更胜一筹。","content":"\n# 哥白尼体系通常被认为远远简化于托勒密体系，而且在预言和解释方面更胜一筹。\n\n#卡片/反常识卡\n\n## 印象\n\n哥白尼体系通常被认为远远简化于托勒密体系，而且在预言和解释方面更胜一筹。\n\n## 正确的认识\n\n这完全是一个错误的认识。哥白尼体系很容易就可以变得像托勒密体系一样复杂，而在预言和解释方面也没有比托勒密体系更好（或更糟）。当有人说哥白尼体系比托勒密体系更为简化且可以给出更好的预言和解释时，他们最有可能想到的其实是开普勒体系，那是一个在哥白尼去世 70 年以后才发展出来的体系，\n\n简言之，在预言和解释经验事实方面，哥白尼体系和托勒密体系几乎没有区别。而在哲学性/概念性事实方面，哥白尼体系更直接明确地尊重了匀速运动事实。\n\n## 例子\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F":{"title":"商业模式","content":"\n如果回顾历史，你会发现，**所有商业模式的进化，本质上都是来自于创造了新的连接的维度，或者在新的维度上创造了新的大量的连接**。                                            \n\n大运河，铁路，高速公路，大航海，航空，电报，电话，互联网，区块链，还有未来可能的脑机接口等等都是开辟了新的连接维度。                                            \n\n船运，货运，空运公司，资本二级和衍生产品市场，电子邮件，浏览器，微博/推特/脸书，等等，都是这些新的连接维度上的实现大规模价值传递的应用\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%95%86%E4%BF%9D":{"title":"商保","content":"\n尝试下商保报销补牙和根管\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9B%9B%E6%96%B9%E8%82%A1%E4%BB%BD":{"title":"四方股份","content":"\n# 四方股份\n\n四方股份由中国首台微机继电保护装置的研制者、工程院首批院士杨奇逊教授创办于 1994 年，公司致力于为智能电网发、输、配、用各个环节以及火电、水电、核电、新能源发电企业、大型工业用户提供产品和解决方案。主营业务是智能发电、智能电网、智能配电、智慧用电等领域，提供以继电保护、自动化、电力电子等技术为核心的产品、技术咨询及系统解决方案。主要产品是输变电保护和自动化系统、发电与企业电力系统、配用电系统、电力电子应用系统。\n\n8 月 31 日，四方股份发布年中报，营收 19.64 亿，同比增长 40.13%，净利润 2.51 亿，同比增长 339.31%，业绩创新高的同时，亮点在于营收结构里面多出了一项新的业务：新能源。上半年新能源营收 3.21 亿，占总营收的 16.36%，在碳中和的大背景下，新能源将会有一段很长时间的快速发展历程，而上了新能源的快车道之后，公司的天花板将被打开，走向更高的台阶\n\n## 雪球分析\n\n[吐血分析](https://xueqiu.com/1538191805/197504222)  \n[业务介绍](https://xueqiu.com/5130429602/197813928)\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9B%BE%E5%B0%94%E6%98%8E%E6%A8%A1%E5%9E%8B":{"title":"图尔明模型","content":"\n图尔明模型由以下几个基本组成部分构成：\n\n1. 数据（Data）：数据是论证的事实、证据或信息的支持。它们提供支持和背景，使论证更有说服力。\n2. 理由（Claim）：理由是你要提出或支持的论点或观点。它是你试图通过论证来证明或支持的陈述。\n3. 理由支持（Warrant）：理由支持是连接数据和理由之间的推理或前提条件。它是用来解释为什么数据支持理由的逻辑桥梁。\n4. 反驳（Rebuttal）：反驳是针对对立观点或异议的论证。它试图驳斥或否定反对方的观点，并加强自己的论点。\n5. 限制（Qualifier）：限制是对理由的修饰或限制条件的陈述。它可以指出理由的适用范围、程度或条件。\n6. 例证（Backing）：例证提供进一步的支持和证明，加强了理由的可信度和可接受性。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9B%BE%E7%81%B5%E5%AE%8C%E5%A4%87":{"title":"图灵完备","content":"\n# 图灵完备\n\n“图灵完备”一词来源于被称为计算机科学之父的英国数学家[[阿兰·图灵]]。1936 年，图灵创建了一个数学模型之上的计算机，这个计算机包含操作符号的状态机，可以从连续的内存（例如无限长度的磁带）中读取和写入这些数据。在这个构想之下，图灵进一步探索关于通用可计算性这个问题的数学基础，这也就意味着求证是否任何问题都可解（图灵的研究试图给出否定答案）。图灵证明了有一类问题是不可解的，特别是著名的停机问题（即给定任意程序和输入，试图证明程序最终是否会停止运行）是不可解的。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9B%BE%E8%B0%B1%E7%9C%9F%E7%9A%84%E6%B2%A1%E7%94%A8%E5%90%97%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E8%A7%86%E8%A7%92%E4%B8%8B%E7%9A%84%E5%8F%8C%E9%93%BE%E7%AC%94%E8%AE%B0-%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB-Obsidian-%E4%B8%AD%E6%96%87%E8%AE%BA%E5%9D%9B":{"title":"图谱真的没用吗？知识图谱视角下的双链笔记 - 经验分享 - Obsidian 中文论坛","content":"\n## Meatdata\n\n- author：\n- link： [图谱真的没用吗？知识图谱视角下的双链笔记 - 经验分享 - Obsidian 中文论坛](https://forum-zh.obsidian.md/t/topic/1425)\n- tag：#\n- date: [[ 2022-01-06  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 尽管如此，双链笔记中的关系图谱仍是一块未被开垦的处女地——大多数笔记方法都未涉及关系图谱的利用，笔记软件的用户也普遍认为复杂、密集的关系图谱除了在朋友圈装逼之外别无他用。\n- 知识图谱的基本组成元素是点和边，点用来指代现实世界中的具体事物（实体），边用来指代事物之间的关系。现实中很多知识都可以用 “实体 - 关系 - 实体” 这样的三元组形式来表示。比如，“亚里士多德出生于 Chaicis”这样一条知识就可以用\u003c亚里士多德，出生地，Chalcis＞的形式来表示。\n- 感兴趣的读者可以到全历史 (allhistory.com) 9 和金融知识图谱 (jd.com) 21 上体验真实的知识图谱。\n- 这也是为什么卡片笔记法强调要通过笔记之间的联系来产生洞见的原因。但遗憾的是，卡片笔记法并未对这种“联系” 给出更有可操作性的说明，且卡片笔记法又局限在传统纸质笔记中，这些因素都使得笔记间的联系难以被揭示和利用。\n- 为了在 Obsidian 中构建知识图谱，我们需要将笔记分成以下两类：实体笔记：实体笔记指的是论述事物、概念、理论或论述其某方面的笔记。这类笔记对应知识图谱中的实体（点）。关系笔记：关系笔记指的是论述多个事物或概念间关系的笔记。这类笔记对应知识图谱中的关系（边）。\n- 1. 先在一篇笔记上记录任何领域都是从一个基本概念开始的。因此，我们在这个领域的笔记也应该从该领域的基本概念出发，从创建这个领域的实体笔记开始。\n- 2. 拆分随着学习的深入，这篇笔记的篇幅将变得越来越大，笔记中开始出现细分主题：比如讨论知识图谱概念的部分、讨论知识图谱分类的部分等等。此时，我们就需要对笔记进行拆分。\n- 3. 为新笔记命名拆分后，我们要给新笔记起一个名字。需要注意的是，命名不能随意命名，随意命名容易造成后期检索上的困难。\n- 4. 链接然后，我们应该在原笔记中链接这篇新创建的笔记。由于新笔记和原笔记是部分和整体的关系，因此其和原笔记间的链接无需详细说明，直接在原笔记中链接新笔记即可\n- 5. 归档完成后将笔记归入相关分类中。\n- 情况 2：发现笔记间的联系做笔记时另一个常见的情景就是发现笔记间存在关系，需要链接。这可以分成以下两种情况。两篇笔记间存在无需说明的关系。这种情况非常常见，比如 “a 是一种 b”、“参见笔记 xxx” 等。由于关系无需详细说明，因此我们在笔记中直接链接即可，比如“a 是一种[[b]]”。两篇笔记间存在需要说明的关系。这常常表现为一篇笔记想要引用另一篇笔记中的内容。比如下图中，我想在 “笔记” 这篇笔记中引用绿色部分的内容。这实际意味着 “笔记” 和“知识图谱”这两篇笔记（或者说其对应的概念）间存在关系。\n- 首先，将需要引用的内容新建为一篇笔记，并对其命名。此处考虑到引用内容主要讲述的是将知识图谱的思想应用于笔记中，因此将新笔记命名为 “知识图谱 - 应用 - 笔记”。\n- 如果关系涉及两个以上的实体，也是如此操作：将引用部分内容独立，然后在相应的实体笔记中分别链接。\n- 不足首先，这种使用方式也继承了知识图谱缺点，即对于表述复杂关系知识的表示能力较差。虽然上文所述方法已尽可能解决这个问题，但实际操作中仍可能存在一定的困难。另外，知识图谱是基于大量数据通过自动或半自动方式构建的，实体间丰富的关系是其应用价值的关键所在。而我们的图谱是阅读之后通过手动记录笔记生成的，记录初期节点少、关系不丰富，难以通过图谱发现深层关系也是必然的。我们只有在阅读了一定量的文章、往笔记软件中输入一定量的信息后，我们才能借助图谱来产生新的观点。否则，创新就是无米之炊了。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%86%E6%98%8E%E5%9B%AD":{"title":"圆明园","content":"\n# 圆明园\n\n[[那时的人民是支持烧的]]\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%88%E9%80%89%E7%BB%84%E4%BB%B6%E4%BC%98%E5%8C%96":{"title":"圈选组件优化","content":"\n# 圈选组件优化\n\n圈选组件时一个多层嵌套的 Form 组件，主要功能就是通过选择标签去圈选用户，可以选择用户属性、标签、操作符和不同类型标签的操作框，还有更深的一层维度选择，相互之间都可以联动。\n\n这是我来搜车做的第一件事，那时候我还没使用过 React，然后他们美其名曰重构完这个你就精通 React 了。\n\n开始一般就不说了，就勉强的实现了功能。\n\n因为深层次，所以对于每个向下传递的 props 都需要进行不断的测试，避免多次重复渲染，其中使用的 Form 自己的 shouldUpdate，useMemo，useCallback，来减少值变动导致的冗余渲染。\n\n在最深层次的 props 传递，则是使用了 useContext 传值。\n\n另外在新建副本的时候，会遇到用户圈选了很多同样的标签的情况，会重复的请求相同的接口，这里我统一在最上层定义了一个 cache 对象，保存已请求过的数据。另外，在新建分群的时候，考虑到可能新建完标签过来，使用缓存会导致没有最新的数据，这里就不使用缓存。\n\n在新建的时候会遇到频繁更新 DOM 的情况, 使用的 useLayouEffct [[Hooks]]。\n\n后来在学习中也发现了类似 [[React Query]]、[[useSWR]] 的库也有这样的缓存思想。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%A8-useEffect-%E4%B8%AD%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE":{"title":"在 useEffect 中请求数据","content":"\n# 在 useEffect 中请求数据\n\n## 竞态问题\n\n在 `useEffect` 中请求数据要面临的第一个问题是**「需要解决竞态问题」**。  \n这里有个开发阶段很难复现的`bug` —— 如果`userID`变化足够快，会发起多个不同的用户请求。\n\n而最终展示哪个用户的数据，取决于哪个请求先返回。这就是**「请求的竞态问题」**。\n\n## 点击返回按钮后重新请求数据\n\n如果用户跳转到新的页面后，又通过浏览器回退按钮回到当前页面，并不能立刻看到他跳转前的页面。\n\n相反，看到的可能是个白屏 —— 因为还需要重新执行`useEffect`获取初始数据。\n\n这个问题的本质原因是：没有初始数据的缓存。\n\n## CSR 时的白屏时间\n\n`CSR`（Client-Side Rendering，客户端渲染）时在 `useEffect`中请求数据，在数据返回前页面都是白屏状态。\n\n## 瀑布问题\n\n如果父子组件都依赖`useEffect`获取初始数据渲染，那么整个渲染流程如下：\n\n1. 父组件`mount`\n2. 父组件`useEffect`执行，请求数据\n3. 数据返回后重新渲染父组件\n4. 子组件`mount`\n5. 子组件`useEffect`执行，请求数据\n6. 数据返回后重新渲染子组件\n\n可见，当父组件数据请求成功后子组件甚至还没开始首屏渲染。  \n这就是渲染中的瀑布问题 —— 数据像瀑布一样一级一级向下流动，流到的组件才开始渲染，很低效。\n\n## 解决方式\n\n- 对于 SSR，可以使用 [[Next.js]]、[[Remix]] 接管数据请求。\n- 对于 CSR，可以使用 [[React Query]]、[[useSWR]] 接管数据请求\n- 如果不想使用这些方案，想自己写，可以参考 `React` 新文档中下面两篇文章：\n  - [使用 effect 同步数据](https://beta.reactjs.org/learn/synchronizing-with-effects#fetching-data)\n  - [你可能不需要使用 effect](https://beta.reactjs.org/learn/you-might-not-need-an-effect#fetching-data)\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%A816%E4%B8%96%E7%BA%AA%E5%89%8D%E4%BA%BA%E4%BB%AC%E5%A4%A7%E9%83%BD%E8%AE%A4%E4%B8%BA%E5%9C%B0%E7%90%83%E6%98%AF%E5%B9%B3%E7%9A%84":{"title":"在 16 世纪前，人们大都认为地球是平的","content":"\n# 在 16 世纪前，人们大都认为地球是平的\n\n#卡片/反常识卡\n\n- 印象：在 16 世纪前，人们大都认为地球是平的。\n- 例子：事实上，至少从古希腊时期（比如柏拉图和亚里士多德生活的约公元前 400 年）开始，受过教育的人中几乎没有人认为地球是平的。\n- 证据：[[克劳狄乌斯·托勒密]] 《至大论》序言\n\n  \u003e 现在，同样地，把地球作为一个整体来看，它明显是球形的，我们应该倾向于这么认为。……很可能看到的情况是，对地球上不同观察者来说，太阳、月亮和其他星体升起和落下的时间并不相同，而且对住在东方的人来说总会早一些，对住在西方的人来说总会晚一些。我们发现对发生在同一时刻的食现象，特别是月食现象，不同观察者记录的时间并不相同……**人们发现这个时间上的差异与不同地点间的距离成比例，因此可以合理地认为地球表面是球形的，其结果就是保持一致的曲率可以保证地球表面每个部分都按比例地跟随地球运动。** 但是，如果这个曲率发生变化，上述一切就不会发生，这在下面的思考中可见一斑。因为，如果它【地球】……是平的，对所有人来说，星星将在同一时间升起和落下……但这似乎并没有发生。可进一步明确的是，地球也不是圆柱体……【因为】我们越靠近北极，南方天空的星星就越少，而北方天空的星星则开始出现。所以，在这里，地球表面不同物体的曲率在物体的倾斜方向上都是相同的，这明确表明了地球每个面都是球形的。再举个例子，**当我们向高山或任何地势高的地方航行时，不管是在什么时候，从什么方向出发，以什么角度前进，我们所能看到的目的地都会一点一点地增加，好像它们是从海里升起来的，而在此之前，由于水面的曲率，它们看起来像是淹没在水中。**（穆尼茨，1957, 108 ～ 109 页）\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%B0%E6%96%B9%E5%80%BA%E7%9A%84%E6%B2%BB%E7%90%86%E4%B8%8E%E6%94%B9%E9%9D%A9":{"title":"地方债的治理与改革","content":"\n# 地方债的治理与改革\n\n1. 第一项就是债务置换。简单来说，债务置换就是用地方政府发行的公债，替换一部分融资平台公司的银行贷款和城投债。这么做有三个好处。\n   - 其一，利率从之前的 7%—8%甚至更高，降低到了 4%左右，大大减少了利息支出，缓解了偿付压力。低利率也有利于改善资本市场配置资金的效率。融资平台占用了大量银行贷款，也发行了大量城投债，因为有政府隐性担保，市场认为这些借款风险很低，但利率却高达 7%—8%，银行（既是贷款主体，也是城投债主要买家）当然乐于做大这个低风险高收益的业务，不愿意冒险借钱给其他企业，市场平均利率和融资成本也因此被推高。这种情况严重削弱了利率调节资金和风险的功能，需要改革。\n   - 其二，与融资平台贷款和城投债相比，政府公债的期限要长得多。因为基础设施投资的项目周期也很长，所以债务置换就为项目建设注入了长期资金，不用在短期债务到期后屡屡再融资，降低了期限错配和流动性风险。\n   - 其三，至少从理论上说，政府信用要比融资平台信用更高，债务置换因此提升了信用级别。\n2. 第二项改革是推动融资平台转型，厘清与政府之间的关系，剥离其为政府融资的功能，同时破除政府对其形成的“隐性”担保。\n3. 第三项改革是约束银行和各类金融机构，避免大量资金流入融资平台。\n4. 第四项改革就是问责官员，对过度负债的行为终身追责。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9C%B0%E6%9D%BF":{"title":"地板","content":"\n大部分耳熟能详的品牌都是代加工\n\n## 选择\n\n### 强化地板\n\n优点：  \n耐磨 耐划  \n变形几率低  \n价格便宜\n\n缺点  \n环保型下限低  \n强化地板不耐潮\n\n### 实木复合地板\n\n#### 新三层\n\n工艺和强化地板一样  \n防潮性优于强化地板  \n环保高于强化地板\n\n#### 真三层\n\n工艺和实木比较像\n\n优点：  \n花色，纹理更自然\n\n缺点：  \n不耐划、价格高\n\n### 实木地板\n\n取决于木材种类  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513203805.png)\n\n实木出厂价 200 一平 买到的话 350 一平比较合理\n\n### SPC 地板\n\n对平整度要求高，通常需要自流平找平  \n脚感较硬\n\n适合老房或者精装房改造，瓷砖上铺地板\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9F%83%E5%B0%94%E6%96%87%E8%96%9B%E5%AE%9A%E8%B0%94":{"title":"埃尔文·薛定谔","content":"\n# 埃尔文·薛定谔\n\n埃尔温·鲁道夫·约瑟夫·亚历山大·薛定谔（1887 年 8 月 12 日－1961 年 1 月 4 日），生于奥地利维也纳，是奥地利理论物理学家，量子力学奠基人之一。  \n1926年提出薛定谔方程，为量子力学奠定了坚实的基础。提出薛定谔猫思想实验，试图证明量子力学在宏观条件下的不完备性。  \n1933 年，因为“发现了在原子理论里很有用的新形式”，薛定谔和英国物理学家保罗·狄拉克共同获得了诺贝尔物理学奖，以表彰他们发现了薛定谔方程和狄拉克方程。\n\n## 薛定谔的猫\n\n论文：《量子力学的现状》  \n在论文的第 5 节，薛定谔描述了那个常被视为噩梦的猫实验。好，哥本哈根派说，在没有测量之前，一个粒子的状态模糊不清，处于各种可能性的混合叠加，是吧？比如一个放射性原子，它何时衰变是完全概率性的。只要没有观察，它便处于衰变/不衰变的叠加状态中，只有确实进行了测量，它才能随机选择一种状态出现。  \n得很，那么让我们把这个原子放在一个不透明的箱子中让它保持这种叠加状态。现在薛定谔想象了一种结构巧妙的精密装置，每当原子衰变而放出一个中子，它就激发一连串连锁反应，最终结果是打破箱子里的一个毒气瓶，而同时在箱子里的还有一只可怜的猫。事情很明显：如果原子衰变了，那么毒气瓶就被打破，猫就被毒死。要是原子没有衰变，那么猫就好好地活着。  \n但这样一来，显然就会有以下的自然推论：当一切都被锁在箱子里时，因为我们没有观察，所以那个原子处在衰变/不衰变的叠加状态。因为原子的状态不确定，所以它是否打碎了毒气瓶也不确定。而毒气瓶的状态不确定，必然导致猫的状态也不确定。只有当我们打开箱子察看，事情才最终定论：要么猫四脚朝天躺在箱子里死掉了，要么它活蹦乱跳地“喵呜”直叫。但问题来了：当我们没有打开箱子之前，这只猫处在什么状态？似乎唯一的可能就是，它和我们的原子一样处在叠加态，也就是说，这只猫当时陷入一种死/活的混合。  \n奇哉怪哉。现在就不光是原子是否是幽灵的问题了，现在猫也变成了幽灵。一只猫同时又是死的又是活的？它处在不死不活的叠加态？这未免和常识太过冲突，同时从生物学角度来讲也是奇谈怪论。如果打开箱子出来一只活猫，要是它能说话，它会不会描述那种死/活叠加的奇异感受？恐怕不太可能。  \n薛定谔的实验把量子效应放大到了我们的日常世界，现在量子的奇特性质牵涉到我们的日常生活了，牵涉到我们心爱的宠物猫究竟是死还是活的问题。这个实验虽然简单，却比 EPR 要辛辣许多，这一次扎得哥本哈根派够疼的。他们不得不退一步以咽下这杯苦酒：是的，当我们没有观察的时候，那只猫的确是又死又活的。\n\n### 总结\n\n所以薛定谔其实是反对这种不确定的随机性咯\n\n## 薛定谔的女朋友\n\n2001 年 11 月，剧作家 Matthew Wells 的新作《薛定谔的女朋友》（Schr ödinger's Girfriend）在旧金山著名的 Fort Mason Center 首演。这出喜剧以 1926 年薛定谔在阿罗萨那位神秘女友的陪伴下创立波动力学这一历史为背景，探讨了爱情、性，还有量子物理的关系，受到了评论家的普遍好评。2003 年年初，这个剧本搬到东岸演出，同样受到欢迎。近年来形成了一股以科学人物和科学史为题材的话剧创作风气，除了这出《薛定谔的女朋友》之外，恐怕更为有名的就是那个托尼奖得主——MichaelFrayn 的《哥本哈根》了。  \n不过，要数清薛定谔到底有几个女朋友，还当真是一件难事。这位物理大师的道德观显然和常人有着一定的距离，他的古怪行为一直为人们所排斥。1912 年，他为了喜欢的一个女孩差点放弃学术，改行经营自己的家庭公司（当时在大学教书不怎么赚钱），到他遇上安妮玛丽之前，薛定谔总共爱上过 4 个年轻女孩，而且主要是一种精神上的恋爱关系。对此，薛定谔的主要传记作者之一——WalterMoore 辩解说，不能把它简单地看成一种放纵行为。  \n如果以上都还算正常，婚后的薛定谔就有点不拘礼节的狂放味道了。他和安妮玛丽的婚姻之路从来不曾安定和谐，两人终生也没有孩子。而在外拈花惹草的事，薛定谔恐怕没有少做，他对太太也不隐瞒这一点。安妮玛丽，反过来也和薛定谔的好朋友之一赫尔曼·外尔（Hermann Weyl）保持着暧昧关系（外尔自己的老婆却又迷上了另一个人，真是天昏地暗）。两人讨论过离婚，但安妮玛丽的天主教信仰和昂贵的手续费事实上阻止了这件事的发生。《薛定谔的女朋友》一剧中调笑说：“到底是波-粒子的二象性难一点呢，还是老婆-情人的二象性更难？  \n”薛定谔，按照某种流行的说法，属于那种“多情种子”。他邀请别人来做他的助手，其实却是看上了别人的老婆。这个女人（Hilde March）后来为他生了一个女儿，令人奇怪的是，安妮玛丽却十分乐意地照顾这个婴儿。薛定谔和这两个女子公开同居，事实上过着一种一妻一妾的生活（这个妾还是别人的合法妻子），这过于惊世骇俗，结果在牛津和普林斯顿都站不住脚，只好走人。他的风流史还可以开出一长串，其中有女学生、演员、办公室文员等，并留下了若干私生子。然而，薛定谔却不是单纯的欲望发泄，他的内心有着强烈的罗曼蒂克式的冲动，按照段正淳的说法，和每个女子在一起时，都是死心塌地，恨不得把心掏出来，为之谱写了大量的情诗。我希望大家不要认为我过于八卦，事实上对情史的分析是薛定谔研究中的重要内容，它有助于我们理解这位科学家极为复杂的内在心理和带有个人色彩的独特性格。  \n最最叫人惊讶的是，这样一段婚姻后来却几乎得到了完美的结局。尽管经历了种种风浪，穿越重重险滩，他和安妮玛丽却最终共守白头，真正像在誓言中所说的那样：执子之手，与子偕老。在薛定谔生命的最后时期，两人早已达成了谅解，安妮玛丽说：“在过去 41 年里的喜怒哀乐把我们紧紧结合在一起，这最后几年我们也不想分开了。”薛定谔临终时，安妮玛丽守在他的床前握住他的手，薛定谔说：“现在我又拥有了你，一切又都好起来了。”薛定谔死后葬在 Alpbach，不久墓地就被皑皑白雪覆盖。四年后，安妮玛丽·薛定谔也停止了呼吸。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%9F%BA%E9%87%91%E7%BB%8F%E7%90%86%E8%AF%B4%E7%9A%84%E8%A7%86%E9%A2%91%E6%90%AC%E8%BF%90":{"title":"基金经理说的视频搬运","content":"\n# 基金经理说的视频搬运\n\n## 去哪搬运\n\n1、youtube 上的内容  \n有能力去 youtube 找一些好的内容，持续的把好的内容搬运到 B 站或其他平台。  \n2、直播内容录屏  \n录屏一些直播内容，把有价值的内容进行录屏搬运发出来。  \n3、抖音等平台上别人搬的内容  \n去抖音、快手或其他平台，找那些比较火的且没有版权的内容搬过来。\n\n## 常见搬运网站\n\n### 搬运用到的下载视频工具\n\n1）综合视频下载工具：微博党（http://weibodang.cn/）  \n目前持 15 个视频/音乐网站的解析下载，特点：支持腾讯 / 土豆、优酷、知乎 2)单平台下载工具  \n(1) B 站视频下载工具：贝贝 bilibili（ https://xbeibeix.com/api/bilibili )  \n（2）微博视频下载工具：http://www.weibovideo.com/  \n(3)快手视频下载工具：https://kuaiyinshi.com/#video-pannel  \n3）国外视频网站  \n(1)Facebook 视频下载：https://fbvideo.to/  \n(2)Instagram 视频下载：https://www.w3toys.com/  \n(3) 推特视频下载：https://twdown.net/  \n(4) youtube 下载：https://en.savefrom.net/24/  \nhttps://www.videograbber.net/\n\n### 剪辑软件\n\n1. PR  \n   普通剪辑的话推荐 PR，有很多模板可以使用  \n   2）迅捷视频剪辑软件  \n   可以自动翻译英文字幕到中文（不太好使），也可以自动语音识别添加的软件。  \n   不过这个软件要买会员才能使用上面的功能\n\n### 去水印软件\n\n快影 APP，这是快手出的剪辑 APP，有个百宝箱，里面就有一键修复功能，可以去除视频中的水印。\n\n## 各视频平台搬运有哪些注意点\n\n目前推荐大家在 B 站、小红书和西瓜视频做搬运。  \nB 站和西瓜视频，这两个平台本身对内容就分为了原创和转载两种类型，所以从某种角度上来说，这两个平台是鼓励大家搬运优质内容的。  \n所以大家在做搬运的时候，可以优先选这两个平台开始做。  \n他们对搬运内容的曝光量还是给的挺多的，我整体体验下来没有感觉到跟原创的曝光有任何区别。  \n小红书这个平台，是不鼓励你做搬运的，但是小红书给的曝光很好，而且曝光流量非常精准。  \n所以我们也不能放过，可以在 B 站和西瓜视频把账号跑通之后，开始做小红书。  \n对于搬运内容到小红书，我当时也踩了不少坑，刚开始搬运内容，老是说我的内容是搬运  \n的，不给我推荐。  \n于是我加上字幕再测一下，发现还是给我的视频打上搬运的标签，不给我曝光。\n\n## 如何引流到公众号和微信号及如何赢得用户信任\n\n我们不能只做搬运，只做视频搬运，虽然会积累很多粉丝，但是粉丝的粘性和对你的信任度不高，没有粉丝的信任你就很难变现。  \n所以，我们还需要引流到公众号和微信号，搭配到原创公众号和微信私域，打通变现这条路。  \n我们通过在公众号发一些我们的原创硬核文章和对朋友圈进行运营，赢得粉丝的信任，为我们后续的变现打下基础。  \n关于如何赢得用户的信任，通过公众号及朋友圈发展示你“专业属性+人物属性+销售属性”的  \n内容，这套打法足够了。  \n其实如何引流？  \n引流的核心就是：说一半留一半。  \n什么意思？就是你通过视频号发动态，把一些有价值的内容或资料分享给大家，但是别全都  \n分享出来，留一半。  \n还想了解另外一半？不好意思，关注公众号或者加微信领取。  \n当然，你还可以通过关注公众号抽奖等方式引流过去，这块玩法很多大家一搜就知道了，我就不再详述。\n\n## 如何运营你的视频账号提升用户对你的信任\n\n很多做搬运的朋友，他们搬完视频就算完了，也不跟观众进行留言互动，也不发动态跟大家交流。  \n这样是不行的，不跟观众互动，那就成了搬运机器了，你就难以获得用户的信任。  \n我们在搬运完视频后，还要去多回复粉丝的留言，然后再时不时的发个动态，展示自己的专业性，这样随着日积月累，你的粉丝忠诚度，不一定比原创号差。  \n还记得之前我说的么，粉丝对你的信任，决定了你能否变现，所以这块大家一定要做好。\n\n## 一些搬运的要点：\n\n1、咱们既然做搬运，也要把视频质量做到极致。  \n很多做搬运的号，各种水印，或者不清楚的内容就网上放，这样是不可取的。  \n我们要做就要严格把控质量，宁缺毋滥，只要是发出来的视频，就要尽量是没有水印的，尽量是高清的，给观众最好的观看体验。  \n然后就是内容呈现上，咱们也尽量做到极致，比如加上字幕，内容发布的及时性等。  \n有时间的话我们也可以进行二次创作，比如剪辑出精华内容呈现给大家。  \n2、把握住搬运内容的边界，围绕账号定位进行搬运，有所为有所不为。  \n不要觉得搬运视频很简单，什么内容火都去搬来发到你的号上。  \n你这样做会严重伤害用户的体验, 也把你的号弄的不伦不类，千万不要这么干。  \n我们要做的就是，把跟你的定位相符的，优质的内容搬运来。  \n其实搬运号跟原创号一样，我们要做的就是给用户带来有价值的内容，那些没价值的内容我们不必发，守住自己的边界。  \n3、注意版权问题。  \n我们在搬运的时候，一定要注意版权问题，不要搬运那些有版权的内容。  \n怎么判断有没有争议的呢，就是看有没有人之前搬运过类似的内容，如果有的话那基本就没问题。  \n对于那些无法判断有没有版权的内容，你可以先试探下，然后备注“侵删”，这样的话即便涉及到版权问题，人家一般也就是联系你删除，问题不会太大。  \n其实，无论是做原创还是做搬运，核心都是为用户提供有价值的内容，有了这个做好自媒体的根基，再把其他细节做到极致，成功就是水到渠成的事。\n\n## 给你看一些搬运做的比较成功的账号\n\n如果你还不知道该搬运哪些内容，该如何做，那么我给你找了几个搬运和变现做的比较好的账号供你参考。  \n1、B 站 UP：鱼 C-小甲鱼  \n专注搬运国外优秀的编程类内容，目前粉丝 76.2 万。  \n变现做的也非常好，售卖编程课程、书籍及相关服务。  \n2、B 站 UP：内森の日常  \n专注搬运和二次创作国外优质的成长类视频，目前粉丝 20.8w。  \n通过创建付费成长类社群，及售卖相关课程进行变现。  \n4、B 站 UP：WithEric  \n专注搬运著名演讲及优质系列课程,  \n目前粉丝 27.2w。  \n通过创建付费社群进行变现。\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%A2%9E%E5%8F%91%E8%B4%A7%E5%B8%81":{"title":"增发货币","content":"\n# 增发货币\n\n还债让债务人不好过，赖账让债权人不好过。所以偿债过程很痛苦，还有可能陷入经济衰退。相比之下，增发货币也能缓解债务负担，似乎还不那么痛苦，因为没有明显的利益受损方，实施起来阻力也小。增发货币的方式大概有三类。\n\n1. 第一类是以[[增发货币]]来降低利率，这是 2008 年全球金融危机前的主流做法。低利率既能减少利息支出，也能刺激投资和消费，提振经济。若经济增长、实际收入增加，就可以减轻债务负担。就算实际收入不增加，增发货币也能维持稳定温和的通货膨胀，随着物价上涨和时间推移，债务负担也会减轻，因为欠的债慢慢也就不值钱了。\n2. 第二类方式是“[[量化宽松]]”，即央行增发货币来买入各类资产，把货币注入经济，这是金融危机后发达国家的主流做法。在危机中，很多人变卖资产偿债，资产市价大跌，连锁反应后果严重。央行出手买入这些资产，可以托住资产价格，同时为经济注入流动性，让大家有钱还债，缓解债务压力。其实只是将其他部门的负债转换到央行身上，但央行可以通过增发货币去接手。  \n   **“量化宽松”的主要问题是难以把增发的货币转到穷人手中，因此难以刺激消费支出，还会拉大贫富差距。**\n3. 第三类增加货币供给的做法是把[[债务货币化]]。政府加大财政支出去刺激经济，由财政部发债融资，央行直接印钱买过来，无需其他金融机构参与也无需支付利息，这便是所谓“赤字货币化”。  \n   “赤字货币化”的核心，是用无利率的货币替代有利率的债务，以政府预算收支的数量代替金融市场的价格（即利率）来调节经济资源配置\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%A4%84%E7%BD%AE%E6%95%88%E7%9B%8A":{"title":"处置效益","content":"\n可以预料，金融研究中已经记录了大量人们售出自己的赢利股、保留亏损股的偏好——这被视为一种偏见，关于此还有一个晦涩难懂的名字：处置效应。\n\n## 实例\n\n### 盈利股和亏损股\n\n[[沉没成本#割掉在盈利的股票]]\n","lastmodified":"2023-09-18T14:54:47.526454408Z","tags":null},"/%E5%A4%9A%E6%99%AE%E5%8B%92%E6%95%88%E5%BA%94":{"title":"多普勒效应","content":"\n# 多普勒效应\n\n#卡片/术语卡\n\n## 简介\n\n这个假设基于所谓的“多普勒效应”：如果光源正在靠近我们，那么光的颜色会偏向光谱的紫端；反过来说，正在远离我们的光线看起来偏红。\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%9A%E7%96%91%E7%9A%84%E6%89%98%E9%A9%AC%E6%96%AF":{"title":"多疑的托马斯","content":"\n# 多疑的托马斯\n\n典出圣经故事，托马斯是耶稣的门徒，他声称除非自己亲眼看到并触摸耶稣的身体，否则他绝不相信人能死而复生。后来人们用“多疑的托马斯”形容怀疑一切，只相信眼见为实的人。\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%9A%E7%A7%8D%E6%A0%BC%E5%BC%8F%E9%A2%84%E8%A7%88":{"title":"多种格式预览","content":"\n## 视频播放\n\nb站采用的是，**m4s 分段存储视频，通过 range 请求动态下载某个视频片段，然后通过 SourceBuffer 来动态播放这个片段。**\n\n**知乎视频并没有在服务器进行分段存储，需要根据 range 来判断读取视频的哪个片段，通过 SourceBuffer 来动态播放这个片段，来实现的快速播放的目的。具体的分段是提前确定好的，会根据进度条来计算出下载哪个 range 的视频。**\n\n另外还有个 快的原因是hevc on.dash  \nDASH 是一种视频流传输协议，允许实时和点播视频进行自适应性流式传输。它通过将视频内容切分成多个小片段，并根据网络条件和设备能力来动态选择合适的片段进行传输，以提供最佳的观看体验。DASH 还支持多个编码格式，其中包括 HEVC。\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%A7%E4%B8%93-2.5%E5%B9%B4-%E5%BE%88%E5%BC%BA":{"title":"大专-2.5年-很强","content":"\n# 大专-2.5年-很强\n\ngithub:https://github.com/Dunging 丨 邮箱: dengging0821@gmail.com ｜ 2.5 丨 Telegram:@luckingforme\n\n## 个人总结\n\n- 熟练运用 React, Typescript, Vite, Node 开发项目\n- 开源爱好者，为 Antd , Vite , unocss 解决过 Issues，提交过上百个 PR，现为 ProComponents Collaborator\n- 看过 React, Vite, SWR, Rollup, Acorn 等多个开源项目部分源码\n- 能负责架构设计，能开发大型项目，有解决框架层面\n- 较强的学习能力和自控能力\n\n## 工作经历\n\n### NFT\n\n职位：前端工程师  \n工作时间：2021.05~至今  \n部门：研发中心  \n地址：深圳\n\n- 负责 ucollex2.0 版本重构开发\n- 负责基于 vite 的 vue3.0 架构维护工作\n- 基于 windicss + vue3.0 开发组件库\n\n### 深圳金猪速运有限公司\n\n职位：前端工程师  \n工作时间：2021.01~至今  \n部门：研发部  \n地址：深圳\n\n- 主要负责金猪速运产品以及金猪数据产品的从 0 到 1 的开发和迭代\n- 使用 Taro,React, Typescript 混合开发小程序\n- 开发 H5 页面嵌入到 App 和小程序中\n- 使用 React, Typescript, Antd, ProComponent 开发后台\n- 抽离 edraw, taro-swr 核心实现发布到 npm 供多项目使用\n- 把控代码格式和质量，代码审查和合并 merge Request\n\n### 深圳驱动新媒体有限公司\n\n职位：前端工程师  \n工作时间：2020-08 ～ 2021-01  \n地址：深圳\n\n- 主要负责新项目的开发和一些还在迭代中的项目需求开发。\n- 采用 uniapp 框架开发“车主特卖”小程序，在其中负责搭建小程序这个项目，封装一些针对微信原生 api 和 promise 化。\n- 负责迭代\"车芝嘛\"小程序，该小程序基于 wepy 开发。另外还负责小程序后台的迭代和 bug 修复。\n\n## 专业技能\n\n1. 熟练使用 React, Typescript, Taro, Umi 开发项目\n2. 熟练使用 Vite,Rollup, Webpack, Babel 等编译工具\n3. 熟练使用 jest,enzyme / React Testing Libray 做代码测试\n4. 掌握 gitlab-ci + docker 自动化部署\n5. 熟悉 pnpm monorepo\n6. 了解 Vue2, Express, Nestjs, Eslint, Prettier, Husky\n\n## 项目经历\n\n### Walle 后台 (项目负责人）\n\n- 负责所有业务线的后台的架构设计搭建，并使用 pnpm monorepo 的方式进行管理，使用 Umi 为基础框架，后升级为 pnpm monorepo 方式进行优化\n- 使用 Authing 做登录鉴权便于和飞书人员数据进行整合\n- 使用 RBAC 模型管理后台权限，权限级别到按钮\n- 使用 Sentry 监控后台\n\n### swr-taro\n\n业务背景是由于公司的小程序对需要对接口进行管理,(替换原来实现的 useRequest, api 不太友好)。考虑到内部的 H5 使用的是 SWR，统一请求管理库对维护者更加友好，所以决定把 SWR 适配到 Taro 中去\n\n1. 查看 SWR 源码，确认迁移方案\n2. 将 SWR 使用到的浏览器原生 api 改为 Taro 的 api\n3. 新增 revalidateOnShow,revalidateOnPulIDown 属性让 SWR 可在页面切换时，下拉时刷新请求 4.发布到 npm，供内部多小程序使用\n\n### 公司内部 Cli 开发\n\n担任角色：负责人  \n项目周期：2020.11 -2021.01\n\n- publish: 针对公司内部的开发流程实现了自动化推送到 build 分支之后自动打下 tag 发给测试\u0026运维部署，并发送消息到钉钉群。\n- create：一键创建整个项目并 install。vue 模板采用 webpack5 搭建完成。使用的技术栈有: Vue2.x 全家桶, typescript4.x, axios, babel, postcss, eslint\n- deploy: 自动部署代码到服务器\n\n## 原图\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220702144530.png)\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%A7%E5%8D%AB%E4%BC%91%E8%B0%9F":{"title":"大卫·休谟","content":"\n# 大卫·休谟\n\n#卡片/人物卡\n\n- 国籍：[[英格兰]]\n- 生平：1711.04.26— 1776.08.25\n- 身份：哲学家、经济学家、历史学家\n- 简介：虽然现代学者对于休谟的著作研究仅聚焦于其哲学思想上，但他最先是以历史学家的身份成名，他所著的《英格兰史》一书在当时成为英格兰历史学界的基础著作长达 60 至 70 年。历史学家们一般将休谟的哲学归类为彻底的怀疑主义，但一些人主张自然主义也是休谟的中心思想之一。研究休谟的学者经常将其分为那些强调怀疑成分的（例如逻辑实证主义），以及那些强调自然主义成分的人。被视为是苏格兰[[启蒙运动]]以及[[西方哲学史]]中最重要的人物之一。\n\n[[归纳问题]]\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0":{"title":"大文件上传","content":"\n## 简易项目\n\n```cmd\ncnpm init egg --type=simple\nnpx create-nuxt-app front\n```\n\n### 项目规范\n\ncommitlint，eslint，prettier，  \nhusky 验证\n\ngit flow actions 验证\n\n### 登录权限\n\n图片验证码 svg-captcha  \n密码加密 md5  \nsession 模式后端 setCookie 前端无需操作鉴权， redis 存储取值\n\njwt 模式 前端登录后 后端将登录信息和过期时间加密成一个 token，前端存入 localstorage 并在 axios 为每个请求携带上 jsonwebtoken\n\nmiddleware 验证头部 header.authorization 的 token\n\n邮箱验证 nodemailer\n\n### 文件上传\n\n浏览器选择文件 =\u003e 上传到服务器 =\u003e 返回上传进度 =\u003e 保存到服务器\n\n#### 为什么要用 multipart/form-data\n\n因为`application/x-www-form-urlencoded`不适合用于传输大型二进制数据或者包含非 ASCII 字符的数据。平常我们使用这个类型都是把表单数据使用 url 编码后传送给后端，二进制文件无法一起编码进去。\n\n而使用`application/json`,后端需要对文本进行特殊的解析，效率较低\n\n#### 多种格式上传\n\n##### FormData\n\n```JavaScript\nconst file = document.getElementById('file').files[0];\nvar form = new FormData();\nform.append('file', file);\n```\n\n##### [[Blob]]\n\n##### [[ArrayBuffer]]\n\n##### [[Base64]]\n\n### [[FileReader]]\n\n[[前端文件上传亮点]]\n","lastmodified":"2023-09-18T14:54:47.530454428Z","tags":null},"/%E5%A4%A7%E6%9F%93%E5%9D%8A":{"title":"《 大染坊 》","content":"\n# 《 大染坊 》\n\n# 元数据\n\n\u003e [!abstract] 大染坊\n\u003e - ![ 大染坊|200](https://weread-1258476243.file.myqcloud.com/weread/cover/6/cpPlatform_3300006595/t7_cpPlatform_3300006595.jpg)\n\u003e - 书名： 大染坊\n\u003e - 作者： 陈杰\n\u003e - 简介： 清朝末年，乞丐陈六子混入通和染坊，改名陈寿亭。寿亭天资聪颖，偷学会了染布的手艺，并出任染坊主槽兼经理。十年后，由于寿亭经营得法，通和染坊成了周村*的染坊。而寿亭并未满足，他同张店大户在青岛创办了大华染厂，走上工业印染之路。“九一八”事变后，寿亭断然拒绝了与日本商人的合作，借着抵制日货运动，以及与上海林氏印染厂的合作，进一步发展为印染界的大亨。怀着一颗强烈的爱国心，并在民族印染同行的大力协助下，一举逼迫汉奸印染厂倒闭。可当战火燃起，面对国家的孱弱，寿亭只能付诸绝望的微笑……\n\u003e - 出版时间 2021-04-01 00:00:00\n\u003e - ISBN： 9787547041420\n\u003e - 分类： 文学-经典作品\n\u003e - 出版社： 万卷出版公司\n\n# 高亮划线\n\n## 第二十一章\n\n- 📌 什么事都得看得开，这钱生不能带来，死不能带走，要是看得过重了，干起买卖来就顾虑重重，买卖也就干不好。 ^3300006595-25-6036-6086\n    - ⏱ 2022-01-24 09:06:56\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A4%A7%E8%84%91%E6%8E%A2%E7%A7%98":{"title":"大脑探秘","content":"\n# 大脑探秘\n\n从器官的层面来看，大脑是通过大脑皮层、间脑、小脑、脑干等部位的分工协调来运作并发挥控制功能。比如，脑干负责控制呼吸、血压、心跳等基本生理活动；而小脑就控制平衡；大脑皮层由额叶、顶叶、颞叶和枕叶四部分构成，主要具有控制性格、学习、记忆等高级心理功能。\n\n记忆和学习有着密不可分的本质联系\n\n## 什么是学习\n\n### 经典分类\n\n- 联合性学习\n  - [[巴甫洛夫的狗]]这一实验把铃铛的声音和喂食联系在一起，就是一个联合型学习的例子；\n  - [[斯金纳的鸽子]]也是类似的，就是让鸽子意识到自己在箱子里做出什么样的动作能够获得食物，相当于把自己的动作和某种结果联系在一起。\n- 非联合性学习\n  - “入鲍鱼之肆，久而不知其臭”，这句话所描述的对臭味的[[习惯]]，也是一种学习\n- 社会性学习\n  - 人的学习存在所谓的模仿成分，根据别人的所作所为对自己产生影响，影响到我们的行为输出也是一种学习\n\n## 什么是记忆\n\n所谓记忆，就是学习过程发生之后的结果，如果能长久存在，我们就认为它是一种记忆。\n\n- 短期记忆\n- 长期记忆\n\n### 记忆在大脑中的表现\n\n根据 [[赫布理论]],我们可以认为当我们进行联合性学习时，海马区中的[[NMDA受体]]会进行同时性监测，相应的神经元之间的突触不断的强化联系，形成永久记忆。\n\n### 遗忘\n\n我们可以认为，一个经验如果想影响我们的行为，那么有三个阶段。首先，要出现学习的过程，即大脑意识到这个经验要以某种方式改变我们的行为。其次，改变发生之后，它会在我们的大脑中的一个很短的时间窗口内持续存在，那我们认为这是短期记忆。最后，如果它能够被反复提及，让大脑认为其是具有长久价值的，从而得以保留，才会形成所谓的长期记忆。\n\n记忆有点像[[V8 垃圾回收]],每件事进入大脑记忆时都会被打上标记，同时大脑存在一种回收机制，但一个记忆被反复提及时，大脑就会认为其是有价值的,从而被保留，形成永久记忆。  \n海马区的任务就是参与学习，更重要的是参与把学习之后的短期记忆转换成长期记忆的过程。\n\n### 记忆擦除和记忆植入\n\n开发一个芯片，直接放在大脑中，人为地帮你把一段记忆或某种学习过程转化成长期记忆。但人类的记忆是很细致的，目前人类没有任何技术可以追踪这么多记忆\n\n开发一个芯片，直接放在大脑中，人为地帮你把一段记忆或某种学习过程转化成长期记忆。模拟海马区的工作\n\n## 如何增强学习\n\n- 提升对一个东西的注意力\n- [[建立科学的学习观#总结]]\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A4%A7%E8%B0%8B%E7%95%A5%E5%AE%B6%E5%BC%A0%E8%89%AF":{"title":"《 大谋略家：张良 》","content":"\n# 《 大谋略家：张良 》\n\n# 元数据\n\n\u003e [!abstract] 大谋略家：张良\n\u003e - ![ 大谋略家：张良|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/240/715240/t7_715240.jpg)\n\u003e - 书名： 大谋略家：张良\n\u003e - 作者： 夔驭\n\u003e - 简介： 出谋划策哪家强，楚汉相争找张良！他是“五世相韩”的富家公子。张良，这个自出生之日起便身处逆境，遭受欺凌的公子哥，却在韩国灭亡之际，孤注一掷，做孤胆英雄，寻找机会刺秦。虽然博浪沙一刺并未成功，但却也因这一刺而改变了他的命运，成为他命运的转折点。\n\u003e\n\u003e - 出版时间 2015-05-01 00:00:00\n\u003e - ISBN： 9787547226230\n\u003e - 分类： 人物传记-历史人物\n\u003e - 出版社： 吉林文史出版社\n\n# 高亮划线\n\n## 江湖占位，有为终会有位\n\n- 📌 隐居十年， ^715240-22-16788-16793\n    - ⏱ 2017-10-26 15:15:14\n\n# 读书笔记\n\n## 江湖占位，有为终会有位\n\n### 划线评论\n\n- 📌 隐居十年， ^16142247-6UuPmAagC\n    - 💭 十年？这不是绿帽吗来个人给我理理 ∑(°□°)!!\n    - ⏱ 2017-10-26 15:15:14\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6UC7NYuuY  \n⏱ 2017-10-31 10:23:31\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A4%A7%E8%BF%9E%E7%94%B5%E7%93%B7":{"title":"大连电瓷","content":"\n# 大连电瓷\n\n特高压。没有问题，越是缺电限电，越要发展特高压，无论是风电、光伏还是水电啥的，都要依赖特高压。特高压里弹性最大的就是那个绝缘子，\n\n[雪球研究](https://xueqiu.com/2022905458/197892044)\n\n## 注意点\n\n大连电瓷这家公司的炒作太厉害了，隔段时间总能来几波，山海关外的企业慎投，不涉及地域，造假太严重了，踩雷率太高；说实话要怪也只能怪前面的企业坑了后面的，信用水平直线拉低。\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A4%A9%E4%B9%8B%E7%82%BD%E5%90%88%E9%9B%86":{"title":"《 天之炽（合集） 》","content":"\n# 《 天之炽（合集） 》\n\n# 元数据\n\n\u003e [!abstract] 天之炽（合集）\n\u003e - ![ 天之炽（合集）|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/347/933347/t7_933347.jpg)\n\u003e - 书名： 天之炽（合集）\n\u003e - 作者： 江南\n\u003e - 简介： 《天之炽》是江南继《龙族》之后又一部精心著就的大型幻想故事，目前连载于《龙文·漫小说》杂志。身为教皇私生子的西泽尔·博尔吉亚从小不被自己的父亲和家族所接纳，成为炽天使骑士后又因营救自己的母亲而被判下流放罪，前往马斯顿王立机械学院学习，却又被一场东西方之间的战争影响而回到权力中心翡冷翠，但世界已远不是当初模样……西泽尔要重召旧部收回失去的一切并带回被迫远嫁的妹妹，必须在“万国盛典”上战胜教皇国全新开发的战甲“普罗米修斯”！\n\u003e\n\u003e - 出版时间 2015-09-01 00:00:00\n\u003e - ISBN： 9787556110155\n\u003e - 分类： 精品小说-玄幻精品\n\u003e - 出版社： 湖南人民出版社\n\n# 高亮划线\n\n## 十字禁卫军(2)\n\n- 📌 女孩们想，大概翡冷翠贵公子还在车上吧？想必是行李太多还在收拾，也许一路辛苦得换身衣服梳梳头发更精神一些？这时浓密的蒸汽仿佛流云般从月台上掠过，隔断了人们的视线，大家只听见男孩在蒸汽中喊：“阿黛尔！”“哥哥我跳下来啦！接住我哦！”紧接着是“叮”的声音。风吹走了蒸汽，就像是舞台上的大幕被拉开，男孩的身边多了一个白色的女孩。世界好像忽然安静了，那女孩像是一团光，照亮了阴霾中的马斯顿。她穿着白色的羊绒大衣，戴着白色的小羊皮手套，那件真丝刺绣的长裙应该是顶级裁缝的手艺，鹿皮雕花的高跟靴子，精致的小帽上系着淡蓝色的蝴蝶结，长长的白纱在风中飞舞。她低头往手心里呵气，雪花落在她长长的睫毛上。 ^933347-12-1551\n    - ⏱ 2018-05-25 18:58:13\n\n## 炽天使的重临(3)\n\n- 📌 一位贵夫人不去赞助艺术和慈善，却来赞助武器开发，这未免不合常理。”“因为我们有共同的敌人。”路易吉说，“那敌人的名字是西泽尔·博尔吉亚！”“我听说过这个名字，红龙，锡兰毁灭者，曾经和龙德施泰特并称的天赋骑士。但他已经废了不是么？根据我们的情报，他非但足足三年没有接触过机动甲胄，而且神经系统受损程度超过80%。他现在能否驱动炽天使都是问题，更别说挑战普罗米修斯了。”“可正是他在马斯顿杀死了你们最优秀的试驾骑士，以绝对的优势。正是因为他那鬼神般的表现，枢机会才给他留了一条生路。”路易吉的笑容中多了一丝恨意，“密涅瓦机关要让西泽尔做新型炽天使的试驾骑士。” ^933347-115-2325\n    - ⏱ 2018-05-28 11:14:11\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6ZMmrH2QX  \n⏱ 2018-05-29 23:01:39\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A4%B8%E5%85%8B":{"title":"","content":"\n","lastmodified":"2023-09-18T14:54:44.074437191Z","tags":null},"/%E5%A4%B8%E5%85%8B%E7%BD%91%E7%9B%98":{"title":"夸克网盘","content":"\n# 夸克网盘\n\n# 夸克资源获取\n\n- [5PB精选](https://link3.cc/5000T)\n- 千千学院1000TB资源 https://docs.qq.com/doc/DTVhmRnV6Y0dKanl2\n- IN资源库 docs.qq.com/doc/DWHVXVEdQSU1jWnl1\n- 趣盘搜 http://pan.funletu.com/\n- 爱盘搜 http://aipanso.com/\n- 从头学电脑 http://space.bilibili.com/481872624\n- [kk网盘资源论坛](https://www.kkpans.com/)\n- [KK小站](https://kkxz.vip/)\n- [3DMGame](https://dldmgame.com/)\n- [5000PB资源](https://skitter-file-8b7.notion.site/a7515f7384a04cb99b1b4667d055b9f1)\n\n# 参考文章\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%8E%E5%9B%A0-%E8%BF%AA%E6%98%82%E8%AE%BA%E7%82%B9":{"title":"奎因-迪昂论点","content":"\n# 奎因-迪昂论点\n\n迪昂论点是科学哲学中非常著名的一个观点，涉及一系列相互交织又颇有争议的命题。首先，简要介绍一下其中的主要人物：[[皮埃尔·迪昂]]（1861—1916）是一位威望颇高的法国哲学家，他主要的研究兴趣是一些非常宽泛的问题，包括关于对科学假设和理论进行验证的问题； [[威拉德·奎因]]（1908—2000）是 20 世纪最有影响力的哲学家之一，他毕生的研究兴趣都在与科学哲学相关的命题上。\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80":{"title":"奥卡姆剃刀","content":"\n# 奥卡姆剃刀\n\n奥卡姆剃刀（意为“简约法则”）是由 14 世纪方济会修士奥卡姆的威廉（William of Occam，约 1287 年至 1347 年，）提出的逻辑学法则，他在《箴言书注》2 卷 15 题说“切勿浪费多余功夫去做本可以较少功夫完成之事”。换言之，如果关于同一个问题有许多种理论，每一种都能作出同样准确的预言，那么应该挑选其中使用假定最少的。尽管越复杂的方法通常能做出越好的预言，但是在不考虑预言能力（即结果大致相同）的情况下，假设越少越好。\n\n## 例子\n\n### 上帝能否看的见\n\n再举个例子：“上帝存在”，“但上帝绝对无法被世人看见”是两个假设，而“上帝其实不存在，所以自然看不见”只用到了一个假设（“看不见”是“不存在”的自然推论），这两者说明的是同样的现象（没人在现实中看见过上帝），所以在没有更多证据的情况下我们最好还是倾向于后者。\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%BD%E5%90%97%E5%A5%BD%E7%9A%84":{"title":"《 好吗好的 》","content":"\n# 《 好吗好的 》\n\n# 元数据\n\n\u003e [!abstract] 好吗好的\n\u003e - ![ 好吗好的|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/996/840996/t7_840996.jpg)\n\u003e - 书名： 好吗好的\n\u003e - 作者： 大冰\n\u003e - 简介： 《好吗好的》——百万级销量作家大冰2016年新书。在寒冷的地方，写就暖心的、真实的、善意的、舍不得读完的江湖故事。本书中的江湖故事，铺满牵引你踏上归程的乡愁、给你盔甲也给你软肋的爱意，有回头是岸的浪子，有深沉执着的兄弟，有既做事又做梦还做自己的男人和兰之猗猗、幽幽其香、五“毒”俱全的美少女壮士。他们的故事是生活，他们真实存在于这个世界上。用能量强大的小宇宙为你冲破刻板冰冷的生活壁垒，让你看到那些你永远无法去体会的生活，见识那些可能你永远都无法结交的人。他们用行动教会你善意对待世界、对待生活、对待他人，同时也善意地对待自己。\n\u003e - 出版时间 2016-08-01 00:00:00\n\u003e - ISBN： 9787540476892\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 湖南文艺出版社\n\n# 高亮划线\n\n## 夺命大乌苏\n\n- 📌 这不是皮鞋吗？仔细一看，还是Made In Wenzhou（温州制造）的 ^840996-3-16900-16936\n    - ⏱ 2017-09-18 23:35:49\n\n# 读书笔记\n\n## 夺命大乌苏\n\n### 划线评论\n\n- 📌 这不是皮鞋吗？仔细一看，还是Made In Wenzhou（温州制造）的 ^16142247-6Tzyo6ZpH\n    - 💭 就很亲切\n    - ⏱ 2017-09-18 23:35:49\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%BD%E5%A5%BD%E8%B5%9A%E9%92%B1":{"title":"《 好好赚钱 》","content":"\n# 《 好好赚钱 》\n\n# 元数据\n\n\u003e [!abstract] 好好赚钱\n\u003e - ![ 好好赚钱|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/936/926936/t7_926936.jpg)\n\u003e - 书名： 好好赚钱\n\u003e - 作者： 简七\n\u003e - 简介： 《好好赚钱》要阐述的核心问题是，理财就是理人生。大部分时候，我们并非受困于物质本身，而是受困于思维的局限。本书帮助读者理清对金钱的困惑，树立正确的金钱观，建立属于自己的理财逻辑系统，通过打理我们的财务，实现被动收入，走上真正的好好赚钱之路。破除认知误区：不要等有钱了再去理财，要跳出金钱的限制去思考自己的人生。并不是有好工作、高收入，未来就会有钱，生活就一定很好。理财不是一夜暴富，要挖掘自己的护城河，选择合适的产品。四大致贫因素：1.意外2.疾病3.无规划的支出4.脆弱的投资体系财富增长的三大要素本金、利率与时间实现财务自由的路径在适当管理日常支出的同时，一直不断地努力提高被动收入。\n\u003e - 出版时间 2018-03-01 00:00:00\n\u003e - ISBN： 9787508685014\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n作为一个外行人看着还是比较简单易懂的 ^16142247-701BA5q4c  \n⏱ 2018-06-08 23:32:49\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%BD%E7%94%A8%E7%9A%84-GPT":{"title":"好用的 GPT","content":"","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A5%BD%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95":{"title":"好问题清单","content":"\n# 好问题清单\n\n## 入门问题\n\n1）请问您觉得这个领域公认的大神是谁？  \n2）这个领域的知识，我还在入门阶段，您推荐我读哪本书/听谁的课？  \n3）您觉得从事这一行业基本能力的要求是什么？\n\n这 3 个问题都是向别人请教如何入门的好问题。因为它们都有一个共性，就是我为回答者提供了特定的限制条件，让我的问题变得很具体，那对方就比较容易入手，来解决我的问题。\n\n## 进阶问题\n\n4）您觉得从事这个行业，最关键的环节有哪些？您都遇到过哪几个重要挑战？您是怎么过来的？  \n5）在您这个领域，您觉得一般人和高手之间最大的区别是什么？  \n6）如果您要带一个徒弟，您会重点教他关注哪几个细节？为什么是这几个细节特别重要？  \n7）最近行业发生了一件 XXX 大事，您能帮我分析分析，这背后到底是怎么回事吗？  \n8）我现在此时此刻已经在做一个新项目。这个事，我有个难点一直没想明白，能不能请您给我指点一下？\n\n已经入门后，可以问这 5 个问题，这 5 个问题想要探索，对方关于自己专业/领域的核心洞察。我会连着问好几个人，对比下他们观点的异同，加深我对那这个行业和领域的了解\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%81%9A%E5%87%BA%E6%B5%B7%E4%BA%A7%E5%93%81":{"title":"如何做出海产品","content":"\n主流论调是你要自己有需求，才能对需求了解的深刻，才能开发好，  \n但很多人误解了这句话的意思，总是从自身身上想到一些自动化的需求。这样很容易陷入拿着锤子去找钉子的情况。\n\n想做好出海产品，第一步学会抄，第二步学会优化，第三步才是进行自己的微创新\n\n## 怎么抄\n\n通过投流网站寻找热点，一般有起色的网站都会广告，至少会投一下自己的品牌词，比如chatbase.co，品牌词就是chatbase，如果你不投，别人发现了，别人可能会投你这个词，然后将流量弄到自己的网站上，这便是所谓的品牌词捡漏投法,详情看[[Mediabuy]]\n\n但用ahrefs看见的数据是片面的，我们结合similarweb看看。\n\n简而言之，判断能不能抄这个操作足够熟练时，你就有一定的能力去判断需求真伪了\n\n## 获取流量\n\n做产品前，还是要想想流量来源。  \n\n一般而已，海外产品开发完，会在[producthunt.com](https://www.producthunt.com/)、[indiehackers.com](https://www.indiehackers.com/)、[twitter.com](https://twitter.com/ayu_liao)上发帖。但这种流量属于慢且不精准的流量。\n\n一般海外的SaaS产品流量来源就几个方面：自然搜索词、外链、广告投流、红人合作。\n\n## 多看且有方法的看\n\n### 什么样的产品你是想看的？\n\n最近6个月流量起来的，有用户付费的产品，然后你就可以结合数据分析工具，将这批产品拉出来去看。\n\n### 判断是否值得去做\n\n可以下一些数据定义，比如竞品不超过10个，最老的竞品运营时间不超1年，流量刚起来的等等。\n\n### 看那些渠道\n\n- [Indie Hackers: 自由职业者论坛](https://www.indiehackers.com/)\n- [生财有术](https://wx.zsxq.com/dweb2/index/group/1824528822)\n- 各种大 V，我还没关注这些\n\n### 不要过于追求技术\n\n做一个创业者，读源码就属于高付出低回报的事，用自己最熟悉的技术栈，最快最小的完成客户的需求最好，当然要注意一些可复用组件和代码的积累。  \n像很多需求，其实不需要很多技术，像花开哥服务快手地推的人群，提供了一些图片上传、短链等服务，都是一些简单的技术，但能带来很多收益。所以，技术人一定不要痴迷技术，技术最终都是为了服务于业务。\n\n## 程序员如何打造受人喜爱的出海工具？\n\n打开[WebsiteTraffic-CheckandAnalyzeAnyWebsiteSimilarweb](https://similarweb.com/ \"WebsiteTraffic-CheckandAnalyzeAnyWebsiteSimilarweb\") 。\n\n1. 选择一个你熟悉的网站去看数据\n2. 去看热门受众兴趣点和竞对网站\n3. 通过一个域名，找到10个以上的新域名\n4. 以此类推，不断发现新域名新工具站\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%81%9A%E5%A5%BD%E7%AC%94%E8%AE%B0":{"title":"如何做好笔记","content":"\n## 做好笔记的三个原则\n\n### 一定要符合你自己的思维\n\n不要原封不动的按照老师讲解的思路，记录下来的要符合自己的思维，下次翻看的时候能根据笔记回忆起  \n读书也是，不要完全根据目录读下来，你想得到的问题的答案不一定在整本书\n\n### 要用自己的语言组织\n\n不要复制黏贴，一定要用自己的话来表达。给自己增加做笔记的摩擦，才能更好的理解知识。你也可以标记清楚，哪些地方是已经理解的，哪些地方还没有理解或者有疑问。\n\n### 笔记必须轻松可检索\n\n最好给你的每段笔记都起一个标题，方便检索。也适合做卡片化的笔记。另外可以通过[[Obsidian Smart Connections]]这种 AI 插件来搜索笔记\n\n## 记笔记的陷阱\n\n### 追求完美的工具\n\n俗话说的好：”差生工具多\"，工具永远是为了你更方便的记录思想的，如果长时间沉迷折腾笔记，而不去记录思想，那岂不是本末倒置了。\n\n像我从印象笔记、有道云、[[Typora]]、[[Notion]]、[[flomo]]、[[Obsidian]]，其中也想折腾过[[我来]]、[[Roam research]]、[[logseq]]等工具。诚然，这些工具有更好的中文支持，或者更细粒度的模块管理，但他们都没有让我更加想要记笔记。每个工具设计出来都有他想要解决的问题，而你还没遇到这个问题的时候就想到换工具，到头了也是只是收获了对这个工具的使用知识。\n\n### 把笔记当成真理来写\n\n它指的是在我们的笔记中只拥有真实、完整、高质量的知识的愿望。在这种情况下，不允许提供虚假、部分或模糊的信息。\n\n拥有这种心态的后果是：\n\n- 我们避免写下自己的想法。由于每个笔记都需要是只有正确信息的最终版本，因此它会立即引发完美主义。当这种情况发生时，我们可能会完全避免写下我们的想法的笔记。\n- 个人笔记被视为一次性的。当我们最终写下我们的想法时，我们只是将它们视为转瞬即逝的笔记\n- 我们所有的长期笔记都是其他人的话。您想用自己的知识贡献来编写内容。然而，你所有的好笔记都是关于其他人的想法的。你只需尝试准确地捕捉作者发表的想法即可。你确实有引文、事实和引文，但你自己的论点在哪里？你的知识在哪里？\n\n过于完美主义，只会让你无法下手，你总是会觉得还没有准备好。事实上，永远也不可能完美的准备的好，你对于一个领域的了解只会是你实践下去，遇到一个一个问题，并找到相应的解决方案后。\n\n### 写文档笔记\n\n文档笔记很容易在一个笔记里包含了大量的想法或者完整的链条，而且没有一个明确的标题。所以让检索起来很麻烦。\n\n解决办法就是拆分成一个个卡片笔记，以想法为标题。\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%81%9A%E5%A5%BD%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%88%86%E4%BA%AB%E4%B8%80%E5%A5%97%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84%E6%96%B9%E6%B3%95_%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%BB_%E6%9C%80%E6%96%B0%E8%B5%84%E8%AE%AF_%E7%83%AD%E7%82%B9%E4%BA%8B%E4%BB%B6_36-%E6%B0%AA":{"title":"如何做好读书笔记？分享一套简洁高效的方法_详细解读_最新资讯_热点事件_36 氪","content":"\n## Meatdata\n\n- author：\n- link： [如何做好读书笔记？分享一套简洁高效的方法_详细解读_最新资讯_热点事件_36 氪](https://www.36kr.com/p/1722999406593)\n- tag：#\n- date: [[2021-12-10]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 读到一个知识点，明明作者已经写得非常好了，文辞优美、表意精确，有什么必要自己重新写一遍呢？再者，自己写的东西，很大概率是不如作者精确的，甚至有可能会出错。把错的东西保留下来，岂不更加有害？但如果是复制和摘抄，那就只是停留在「收集」而已，是起不到任何作用的。为什么读了很多书，却总是感觉没学到什么东西？最常见的原因就是，我们只是把书上的知识「收集」了起来，根本没有进行深入吸收和内化。\n- 认知心理学里面，有一个概念，叫做「加工水平模型」（LOP，Levels of Processing Model，由 Craik 和 Lockhart 提出）。\n- 它告诉我们：是什么决定了信息的储存和提取效率呢？是对信息本身的「加工水平」。\n- 对一段内容进行「信息分离」之后，**你脑海中一定会自然地产生一些想法：可能是对这条笔记的共鸣、感触，也可能是进一步的问题、疑惑、联想到的其他信息，甚至天马行空的灵感火花，等等。这其实才是阅读时，最有价值，也最值得记录下来的东西。** 可惜的是，很多时候，我们往往急于「把书看完」，或者耽于传统教育「被动灌输」的惯性思维，忽视了这些想法的价值，一心埋头于书中去寻章摘句，任由它们转瞬即逝。\n- 相比之下，书里面讲了什么，提供了什么信息，只不过是催生和支撑想法的土壤而已。举个例子：我最近在读一本书《唐代高层文官》（赖瑞和著），这本书是研究唐代官僚体制的集大成作。那么，我有必要把书里的重大历史事件、官员体系等记录下来吗？没有。因为这本书已经帮我整理好了，我为什么还要多此一举呢？查就行了。我要记录的是什么东西？是在阅读这本书过程中，所产生的观点、想法和结论。比如：唐代的宰相其实是一种「使职」，并不是一个实际的岗位。只在有需要时，才让其他官员来兼任。这更像我们所说的「智囊」和「议事会」。像这条内容，我就可以把它记录在「思考」一栏中，然后从书里找到相对应的客观事实，记录在「信息」一栏里。比如：唐代的宰相都没有品级，也没有人员编制；上至一品，下至五品，都有担任过宰相的记录；\n","lastmodified":"2023-09-18T14:54:47.534454448Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%86%99%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0":{"title":"如何写卡片笔记","content":"\n每天阅读这么多篇文章，每篇文章其实都是为了解决一个或者多个问题的疑惑。  \n写下你阅读之后对这边文章的理解，新建一张这个问题的卡片，可以叫[[如何写卡片笔记]]、[[良渚文化遗址的水利系统]]等等。\n\n如何发现这些问题，现在可以让 [[chatgpt]] 进行对文章的总结和摘要，再经过探讨，很容易产生一张卡片。\n\n时常在进行回顾和修改，以及后续阅读别的文献的时候不断的补充和完善每一张卡片。\n\n当卡片积累的足够多的时候，可以进行添加一张索引卡片，将主题汇总。也可以输出产生成一篇篇文章，加深自己对这个话题的认知，这也就是常说的自下到上的写作方式。\n\n具体的流程是这样的：\n\n1. 有一个想表达的核心想法；\n2. 围绕着这个想法，想到什么就先写什么；\n3. 写作的过程中，文章的结构逐渐涌现出来；\n4. 根据涌现的结构，调整卡片的顺序；\n5. 给卡片之间添加过渡，继续写卡片，直至完成文章。  \n\n这里的重点就在于，当你写下每一行文字的过程中，大脑是不会停止思考的，并不是等所有卡片都写好才有结构，一般写到四五成左右，文章的结构就已经涌现出来，在那之后，「补充卡片」和「优化结构」这两个行动是同步进行的。\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BD%E6%97%A5%E8%AF%BE":{"title":"如何写好日课","content":"","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BD%E7%AE%80%E5%8E%86":{"title":"如何写好简历","content":"\n不要犯一些简单的错误，比如一些错别字，只是简单的堆叠技术栈，只是简单的罗列一下写过什么项目，这都是每个人都能写的点。\n\n如果是比较资深的员工，不要写类似 git、jquery 这些技术栈了，这都是基本或者过时的技术，写上去显得没有自己的技术视野。\n\n写在简历上的点，一定是要能将讲 5 分钟以上的点，如果你写上去，而你答的不好是一个减分项。会让人想，是不是你其他的点也是这样的。\n\n项目介绍，尽量少写技术点，能让别人想象到你做的是一个什么样的项目就可以了，如果有直接的链接展示是最好的。\n\n写项目亮点的时候要遵循[[STAR 法则]]，多使用数据来体现你项目的难点和价值。  \n\n要学会思考自己擅长什么，突出自己的优势，挖掘自己的亮点。也许你做过很复杂的动态渲染表单、复杂的审批流、非常复杂的表格报表，这都是你平时需要注意和总结的，能清晰的把你做过的难点讲给别人听。这就是你的优势。比如我自己总结的一些[[前端项目]]难点。\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDprompt":{"title":"如何写好prompt","content":"\n# 如何写好prompt\n\n# 参考资料\n\n- [GPT Prompt编写的艺术：如何提高AI模型的表现力](https://mp.weixin.qq.com/s/N8XnSSdXlIITSig5z1oZCw)\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%88%86%E8%B4%A3":{"title":"如何分责","content":"\n# 如何分责\n\n## 刘润\n\n刘润个人的原则是：**大责在上，小责在下，零责在外**\n\n### 大责在上\n\n**简单来说就是，事儿没做成、没做好，老板、领导、团队负责人，就是第一责任人。**  \n从一个示例讲解：\n\n\u003e **小A。**走在路上，遇到了一位大叔，**阿B。**  \n\u003e 阿B笑盈盈地对小A说，小姑娘，你要去哪里呀？叔叔知道一个特别好玩的地方。我带你去，好不好？  \n\u003e 一听到有好玩的地方，小A立刻就来了兴致。好呀，叔叔。走吧，走吧。  \n\u003e 走了半天，阿B把小A带到了一个四下无人的地方：**没有锁门的工地C。**  \n\u003e 小A一脸茫然地说，叔叔，为什么要带我来这里？这里有什么好玩的？  \n\u003e 阿B说，小姑娘，你看见那座吊塔了吗？那座吊塔上，藏着海盗找了几十年的宝藏嘞。你觉得，你能找得到吗？  \n\u003e 一听到有宝藏，小A立刻就待不住了。她飞奔过去，开始往吊塔上爬。  \n\u003e **结果，“意外”发生了。**  \n\u003e 小A一失足，重重地摔了下来，死了。  \n\u003e 请问，这起事故，是谁的责任？\n\n有三种对错观，也就有三种追责方式。\n\n- **从“法学家”眼里看，这就是阿B的责任。** 但是，你发现没有？这种大快人心的分责方式，是不一定能防止类似案件的下次发生的。\n- “经济学家”站出来说，阿B，固然可恨。**但这件事，是疏于安全防范、没有老老实实把门锁上的，工地C的责任。** 这是因为，整个社会，为了避免小A被阿B诱骗到工地所需要付出的成本，比工地C把门锁上的成本，要高得多得多。\n- 但是，不管是谁受罚，小 A 都不能活过来了。所以，**从个体利益最大化的角度出发，小A只能怪自己。**  \n\n**我们今天不讨论哪一种“更好”，只讨论该怎么“选择”。**\n\n- 如果，你是一名法官、一名评论家，你可以选择第一种。\n- 如果，你是一名规则的制定者、一名架构的设计师，你应该选择第二种。\n- **但如果，你是一名老板、领导、团队负责人、管理者，我建议你选择第三种。**\n\n### 小责在下\n\n**下面的人，只有为细节负责的能力，没有为全局负责的能力。**\n\n小责应该怎么负呢\n\n- 首先，你要 **带头反思**\n- **1）判断好到底是能力出了问题，还是意愿出了问题**\n\n  \u003e 意愿出现问题，可以用激励解决，但不能解决能力问题  \n  \u003e 能力的问题，能流程化的，尽量写进流程。能工具化的，尽量写进白皮书。\n\n- **要求这位售后人员写一份“经验总结”。** 而不是检讨\n- 判断如果下次遇到还是不能解决，该处罚处罚，该分手分手，对双方都好\n\n### 零责在外\n\n**成功多从外部找原因，失败多从内部找原因**\n\n\u003e 因为已经“足够优秀”，网上又只不过是水军和黑稿。那么理论上，除了法务，剩下的人统统都没有价值了。\n\u003e\n\u003e 因为一旦这样归因，你会发现，你什么都做不了了。\n\n**因为人永远只能改变那些自己能够改变的东西。**\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E6%98%AF%E5%90%A6%E6%B5%AA%E8%B4%B9%E6%97%B6%E9%97%B4":{"title":"如何判断自己是否浪费时间","content":"\n判断我们是否在浪费时间的一个方法是问自己是在生产还是在消费。写电脑游戏可能比玩它们浪费时间的可能性要小，而玩我们可以创造东西的游戏比玩不能创造东西的游戏浪费时间的可能性要小。 —— Paul Graham\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%9B%9E%E7%AD%94%E5%A5%BD%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98":{"title":"如何回答好一个问题","content":"\n# 如何回答好一个问题\n\n对待这类概念题，讲究一个四字口诀“讲说理列”，即“讲概念，说用途，理思路，优缺点，列一遍” 。\n\n- 讲概念：用简洁的话说清楚该技术是什么。最好能用一句话描述。\n- 说用途：描述该技术的用途。能够具体结合适合场景，拓展性的描述。\n- 理思路：梳理该技术的核心思路或运作流程。这个地方可深可浅，如果对其有足够深入的了解，建议详细地展开说明。\n- 优缺点，列一遍：对该技术栈的优缺点进行列举。列举优缺点肯定有与其他技术方案横向对比的过程，那么在这个过程中，切忌刻意地踩一捧一，容易引发面试官的反感。\n","lastmodified":"2023-09-18T14:54:47.542454489Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%AF%BB%E6%89%BE%E8%B5%84%E6%BA%90":{"title":"根据种类寻找","content":"\n# 根据种类寻找\n\n# [[资源清单]]\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E5%AF%BB%E6%89%BE%E9%9C%80%E6%B1%82":{"title":"如何寻找需求","content":"\n# 如何寻找需求\n\n对于赚钱这件事，需要刻意练习，养成的思维习惯\n\n在我们普通人看来，赚钱案例太多，而且各不相同，没有什么规律。  \n但其实，如果你看到赚钱案例时，认真思考、分析，就会发现，这些案例都有一些共通之处，有某些相似的原理。  \n如果你能进一步，总结、整理出一些可参考的「清单」，以后遇到新的案例，或者痛点，你就能从这个清单里，找到适合这个案例的方法，根据自己的场景/用户/需求灵活变通，复制拓展出一个和自己能力、资源匹配的产品，就更大概率能成功。\n\n每个赚钱案例，都能通过以下 4 个方面，整理出相应的清单，分别是「需求」「流量」「营销」「变现」。\n\n## 需求\n\n### what？（这个产品满足了用户什么需求？）\n\n### why？（用户为什么会有这个需求？）\n\n[[马斯洛需求金字塔]]\n\n### How to？（如何将需求做成产品？）\n\n - （1）产品在什么平台，用什么形式呈现的？\n - （2）产品有什么功能？\n\n## 流量\n\n### what？（产品流量从哪里来？）\n\n如何知道这个产品的流量获取方式？  \n（1）搜索：在百度、谷歌、微信等各大平台搜索产品名字，会看到一些相关信息，然后从中分析，看它是靠内容营销，还是 SEO，还是投广告。  \n（2）试用产品：有些产品，是靠自身增长机制，这个需要你自己试用一下才知道。比如，老带新、裂变，分享朋友圈等。  \n（3）看行业拆解：如果产品比较火，必然有自媒体写复盘、拆解的文章，查看这个，就更省力。\n\n### Why？（为什么选择这种流量获取方式？）\n\n积累多了，你就会知道，哪类产品，适合用哪种方式引流。\n\n如果你发现某个产品，用了一种不常见的引流方式，效果特别好。你就可以多留意一下，这就是亦仁说的「异常值」，看其他产品是否也能复制，如果能，那就是认知差，你就能靠这个增加优势。\n\n### How to？（具体是如何操作的？）\n\n- 内容营销是怎么写的？\n- SEO 是怎么做的？\n- 广告是投的什么平台，用什么卖点？\n- 如何裂变？\n\n## 营销\n\n### What？（产品如何做营销？）\n\n从什么角度定位，用什么卖点，写什么文案，讲了哪些故事等等。\n\n### Why？（产品为什么用这种营销方式？）\n\n比如，这个产品为什么从这个角度出发，用这个文案，我明明觉得这句话太 low，但为什么他会用，而且效果这么好。  \n当你分析清楚产品营销方式背后的原理，就更容易做到触类旁通，举一反三。\n\n### How to\n\n积累「 [[营销清单]] 」，锻炼你的「用户视角」，你会慢慢知道，一个事情，  \n从什么角度说，用户会更喜欢。  \n用什么语言，用户会更容易接受。  \n讲什么故事，传播度会更大。  \n以后你做产品，就更容易被用户喜欢。\n\n## 变现\n\n### What?（产品如何变现？）\n\n可能是卖流量，也就是接广告。  \n或者是提供付费内容/服务/社群。  \n或者是付费使用高级功能。  \n积累不同类型产品的「变现清单」，以后如果自己做，找到相似的产品，模仿就行。\n\n### Why（为什么用这种变现方式？）？\n\n为什么这个产品采用这种方式变现？\n\n- 这种方法的优势是什么？\n- 为什么不用其他方式？\n- 为什么定这个价格？\n- 能不能用其他价格？  \n  了解为什么，是为了更好的触类旁通，灵活运用。\n\n# 参考链接\n\n[作为普通人，我们该如何挖掘商机？ - 飞书云文档](https://rlp3cigezs.feishu.cn/docx/CWTGdnwBZoreawxpweSc128UnPe)\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%88%90%E5%8A%9F":{"title":"如何成功","content":"\n- 大多数人成功的原因无非是因为他能近距离接触到成功（三度人脉），才能模仿成功。人的主观能动性是有限度的，你能做出的选择，实际上都是环境给你的。\n- 如果环境没有给出相关的选项，就很难找到通往成功的切入点。在面对离自己生活环境很远的新兴事物时，要大胆一些，让它成为自己的选项，给自己一些犯错的记录，也许能够找到突破阶层的缝隙。在这个固化的时代，要让自己先动起来，早懂和玩懂是不一样的命运。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%8A%8A%E5%AD%A6%E5%88%B0%E7%9A%84%E7%9F%A5%E8%AF%86%E7%9C%9F%E6%AD%A3%E7%94%A8%E8%B5%B7%E6%9D%A5":{"title":"如何把学到的知识真正用起来？","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [如何把学到的知识真正用起来？](https://mp.weixin.qq.com/s?__biz=MzAxNTY0NjEzNg==\u0026mid=2247484680\u0026idx=1\u0026sn=fc6a836b6de19ec24fadfa450cbf4dab\u0026chksm=9b81a9dfacf620c9dd8787af25ee27f72ebef740b204159c672f22b372cb70defe25f1577f46\u0026scene=21#wechat_redirect)\n- tag：#\n- date: [[ 2022-02-21  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 这数千条笔记，对我来说，其实相当于，没有什么作用。从此之后，我很少去囤积笔记，我笔记的总数也基本不会超过三位数。我发现，我真正用得到的，也就是这么多。\n- 我们不断地，把收集当成学习，把囤积当成拥有，把浏览当成内化，把信息当成知识。\n- 于是，我们大脑的奖赏回路被激活，我们感受到了快感，大脑认为「我们又得到了新东西」 —— 这种愉悦感，刺激着我们一次次地收集新信息。但与之相比，内化信息的成本，又实在太高太高。一篇正常的文章，要把它读完，起码要十几分钟。如果信息量比较大，时间还会更长。如果涉及到许多不熟悉的领域、概念，要彻底「弄懂」它，只怕要花上几个小时的时间。更别说把它内化，真正用上来。\n- 到这就完了吗？没有。进一步，我会去继续思考：这个实验有没有什么不严谨之处？有没有什么毛病？有没有新的研究成果对其进行了修正、甚至是推翻？那么，我可能会意外发现：喔，原来这个实验的设计者菲利普 · 津巴多先生，后来又向公众发表了一些内容 —— 于是，我会把这些信息，重新补充进去。接着，我会继续思考：现在，这个实验我已经很了解了，那么，我可以把它用在什么地方？比如，我写作的时候，可以用在哪些主题里面，对它进行引用？\n- 如果你想将信息内化为知识，真正把学到的知识用起来，那么不妨给每一条笔记，加上一句「行动」。\n- 举几个例子：你看到了一个陌生的概念，记下来，那么可以同时加上「查询」，告诉自己：我要去查询这个概念的含义。你看到一个商业案例，可以顺手加上「查证」，让自己知道，这个案例未经过查证，有空的时候可以证实一下。读到一篇好文章，可以标上「精读」；精读完后，可能会得到好几个有意思的想法，那么不妨把每个想法写成一条笔记，再分别标上「完善」「应用」「写作」等关键词，把文章本身「拆散」，让它真正成为你的养分。看到一个技巧，可以加上「试用」，告诉自己：不要只是放着不动，而是要亲自动手用用看。用完之后，再把感受和心得写上去，加上「分享」「素材」等关键词，让自己知道：它可以作为一种谈资，或是写作的素材，供自己分享给别人。\n- 我们经常说「断舍离」「极简生活」，但很多人没有意识到，真正需要断舍离的，不是实体物品，而是我们所持有的信息。\n- 太杂乱的信息，只会分散和干扰我们的注意力。我们所要关注的，永远不是「拥有什么」，而是「产出什么」。\n- 不要为没有发生的事情感到可惜。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%8B%86%E8%A7%A3%E4%B8%80%E6%9C%AC%E4%B9%A6":{"title":"什么是知识点","content":"\n读一本书，不要去记住「作者讲了什么」「作者怎么讲」，而是要将书的内容拆散、提取，找到对自己有价值的部分，化为己用。  \n一本书在我眼中，是这样的：它可能包含了 50 个知识点，其中 1 个是作者最主要的论点；4 个是为了支撑它的分论点；15 个散落在各章节，是各章节的主要核心；其余 30 个，作者可能觉得不重要，简单带过。那么，我要问自己的就是：我能从中学习到哪几个知识点？\n\n# 什么是知识点\n\n知识体系是从点到面再到网，你读书都是为了捕获那一个个可以与自身体系产生链接的点。而不是去记住\n\n# 在读书前先思考问题\n\n在读书前思考问题，这个问题可以是你看标题和简介出现的，也可以是之后你想作为谈资的，带着目的性的去阅读，剩下的知识会更多\n\n# 能问自己的问题\n\n我在学习任何一个知识点时，必然会问三个问题：\n\n1. 它是什么？\n2. 它从哪里来？\n3. 它往哪里去？\n\n## 它是什么？\n\n第一个问题，我会去找「同类项」。亦即，从记忆里找到与其相似的概念，弄清楚，它们之间有哪些异同点；这个新的知识点属于什么，不属于什么；是什么，不是什么。\n\n## 它从哪里来？\n\n第二个问题，我会去往上溯源，找到这个知识点的来源：谁提出的？怎么来的？原本是为了解决 / 解释什么的？造成它的原因是什么？等等。我会不断地问「为什么」，来逼近整个逻辑链条的起源。\n\n## 它往哪里去？\n\n第三个问题，我会去往下拓展，去找这个知识点的应用情景。我会去思考，把它放到这个场合下，会怎么样；把它放到那个语境下，又会怎么样。这就是我的「包围式学习」。\n\n# 要有[[批判性思维]]\n\n任何一个领域的发展，都必然不断重复「正 - 反 - 合」的过程 —— 旧的「合」，会成为新的「正」，再进行循环，不断螺旋上升。这就是一次「迭代」。  \n不要对之前学到的知识迷信，人总是会相信自己愿意相信的，不敢去直面所谓的`反` ,更不敢推翻自己。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%8C%91%E9%80%89%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%B9%B3%E5%8F%B0-%E5%89%8D%E7%AB%AF%E7%AF%87":{"title":"如何挑选数据可视化框架及平台 - 前端篇","content":"\n## Meatdata\n\n- author：\n- link： [如何挑选数据可视化框架及平台 - 前端篇](https://zhuanlan.zhihu.com/p/149398216)\n- tag：#\n- date: [[2021-12-27]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 首先我们将数据可视化分成两种大的类型：可视化库，比如 D3、Echarts 等，这些是面向开发者的，开发者可以基于这些库开发可视化应用。可视化平台，比如 Grafana、Superset 等，这些面向分析师和一般使用者，直接拿来分析数据，无需开发。\n- 前端可视化最著名的项目是 D3，它不仅能做出各种可视化效果，还是许多其它图表库的基础，前面说到搜 chart 的结果有 7.6w，而如果改成搜 D3 结果就有 5.6w，可见影响力极广。\n- D3 最早出现在 Mike Bostock 读博期间发表的一篇论文里，它的目的并不是做图表库，而是成为更底层的基础设施，简化数据可视化的开发，它在 API 设计方面参考了 jQuery，使用比如这样的写法 d3.selectAll(\"p\").attr(\"class\", \"graf\")，把 改成 就和 jQuery 一样了。d3.selectAll$\n- 除了类似 jQuery 的链式调用，D3 还有鲜明的特点是将功能拆得非常细，做到了函数级别，从数据解析、转换到布局算法都有提供，这使得开发者可以十分灵活地进行组合，实现各种可视化的展现，这使得 D3 非常适合拿来学习的可视化算法，而且还能很方便地将这些算法整合到自己的项目中。\n- 如果只是想绘制常见图表，倒是没必要直接用 D3，可以看看那些基于 D3 的图表库，比如下面这些：nvd3 早在 2012 年就出现了，但最近更新时间是 2018 年 6 月，尽管之前坚持了 6 年，但还是放弃了，具体原因不清楚，几个核心开发者在 GitHub 上都不活跃了，不过它的故事没结束，下一篇里会有介绍。c3 最早追溯到 2013 年，因为几乎是同时出现的，之前经常拿来和 nvd3 对比，现在看和很多年前没太大差别，从更新日志看这两年基本都在修 bug。vx/Recharts/react-vis/nivo/Victory，这些都是专门给 React 项目使用的图表库，我个人不看好这个思路，一方面是 jsx 写起来比 json 还繁琐，另一方面这种写法的实际收益并不大，还会导致难以使用 canvas 渲染。dc.js 主要是用来做多维分析，特色是支持在前端快速进行不同维度过滤，但这种方案的使用场景有限。billboard.js 是 Naver 开源的，其实是 C3.js 的一个 fork 版本，因为他们公司内部用了 C3.js，实际用的时候发现不少问题，比如不支持 D3 v4，他们提交了 PR 也没人理，就干脆另起炉灶了。Britecharts 提供了类似 D3 的链式调用接口，发版虽然频繁，但每个版本的改进很少，而且目前配置项也很少。ploty.js 在 2012 年就有了，一直都有更新，从功能和项目活跃度看是最好的，代码规模有 9w 多行，远超前面几个，它背后是一家公司，这家公司除了 ploty.js 还有给分析师用的 Dash 应用产品，我们将在下一篇里介绍。\n- 论功能丰富度 ploty.js \u003e nivo \u003e vx，其它都没必要看了，D3 虽然很火，但在专业图表领域能拿得出手的其实只有 ploty.js，而 ploty.js 也并不是只用 D3，它还依赖了 gl-plot2d、regl 等基于 WebGL 的库，因为 D3 的接口基于 DOM，用来操作 SVG 没问题，但无法用来操作 Canvas 和 WebGL，这使得 D3 无法用于大数据量及需要像素级别操作的特效。总体来说 D3 是一款成功的可视化基础设施，它的源码值得学习，但不推荐直接使用它例子开发图表，一方面基于它写的代码上手门槛高，另一方面是它的定位并非图表库，要用的话最好是其它基于 D3 开发的图表库，比如 Plot\n- y.js。\n- 2017 年陆奇加入百度后大力推广开源，ECharts 也在 2018 年进入 Apache 孵化器，开始在国外受到关注，比如 Gitlab 还专门写了篇文章说为什么他们从 D3 换成了 ECharts。\n- ECharts 的配置项相当多，预计超过 600 个，我们的 Sugar 平台中大部分图表是基于 Echarts 实现的，至今还有不少高级配置项还没补齐。如果想配制出漂亮的图表，建议多逛逛 Gallery，可以淘到很多漂亮的效果，只看官方文档是想不到的，\n- Echarts 和 Highcharts 的 API 非常像，很多公司其实是当成了免费的 Highcharts 来用，但 Echarts 其实有不少自己独特的功能，其中最具亮点的就是 Echarts-gl，它能实现三维图表和地球的展示，这点其他开源库基本没有，而其它商业图表都是基于 SVG 的，只能弄仿三维效果，只有 Echarts-gl 是基于 WebGL 做的真三维，可以配置光照、材质、阴影等，还有独家的后期特效功能。\n- Echarts-gl 主要归功于 pissang，最开始听说 pissang 的时候就知道他写了个自己的 WebGL 框架 claygl（之前叫 qtek），作为 WebGL 小白的我没想通为啥有 Threejs 还要自己山寨一个，后来才知道这个框架不简单。\n- 学过三维图形学会知道有两种常见的渲染架构，一个是前向渲染，另一个是延迟渲染，一般来说前向渲染实现起来更简单，但它无法支持大量光源，而延迟渲染实现成本更高，但支持大量光源且适合做后期特效，所以包括 Unity、Unreal Engine 4 在内的主流游戏引擎都主要使用延迟渲染，只有在低端设备下才切换为前向渲染。\n- 然而你翻遍 GitHub 就会发现，在 WebGL 领域 claygl 是唯一支持延迟渲染的，包括 Three.js（尝试过但放弃了）、Babylon.js、Playcanvas 以及各种你没听说过的 WebGL 引擎都不支持，所以它们都会限制光源数量，比如最多 4 个。除了延迟渲染这个独特的亮点，claygl 还内置了 Bloom、SSAO、SSR 等特效，支持动画、GLTF 等，是少数几个功能完整的 WebGL 框架。正是因为在三维图形方面的深入了解，Echarts-gl 能做出的效果远超其他图表库，然而这个巨大的门槛是优点也是缺点，Echarts-gl 的最大问题是了解 WebGL 的前端工程师太少，加上使用自研的渲染引擎导致门槛更高了，这个项目长期都只有 pissang 一个人在提交，我最近给地球加个小特效竟然就成了贡献榜第二。作为一个公司内的开源产品，Echarts 从功能和文档方面都达到了商业产品的水平，还有主题编辑器和大量社区贡献的案例，而且 Echarts 团队在过去 7 年一直都有提交，非常不容易，目前正在规划新的 5.0 版本，将会在动画、数据处理和性能等方面有明显改善，值得期待。\n- Vega 和 D3 一样都出自华盛顿大学的 Interactive Data Lab，这个机构专注于数据交互方面的研究，而 Vega 的目标是做数据可视化的配置语法，你可以基于它配制出各种想要的元素，比如轴线、标注等，虽然 Highcharts/Echarts 的图表也主要是靠一个 options 配置项，但还是需呀依赖 JavaScript 代码来加载数据，而 Vega 做到了只需要 JSON 就能完成所有图表相关的开发，包括数据加载、转换、交互等。\n- G2 是支付宝前端团队开发的，虽然当时 Echarts 已经很成熟了，但支付宝还是选择了自己做了一个，也就是 G2 的前身 acharts，它的 API 和 Echarts 基本类似，后来作者看了《The Grammar Of Graphics》那本书，就调整了方向，开始基于这本书的思路开发 G2，这个 G2 的命名就是这本书名里的两个 G。\n- 《The Grammar Of Graphics》里作者主要是借鉴了面向对象的思想，将图表拆分成了很多组成部分，比如数据源、数据转换、坐标系、图形等，通过将它们组装起来实现各种展现效果，从技术角度倒是不新奇，但这本书通过数学的方式来进行组合和分析，看起来非常高级。\n- G2 中那个看起来奇怪的 写法就是来自那本书，这里的 不是乘法，而是作者自己定义的一种操作符，表示合并，不过因为 JavaScript 不支持操作符重载，导致这里只能用字符串，丢失了类型信息，很容易拼错了都不知道。chart.interval().position('genre*sold');*比起 Echarts 之类的图表库，G2 的定位更接近 Vega，也就是比直接拿来用的图表库低一层，对于想把它当成 Echarts 来用的人来说会觉得上手成本更高，所以 G2 后来又提供了更简化的 G2Plot 专注于普通图表的绘制。\n- 值得一提的是 AntV 团队还弄了很多方向，比如关系图 G6/X6、地图 L7、自动选图 AVA 等，但这些项目大多只有一个人，团队精力可能有点分散了。\n- TradingView 专注做股票类的，似乎很专业，有不少分析 k 线的小工具。\n- 另外还有些 gis 领域的专用可视化库，比如 cesium、deck.gl，但国内对测绘是有规定的，最好直接用百度、高德。\n- 虽然有很多开源图表库，但绝大部分不是已经弃坑就是将要弃坑了，目前真正能用的就只有 ECharts、Ploty.js、Vega 和 G2。\n- Vega 背后是个学术组织，优点投入相对比较稳定，但缺点是可能更关注学术方面的发展，有些在业界里重要但没技术含量的东西就不怎么关心了，比如主题配色、动画、阴影、涟漪等花里胡哨的东西优先级一定最低，像动画功能在 2016 年就说要做了，而作者在几天前说的是有好多功能想做，动画这个先交给我的学生去研究了。所以 Vega 只推荐在内部使用，而对外产品还是需要点花里胡哨的\n- Ploty.js 背后有家公司在专门做这个，代码提交比较稳定，不过作为商业公司，目前似乎主要靠卖另一个开源的 Dash 产品以及咨询服务，后续是否会对高级图表功能收费是个未知数，目前这个图表库知道的人不多，在 npm 上的下载量很低。\n- ECharts 和 G2 虽然是在大的互联网企业里，但实际人力投入很难和专门做这个的商业公司比，G2 团队的情况我不太了解，相对来说 ECharts 的社区力量更大，靠用户贡献的例子远远多于其他图表库，一定程度上缓解了 API 太多的学习成本，而且 Echarts 的 Issues 几乎都有回复，能做到这点的开源库没几个。\n- 后续会不会出现更好的前端图表库？恐怕不会了，前面提到很多图表库的成功背后都赶上了技术变革，从最早 FusionCharts/AnyChart 的 Flash、到 Highcharts 的 SVG/VML、再到 ECharts 的 Canvas，技术栈的不同让它们一出来就有明显优势，所以如果没有新的技术变革，后续新出的图表库将很难超越，只能在特定领域突破，而目前能看到浏览器的下一次图形技术变革只有 WebGPU，虽然它不会像 WebGL2 那样命苦，但和 WebGL 相比，它的主要优势是减少在 CPU 上的时间，更好利用 GPU，这对后续游戏在浏览器上的表现更有利，但用来做图表和 WebGL 比没有明显优势，加上大部分图表是二维的，除非数据点非常多，否则并行渲染优势不大。\n- 图表库商业产品不多，毕竟这个需求很通用，难以差异化竞争，对客户来说都是花钱，为啥不选最好那个？加上有 Echarts 这种赶上商业质量的开源库存在，能满足大部分的需求了，使得商业产品的生存空间有限。\n- 如果选商业产品，国内使用最好在 Highcharts、amCharts 和 AnyChart 之间做选择，因为 FusionCharts 好像还不支持中文，不过需要注意这些产品的地图都有错误，把某个省当成国家了，用的时候需要改一下。\n- 最终在我们的 BI 产品 https://sugar.baidu.com/ 中选择的是 ECharts，它完善的功能帮我们节省了大量工作，实践证明在 BI 这样复杂的图表场景下用 ECharts 也是没问题的，经常是用户想要某个我们还不支持的功能时，我们就去 ECharts 文档里找找，发现竟然有。。。非常感谢 ECharts 团队的多年付出\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%B1%85%E6%B0%91%E7%9A%84%E6%94%B6%E5%85%A5%E5%92%8C%E6%B6%88%E8%B4%B9":{"title":"如何提高居民的收入和消费","content":"\n# 如何提高居民的收入和消费\n\n要提高居民收入和消费，就要把更多资源从政府和企业手中转移出来，分配给居民。改革的关键是转变地方政府在经济中扮演的角色，遏制其投资冲动，降低其生产性支出，加大民生支出。这会带来四个方面的重要影响。\n\n1. 其一，加大民生支出，能改变“重土地、轻人”的城市化模式，让城市“以人为本”，让居民安居乐业，才能降低储蓄和扩大消费。\n2. 其二，加大民生支出，可以限制地方政府用于投资的生产性支出。在目前的经济发展阶段，实业投资已经变得非常复杂，以往的盲目投资所带来的浪费日趋严重，降低了居民部门可使用的实际资源。而且实业投资过程大多不可逆，所以地方政府一旦参与，就不容易退出\n3. 其三，推进国内大循环要求提升技术，攻克各类“卡脖子”的关键环节。而科技进步最核心的要素是“人”。因此地方政府加大教育、医疗等方面的民生支出，正是对“人力资本”的投资，长远看有利于科技进步和经济发展。\n4. 其四，加大民生支出，遏制投资冲动，还可能降低地方政府对“土地财政”和“土地金融”发展模式的依赖，限制其利用土地加大杠杆，撬动信贷资源，降低对土地价格的依赖，有利于稳定房价，防止居民债务负担进一步加重而侵蚀消费\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F":{"title":"如何构建自己的笔记系统？","content":"\n## Meatdata\n\n- author：\n- link： [如何构建自己的笔记系统？](https://www.zhihu.com/question/23427617/answer/1461195696)\n- tag：#\n- date: [[ 2022-01-06  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 1972 年，Divesta 在其研究中指明了笔记的两大作用：存储作用和编码作用 [3]，这开启了学界对“笔记如何帮助学生学习” 这一问题的研究。所谓存储作用指的是笔记的可复习性，即人们可以通过复习笔记来回忆先前所学的内容；而编码作用指的是人们可以通过记笔记这种方式促进思考，加深自己对于所学内容的理解与记忆。随着研究的深入，许多研究者在如何做笔记这一方面给出了许多具有实践指导意义的研究结果，比如：在信息量大的课程中使用电子笔记比手写笔记效果更好；矩阵图、大纲等结构化笔记相比于没有结构的笔记效果更好；描述充分、信息记录完全的笔记效果更好。但是，这些研究多集中于讨论单页的、小篇幅的笔记，并没有讨论如何去构建一个笔记系统、如何在笔记系统中组织笔记等问题，而这些问题恰好是我们在管理个人知识时所遇到的。为了弄清楚这些问题，我们还要再看看其他领域的研究结果。\n- 目前所列举的方法已经可以为我们笔记系统的工作流提供一定的参考：1）有时间的情况下，记笔记要自行叙述，发挥生成效应；2）在条件允许的情况下，笔记应该尽可能的详尽，使得我们遗忘后能有充分的提示线索；3）要通过一定的结构来组织各篇笔记，发挥组织信息的作用，从而增强知识间的联系，让我们知道自己到底学了什么、能解决什么问题；4）通过随机呈现笔记、思考笔记内容来复习。\n- 我们既可以像卢曼一样，将那些确定分类的想法（对之前某一主题的补充、反驳等）放到该主题的分支下，也可以将不确定分类的笔记先攒起来，数量多了再进行一定的整理。\n- 下面，我们可以实践一下。比如，你想就本文做一些笔记（如果本文有幸给你带来了启发）。首先，你应该凭着记忆去回忆本文大概讲述了什么。注意，这里用的是回忆，而不是让你回去翻看，这是利用了生成效应。如果你读得比较仔细的话，你应该可以凭印象列出以下的提纲。列提纲并没有什么工具上的讲究，你可以在思维导图里列，也可以笔记软件里列，甚至可以在草稿纸上列。这里仍以 Obsidian 为例。\n- 随后，你应该按照记忆，尽可能地去把提纲中每个要点补充详细。这里还是利用了生成效应，并且详尽的内容可以保障未来的复习、回忆。当然，这里只是为了举例，你完全可以写得再详细些。\n- 到了这里，我们 “学习” 的阶段就算完成了。但是，真正的学习不应该仅仅局限于记录别人的观点。你在阅读本文时或多或少都会产生自己的想法，准确地说应该是你在阅读本文每个观点时都会产生一定的想法。这些想法可以是认同、启发，也可以是反对与批判。无论想法是什么，你都可以将它们记录下来，放在大纲的相应位置下。这样，一次阅读产生的结构化笔记就完成了。\n- 然后，你就可以把笔记放入自己的笔记图书馆中。不过目前来说，这篇笔记内容过于宏大，包含的主题太多。将这样的笔记放入笔记体系中，一方面可能会造成信息的冗余，另一方面也不利于笔记的归类与调用。比如，未来你可能会在另一篇不同主题的笔记中又记录一些关于笔记的研究内容，由于两篇笔记主题不同，会被分入不同的类目中，这就使得关于笔记研究的内容也会被分到不同的类目中，从而造成了内容的分散。因此，我们应该在尽可能不破坏笔记原有结构的基础上，将知识点抽取出来后再归入相应的分类中。不过需要注意的是，一定要先记完笔记再考虑笔记的整理与分类。因为记笔记也是一种消耗认知资源的过程。如果我们一时间既要关注笔记的内容，又要思考笔记的结构、所属的分类，那么记笔记所消耗的认知资源就会大大增加，这将降低笔记对于学习的促进作用 。\n- 这里提供一下我的思路。除了 Obsidian 外，目前我同时还使用印象笔记和 Zotero，印象笔记用于储存网络文章的原文，Zotero 用于储存论文的原文。如果笔记来源于网络文章，我会直接在笔记中附上一个指向印象笔记的链接，这样我在笔记中点击链接就能自动跳转到印象笔记查看原文（这里没有直接指向原网页是因为原网页很有可能被删除，同时印象笔记会自动抓取原网页的 URL，因此也无需担心找不到原网页链接）。如果笔记来源于论文，我会在笔记中附上指向 Zotero 相关条目的链接，或是直接附上论文的标准引用。\n- 我们之所以会觉得写作很难，是因为我们往往想一次就完成写作的几个步骤：1）从大脑中搜索出文章所需的论点；2）将论点组织成文章的大纲；3）将大纲落实成纸面上的文字。而我们大脑中的知识就好似一张网络，或者说一片散沙，写作时我们往往一时间难以确定我们拥有什么观点（想不起来），这些观点如何与文章主题相关。这意味着我们需要花费一定精力去回想观点，还要花费一定精力将回想起来的观点形成文章的大纲。同时，文章大纲向纸面文字转换也需要花费我们一定的精力。传统写作方式之所以让人觉得困难，就是因为其将回想论点的困难、选择论点的困难、搭建大纲的困难、构思行文的困难全部汇集到了一起，让我们一次解决。因此，如果想降低写作的难度，就要摒弃传统的写作方式，让几种困难分开出现。\n- 显然不是。这里讨论的笔记基本指的是在有充裕时间下做的笔记，课堂笔记、会议笔记的记录时间往往不够充裕，这类笔记的重点应该是尽可能地保存信息，而且是重要的信息。\n- 5 “知识是拿来用的，不是拿来整理的”观点是对的，但不要套到笔记上。我们管理的实际上是软件中的笔记，而非纯粹的知识。脑中的知识固然是拿来用的，但软件中的笔记除了记录之初发挥编码作用外，更多意义在于存储作用。因此，我们才要尽可能地将笔记整理好，以供日后复习使用。\n- 是否可以使用卢曼的方法可以将其作为一种组织细分领域笔记的方法。但主体结构还是要使用专门的图书分类法。但是还是要说一句，其实卢曼的方法并非是知识组织领域中被广为讨论、认可的方法，相关期刊很少文章对其进行论述。卢曼在社会学上的成就不应该和其知识组织方法划等号。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81":{"title":"如何生成二维码","content":"\n## 参考链接\n\n- [Refining AI Generated QR Code](https://antfu.me/posts/ai-qrcode-refine)\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E7%A0%B4%E8%A7%A3%E9%AA%8C%E8%AF%81%E7%A0%81":{"title":"如何破解验证码","content":"\n下面列出几种常见的图片形式验证码：\n\n1. 1. 字母验证码：字母混合数字的组合，要求用户根据图片中的字母和数字进行识别并输入。\n2. 2. 数字验证码：由一组数字组成，要求用户根据图片中的数字进行识别并输入。\n3. 3. 滑动验证码：用户需要按照提示拖动图片中的滑块或者完成一些简单的拼图等操作来完成验证。[[如何破解滑动验证码？](https://mp.weixin.qq.com/s/iK\\_JkVRrh5vIRBjnQbDOyw)](https://mp.weixin.qq.com/s/iK_JkVRrh5vIRBjnQbDOyw)\n4. 4. 变形文字验证码：字母或数字倒立或者扭曲的形式，要求用户对倒立或扭曲的字母或数字进行识别并输入。\n5. 5. 算术验证码：要求用户在图片中计算出两个数字的和或差，并输入正确的结果。\n6. 6. 图片识别验证码：用户需要根据给定的提示，从一组图片中选择符合提示的图片，例如选择带有车辆或路灯的图片等。\n\n\u003e\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E4%BF%A1%E6%81%AFP.A.R.A.-%E6%98%AF%E4%BB%80%E4%B9%88%E5%8F%8A%E5%9C%A8-Notion-%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8":{"title":"如何管理信息：P.A.R.A. 是什么及在 Notion 中的应用","content":"\n## Meatdata\n\n- author：\n- link： [如何管理信息：P.A.R.A. 是什么及在 Notion 中的应用](https://mp.weixin.qq.com/s?__biz=MzAwOTUwNzI1Ng==\u0026mid=2247483812\u0026idx=1\u0026sn=89414301b153d6165eb7feea9df1207b\u0026chksm=9b5fd973ac285065f3a5308e0316307c816cca83535c765ab4b4a79b81e5cf6754e332dcf4ff\u0026mpshare=1\u0026scene=1\u0026srcid=\u0026sharer_sharetime=1591185871912\u0026sharer_shareid=48387c294460ce9f025e4d1b2410155b\u0026key=4b19ec3f0bdf89b5676b1fba422dd392a3d0dde3cb9345e70e3ffa387bda8a7ee43e1303d999f20a21289f8e6a97387d07f4cb68f8543679573c89751a966fb21c3f65da5aef7ad2e5ebe4c3a9667183\u0026ascene=1\u0026uin=MTM3MzQxNTcwMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=62090070\u0026lang=zh_CN\u0026exportkey=Accu5yydsSknJ1Paf9dhTFA%3D\u0026pass_ticket=RlK%2FIypGT1nB8oxcoayEAypJXKli9T812rNsS2DlbUMik1ofjwb5a7z099KeXoz8\u0026accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJhY2Nlc3NfcmVzb3VyY2UiLCJleHAiOjE2NDA4NjI3NzUsImciOiJIODNocVRwOVg5S3FwdFZjIiwiaWF0IjoxNjQwODYyNDc1LCJ1c2VySWQiOi0xNTA1NTMwMjM3fQ.3w0_eu36ToJsqhHtJVWGKwJh0T-uCZcB-QmidVKo708)\n- tag：#\n- date: [[2021-12-31]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211231102135.png)\n\n## 常青笔记\n\n## 重点摘要\n\n- 先介绍一个词汇「Infovores · 食知动物」，用来形容那些强行给自己灌输无穷无尽的书籍、文章和课程，希望有东西能坚持下来，但最终一无所得的人。\n- 事务和信息管理工具与方法（下统称 “工具”），需要搞明白两个问题，• 该工具的父级别或元级别工具类型的核心目的与原则（如 RoamResearch 源自 Zettelkasten，也就是 slip-box ）• 二是该工具设计初衷发生或者适合的场景（如 GTD、GIST、OKR 等）\n- [1]P.A.R.A 的作者是  Tiago Forte ，是世界上最著名的生产力专家之一。他通过自己的项目在全世界教育了 2 万多人，并撰写和演讲技术如何帮助知识工作者彻底改变他们的个人效率。Tiago 的在线课程《打造第二大脑》（ Building a Second Brain[2] ）已经有来自 70 多个国家的 1000 多名学生参加了该课程。\n- 所以这个系统必须满足以下条件• 通用的（universal）：包含来自任何来源的任何种类的信息，并且能跨平台兼容不同时代的信息管理工具。• 灵活的（flexible）：能够与你之前的任何项目或活动所兼容，并且能兼顾未来的拓展性 • 简单的（simple）：  不需要任何耗时的维护、编目、标记或重组，只需最低限度的维护、编目、标记或重组即可 • 可操作（actionable）：与任务管理和项目管理方法的无缝集成 • 结果导向（outcome-oriented）：构建信息的结构，以便能交付有价值工作 • 模块化（modular）：根据当前任务的需要，允许隐藏或显示不同级别的细节 • 机动性强（opportunistic）：从好的方面来说，是利用已经完成的工作，而不是需要专门的管理时间\n- P.A.R.A. 是一种组织信息的思路，但并不是某种具体的规范和教条，其核心是「根据信息的可操作性程度，对信息进行聚焦或转移」 P.A.R.A. 是   项目（Project）、领域（Area）、资源（Resource）、 档案（Archive）的简称。这四个一级分类涵盖了你在工作和生活中可能遇到的所有类型的信息。下面是每个模块的定义，也是这套方法论的核心。\n- • 项目：具有明确的目标以及时间范围，是最小执行单位 • 领域：你日常需要精进的领域（所以你需要为此负责）• 资源：你感兴趣的事情，也是支撑现在 Area 和将来 Area 的外部知识储备 • 归档：沉寂的内容，但也许对未来有用 • 缓存：快速的收集信息，减少判断的成本\n- @George Hale 说道：如果要对信息或者工作寄托长久，有三点是必须遵循的，专注一些领域、步步为营和广泛吸收。可量化意味着明确的阶段性和边界，不可直接量化的领域 “专家” 是偏主观、自我感受和直觉。其中 Goal 是贯穿始终的，Area 的持续精进是最终目的，Project 的选择和执行是阶可量化的段性目标，Resource 是支撑二级的 “Area“的资源、资料（外部的）。围绕 Area 的精进，我们需要不断吸收外部的有效信息和进行阶段性的” 创作 “，而阶段性的创作需要的主题，可以是 Area 的拆分，也可以是基于 Project 的抽象和总结，但来源主要是通过实践（Project）和理论来进行的（即 Resource，外部参考、经验、方法论）。\n- 聚焦项目与领域的关系欧文 · 费雪在《利息理论》中一书说道：收入是一连串的事件。其实对应到人生中也是如此，我们的一生中由许多事件构成。只是对于大多数人来说，他们其实并没有一个关于自己生活和工作的完整的项目清单。但是他们却会告诉你，有太多的事情要做。当这样忙忙碌碌多年以后，其实发现自己可能做了许多事，但是却「样样稀松」。这就是只有项目，而缺乏领域聚焦带来的问题。\n- [3]理清领域最难的地方在于，你要坦然面对自己的内心。 世俗的力量往往只能让我们在年轻的岁月时候看似不迷茫，但是过了中年之后就只能自己摸索，我们可以从上一代人身上看到他们退休后迷茫的样子\n- —— 如张潇雨的文章「人生总有一刻，我们会开始思考死亡」中提到的，虽然我们最终都会死亡，但是距离死亡还是有很长的而时间，你可以有两种方式来面对：一种是让自己和一些宏大的东西联系起来，比如写一本书，建立一家公司，研究一种美食，持续的帮助一些人；另一种是只关注当下，不考虑过去和未来。\n- 这套管理系统在设计之初就是希望能降低使用成本，无需额外投入太多的精力而设计的。所以一旦你需要单独抽取大量时间来维护，则就意味着违背了这套系统的初衷。之所以这么设计，因为 “整理东西 “是人们永远不会去做的事情之一。原因很简单：• 它代表着耗时的间接工作，没有明显的回报或影响。• 在一个项目中，你没有时间去 “停下来整理东西”，因为你需要每一分钟的空闲时间去赶工期。• 你也不会在项目结束后再去做，因为要去做下一个项目了。在你的部门预算中，没有专门的项目用于 “整理工作”。因此，这种工作一拖再拖，直到达到一个崩溃点，所有的系统开始崩溃。然后，这种故障被归咎于 “缺乏生产力”。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E8%87%B4%E5%AF%8C%E4%B8%8D%E9%9D%A0%E8%BF%90%E6%B0%94":{"title":"如何致富","content":"\n# 如何致富\n\n- 追求财富，而不是金钱或地位。财富是指在你睡觉时仍能为你赚钱的资产。金钱是我们转换时间和财富  \n  的方式。地位是你在社会等级体系中所处的位置。\n- 创造财富和坚持道德标准是可以兼得的。如果你内心鄙视财富，财富就会对你避而远之。\n- 无视一味追求社会地位的人。他们获得地位的手段就是攻击创造财富的人。\n- 依靠出租时间是不可能致富的。你必须拥有股权（企业的部分所有权），才能实现财务自由。\n- 获得财富的一个途径，就是为社会提供其有需求但无从获得的东西，并实现规模化。\n- 选择一个有长期发展前景的行业，找到可以长期合作的人。\n- 互联网极大地拓展了职业空间，但大多数人还没有清晰地认识到这一点。\n- 培养迭代思维。生活中所有的回报，无论是财富、人际关系，还是知识，都来自复利。\n- 选择聪明过人、精力充沛的商业伙伴，但更重要的是，他们要正直诚信。\n- 不要跟愤世嫉俗和消极悲观的人合作。他们的预言会自我实现。\n- 学会销售，学会构建，两技傍身，势不可当。\n- 用专长、责任感和杠杆效应武装自己。\n- 专长指的是无法通过培训获得的知识。如果社会可以培训你，那么社会也可以培训他人来取代你。\n- 要想有所专长，就要追求真正的兴趣和热爱，而不是盲目追逐热点。\n- 累积专长的过程，对你而言就像玩耍，对他人来说则很吃力。\n- 专长的传授需要通过师傅带徒弟的方式完成，而无法通过学校教育完成。\n- 专长往往具有高度的技术性或创造性，不能被外包或自动化。\n- 培养责任感，勇于以个人名义承担商业风险。社会将根据责任大小、股权多少和杠杆效应回报你。\n- “给我一根足够长的杠杆和一个支点，我就能撬动地球。”——阿基米德\n- 要想获得财富，就必须充分利用杠杆效应。商业杠杆来自资本、劳动力和复制边际成本为零的产品（代码和媒体）\n- 资本是指金钱。要想获得融资，需要运用自己的专长和责任感，并表现出良好的判断力。\n- 劳动力杠杆就是让别人为你工作。这是最古老、争夺最激烈的一种杠杆。拥有劳动力杠杆会让你的父母  \n  觉得你很了不起，但不要过度追逐劳动力杠杆。\n- 资本和劳动力是需要获得许可才能使用的杠杆。人人都在追逐资本，但得有人愿意出资。人人都想领导他人，但得有人愿意追随。\n- 代码和媒体是不需要许可就能使用的杠杆。这两个杠杆是新富阶层背后的杠杆。你可以创建软件和媒体，让它们在你睡觉时为你工作。\n- 有一大批机器人可供我们免费使用。为了提高热效率、节约空间，这些机器人就集中放在数据中心。用起来吧。\n- 如果不会写代码，那就出书、写博客、做视频、录播客。\n- 杠杆是判断力的倍增器。\n- 判断力从经验中来，但可以通过学习基本技能快速建立起来。\n- 没有所谓的“商业”技能。不要把时间浪费在商业杂志和商业课程上。\n- 学习[[微观经济学]]、[[博弈论]]、[[心理学]]、[[说服术]]、[[伦理学]]、[[数学]]和[[计算机]]。\n- 读比听快，做比看快。\n- 你应该忙得没时间社交，但依然把日程安排得井然有序。\n- 设定一个大胆的个人时薪，并严格执行。如果解决一个问题节省的成本低于时薪，那就忽略问题；如果外包一项任务的成本低于时薪，那就选择外包。\n- 工作时要拼尽全力，毫无保留。不过，共事的人和工作的内容比努力程度更重要。\n- 在自己选择的职业领域里做到全球顶尖。不断重新定义自己的事业，直到理想成为现实。\n- 世界上没有快速致富的教程。即使有，那也只是提供教程的人想从你身上赚钱。\n- 运用专长，发挥杠杆效应，最终你会得到自己应得的。\n- 当你终于变得富有时，你会意识到，这并不是你最初的追求。但这是后话，此处暂且不提。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E8%A7%A3%E9%87%8AReact%E7%9A%84%E6%B8%B2%E6%9F%93%E8%BF%87%E7%A8%8B":{"title":"如何解释 React 的渲染过程","content":"\n# 如何解释 React 的渲染过程\n\n要理解 React 的渲染过程，我们就想要了解到 React 的设计理念，他想要专心的做好 UI 层面的调度优化，让我们开发可以更专注于页面的展示效果。理解了这，我们就很容易看出他的一些设计意图。\n\n首先第一步是将给我们看的语言转化成机械能看懂的数据结构，这一步一般都是通过 [[Babel]] 来进行转化，react 是经过 createElement 这一步，将 jsx 转化成 AST 树，但是和平常所见的 children 数组树不同，React 采用了一种名为 Fiber 的数据结构，也就是说一棵链表树。\n\n为什么使用链表树，我们先了解一下，链表有什么好处，  \n![[链表]], 我们结合一下他的设计意图，就可以想到，他是需要进行频繁的插入和删除操作。结合最近 17、18 的版本更新，\n\n最近的更新其实都是在为 conCurrent 在铺路，无论是 window. IdleCallback 还是 Fiber 数据结构，意在把任务拆成最小的粒度，同时去支持高优先级任务的插队，因为链表在这方面有天然的优势，只需要优秀一次指针就可以完成插队，并且引入了双缓存的策略，可以随时暂停。\n\nPatch 这方面是 React 和其他框架最不同的地方, 因为他为了更好的用户体验，引入了 Fiber 数据结构、优先级策略和 window. Idlecallback\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%A0%87%E9%A2%98%E6%9B%B4%E5%90%B8%E7%9D%9B":{"title":"八种模式起标题","content":"\n# 八种模式起标题\n\n## 用数字凸显价值和美感\n\n我们的大脑会优先识别数字，因此在标题中使用数字能增加辨识度，让用户更加直观地感受内容的价值，激发其点开笔记的欲望。例如：  \n《每天 3 分钟，10 天消除黑眼圈》  \n《不节食不运动，挑战 7 天瘦 10 斤的快速减肥法》  \n《3 年攒够 100 万元，相信坚持与复利》  \n《强推！1 年时间让我脱胎换骨的 24 个好习惯》  \n《72 个自我提升 App，零成本自学》  \n《42 个学生党免费自学网站，在假期中脱胎换骨》  \n《这 5 个方法让我摆脱拖延症，行动力提升 99%+》  \n《过了 20 岁，一定要尽早养成这 32 种认知》\n\n## 体现实用性，强调价值\n\n小红书用户搜索主动性强，通常会在平台内对一些问题进行主动搜索。指导性强的标题有更好的针对性，从而提高笔记的吸引力。例如：  \n《答应我，下次拍照一定要这样拍》  \n《如何找到自己热爱的事情？看完不迷茫！》  \n《如何停止胡思乱想，告别精神内耗？》  \n《这样做每日复盘，2021 年每天进步一点点》  \n《职场人必备技能，让你能力翻番》  \n《自律上瘾！开挂的人生从自律开始。干货，建议收藏》  \n《保姆级教程，教你把安卓平板升级成学习机》\n\n## 惊喜优惠，突出卖点\n\n首先告诉用户，这款产品人气旺、销量高、明星青睐等，突出卖点，然后再利用优惠和低价营造反差，这样会让用户感觉既花钱少又解决了问题。例如：  \n《INS 上卖疯了的包包，居然只要 1 元钱》  \n《超可爱！9 块钱宝藏好物，平价纯分享》  \n《连呼吸都是桃子味的！5 块钱的良心国货》  \n《今年夏天超火的扎染衬衫，均价只要 50 元》\n\n## 制造戏剧冲突\n\n这类标题同样是通过感觉上的差异来引起兴趣，戏剧化的核心就是制造矛盾、冲突、反差，通过强烈的反差唤醒用户的猎奇心理。例如：  \n《每天无肉不欢，我瘦了 20 斤》  \n《理财，每天存 15 块，竟然能攒 100 万元！》  \n《1000 块如何花出 5000 块的品质？这些神器简直相见恨晚！》  \n《已毕业一个月。没花家里一分钱读完了研究生》\n\n## 激发好奇心，制造悬念\n\n激发用户的好奇心，但不立即揭晓悬念。例如：  \n《时间管理真的有用吗？》  \n《男生礼物：为什么袖扣是最适合的？》  \n《如何对付男生冷暴力，让他主动联系你并认错？》  \n《如何在半年内提升自己？》  \n《一年顶三年，工作之外的时间我都在做什么？》  \n《什么能力很重要，但大多数人没有？》\n\n## 对比法则\n\n通过参照物的对比，让用户有进一步了解的欲望。例如：  \n《生理期用这 10 件小物，比红糖水管用 100 倍》  \n《迎宾纱比主纱更重要！缎面鱼尾真的高级耐看》  \n《为什么比你忙的人比你有时间？总结一下我的时间管理技巧》  \n《幸福的婚姻里，“舒适感”远比“爱”重要》  \n《比失去朋友更可怕的，是刻意维持一段关系》\n\n## 对号入座\n\n通过特定的标签和属性，圈定人群，让用户挪不开眼。例如：  \n《双鱼座有哪些难以启齿的小怪癖？》  \n《想要成为有钱人，要具备哪些思维？》  \n《你是“讨好型人格”吗？》  \n《有哪些典型的学生思维，会阻碍你成长提升？》  \n《一说话就紧张？4 招快速告别当众说话恐惧症》  \n《近视 500 度眼睛还有神？3 个动作打造星星眼》  \n《不做社交小透明！4 个 tips 收获职场好人缘》\n\n## 针对具体地域、人群等，让角度多样化\n\n针对人群：《学生党必备好物》《职场人必会技能》《宝妈轻松带娃的 3 个方法》  \n针对地域：《成都攻略，三天两晚玩转成都》《北京必去的 10 个网红打卡点》  \n针对结果：《让人欲罢不能的学习方法》《让男友眼前一亮的校园风穿搭》  \n针对品牌：《兰蔻的粉底液哪款最好用？》《海蓝之谜哪些产品最值得购买？》\n\n除了以上 8 种模式，你还可以利用四步法取标题：第一，找相关选题的爆款笔记；第二，提取关键词；第三，合并成自己的标题；第四，加上表情符号\n\n# “三段式“\n\n## 第一种\n\n第一段：学校+人物+动作（举例：清华+博士爸爸+说漏嘴） 。  \n第二段：做假设（举例：如果孩子上小学/初中）。  \n第三段：动作+名词+结果（举例：死磕+这 6 张图+中考满分）。\n\n## 第二种“三段式”\n\n第一段：学段+学科（举例：小学数学、初中数学、初中英语、小学英语）。  \n第二段：具体年级+“知识点归纳”（举例：三年级上册知识点归纳、六年级上册知识点归纳）。  \n第三段：提醒用户要收藏（举例：聪明的爸妈都收藏了，不收藏会后悔，内容已被 ××× 万人收藏，替孩子存下吧/赶快替孩子收藏，建议家长收藏打印、给孩子贴墙上背）\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E8%AE%B0%E7%AC%94%E8%AE%B0":{"title":"如何记笔记","content":"\n[[记笔记不要做的事]]  \n[[如何做好笔记]]  \n[[如何写卡片笔记]]\n\n## 对笔记进行分类\n\n### 观点论证类\n\n观点论证类更多偏向国外的书，即作者提出一个观点，全书都在通过案例、说明等论证说明自己的观点。比如。。  \n\n撰写笔记时可以参考[[图尔明模型]]分别抽离出作者的观点、论据、理由支持进行组合，找到其中逻辑关系。\n\n图尔明模型可以帮我们更清晰地分析作者的观点，通过寻找具有说服力和合理性的论证从而画出作者的理论框架。作为读者的我们也可以通过使用图尔明模型，提升自己的批判性思维，对作者的观点提出合理的反驳。\n\n### 非虚构记叙类\n\n这类书籍更加偏向历史/人文社科类，作者表述的不是某一个观点，而是试图讲清楚某一个事件/社会形态/社会问题。\n\n对这类书籍，可以按人物单元或者事件节点和时间走向 进行梳理\n\n按事件节点和时间走向梳理很好理解，历史事件往往会有一些关键时刻，例如安史之乱，可以以这样的历史事件为节点，按时间顺序梳理之前发生的事件，再用箭头和标签备注事件之间的关系。通过一个一个的事件节点串联出全貌。  \n\n### 文学类\n\n文学类的书籍更多是精神世界的滋养。这类书籍我更习惯写心得/读后感。非虚构记叙类和观点类书籍在整理读书笔记时力求客观准确，文学类书籍的读书笔记则更自由感性。\n\n读书时，我想到了什么？什么对我触动最大？我就诚实的表述这部分内容。记录是为了不忘记当下的情绪，尤其是那些微小的、一闪而过的微妙感受，更值得记录。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E8%B5%9A%E9%92%B1":{"title":"如何赚钱","content":"\n## caoz的赚钱分类\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230516112430.png)\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E6%B8%B2%E6%9F%93":{"title":"如何避免重复渲染","content":"","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E8%8B%B1%E8%AF%AD%E6%96%87%E7%8C%AE":{"title":"如何阅读英语文献","content":"\n最好当然是能硬啃，如果不行，可以选择退而求其次，阅读双语书籍。\n\n这可以通过[[沉浸式翻译]]插件来实现，他可以制作双语EPUB双语书，前提是输入的书籍也是EPUB  \n不过，它要求原始电子书必须是 EPUB 格式。如果你的资料不是这个格式，可以先用 [Calibre](https://calibre-ebook.com/) 转成 EPUB。\n\n对于不认识的单词可以使用[[Trancy]]标记，多眼熟几遍就容易记住了，多次记不住的就通过[[Anki]]卡片来回忆\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%A7%A8%E5%A6%88%E7%97%9B":{"title":"导致姨妈痛的 4 个不良习惯","content":"\n# 导致姨妈痛的 4 个不良习惯\n\n我们做过的很多痛经案例中，四个不良习惯非常容易导致痛经：\n\n1. 饮食上喜欢吃生冷寒凉辛辣刺激性食物，夏季尤其严重，像冰激凌、冰镇饮料、苦瓜、螃蟹等等；\n2. 不注意保暖：长时间对着冷气直吹，洗冷水澡，有些小女孩夏季贪凉经期下水玩耍；\n3. 熬夜作息不规律，现在很多女孩子喜欢熬夜，对大姨妈的伤害很大；\n4. 紧张焦虑压力大等负面情绪：女孩初潮以后一直面临着升学考试的压力，小升初、中考、高考等等，这些节点上很多孩子很容易出现姨妈问题，有些女孩子失恋以后都可能出现姨妈问题。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8":{"title":"参考链接","content":"\n# 参考链接\n\n[为什么字节跳动还在轰炸式招聘？-36 氪](https://www.36kr.com/p/1804182622602502)\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E5%8E%9F%E4%B9%A6%E7%AC%AC12%E7%89%88":{"title":"《 学会提问（原书第12版） 》","content":"\n# 《 学会提问（原书第12版） 》\n\n# 元数据\n\n\u003e [!abstract] 学会提问（原书第12版）\n\u003e - ![ 学会提问（原书第12版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/68/YueWen_39980443/t7_YueWen_39980443.jpg)\n\u003e - 书名： 学会提问（原书第12版）\n\u003e - 作者： 尼尔·布朗 斯图尔特·基利\n\u003e - 简介： 本书特别适合在以下几个领域中应用。通识课程的老师在第一堂课上，面对学生关于他们能从这门课中学到什么的疑问，可以让学生阅读本书，这将为他们的问题提供清晰明了的答案。英语老师在课堂上训练学生写作说明文时，也可以使用本书，不仅可以将其作为构思文章前评估各种不同论点的范本，还可以将其作为写作过程中应避免的问题的检查清单。本书还可以用作旨在培养学生批判性阅读和思考技能的课程中的核心材料。\n\u003e - 出版时间 2021-05-01 00:00:00\n\u003e - ISBN： 9787111680925\n\u003e - 分类： 个人成长-沟通表达\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 专家说得再动听，也不一定靠得住\n\n- 📌 只不过，我们要倾听来自不同领域的很多专家学者的意见，一边听一边评估判断，对这些意见进行整理，做出取舍，这一点你很快就会明白。我们倾听他们，是为了构建出自己的答案，而不是听了他们的话以后，马上就按他们说的去做，好像自己是只无助的羔羊，或者是个牵线的木偶。 ^39980443-7-1374-1500\n    - ⏱ 2021-09-09 10:26:57\n\n## 判定歧义\n\n- 📌 对一名批判性思维者来说，只有在论证过程中出现的含义模糊的词才是重要的。 ^39980443-29-1475-1537\n    - ⏱ 2021-09-14 10:14:33\n\n## 字典里的定义不一定适合文章里的情境\n\n- 📌 意义通常表现为以下三种方式的一种：同义替换（synonyms）、举例说明（examples）以及我们所谓的“具体标准定义”（definition by specific criteria）。举例来说，对“焦虑”这个词，我们至少可以找到三种不同的定义方法：1）焦虑就是感到紧张不安（同义替换）。2）焦虑就是候选人打开电视观看选举结果公布时的心情（举例说明）。3）焦虑是一种主观上的不适感，同时伴随着自主神经系统越来越强烈的感受（具体标准定义）。 ^39980443-31-426-728\n    - ⏱ 2021-09-14 10:18:06\n\n## 第5章 价值观假设和描述性假设是什么\n\n- 📌 同样，在论证中，你也要找到那些暗藏的把戏。实际上，这些把戏就是没有明说出来的观点或信念。我们把这些没有明说出来的想法称为假设（assumptions）。要全面理解一个论证，你就得找出这些假设。假设具有下面这些特征：1）隐藏或没有明说出来（大多数情况下如此）；2）论证者认为是理所当然的；3）对决定结论有较大的影响；4）可能具有欺骗性。 ^39980443-34-2205-2506\n    - ⏱ 2021-09-14 15:07:18\n\n## 从假设中寻找谬误\n\n- 📌 如果坐等完美解决方案出现，我们常常发现自己固守原地，动弹不得。下面是这个谬误的又一例证：家里添一套安保系统纯粹是浪费钱。如果贼要光顾你家，他们总归想得到办法，不管你装什么系统都不管用 ^39980443-51-2930-3021\n    - ⏱ 2021-09-15 16:22:45\n\n## 其他常见的论证谬误\n\n- 📌 只有我们接受“如果某个信念很流行，那么它肯定是好的”这个错误的假设，调查结果才能支持这个结论。公众往往没有充分研究过一个问题，不足以提供合理的判断。一定要警惕诉诸流行观点或公众感受的论证。我们把这种论证错误称为“诉诸公众谬误”（appeal to popularity fallacy）。 ^39980443-52-977-1148\n    - ⏱ 2021-09-15 16:23:35\n\n## 像批判性思维者那样写作和发言\n\n- 📌 可悲的是，我们的文化对那些改变观点的人没有广博的宽容心，我们总是称他们为“墙头草”或“伪君子”，而没有认识到，当新的证据出现时，改变我们的观点不仅是自然而然的事情，而且是负责任、有担当的表现。 ^39980443-72-2366-2462\n    - ⏱ 2021-09-16 16:22:52\n\n## 混淆相关性和因果关系\n\n- 📌 [插图]因果混淆谬误：将事件的起因和结果相混淆，或未能认识到两件事之间可能是相互影响的关系。[插图]忽略共同原因谬误：未能认识到两件事之间之所以有联系，是因为第三种因素在起作用。 ^39980443-79-1987-2377\n    - ⏱ 2021-09-17 10:03:06\n\n## 第11章 有什么重要信息被省略了\n\n- 📌 你应该记住，几乎每个你遇到的信息都有一个目的。换句话说，这个信息的组织结构是由别人精心挑选和呈现的，目的就是让它能影响你的思维方式。 ^39980443-92-375-441\n    - ⏱ 2021-09-17 14:49:03\n\n## 背叛我们的思维习惯\n\n- 📌 所谓晕轮效应（halo effect），是指我们有这样一种倾向：先认识到一个人身上所具有的一个积极或消极特征，然后就把这一特征和这个人的其他一切都联系起来。 ^39980443-109-619-724\n    - ⏱ 2021-09-17 16:06:37\n- 📌 要抵制信念固着的倾向，我们需要记住，强势批判性思维需要我们认识到所有的判断都是暂时的，或者与语境相关。我们决不可因坚信某件事而故步自封，不愿去寻找更好的答案。 ^39980443-109-2102-2181\n    - ⏱ 2021-09-17 16:09:28\n\n# 读书笔记\n\n##\n\n### 划线评论\n\n- 📌 所谓晕轮效应（halo effect），是指我们有这样一种倾向：先认识到一个人身上所具有的一个积极或消极特征，然后就把这一特征和这个人的其他一切都联系起来。 ^16142247-7tnUNNC2e\n    - 💭 也就是所谓的第一印象\n    - ⏱ 2021-09-17 16:06:47\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AD%A6%E4%BC%9A%E6%90%9C%E7%B4%A2":{"title":"学会搜索","content":"\n# 学会搜索\n\n- 尽量避免使用百度，有条件的使用 [Google](https://www.google.com/)，没条件可以使用 [Bing](https://www.bing.com/)。\n   - 如果中文搜索结果不理想，可以将关键词转为对应英语再去搜索。\n   - 翻译软件：[DeepL 翻译](https://www.deepl.com/)，[Google 翻译](https://translate.google.cn/)等。\n   - 学习一些搜索相关的高级技巧\n     - [How to use search like a pro: 10 tips and tricks for Google and beyond](https://www.theguardian.com/technology/2016/jan/15/how-to-use-search-like-a-pro-10-tips-and-tricks-for-google-and-beyond)\n     - [搜索引擎技巧](https://baike.baidu.com/item/搜索引擎技巧)\n     - [百度搜索技巧](https://jingyan.baidu.com/article/0964eca24b71978285f536f4.html)\n     - [Bing 高级搜索](http://help.bing.microsoft.com/apex/index/18/zh-CHS/10002)\n     - [GitHub advanced search](https://github.com/search/advanced)\n\n3. **延伸搜索**：围绕关键词，扩大搜索范围，查看一些相关链接\n\n### **🎉 Google 高级搜索的 10 个技巧**：\n\n- 包含两个关键词 中间使用 **空格**\n   - 只需要包含某个关键词 使用 **|** 例如：「得到｜罗振宇\n   - 筛除掉某些信息 使用 - 。例如： 罗振宇 -得到\n   - 精准搜索 使用**双引号** 例如：\"怎么成为高效学习的人 \"\n   - 只搜索标题里的关键字 使用 **intitle:** 例如: intitle:高效学习\n   - 搜索影视、音乐、图书相关的内容 **使用《》**\n   - 搜索文字类型 使用 「Filetype：pdf 」  \n\n1）准确搜索（Exact phrase）  \n2）排除关键词（ Exclude terms）  \n3）用 OR (或)逻辑进行搜索（Either OR）  \n4）同义词搜索 ~（Synonym search）  \n5）站内搜索（Search within a site）  \n6）善用 \\* 星号（The power of the asterisk）  \n7）在两个数值之间进行搜索（Searching between two values）  \n8）在网页标题, 链接和主体中搜索关键词（Search for word in the body, title or URL of a page）  \n9）搜索相关网站（Search for related sites）  \n10）搜索技能的组合使用（Combine them）\n\n### git 搜索\\*\\*\n\n1. in:name xxx // 按照项目名搜索\n2. in:readme xxx // 按照 README 搜索\n3. in:description xxx // 按照 description 搜索 那么在这里面呢，我们又可以增加筛选条件\n4. stars:\u003exxx // stars 数大于 xxx\n5. forks:\u003e3000 // forks 数大于 xxx\n6. language:xxx // 编程语言是 xxx\n7. pushed:\u003eYYYY-MM-DD // 最后更新时间大于 YYYY-MM-DD\n\n- 尽量避免使用百度，有条件的使用 [Google](https://www.google.com/)，没条件可以使用 [Bing](https://www.bing.com/)。\n   - 如果中文搜索结果不理想，可以将关键词转为对应英语再去搜索。\n   - 翻译软件：[DeepL 翻译](https://www.deepl.com/)，[Google 翻译](https://translate.google.cn/)等。\n   - 学习一些搜索相关的高级技巧\n     - [How to use search like a pro: 10 tips and tricks for Google and beyond](https://www.theguardian.com/technology/2016/jan/15/how-to-use-search-like-a-pro-10-tips-and-tricks-for-google-and-beyond)\n     - [搜索引擎技巧](https://baike.baidu.com/item/搜索引擎技巧)\n     - [百度搜索技巧](https://jingyan.baidu.com/article/0964eca24b71978285f536f4.html)\n     - [Bing 高级搜索](http://help.bing.microsoft.com/apex/index/18/zh-CHS/10002)\n     - [GitHub advanced search](https://github.com/search/advanced)\n\n3. **延伸搜索**：围绕关键词，扩大搜索范围，查看一些相关链接\n\n### **🎉 Google 高级搜索的 10 个技巧**：\n\n1）准确搜索（Exact phrase）  \n2）排除关键词（ Exclude terms）  \n3）用 OR (或)逻辑进行搜索（Either OR）  \n4）同义词搜索 ~（Synonym search）  \n5）站内搜索（Search within a site）  \n6）善用 \\* 星号（The power of the asterisk）  \n7）在两个数值之间进行搜索（Searching between two values）  \n8）在网页标题, 链接和主体中搜索关键词（Search for word in the body, title or URL of a page）  \n9）搜索相关网站（Search for related sites）  \n10）搜索技能的组合使用（Combine them）\n\n### git 搜索\\*\\*\n\n1. in:name xxx // 按照项目名搜索\n2. in:readme xxx // 按照 README 搜索\n3. in:description xxx // 按照 description 搜索 那么在这里面呢，我们又可以增加筛选条件\n4. stars:\u003exxx // stars 数大于 xxx\n5. forks:\u003e3000 // forks 数大于 xxx\n6. language:xxx // 编程语言是 xxx\n7. pushed:\u003eYYYY-MM-DD // 最后更新时间大于 YYYY-MM-DD\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AD%A6%E6%B5%AA%E8%AF%BE%E7%A8%8B":{"title":"参考资料","content":"\n## 现状分析\n\n- 学浪课程有 20%的讲师赚到 10 万以上，其中有 545 位讲师营收百万，但对比腾讯课堂，还有很大的发展空间。\n- 抖音主要用户集中在 30~39 岁，家庭教育板块非常吃香，只要找到好的付费场景，赚钱不是什么难事。\n- 定价到 600~1000 之间最大概率赚到钱，699 和 999 都不错。\n\n# 参考资料\n\n[雪浪课堂数据分析](https://bchje44bsl.feishu.cn/docs/doccnQ13jOOR4jnnlVDXo4Jqryf#)\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AE%81%E5%BE%B7%E6%97%B6%E4%BB%A3":{"title":"","content":"\n#\n\n\n## 2021 年 12 月\n\n在四川宜宾市三江新区的动力电池制造基地，在 12 月 3 日开放招聘蓝领工人，结果现场竟然来了超过 3000 名求职者，而且还有从云南，甘肃等地专程来应聘的，还有人坐了四五个小时的车来应聘，而由于对现场的火爆估计不足，导致现场招聘人力不够，因此采用排号的方式，让超过 2000 名求职者回家等候具体的面试时间。\n\n同时招聘的最低级别 JG1 的底薪 2500 元，加上工作津贴 200 元，地区津贴 400 元，全勤奖 150 元，另外工龄奖满一年有 200 元，如果工作满 4 年则有 500 元。  \n这样算下来一个工作满 1 年的员工，不加班的话收入在 3450 元，  \n而工厂还有加班费的，平时加班 21.55 元/小时，周末 28.73 元/小时，法定假日 43.10/小时，  \n这个取决于加班时间长短，现在动力电池产能火爆，应该 1000 元甚至更多的加班费是有的，就按照 1000 元加班费算吧，则一个 JG1 的产线员工一个月有 4450 元的收入。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AE%89%E5%85%A8-DNS":{"title":"安全 DNS","content":"\n## 为什么 DNS 需要额外的安全层？\n\n[[DNS]]是互联网的电话簿；DNS 解析器将人类可读的域名转换为机器可读的 [IP 地址](https://www.cloudflare.com/learning/dns/glossary/what-is-my-ip-address/)。默认情况下，DNS 查询和响应以明文形式（通过 [[UDP]]）发送，这意味着它们可以被网络、ISP 或任何能够监视传输的人读取。即使网站使用 [[HTTPS]]，也会显示导航到该网站所需的 DNS 查询。\n\n基于 [[TLS]] 的 DNS 和基于 [[HTTPS]] 的 DNS 是为加密明文 DNS 流量而开发的两个标准，可以防止恶意方、广告商、ISP 和其他人解读其数据\n\n## HTTPS 不也是将 TLS 用于加密的？基于 HTTPS 的 DNS 和基于 TLS 的 DNS 有何区别？\n\n这两项标准都是单独开发的，并且各有各的 RFC* 文档，但 DoT 和 DoH 之间最重要的区别是它们使用的端口。DoT 仅使用端口 853，DoH 则使用端口 443，后者也是所有其他HTTPS 流量使用的端口。\n\n由于 DoT 具有专用端口，因此即使请求和响应本身都已加密，具有网络可见性的任何人都发现来回的 DoT 流量。DoH 则相反，DNS 查询和响应伪装在其他 HTTPS 流量中，因为它们都是从同一端口进出的。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AE%89%E6%89%98%E4%B8%87%E6%B4%9B%E6%9C%97%E5%BE%B7%E6%8B%89%E7%93%A6%E9%94%A1":{"title":"安托·万洛朗·德·拉瓦锡","content":"\n# 安托·万洛朗·德·拉瓦锡\n\n#卡片/人物卡\n\n- 国籍：法国\n- 生平：1743 年 8 月 26 日－1794 年 5 月 8 日\n- 身份：化学家、生物学家\n- 简介：  \n  被后世尊称为“**近代化学之父**”。他使化学从定性转为定量，给出了氧与氢的命名，并且预测了硅的存在。他帮助建立了公制。拉瓦锡提出了“元素”的定义，按照这定义，于 1789 年发表第一个现代化学元素列表，列出 33 种元素，其中包括光与热和一些当时被认为是元素的化合物。拉瓦锡的贡献促使 18 世纪的化学更加物理及数学化。他提出规范的化学命名法，撰写了第一部真正现代化学教科书《化学基本论述》（Traité Élémentaire de Chimie）。他倡导并改进定量分析方法并用其验证了质量守恒定律。他创立氧化说以解释燃烧等实验现象，指出动物的呼吸实质上是缓慢氧化。这些划时代贡献使得他成为历史上最伟大的化学家之一。\n","lastmodified":"2023-09-18T14:54:47.546454509Z","tags":null},"/%E5%AE%9A%E4%BD%8D":{"title":"定位","content":"\n# 定位\n\n分析自己的 ![[人生技能树]], 寻找定位\n\n你的定位决定了你的精准粉丝愿意为什么而付费\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%9A%E5%9F%9F%E6%80%A7":{"title":"定域性","content":"\n# 定域性\n\n定域性指的是，在某段时间里所有的因果关系都必须维持在一个特定的区域内，而不能超越时空来瞬间地作用和传播。简单来说，就是指不能有超距作用的因果关系，任何信息都必须以光速这个上限而发送，这也就是相对论的精神！\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%B0%86%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%84%E8%BD%AC%E6%88%90%E5%9C%A8%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84":{"title":"实现一个函数将对象结构转成在树形结构","content":"\n实现一个函数将对象结构转成在树形结构\n\n```JavaScript\n// 原始 list 如下\nlet list =[\n    {id:1,name:'部门A',parentId:0},\n    {id:2,name:'部门B',parentId:0},\n    {id:3,name:'部门C',parentId:1},\n    {id:4,name:'部门D',parentId:1},\n    {id:5,name:'部门E',parentId:2},\n    {id:6,name:'部门F',parentId:3},\n    {id:7,name:'部门G',parentId:2},\n    {id:8,name:'部门H',parentId:4}\n];\nconst result = convert(list, ...);\n```\n\n解：\n\n```JavaScript\nfunction convert () {\n    let res = []\n    let temp = {}\n    for (let i = 0; i \u003c list.length; i++) {\n        temp[list[i].id] = list[i]; // 以id作为索引存储元素，可以无需遍历直接定位元素\n    }\n    for (let j = 0; j \u003c list.length; j++) {\n        const item = list[j]\n        const current = temp[item.id]\n        if (item.parentId === 0) {\n            res.push(current)\n        } else {\n            if (!temp[item.parentId]['children']) temp[item.parentId].children = []\n            temp[item.parentId].children.push(item)\n        }\n    }\n    return res\n}\n```\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%89%B9%E9%87%8F%E8%AF%B7%E6%B1%82%E5%87%BD%E6%95%B0":{"title":"实现一个批量请求函数","content":"\n实现一个批量请求函数\n\n要求：\n\n1. 批量请求函数，最大并发数 maxNum\n2. 每当有一个请求返回，就留下一个空位，可以增加新的请求\n3. 所有请求完成后，结果按照 urls 里面的顺序依次发出。\n\n```JavaScript\nfunction handleFetchQueue(func, urls, max, callback) {\n  const urlCount = urls.length;\n  const requestsQueue = [];\n  const results = [];\n  const errList = [];\n  let i = 0;\n  const isCallBack = () =\u003e {\n    const allLen = results.length + errList.length;\n    if (allLen === urlCount) {\n      \"function\" === typeof callback \u0026\u0026 callback(results, errList);\n    }\n  };\n  const handleRequest = (url) =\u003e {\n    const req = func(url)\n      .then((res) =\u003e {\n        console.log(\"当前并发： \" + requestsQueue);\n        results.push(res);\n        const allLen = results.length + errList.length;\n        if (allLen \u003c urlCount \u0026\u0026 i + 1 \u003c urlCount) {\n          requestsQueue.shift();\n          handleRequest(urls[++i]);\n        } else {\n          isCallBack();\n        }\n      })\n      .catch((e) =\u003e {\n        errList.push(e);\n        isCallBack();\n      });\n    if (requestsQueue.push(req) \u003c max) {\n      handleRequest(urls[++i]);\n    }\n  };\n  handleRequest(urls[i]);\n}\n```\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%9E%E7%8E%B0%E4%BA%A4%E9%80%9A%E7%81%AF%E7%9A%84%E9%80%BB%E8%BE%91":{"title":"实现交通灯的逻辑","content":"\n实现交通灯的逻辑\n\n红灯亮 5s,绿灯亮 10s,黄灯亮 3s,红灯亮 5s…不停循环执行，亮的动作可以用一个伪函数来表示。\n\n```JavaScript\n      function sleep(wait) {\n        return new Promise((reslove) =\u003e {\n          setTimeout(reslove, wait);\n        });\n      }\n      async function changeColor(color, wait) {\n        // this.color = color;\n        console.log(color);\n        await sleep(wait);\n      }\n      async function go() {\n        while (true) {\n          await changeColor(\"red\", 5000);\n          await changeColor(\"green\", 15000);\n          await changeColor(\"yellow\", 3000);\n        }\n      }\n```\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%9E%E8%AF%81%E4%B8%BB%E4%B9%89%E5%93%B2%E5%AD%A6":{"title":"实证主义哲学","content":"\n# 实证主义哲学\n\n牛津的风格对我的影响比较深，在写作和聊天的过程中，如果用大词，会被认为是一件粗俗的事，没品味（bad taste），有水平的人应该用很小的词讲很深刻的道理，词越小越好，具体到一张桌子、一把凳子、一个茶几。这当然跟它的实证主义哲学有关系，从休谟开始到牛津后来的语言哲学、政治哲学，有这个传统。比如以赛亚·伯林，写的东西都是学术散文式的。他们很不喜欢那种僵化的学术八股文。他们认为最高层次的学术其实是说大白话，尽量不要有专业术语，用的概念听起来也很简单，比如以赛亚·伯林的“两种自由”，这哪里像概念？都是描述性的语言，他有时候会用一些隐喻，比如“刺猬与狐狸”。这就是脑子里有意象、图景，然后把它描述出来。我们现在很多人脑子里没有图景，只是机械地把数据和材料放出来。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8":{"title":"家庭服务器","content":"\n# 家庭服务器\n\n功能归为六个大类：**存储与同步、RSS、多媒体、自动化、监控与其他应用**。  \n\n目前感兴趣的就下面两个，后续再不断扩充\n\n## 存储与同步\n\n- 笔记：Markdown格式文本、各类本地附件，终端软件为[[Obsidian]]；\n- 密码：重要密钥，网站/应用密码，自动填充；\n- 相册：手机/平板拍摄的照片+相机拍摄的照片\n- 截图：手机/平板的截图实时同步到其他设备；\n- 工作文件：大量的、各类格式的文件，需要版本控制，便捷分享；\n- 中转站：阅后即焚的文本/文件中转，接收其他人发给我的文件；\n\n这是一套可以覆盖全平台的存储与同步方案，虽然部署的服务和需要安装的终端软件较多，但这些软件基本可以做到无感地后台运行。 家庭服务器上部署的服务有：\n\n- [Nextcloud](https://sspai.com/link?target=https%3A%2F%2Fnextcloud.com%2F): 私有云盘，完成PC端文件同步、版本控制，提供web端、移动端app；\n- [Immich](https://sspai.com/link?target=https%3A%2F%2Fdocumentation.immich.app%2F): 相册备份、浏览，提供web端、移动端app；\n- [Bitwarden](https://sspai.com/link?target=https%3A%2F%2Fbitwarden.com%2F): 密码同步与自动填充，提供web插件、移动端app；\n- [Resilio](https://sspai.com/link?target=https%3A%2F%2Fwww.resilio.com%2Findividuals%2F): P2P文件同步，全平台文件同步；（也可以用_微力同步_替代）\n- [MicroBin](https://sspai.com/link?target=https%3A%2F%2Fmicrobin.eu%2F): 文本和文件共享 Web 应用程序、阅后即焚；\n\n移动端需要安装的软件有：Resilio、Immich和Bitwarden。PC端需要安装的软件有Resilio、Bitwarden插件和Nextcloud。\n\n## [[RSS]]\n\n# 参考资料\n\n- [家庭服务器Home Server实践 - 少数派](https://sspai.com/post/82512)\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AE%B9%E7%A7%AF%E7%8E%87":{"title":"容积率","content":"\n# 容积率\n\n容积率就是建筑面积和其下土地面积的比值，比值越高，建筑面积越大，楼层越高，容纳的人也越多。给定土地位置，规划容积率越高越值钱。厦门大学傅十和与暨南大学谷一桢等人的论文（Brueckner et al., 2017）发现，我国房地产开发限制越严格的地方，容积率和地价间关联越紧密。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AF%8C%E5%85%B0%E5%85%8B%E6%9E%97%E8%87%AA%E4%BC%A0":{"title":"《 富兰克林自传 》","content":"\n# 《 富兰克林自传 》\n\n# 元数据\n\n\u003e [!abstract] 富兰克林自传\n\u003e - ![ 富兰克林自传|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/847/906847/t7_906847.jpg)\n\u003e - 书名： 富兰克林自传\n\u003e - 作者： 富兰克林\n\u003e - 简介： 《富兰克林自传》是美国迄今为止最重要、读者最多的自传作品之一，无论从自传的角度还是从美国思想史的角度来看，都具有划时代的意义。富兰克林以拉家常的方式，把自己成功的经验和失败的教训娓娓道来，整部自传在通俗易懂的叙述中不时会有睿智和哲理的火花，开创了美国传记文学的优良传统，使自传成为一种新的文学体裁。《富兰克林自传》是在读者如饥似渴的等待中出版的，一经问世被一抢而光。世界各地的青年人都希望学习富兰克林成功的秘诀，他们把这部书当成“人生指导”读物。\n\u003e - 出版时间 2012-12-01 00:00:00\n\u003e - ISBN： 9787544732215\n\u003e - 分类： 人物传记-传记综合\n\u003e - 出版社： 译林出版社\n\n# 高亮划线\n\n## 自传\n\n- 📌 我希望善意明达之人不要以武断自负的方式说话，而使行善的力量减弱，原因是用这种方式往往使人反感，容易造成对立，使我们专靠语言达到的这些目的 ^906847-4-16054-16122\n    - ⏱ 2021-11-03 16:15:09\n- 📌 教人时要让人觉得你不是在教他，人所不知的事情你就说他是忘啦 ^906847-4-16353-16418\n    - ⏱ 2021-11-03 16:15:45\n\n## 〔第二部〕 生平自述续篇\n\n- 📌 我遵照我们共图社的老规矩，甚至不许自己在语言中使用表示确定看法的词语；诸如肯定、无疑之类，代之以我心想、我的理解是，或我认为一件事情如何如何，或者这事情我眼下觉得如何如何。当别人主张某种意见，我认为错了的时候，我不图一时痛快，打他一顿拦头棍，立马挑明他的意见的荒谬之处；而是在回答的时候，一开始就说，在某种情况下他的见解可能是对的，但在目前看来，我觉得情况似乎或好像有所不同等等。 ^906847-6-14024-14354\n    - ⏱ 2021-11-08 14:27:16\n\n## 致富之路\n\n- 📌 要想得到闲暇，就好好利用时光。既然你对一分钟没有把握，就别丢掉一小时。闲暇是准备做有益的事情的时光。这种闲暇，勤奋的人会得到，懒汉却永远不会有。 ^906847-9-3791-3870\n    - ⏱ 2021-11-11 15:47:51\n- 📌 因为穷狄克说：学问归勤奋的人，财富归仔细的人，权力归勇敢的人，天堂归有德行的人 ^906847-9-4840-4900\n    - ⏱ 2021-11-11 15:48:58\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B820%E5%91%A8%E5%B9%B4%E4%BF%AE%E8%AE%A2%E7%89%88":{"title":"《 富爸爸穷爸爸（20周年修订版） 》","content":"\n# 《 富爸爸穷爸爸（20周年修订版） 》\n\n# 元数据\n\n\u003e [!abstract] 富爸爸穷爸爸（20周年修订版）\n\u003e - ![ 富爸爸穷爸爸（20周年修订版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/68/YueWen_23601930/t7_YueWen_23601930.jpg)\n\u003e - 书名： 富爸爸穷爸爸（20周年修订版）\n\u003e - 作者： 罗伯特·清崎\n\u003e - 简介： 清崎有两个爸爸：“穷爸爸”是他的亲生父亲，一个高学历的教育官员；“富爸爸”是他好朋友的父亲，一个高中没毕业却善于投资理财的企业家。清崎遵从“穷爸爸”为他设计的人生道路：上大学，服兵役，参加越战，走过了平凡的人生初期。直到1977年，清崎亲眼目睹一生辛劳的“穷爸爸”失了业，“富爸爸”则成了夏威夷的有钱人。清崎毅然追寻“富爸爸”的脚步，踏入商界，从此登上了致富快车。  \n清崎以亲身经历的财富故事展示了“穷爸爸”和“富爸爸”截然不同的金钱观和财富观：穷人为钱工作，富人让钱为自己工作！  \n本次20周年修订版还在内容上做了以下几项升级：  \n1.内附作者罗伯特·清崎的来信  \n2.“20年后的今天”贯穿全书，以今天的经济形势来印证富爸爸当初的理念  \n3.核心思想提炼，方便回味经典、巩固记忆  \n4.融入新型学习模式，让你对本书的理解更高效  \n本书两大特点：  \n真实 ：书中的很多理念和方法都是作者和许多富爸爸读者亲身实践和印证过的。  \n易懂：无论您的财务状况属于什么水平，都能从这本书中得到一些有益的启迪。\n\n通过本书您将了解以下四个问题的答案：\n\n1. 为什么富人从不为钱工作\n2. 什么是资产\n3. 为什么致富很简单却很少人富有\n4. 普通人也可以通过投资和创业致富吗\n\n\u003e - 出版时间 2017-09-01 00:00:00\n\u003e - ISBN： 9787220102912\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 四川人民出版社\n\n# 高亮划线\n\n## 第一课 富人不为钱工作\n\n- 📌 “比如说吧，”富爸爸说，“如果害怕没钱花，也先不要去找工作，而要先问问自己：一份工作是最终消除这种恐惧的最佳解决办法吗？依我看，答案是‘不是’，从人的一生来看更是如此。工作只是试图用暂时的办法来解决长期的问题。”“但我爸爸总是说‘去 ^23601930-11-26206-26351\n    - ⏱ 2020-02-13 21:56:14\n- 📌 机会就摆在人们面前，但大多数人从来看不到这些机会，因为他们忙着追求金钱和安定，所以只能得到这些。如果你们能看到一个机会，就注定你们会在一生中不断地发现机会 ^23601930-11-32716-32793\n    - ⏱ 2020-02-13 22:02:14\n\n## 第二课 为什么要教授财务知识\n\n- 📌 你挣了多少钱并不重要，重要的是你留下了多少钱。 ^23601930-14-587-610\n    - ⏱ 2020-02-14 11:03:58\n- 📌 财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久？ ^23601930-14-19799-19839\n    - ⏱ 2020-02-14 12:50:31\n\n## 克服困难\n\n- 📌 失败会激励胜利者，击垮失败者 ^23601930-29-3860-3874\n    - ⏱ 2020-02-15 10:31:32\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AF%B9%E4%BA%8E%E5%AD%A6%E5%8E%86%E7%9A%84%E6%80%9D%E8%80%83":{"title":"对于学历的思考","content":"\n# 对于学历的思考\n\n已经过去的，就不可以再改变了，只有着眼于未来，努力提升自己的学历，无论是专升本还是考研都尽量争取，不论他的含金量，总归是会为你增加一点胜算。  \n另外就是，在学历提升的过程，一直会选择专业相关的课程，也是在不断的夯实你的基础，计算机编程在业务上不过一层抽象，没有难度可言，只有基础扎实了才能够从容的应对这三天一小变一个月一大变的前端环境。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%AF%B9%E4%BA%8E%E7%BC%B4%E7%A8%8E%E7%9A%84%E7%9C%8B%E6%B3%95":{"title":"对于缴税的看法","content":"\n# 对于缴税的看法\n\n享受着国家快速发展的福利，享受着中国和平稳定的生活环境，我是很支持通过缴税贡献自己的绵薄之力，为建设祖国增添一砖一瓦。但现在收税困难，富人避税的方法千千万，所有税收最后都是落在穷人和中产身上，这容易使人产生扭曲的心态。我想如果能顺利推行数字货币的话，政府就有能力追踪每个人的各种收入，那情况就会好很多。但光想想也是困难丛丛，富人往往有权有势，这是要直接动他们的蛋糕。另外像这种改革注定不是短期能成的，任何小问题放在中国这个地大物博的环境下，都会变成一个大问题，这难度不亚于统一全国市场机制。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1":{"title":"《 小狗钱钱 》","content":"\n# 《 小狗钱钱 》\n\n# 元数据\n\n\u003e [!abstract] 小狗钱钱\n\u003e - ![ 小狗钱钱|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/755/798755/t7_798755.jpg)\n\u003e - 书名： 小狗钱钱\n\u003e - 作者： 博多·舍费尔\n\u003e - 简介： 吉娅是一个普通的12岁女孩，在次偶然的机会，她救助了一只受伤的小狗，并给它取名叫“钱钱”。没想到，钱钱居然是一位深藏不露的理财高手，它改变了吉娅一家人的财富命运……教会你如何从小学会支配金钱，而不是受金钱的支配；如何像富人那样思考，正确地认识和使用金钱；如何进行理财投资，找到积累资产的方法，早日实现财务自由！\n\u003e - 出版时间 2014-03-01 00:00:00\n\u003e - ISBN： 9787536563582\n\u003e - 分类： 生活百科-育儿\n\u003e - 出版社： 四川少年儿童出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-79mRZ3a3M  \n⏱ 2019-06-24 19:05:32\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B12":{"title":"《 小狗钱钱2 》","content":"\n# 《 小狗钱钱2 》\n\n# 元数据\n\n\u003e [!abstract] 小狗钱钱2\n\u003e - ![ 小狗钱钱2|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/276/806276/t7_806276.jpg)\n\u003e - 书名： 小狗钱钱2\n\u003e - 作者： 博多·舍费尔\n\u003e - 简介： 《小狗钱钱》掀起了一股“金钱童话”潮流，相信你已经认识了吉娅和她那会说话的拉布拉多狗钱钱，学会了如何像富人那样思考，正确认识和使用金钱。而现在，吉娅和钱钱在《小狗钱钱2》里开始了新的冒险之旅！吉娅获得了期盼已久的暑期奖学金并前往了美国。在那里她交到了很多好朋友，然而事情并非看上去那么美好……吉娅和朋友们在魔法放大镜的帮助下历经了许多次的冒险。\n\u003e - 出版时间 2014-03-01 00:00:00\n\u003e - ISBN： 9787536563599\n\u003e - 分类： 生活百科-育儿\n\u003e - 出版社： 四川少年儿童出版社\n\n# 高亮划线\n\n## 第十章 7条准则\n\n- 📌 他们认为吉娅应该先等待测试结果出来了再说，安娜不应当面对一个尚不确定的希望。 ^806276-13-10308-10346\n    - ⏱ 2020-02-22 16:56:18\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%8F%E7%A8%8B%E5%BA%8F":{"title":"小程序","content":"\n# 小程序\n\n当前端开发者带着固有的认知进行小程序开发的时候，发现很多地方都行不通，比如页面元素无法获取，只能通过 setData 更新页面，还有各种浏览器接口都无法正常使用。所以，很多人都难以理解，认为小程序偏偏特立独行为难开发者，其实很大程度上是因为小程序基于安全和管控考虑下的设计。\n\n## 小程序在思考什么\n\n当年互联网还不成熟的时候，许多网页开发没有做好 [[XSS]] 和 [[CSRF]] 这样的漏洞保护，导致出现用户账户被盗用、财产被转移等问题。**对于小程序来说，不仅需要对各种小程序进行内容的管控，同样需要给用户和开发者提供有安全保障的环境。**\n\n### 小程序如何保障用户安全\n\n比如，小程序提供了 `\u003copen-data\u003e` 组件，用于无须授权的情况下可展示用户的敏感信息（昵称、头像、性别、地理位置等），如果开发者直接通过 DOM API 获取到这些信息，意味着只要用户打开了这个小程序，在未授权的情况下自己的相关信息就会被盗取。\n\n我们能看到，很多风险都来自 JavaScript 脚本对网页中 DOM 的访问和操作。想要解决这个风险就得将 JavaScript 代码放置在没有浏览器环境的[[沙箱环境]]中运行。\n\n小程序使用 iOS 内置的 JavaScriptCore 框架和在 Android 的 JSCore 引擎（最初为腾讯 x5 内核，后来是 V8 引擎），提供了一个没有浏览器相关接口的环境，用于 JavaScript 脚本的执行。\n\n上面我们提到，小程序中使用了沙箱环境来运行 JavaScript 代码，在这个环境中无法进行一些 DOM 操作。那么，开发者如何更新页面内容、控制页面的展示呢？答案是使用 setData()。\n\n为什么使用 setData()可以更新页面内容呢？这是因为在小程序中，界面渲染相关任务则是由单独的 WebView 线程来完成。也就是说，在小程序中，JavaScript 脚本的执行和界面渲染不在一个线程中。\n\n### 小程序如何提升用户体验\n\n目前，主流的 App 主要有 3 种，它们对应了 3 种渲染模式：\n\n1. Native App，使用了 Native（纯客户端原生技术）渲染；\n2. Web App，使用了 WebView（纯 Web 技术）渲染；\n3. Hybrid App，使用了 WebView+原生组件（Hybrid 技术）渲染。\n\n小程序使用的是 WebView + 原生组件，即 Hybrid 方式。显然，这种方式结合了 Native 和 Webview 的一些优势，让开发者既可以享受 Webview 页面的低门槛和在线更新，又可以使用部分流畅的 Native 原生组件，同时通过代码包上传、审核、发布的方式来对内容进行管控。\n\n### 引入原生组件提升用户交互体验\n\n### 通过页面预渲染减少启动和加载耗时\n\n我们能看到渲染层里有多个 WebView，这是因为在小程序中为了方便用户可快速地前进和回退，存在着多个界面，而每个界面都是一个单独的 WebView 线程，因此会有多个 WebView。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%8F%E7%BA%A2%E4%B9%A6":{"title":"小红书","content":"\n# 小红书\n\n[[《爆款小红书：从零到百万粉丝的玩赚策略》]]\n\n## 引流\n\n[自用小红书100%安全的引流方法 - 飞书云文档](https://nicekeji.feishu.cn/docx/XnAxd18XioNdTdxCG2icxiOvnSd)\n\n## 参考文章\n\n- [小红书底层逻辑和方法](https://e8uhj14dno.feishu.cn/docs/doccnN4UNVt4yjLT6TnsLKdBlZg)\n- [小红书入门](https://articles.zsxq.com/id_g5l5dzz82zj3.html)\n- [钻戒文-实操变现千万](https://articles.zsxq.com/id_61nswd110ikb.html)\n- [设计师-完整闭环分享](https://iwf3wybx8g.feishu.cn/docs/doccn5QdWJV5kCY610VvHLgitlh)\n- [温州土老板](https://articles.zsxq.com/id_l8sja1frmtwu.html)\n- [杉木-寻找精准客户](https://articles.zsxq.com/id_qj2szuqzn5vt.html)\n- [运营女超人子渝 ,0-8K 粉丝](https://zk4z8m1b5w.feishu.cn/docs/doccnIAF6XbXx3Nstl3k3GyeR0P)\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%A4%E9%87%91%E7%BB%B4%E6%A0%BC%E7%BA%B3":{"title":"尤金·维格纳","content":"\n# 尤金·维格纳\n\n维格纳是 20 世纪最重要的物理学家之一，他把群论应用到量子力学中，对原子核模型的建立起到了至关重要的作用。他和狄拉克、约尔当等人一起成为量子场论的奠基人。  \n他参与了曼哈顿计划，在核反应理论方面有着突出的贡献。1963 年，他被授予诺贝尔物理学奖。\n\n## 人物关系\n\n[[冯·诺伊曼]] 是他的学弟  \n他的妹妹嫁给了 [[保罗·狄拉克]]\n\n## 维格纳的朋友\n\n“维格纳的朋友”是他所想象的某个熟人（我猜想其原型不是狄拉克就是冯·诺伊曼），当薛定谔的猫在箱子里默默地等待命运的判决之时，这位朋友戴着一个防毒面具也同样待在箱子里观察这只猫，维格纳本人则退到房间外面而不去观测箱子里到底发生了什么。现在，对于维格纳来说，他对房间里的情况一无所知，他是不是可以假定箱子里处于一个（活猫/高兴的朋友）+（死猫/悲伤的朋友）的混合态呢？可是，当他事后询问那位朋友的时候，后者肯定会否认这一种叠加状态。维格纳总结道，当朋友的意识被包含在整个系统中的时候，叠加态就不适用了。即使他本人在门外，箱子里的波函数还是因为朋友的观测而不断地被触动，因此，只有活猫或者死猫两个纯态的可能。  \n维格纳论证说，**意识可以作用于外部世界，使波函数坍缩是不足为奇的。因为外部世界的变化可以引起我们意识的改变，根据牛顿第三定律，作用与反作用原理，意识也应当能够反过来作用于外部世界。** 他把论文命名为《对于灵肉问题的评论》（Remarks on the Mind-body Question），收集在他 1967 年的论文集里。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%BC%E5%8F%A4%E6%8B%89%E5%93%A5%E7%99%BD%E5%B0%BC":{"title":"尼古拉·哥白尼","content":"\n# 尼古拉·哥白尼\n\n#卡片/人物卡\n\n- 国籍：波兰\n- 生平：1473 年 2 月 19 日－1543 年 5 月 24 日\n- 身份：数学家、天文学家\n- 简介：他提倡日心说模型，提到太阳为宇宙的中心。1543 年哥白尼临终前发表了《天体运行论》一般认为他著的是现代天文学的起步点。它开启了哥白尼革命，并对推动科学革命有相当大的贡献。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%BC%E5%B0%94%E6%96%AF%E7%8E%BB%E5%B0%94":{"title":"尼尔斯·玻尔","content":"\n# 尼尔斯·玻尔\n\n尼尔斯·亨里克·达维德·玻尔（1885 年 10 月 7 日－1962 年 11 月 18 日），丹麦物理学家，1922 年因“他对原子结构以及从原子发射出的辐射的研究”而荣获诺贝尔物理学奖。\n\n玻尔发展出原子的玻尔模型。这一模型利用量子化的概念来合理地解释了氢原子的光谱。他还提出量子力学中的互补原理。20 世纪 20 年代至 30 年代间量子力学及相关课题研究者的活动中心，哥本哈根大学的理论物理研究所（现名尼尔斯·玻尔研究所），也是由玻尔在 1921 年创办的。\n\n20 世纪 30 年代，玻尔积极帮助来自纳粹德国的流亡者。在纳粹德国占领丹麦后，玻尔与主持德国核武器开发计划的海森堡进行了一次著名会谈。他在得知可能被德国人逮捕后，经由瑞典流亡至英国，并于该国参与了合金管工程。这是英国在曼哈顿计划中承担的任务。战后，他呼吁各国就和平利用核能进行合作。他参与了欧洲核子研究组织及丹麦原子能委员会里瑟研究部的创建，并于 1957 年成为北欧理论物理研究所的首任主席。为纪念玻尔，国际纯粹与应用化学联合会决定以他的名字命名 107 号元素，**𨨏**。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B0%BC%E5%B8%8C%E7%B1%B3":{"title":"尼希米","content":"\n尼希米同样也是生活在波斯帝国宫廷里的犹太人，在朝廷中受到波斯皇帝的重用。尼希米后来担任了犹太行省的总督。到了耶路撒冷之后，他召开布道大会，帮助犹太人重新树立信仰，同时革除各种陋习。\n\n如果说，[[以斯拉]]只是对民众的生活产生了影响，而尼希米则更进一步，他对犹太教进行了宗教改革，制定了犹太人的行为规范。尼希米提倡人在精神上的追求，反对物质主义和腐败、堕落的生活。尼希米自己凡事都谦卑地恳求上帝的帮助，他的这种态度让其他的犹太人也同样全心信仰上帝。这次改革，使得犹太教不再仅仅约束人的信仰，同样也严格约束人的行为，对推动犹太教成为一神教发挥了重要的作用。尼希米的事迹后来被记载在《尼希米记》中\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B1%95%E7%A4%BA%E7%BB%84%E4%BB%B6":{"title":"展示组件","content":"\n# 展示组件\n\n展示组件内部是没有状态管理的，正如其名，就像一个个“装饰物”一样，完全受制于外部的 props 控制。展示组件具有极强的通用性，复用率也很高，往往与当前的前端工程关系相对薄弱，甚至可以做到跨项目级的复用。\n\n## 代理组件\n\n代理组件常用于封装常用属性，减少重复代码。关于代理组件你应该不陌生，可能经常会写。\n\n```js\nconst Button = props =\u003e\n\n  \u003cbutton type=\"button\" {...props}\u003e\n\n```\n\n虽然进行封装感觉是多此一举，但切断了外部组件库的**强依赖特性**。在大厂中引入外部组件库需要考虑两点：\n\n- 如果当前组件库不能使用了，是否能实现业务上的无痛切换；\n- 如果需要批量修改基础组件的字段，如何解决？\n\n## **样式组件**\n\n样式组件也是一种代理组件，只是又细分了处理样式领域，将当前的关注点分离到当前组件内\n\n### **布局组件**\n\n```js\n\u003cLayout Top={\u003cNavigationBar /\u003e} Content={\u003cArticle /\u003e} Bottom={\u003cBottomBar /\u003e} /\u003e\n```\n\n由于布局组件无需更新，就可以通过写死**shouldComponentUpdate**  的返回值直接阻断渲染过程。对于大型前端工程，类似的小心思可以带来性能上的提升。当然，这也是基于代理组件**更易于维护**而带来的好处。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B3%B0%E7%BB%88%E5%AE%9A%E5%BE%8B":{"title":"实例","content":"\n#卡片/术语卡\n\n峰终定律，指我们对一件事物的记忆仅限于高峰和结尾，事件过程对记忆几乎没有影响。高峰之后，终点出现得越迅速，这件事留给我们的印象越深刻。作者因这个认知获得诺贝尔奖。\n\n# 实例\n\n## 疼痛范围值\n\n![https://res.weread.qq.com/wrepub/epub_573975_42](https://res.weread.qq.com/wrepub/epub_573975_42)  \n最糟糕的评估（8 ～ 10）对这两位患者来说是相同的，但患者 A 在过程结束前的最后评估是 7，而患者 B 只是 1。\n\n### 启示\n\n这种选择对医疗实践有所启示，我们注意到：\n\n- 如果目的是为了减少患者的痛苦记忆，那降低最为疼痛时的疼痛感就比将疼痛的过程减到最短更为重要。同样的道理，如果患者在过程结束时感到的疼痛相对较轻，他对此过程的记忆就会更好，那么逐渐减轻疼痛比急剧减轻更可取。\n- 如果想减少实际体验到的痛苦，迅速完成这个过程或许更合适，即使这样做会让患者更疼痛并给患者留下可怕的记忆。\n\n## 简的一生\n\n迪耶内简要地描述了简的一生（简是虚构出来的人物）：简从未结婚生子，一场车祸让她丧命，但死的时候并不痛苦。对于简的故事有这么一个版本：\n\n- 她一生都非常幸福（这种幸福可能持续了 30 年或 60 年），她将工作视为享受，喜爱度假，花了很多时间与朋友聚会，培养自己的爱好。\n- 在故事的第二个版本中，简的寿命被延长了 5 年，她于 35 岁或 65 岁逝世。迪耶内描述说简生命的最后 5 年很快乐，但不及从前那样快乐.\n\n每位受试者在读过其中一份为简设计好的“传记”以后，都需要回答两个问题，“纵观简的一生，你认为她的人生有多圆满”以及“你认为简的一生经历了多大的幸福或不幸”。\n\n# 生活中的例子\n\n聚精会神地听唱片中的交响乐时，由于光盘有刮痕，快结束时产生了令人厌恶的声音，糟糕的结尾往往“毁了全部的体验”。但实际上毁的并非是体验，只是对它的记忆而已。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B7%A5%E5%85%B7%E4%B8%BB%E4%B9%89":{"title":"工具主义","content":"\n# 工具主义\n\n#卡片/术语卡\n\n## 简介\n\n：xxxxx\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B7%A5%E7%A8%8B%E6%95%88%E7%8E%87%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86":{"title":"工程效率问题收集","content":"","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B7%B4%E6%AF%94%E4%BC%A6%E4%B9%8B%E5%9B%9A":{"title":"巴比伦之囚","content":"\n巴比伦之囚事件是犹太历史上最黑暗的时刻，因此[[耶利米]]也被称为“最黑暗时的先知”或者“流泪的先知”。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B8%8C%E6%B3%A2%E6%88%98%E4%BA%89":{"title":"希波战争","content":"\n希腊人和波斯人原本都是古印欧人的一支。但是由于波斯人和希腊人“分家”上千年了，而且走向了不同的文明发展道路，因此当这两个民族都在世界历史舞台上崛起，而且文明圈的范围有重叠时，两种文明之间的对撞也就变得不可避免了。\n\n这一场大战前后延续了近半个世纪。我们现在事后分析，你会发现，从当时双方的人口数量和经济总量来讲，希波战争是一场完全不对等的战争。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B8%8C%E8%85%8A%E6%96%87%E6%98%8E":{"title":"希腊文明","content":"\n## 古风时代\n\n希腊地区的文明在公元前1100年到公元前800年间进入了一段黑暗时代。迈锡尼时期宏伟高大的建筑不见了，就连青铜器等手工艺品也制作得粗制滥造，很多技术完全失传了。至今我们也没有找到那个时期留下的文字记载，似乎文字也已经失传了。人们的生活似乎也从城市回到了农村，甚至可能过回到了游牧的生活。\n\n但是从公元前800年开始，古希腊地区的文明突然复苏，并且繁荣起来。在随后的一个世纪里，古希腊的人口增加了7倍，农业生产水平也有了突飞猛进地进步。后来，人们把从公元前8世纪到公元前6世纪的这两百多年快速发展的时间，称为古希腊历史上的“古风时代”。\n\n古希腊城邦的这种特点和比它早了3000年的[[苏美尔]]城邦非常相似。它们都是城市和周围农村的结合体，在经济上相互依存，城市是城邦的中心。在这两个文明的各个城市中，最明显的建筑都是神庙，它们不仅是为了祭祀神灵，而且也是城邦的政治中心。\n\n在古希腊所有神庙中，最著名的就是雅典卫城的[[帕特农神庙]]了。\n","lastmodified":"2023-09-18T14:54:47.550454529Z","tags":null},"/%E5%B8%95%E7%89%B9%E5%86%9C%E7%A5%9E%E5%BA%99":{"title":"帕特农神庙","content":"\n帕特农是雅典守护神雅典娜的别名，是希腊语中处女的意思。在雅典娜的神殿不远处，还有海神波塞冬的神殿。相传，海神波塞冬曾经和雅典娜共同争夺过这座城市的保护权，但是最后输给了雅典娜\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B8%95%E7%B4%AF%E6%89%98%E6%9C%80%E4%BC%98":{"title":"帕累托最优","content":"\n# 帕累托最优\n\n帕累托最优也称为帕累托效率（Pareto Efficiency）、帕雷托最佳配置，是博弈论中的重要概念。\n\n帕累托最优是指资源分配的一种理想状态，假定固有的一群人和可分配的资源，从一种分配状态到另一种状态的变化中，在没有使任何人境况变坏的前提下，使得至少一个人变得更好，这就是帕累托改进或帕累托最优化。帕累托最优的状态就是不可能再有更多的帕累托改进的余地；换句话说，帕累托改进是达到帕累托最优的路径和方法。帕累托最优是公平与效率的  「理想王国」。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B8%B8%E7%94%A8-git-%E5%91%BD%E4%BB%A4":{"title":"常用 git 命令","content":"\n## 整理分支\n\n```shell\n## 删除本地分支：\ngit branch -d 分支名（remotes/origin/分支名）\n\n##强制删本地：\ngit branch -D 分支名\n\n##删除远程分支：\ngit push origin --delete 分支名（remotes/origin/分支名）\n## 修剪远程分支\ngit remote prune origin\n```\n\n## 删除 master 以外的分支\n\n```shell\ngit checkout master\ngit branch | grep -v 'master' | xargs git branch -D\n```\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B8%B8%E8%A7%81%E7%9A%84%E9%94%99%E8%AF%AF%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95":{"title":"常见的错误笔记方法","content":"\n# 常见的错误笔记方法\n\n1. 记录金句\n2. 过于完整\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B8%B8%E9%9D%92%E7%9A%84%E6%80%9D%E7%BB%B4%E6%A1%86%E6%9E%B6":{"title":"常青的思维框架","content":"\n# 常青的思维框架\n\n## **一：做事的一些原则**\n\n**1.凡做事，必有方法。**  \n（绝不依赖于感觉做事是我给自己卡的标准，我会强制让自己思考和提炼出科学的方法，SOP 流程，通用原则等，**做事我追求的是可重复，可复制的科学式打法，而不是今天有，明天没有的拍脑袋灵感式的打法。**）\n\n**2.凡方法，必找原理。**  \n（当一个动作收到反馈的时候，我都会做这样的思考：**为什么这个方法有效或者无效？我做对了什么？构成这个结果的因素有那些？那一个是最核心的？**通过反复的追问，把根本的东西提炼出来，让打法可复制。）\n\n**3.凡事项，必拉清单。**  \n（我做事有三个标配动作，1.在每周周末为下个周拉出任务统筹清单。2.在一天开始的时候严格遵循先梳理，后部署的原则，先拉 to do list，然后再去做事。3.排列事项安排的时候，绝不用脑子去记，一律放入外脑中处理！）\n\n**4.凡安排，必做准备。**  \n（对重要的事情，绝不打无准备之仗！！我绝不相信，我即兴的发挥，能赶得上我的精心准备，**多算胜，少算不胜，况无算乎？**）\n\n**5.凡现象，必看本质。**  \n（通过感官获取到的那些引起我情绪波动的东西，绝对不能让它停留在情绪上，而是要强行用理性透过情绪部分，去分析它，把因果倒推，挖出因果链来）\n\n**6.凡事后，必做复盘。**  \n（没有复盘的做事，是无法产生积累效应的，经验无法沉淀下来，永远都是低水平的重复！）\n\n**7.凡复盘，必有迭代。**  \n（不追求一步登天，但**今天要比昨天好，明天要比今天好**，刻意的去拔高，每天进步一点点，锲而不舍，金石可镂！）\n\n## **二：学习的一些原则**\n\n**1.凡练习，必然刻意。**  \n（对我来说，没有做到让身体、生理产生不适的练习，统统属于无效练习！！）\n\n**2.凡灵感，必做记录。**  \n（灵感的出现可遇不可求，**不记录，转瞬即忘**，我从不相信我的记忆力！）\n\n**3.凡输入，必有输出。**  \n（没有输出的输入都是耍流氓的，抓框架、梳逻辑、记笔记、做输出完成学习闭环….）\n\n**4.凡输出，必有连接。**  \n（学到的东西必须解释 5 个以上的生活现象！）\n\n**5.凡链接，必做迁移。**  \n（当前的概念、知识点、打法…..，还可以用在哪？还可以用来解释什么现象？）\n\n##  **三：为人处事原则**\n\n**1.凡现象，必接受。**  \n（接受一切文化现象的存在，无论是让我爽，还是让我不爽的，都统统无条件接受它，做到头脑极度开放，不妄自菲薄，傲慢自负！）\n\n**2.凡文化，必多元。**  \n（承认和尊重各个背景，各种阶层间的人群差异，了解各个阶层的人和事，接受他们的生存处境，和文化背景，**在人上把别人当人，在人下把自己当人。**）\n\n**3.凡动作，必利他。**  \n（利他才是最大的利己，将欲取之，必故与之。想要索取，请先思考我能为你带来什么？我能给你提供什么价值？**要想着怎么给，而不是怎么去拿！**）\n\n**4.凡争执，必立场。**  \n（挣脱角色的束缚，换位思考，刻意训练移情。如果我站在他的立场，我会怎么去做，我会是什么感受？）\n\n**5.凡交人，必积极。**  \n（积极主动，主动的去释放善意！！）\n\n## **四：协作协同的一些原则**\n\n**1.凡做事，必有反馈。**  \n（**凡事有交代，事事有着落，件件有回音**，这是一名职场人基本的职业修养！）\n\n**2.凡问题，必带方案。**  \n（当问题出现，需要协商或向上汇报的时候，必然要求自己自带方案，即使方案有时候不是那么好，但是我给了别人选择的权利！）\n\n**3.凡情绪，必分事实。**  \n（区分事实和观点，利益绝对不等于立场，区分出对方情绪中的观点和事实部分，而不是被他人的情绪裹挟，产生无谓的感性烦恼！）\n\n**4.凡想法，必有数据。**  \n（我不听 I think，请拿数据说话！世界太大，太多元了，任何人都有盲区，我能把握的只是一少部分人，想要把握更多的人，就必须要通过数据说话，比如一名单身汉就理解不了，真正为人父母了那是一种怎样的生活和心理状态……）\n\n**5.凡表达，必说三点。**  \n（凡事请刻意练习用三句话说明白，三句话都说不明白，给你三十句话也未必能说明白，**简单的东西才能被理解，被理解的东西才能被记住，被记住的东西才能被执行！**）\n\n**6.凡困惑，必去请教。**  \n（遇到问题的时候，先穷尽脑力，做完所有自己能做到的基础研究，如果反复的跑不通逻辑，则马上请教高手，站在巨人的肩膀上，绝不闭门造车！）\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B9%82%E5%BE%8B%E6%B3%95%E5%88%99":{"title":"幂律法则","content":"\n# 幂律法则\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220426142452.png)\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B9%B3%E5%8F%B0%E5%87%8F%E5%B0%91%E5%A4%B4%E9%83%A8%E6%B5%81%E9%87%8F":{"title":"平台减少头部流量","content":"\n# 平台减少头部流量\n\n雪梨的店真的没了，我估计阿里很快会学习抖音,减少头部的流量，快手也开始去头部化了。  \n这是所有平台共同的趋势，共同富裕。\n\n头部确实优秀，那都是万里挑一的人才，但发展到后面都是冷冰冰的机构,马太效应导致这些机构寡头化，越来越压榨商家，打破了正常的商业规律,形成恶性循环,对整个商业环境是一种破坏。.\n\n当小商小贩再无出头之日,那平台就会彻底失去活力。\n\n## 为什么会失去活力\n\n为什么说平台头部化以后会失去活力。我们回顾 2013-2018,那时候小商家还能赚到钱，有动力开发好产品,愿意积累口碑,做长久生意的人多。  \n后面逐渐资本化，流量越来越倾向头部，小卖家渐渐失去信心，赚快钱多人越来越多，认认真真开发产品的越来越少。  \n特别是平台下场抢饭碗，即当裁判又当运动员，比如天天特卖工厂店，半价仿了我的爆款（怀疑找的低成本工厂，用料差得一 b)排很前面，那我还创新个屁啊你说是不是。  \n我有许多客户也是电商卖家，以前来我厂里都会兴高采烈地讨论爆款，怎么设计怎么改进，怎么防山寨，叮嘱我不要卖给别人，现在很少来了，因为他们觉得哪怕开发出新品，也就这点流量，爆不起来了。赚钱的动力没了。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B9%B4%E5%BA%A6%E5%BE%81%E6%96%87-%E6%94%BE%E5%BC%83%E5%B7%A5%E5%85%B7%E5%92%8C%E6%96%B9%E6%B3%95%E5%90%8E%E6%88%91%E6%94%B6%E8%8E%B7%E4%BA%86%E6%95%88%E7%8E%87%E7%94%9F%E6%B4%BB":{"title":"年度征文 - 放弃工具和方法后，我收获了效率生活","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [年度征文 | 放弃工具和方法后，我收获了效率生活](https://sspai.com/post/70805)\n- tag：#\n- date: [[ 2022-02-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 本能的反应是，我们要追逐效率。只要处理得够快，信息就追不上我们。我们试图用工具和方法论，让自己快速清理掉这些信息。比如试图用 「5 秒的短视频」 来概括复杂的事情，比如用 「边听播客边运动」 来让身体和大脑都在路上，比如用 「看电影解说」 的方式来看电影。但快速的清理，带来的是更多的纷扰。快速的清理成为了推荐算法的美餐，快速清理之后，等着我们的并不是一个个完成的待办清单，而是更多、更快、更强、更吸引注意力的信息。在这场对抗中，信息在不断升级进化，人类也不断面临更强的 「信息攻击」。\n- 先把所有的信息收集起来，然后进行归纳分类总结，凝练出更高效的信息摄入，最后整理并输出。所以这套工作流抽象下来是 3 个步骤：1. 收集信息2. 归纳并输入3. 输出发布\n- 我们太喜欢收藏信息，以为收藏就可以占为己有。但收藏仅仅是个开始，不加以输入和输出，信息就仅仅停留在工具软件的数据库当中，没有完成个体的内化，相当于白白收藏。所以，假设我们有 2 小时时间，或许不应该以 「收藏 720 篇好文章」 为目标，而是以 「输出一篇好文章」 为目标。 而 「归纳输入信息」 和 「输出发布」 这种步骤，往往更需要的是人脑的深度参与和思考，这不是工具能替代的 。人脑思考的 「弱工具」 属性，意味着需要有认知和方法论的支撑，仅有冷冰冰的工具是不够的。\n- 我发现，好的东西太多。在我能顺畅处理信息后，我反而更加焦虑。\n- 冷静分析发现：有了信息处理的能力后，我成为了一个拿着锤子的人，我不自控地满世界找钉子，更多时候，哪怕对方不是钉子，也会被我锤上一锤 ---- 我把太多不重要的信息，也纳入自己的 「效率生活」 中了。\n- 当你 「特别想做点有用的事」 的时候，你就越焦虑、紧张、做不出事情。当你 「松弛到尽情玩耍」 的时候，你就越容易做出事情。让自己松弛，需要更多地和环境互动，让周围的环境为自己排忧解难。如果你害怕朋友不喜欢你，就和他聊天熟络一下，会发现不愉快大概率是不熟悉带来的臆想；如果你好奇公司最新的动向，就找人问问，试探和了解本身就是行动的前奏，不走出去调查，而仅靠自己想，是走不上康庄大道的。\n- 尊重事情本来的节奏\n- 并不是说奋斗无用，而是，我之前的预期太高，强求了不现实的目标。我梦想的这种职业发展节奏，似乎只可能在 2010 年左右入行互联网的少部分人身上才可能发生。而现在的互联网行业，仿佛是一艘平稳的大船。我的做法相当于试图在一搜 100KM 时速的大船上，追赶飞机。胳膊拗不过大腿，留给自己的只有着急和焦虑。\n- 第一个理论是：坚持做擅长的事情。假设一件事情，你的单次成功率是 1%，那么按照概率来说，做 299 次你的整体成功率可以达到 95%。如果进一步换成坚持单次成功率 20% 的事情，则只需要重复 14 次。\n- 薯条在空气炸锅烤 17 分半，方便面煮 3 分 15 秒，写一篇高考作文用 45 分钟。第二个理论是，每件事都有恰到好处的节奏。这些都是不断尝试出来的，我觉得最舒服的节奏。倘若一份工作只需要一天，我却给自己多安排了一天，我一定会费心思对抗拖延，工作质量也会更差。所以再急，也不能破坏事物原有的节奏，这就是 「慢慢来才比较快」。\n- 所以我想，真正的 「效率」，不是把自己活成 「无脑砸掉更多艺术品的锤子」，而是把自己打磨成 「可以创造传世之作的锋利刻刀」。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B9%BB%E5%A4%9C":{"title":"《 幻夜 》","content":"\n# 《 幻夜 》\n\n# 元数据\n\n\u003e [!abstract] 幻夜\n\u003e - ![ 幻夜|200](https://weread-1258476243.file.myqcloud.com/weread/cover/66/YueWen_230108/t7_YueWen_230108.jpg)\n\u003e - 书名： 幻夜\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 为父亲守灵的晚上，弥漫在雅也心中的不是悲伤，而是愤怒，父亲留下的一切眼看就要被狡猾的舅舅夺走。然而，一场突如其来的地震让一切扭转。  \n震后的混乱中，雅也看到舅舅被压在房梁下，挣扎着向他求救。一股冲动袭来，他捡起身旁的瓦块，朝舅舅的脑袋砸去。这样就可以解决一切了，他准备起身离开。突然，他发现不远处站着一个年轻女子，正圆睁双眼看着他。\n\u003e - 出版时间 2018-05-10 00:00:00\n\u003e - ISBN： 9787544291811\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6XQ1kaHHQ  \n⏱ 2018-03-11 20:18:41\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%B9%BF%E4%B8%9C":{"title":"美食","content":"\n# 美食\n\n- [窑鸡](https://www.bilibili.com/video/BV1Vx4y1N7Pt/?spm_id_from=333.1007.tianma.1-1-1.click\u0026vd_source=a930d80dde6abe687e6523994d230143)\n   - 波浪山庄满记土窑烧鸡\n   - 增城朱村里面也有一间，去前得预约\n- 文记肠粉\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BA%B7%E5%A5%88%E5%B0%94%E7%AC%94%E8%AE%B0%E6%B3%95":{"title":"康奈尔笔记法","content":"\n康奈尔笔记法（Cornell Notes system），又叫 5R 笔记。是康奈尔大学教育学教授沃尔特 · 波克于 1940 年代提出的一种笔记方法。  \n![康奈尔笔记法 / 来自 Wikipedia](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230815112423.png)\n\n康奈尔笔记法的形式是固定的\u0008，一张纸被分为三栏：左侧是关键词栏（也叫线索栏、问题栏），右侧是笔记栏，底部是总结栏。这三个部分分别用来记录短句、正文、总结。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BB%B6%E8%BF%9F%E5%AE%9E%E9%AA%8C":{"title":"延迟实验","content":"\n# 延迟实验\n\n这个实验的基本思路是，我们可以用涂着半镀银的反射镜来代替双缝。如果把一块半射镜和光子的入射途径摆成 45 度角，那么这个光子有一半可能直飞，另一半可能被反射。这样一来，它就有了两条可能的前进路径，这跟双缝实验里，电子可以选择左边或者右边的路径在本质上是一样的。  \n![延迟实验](https://res.weread.qq.com/wrepub/epub_25622039_221)  \n但是，通过在半道上摆放其他反射镜，我们又可以把这两条分开的岔路再交汇到一起，如上图所示。如果我们简单地在终点观察光子飞来的方向，就可以确定这个光子当初究竟走了哪条道路。而这样做，就相当于我们探测电子通过了哪条狭缝，结果会得到一个随机、但唯一的答案。  \n不过，只要我们愿意，我们同样可以让这个光子“同时沿着两条路径而来”：只要在终点处再插入一块同样呈 45 度角的半镀银反射镜，然后仔细安排位相，我们完全可以让这个光子“自我干涉”，在一个方向上抵消，而只在另一个方向出现。这样做，就好比让电子同时通过两条狭缝而产生干涉图纹，按照量子派的说法，因为发生了干涉，光子必定“同时经过了两条道路”，就像同时通过了双缝一样！  \n总而言之，如果我们不在终点处插入半反射镜，光子就沿着某一条道路而来，反之，它就同时经过两条道路。现在的问题是，是不是要在终点处插入反射镜，我们可以在“最后关头”才做出决定，而这时候理论上光子早就通过了第一块反射镜，这个事件已经成了过去。然而，有趣的是，它却必须在快到达终点的时候，根据我们的选择，反过去决定自己当初到底走的是“一条路”还是“两条路”。也就是说，它必须根据“未来”的事件，去选择自己的“过去”应该怎样发生！  \n![延迟实验2](https://res.weread.qq.com/wrepub/epub_25622039_222)  \n想象你去看电影，虽然你对电影内容一无所知，但很明显，既然已经剪完上映，说明这部电影早已杀青。但走到电影院门口的时候，你却被告知，只要你从左门进去，就会发现它是周星驰主演的，而只要从右门进去，它就会是周润发主演的。换句话说，这部电影当初的主演是谁，可以由你当场来决定！  \n如果你觉得这件事情很奇妙，那么延迟实验表达的是同样的意思。虽然听上去古怪，这却是哥本哈根派的一个正统推论！惠勒后来引用玻尔的话说，“任何一种基本量子现象只在其被记录之后才是一种现象”，光子是一开始还是最后才决定自己的“历史”，这在量子实验中是没有区别的，因为在量子论看来，历史不是确定和实在的——除非它已经被记录下来。更精确地说，光子在通过第一块半透镜到我们插入第二块半透镜之间“到底”在哪里，它是个什么，这是一个没有意义的问题。我们没有权利去谈论这时候光子“到底在哪里”，因为在观测之前，它并不是一个“客观真实”！  \n![延迟实验3](https://res.weread.qq.com/wrepub/epub_25622039_223)\n\n### 验证\n\n也许你会觉得这纯粹是痴人呓语，然而，在惠勒的构想提出 5 年后，马里兰大学的卡洛尔·阿雷（Carroll O. Alley）和其同事当真做了一个延迟实验，其结果真的证明，我们何时选择光子的“模式”，这对于实验结果是无影响的！与此同时，慕尼黑大学的一个小组也作出了类似的结果。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BB%BA%E7%AB%8B%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E8%BF%99%E4%BB%BD%E6%8C%87%E5%8D%97%E5%B0%B1%E5%A4%9F%E4%BA%86":{"title":"建立知识体系，这份指南就够了","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [建立知识体系，这份指南就够了](https://mp.weixin.qq.com/s/SZ-Vn587R590RAGyZH-TPA)\n- tag：#\n- date: [[ 2022-02-21  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 在研究和学习上，也是一样的。我们说，最好的学习方法是什么？是问题驱动。一定是你先有了一个问题，对某个事物产生了兴趣，你再去探索它，去完善和丰富自己的知识体系，来试着解决问题。\n- 所以，从应用层面上来说，同样有 3 个层次：1）使命：这个领域是为了什么而存在的？2）大问题：在这个领域中，存在着哪些推动领域发展的「大问题」？前人们是如何思考、回答的？3）小问题：在具体的学习过程中，我对哪些方面有兴趣？我能提出什么样的问题？我如何组织和思考这些问题？\n- 如果你身边缺乏足够专业的人选，不妨考虑像 Coursera、EDX 等专业的在线教育平台。它们往往有比较成熟的学习路径设计和延伸阅读，这些都有助于建立自己的知识体系。\n- 我在学习任何一个知识点时，必然会问三个问题：1）它是什么？2）它从哪里来？3）它往哪里去？\n- 第一个问题，我会去找「同类项」。亦即，从记忆里找到与其相似的概念，弄清楚，它们之间有哪些异同点；这个新的知识点属于什么，不属于什么；是什么，不是什么。第二个问题，我会去往上溯源，找到这个知识点的来源：谁提出的？怎么来的？原本是为了解决 / 解释什么的？造成它的原因是什么？等等。我会不断地问「为什么」，来逼近整个逻辑链条的起源。第三个问题，我会去往下拓展，去找这个知识点的应用情景。我会去思考，把它放到这个场合下，会怎么样；把它放到那个语境下，又会怎么样。这就是我的「包围式学习」。\n- 前面讲过，任何一个领域的发展，都必然不断重复「正 - 反 - 合」的过程 —— 旧的「合」，会成为新的「正」，再进行循环，不断螺旋上升。这就是一次「迭代」。\n- 许多人的弱点就在这里：笃信自己的「正」，却不敢直视「反」，更不敢推翻自己。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BB%BA%E7%AB%8B%E7%A7%91%E5%AD%A6%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%A7%82":{"title":"建立科学的学习观","content":"\n# 建立科学的学习观\n\n## Meatdata\n\n- author：\n- link：[【教育部产学】不良学习误区自我排查：掌握科学学习，考入理想学校\\_哔哩哔哩\\_bilibili](https://www.bilibili.com/video/BV1aS4y1X7eY)\n- tag：\n- date: [[2021-12-07]]\n- Notes:\n\n## 总结\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211208122524.png)\n\n- 确定泛化目标 =\u003e 决定了我们努力的方向和可以获得的成果\n  - 是否同时使用了指令学习和归纳学习\n  - 是否盲目填充而导致以偏概全 ()\n- 填充材料上 =\u003e 达成目标的代价和条件\n  - 是否使用了既有提问又有回答的有效实例\n  - 是否掌握了已掌握相关名词的有效指令\n  - 遇到瓶颈时，检查自己是否需要扩充新的材料\n  - 以及是否需要克服旧认识对新材料的抗拒\n- 存储知识 =\u003e 以什么方式利用材料在脑中建构知识 （ 方法论？）\n  - 是否留有足够睡眠，让知识能被大脑所构建\n  - 是否因一蹴而就的想法，导致了无形的压力\n  - 是否经历了具有完整执行和反馈答案的有效训练 （[[《 刻意练习 》]]）\n  - 对指令性材料，是否有扩充新例子，是否与自己所构建的旧内容建立联系，精细加工（[[卡片笔记法]] )\n- 对成果归纳 =\u003e 知晓建构的知识有什么特点，建构时会遇到哪些障碍以及使用时有什么局限\n  - 检查已建构的知识是否存在 归纳不足（欠拟合） 或 以偏概全（过拟合 ） 的情况\n  - 应用时，要注意自己是否注意了应用的有效范围\n  - 所建构的知识是否具有可泛化性\n- 验证结果\n  - 给大脑提供反馈情况\n  - 对新情况进行验证，看自己的结果是欠拟合还是过拟合了，\n  - 是否可以转换出意思相同的不同表述[[费曼学习法]]\n\n**不管用什么学习方法，只要确保了这 5 个层面的正确性，就是好的学习方法。**\n\n## 闪念\n\n- 大脑通过将有效材料转化成可泛化的规律，是通过睡眠时间将原有结构调成特定结构\n- 在看视频记录的时候，发现一心二用比较难，\n- 每天新增几个知识点，不必硬啃一个学科。--- 多拨点种子\n- 如何刺激相关神经细胞  \n  **实际执行一个目标并得到结果**，即使做的并不好  \n  做题要经过完整的思考，即便思考的是错的\n- 有效的实例  \n  做完题 =\u003e 对答案  \n  听完听力=\u003e 对意思\n- 实例型材料  \n  应试新题 =\u003e 应试知识 =\u003e 应试答案\n- 指令性材料\n  1. 学习是指由经验引起的个体知识或者行为的相对持久的变化\n  2. 验证方式： 用另一个描述方式 [[费曼学习法]]\n- 理解知识的本体\n- 对读薄的误解，并不是通过删除内容把书变薄\n- 前人都验证了，为什么我们还要验证？\n- 了解学习和记忆是两回事\n  - 学习: 达成泛化的行为 [[大脑探秘#什么是学习]]\n  - 记忆: 达成重现的行为 [[大脑探秘#什么是记忆]]\n- 是的\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99":{"title":"找出变化的地方","content":"\n在面向对象的程序设计中，开放-封闭原则（OCP）是最重要的一条原则。很多时候，一个程序具有良好的设计，往往说明它是符合开放-封闭原则的。开放-封闭原则最早由 Eiffel 语言的设计者 Bertrand Meyer 在其著作 Object-Oriented SoftwareConstruction 中提出。它的定义如下：\n\n\u003e 软件实体（类、模块、函数）等应该是可以扩展的，但是不可修改。\n\n开放-封闭原则的思想：当需要改变一个程序的功能或者给这个程序增加新功能的时候，可以使用增加代码的方式，但是不允许改动程序的源代码。\n\n# 找出变化的地方\n\n开放-封闭原则是一个看起来比较虚幻的原则，并没有实际的模板教导我们怎样亦步亦趋地  \n实现它。但我们还是能找到一些让程序尽量遵守开放-封闭原则的规律，最明显的就是找出程序  \n中将要发生变化的地方，然后把变化封装起来\n\n# 修改方式\n\n## 用对象的多态性消除条件分支\n\n过多的条件分支语句是造成程序违反开放-封闭原则的一个常见原因。每当需要增加一个新的 if 语句时，都要被迫改动原函数。把 if 换成 switch-case 是没有用的，这是一种换汤不换药的做法。实际上，每当我们看到一大片的 if 或者 swtich-case 语句时，第一时间就应该考虑，能否利用对象的多态性来重构它们。\n\n## 放置挂钩\n\n我们在程序有可能发生变化的地方放置一个挂钩，挂钩的返回结果决定了程序的下一步走向。这样一来，原本的代码执行路径上就出现了一个分叉路口，程序未来的执行方向被预埋下多种可能性。\n\n## 使用回调函数\n\n回调函数是一种特殊的挂钩。我们可以把一部分易于变化的逻辑封装在回调函数里，然后把回调函数当作参数传入一个稳定和封闭的函数中。当回调函数被执行的时候，程序就可以因为回调函数的内部逻辑不同，而产生不同的结果\n\n# 设计模式中的开闭原则\n\n1. [[发布—订阅模式]]\n2. [[模板方法模式]]\n3. [[策略模式]]\n4. [[代理模式]]\n5. [[职责链模式]]\n\n#\n\n实际上，让程序保持完全封闭是不容易做到的。就算技术上做得到，也需要花费太多的时间和精力。而且让程序符合开放-封闭原则的代价是引入更多的抽象层次，更多的抽象有可能会增大代码的复杂度。\n\n更何况，有一些代码是无论如何也不能完全封闭的，总会存在一些无法对其封闭的变化。作为程序员，我们可以做到的有下面两点。\n\n- 挑选出最容易发生变化的地方，然后构造抽象来封闭这些变化。\n- 在不可避免发生修改的时候，尽量修改那些相对容易修改的地方。拿一个开源库来说，修改它提供的配置文件，总比修改它的源代码来得简单。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F":{"title":"异常监控系统","content":"\n# 异常监控系统\n\n## 异常类型\n\n### js 异常\n\n- **try-catch**\n\n  缺点：无法捕获异步错误\n\n- **window.error**\n\n  可捕获异步，信息全面\n\n  *返回 true 就不会被上抛了。不然控制台中还会看到错误日志。*\n\n  缺点：无法捕获网络请求错误\n\n- **监听 error 事件**\n\n  ```JavaScript\n  window.addEventListener('error',() =\u003e {}）\n  ```\n\n- **Promise 错误**\n\n  ```JavaScript\n  window.addEventListener(\"unhandledrejection\", (e) =\u003e {\n    throw e.reason;\n  });\n  ```\n\n- **Async/await 错误**\n\n  本质就是 Promise 监听 unhandledrejection 向上抛出错误即可\n\n- **总结**\n\n  我们可以将 unhandledrejection 事件抛出的异常再次抛出就可以统一通过 error 事件进行处理了。\n\n  ```JavaScript\n  window.addEventListener(\"unhandledrejection\", (e) =\u003e {\n    throw e.reason;\n  });\n  window.addEventListener(\n    \"error\",\n    (args) =\u003e {\n      console.log(\"error event:\", args);\n      return true;\n    },\n    true\n  );\n  ```\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173239.png)\n\n这是 AOP（面向切面编程）设计模式，当错误发生的时候，我们会在 catch 中重新 throw 一个错误出来，最后在将原生 addEventListener 抛出执行。\n\n### Vue\n\n```JavaScript\nVue.config.errorHandler = (err, vm, info) =\u003e {\n  let { message, name, script = \"\", line = 0, column = 0, stack } = err;\n  console.log(\"errorHandler:\", err);\n};\n```\n\n### React\n\n**错误边界仅可以捕获其子组件的错误**。错误边界无法捕获其自身的错误。如果一个错误边界无法渲染错误信息，则错误会向上冒泡至最接近的错误边界。\n\n使用 componentDidCatch 进行错误捕获\n\n```JavaScript\nimport React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidCatch(error, info) {\n    // 发生异常时打印错误\n    console.log(\"componentDidCatch\", error);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n```\n\n## 环境信息收集\n\n[贝贝方案](https://www.bilibili.com/read/cv7634330?share_medium=android\u0026share_plat=android\u0026share_source=WEIXIN\u0026share_tag=s_i\u0026timestamp=1606999965\u0026unique_k=55W6jo)\n\n### 行为分类\n\n#### 用户行为\n\n使用 **addEventListener** 全局监听点击事件，将用户行为（click、input）和 dom 元素名字收集。当错误发生将**错误**和**行为**一起上报。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173302.png)\n\n#### 浏览器行为\n\n监听 XMLHttpRequest 对象的 onreadystatechange 回调函数，在回调函数执行时收集数据。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173251.png)\n\n监听 **window.onpopstate**，页面跳转的时会触发此方法，将信息收集。\n\n## 错误上报\n\n### img 上报\n\n推荐使用 1\\*1 的 gif\n\n**原因是：**  \n1、没有跨域问题  \n2、发 GET 请求之后不需要获取和处理数据、服务器也不需要发送数据  \n3、不会携带当前域名 cookie！  \n4、不会阻塞页面加载，影响用户的体验，只需 **new Image** 对象  \n5、相比于 BMP/PNG 体积最小，可以节约 41% / 35% 的网络资源小\n\n```JavaScript\nnew Image().src = \"http://localhost:7001/monitor/error\";\n```\n\n### ajax 上报\n\n```JavaScript\naxios.post(\"http://localhost:7001/monitor/error\");\n```\n\n### 上报数据\n\n![image-20201119171440046](./images/image-20201119171440046.png)\n\n```JavaScript\n// 分别是错误信息，错误地址，lineno，colno，error.message,error.stack\n```\n\n```JavaScript\n// 将info信息序列化后上传\nconst str = window.btoa(JSON.stringify(info));\nconst host = \"http://localhost:7001/monitor/error\";\nnew Image().src = `${host}?info=${str}`;\n```\n\n## 数据清洗去重\n\n```JavaScript\n      except: [\n        /^Script error\\.?/,\n        /^Javascript error: Script error\\.? on line 0/,\n      ], // 忽略某个错误\n     repeat:5\n// 重复出现的错误，只上报config.repeat次\n    repeat(error) {\n      const rowNum = error.rowNum || '';\n      const colNum = error.colNum || '';\n      const repeatName = error.msg + rowNum + colNum;\n      this.repeatList[repeatName] = this.repeatList[repeatName]\n        ? this.repeatList[repeatName] + 1\n        : 1;\n      return this.repeatList[repeatName] \u003e this.config.repeat;\n    }\n\n    // 忽略错误\n    except(error) {\n      const oExcept = this.config.except;\n      let result = false;\n      let v = null;\n      if (utils.typeDecide(oExcept, 'Array')) {\n        for (let i = 0, len = oExcept.length; i \u003c len; i++) {\n          v = oExcept[i];\n          if ((utils.typeDecide(v, 'RegExp') \u0026\u0026 v.test(error.msg))) {\n            result = true;\n            break;\n          }\n        }\n      }\n      return result;\n    }\n```\n\n## sourceMap 上传\n\n```JavaScript\nlet mapKeys = Object.keys(compilation.assets).filter(item =\u003e /.map$/.test(item.toLowerCase()))\nlet promiseList = []\nfor (let item in mapKeys) {\n    promiseList.push(\n        getClient(\n            appKeys,\n            appVersion,\n            mapKeys[item].substr(mapKeys[item].lastIndexOf('/') + 1),\n            compilation.assets[mapKeys[item]].source().toString()\n        )\n    )\n}\nPromise.all(promiseList)\n```\n\n## 插入 html\n\n```JavaScript\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst { type } = require('os')\nconst { resolve } = require('path')\nconst { compilation } = require('webpack')\nclass HtmlAddAttrPlugins {\n    constructor(options = {}) {\n        this.options = options\n    }\n\n    addAttr (tag, key, val) {\n        if (!tag || !tag.length) return\n        tag.forEach((tag, index) =\u003e {\n            let value = val\n            if (typeof val === 'function') {\n                value = val(tag, compilation, index)\n            }\n            !tag.attributes \u0026\u0026 (tag.attributes = {})\n            tag.attributes[key] = value\n        })\n    }\n    apply (compiler) {\n        let _self = this\n        compiler.hooks.compilation.tap('htmlPlugin', compilation =\u003e {\n            HtmlWebpackPlugin.getHooks(compilation).alterAssetTagGroup.tapAysnc('htmlPlugin',\n                (data, cb) =\u003e {\n                    let options = Object.assign({}, null, _self.options.attributes)\n                    Object.keys(options).forEach((key) =\u003e {\n                        let val = options[key]\n                        if (typeof value != \"string\" \u0026\u0026 typeof value != 'function') return\n                        _self.addAttr(data.headTags, key, value)\n                        _self.addAttr(data.bodyTags, key, value)\n                    })\n                    if (typeof cb === 'function') {\n                        cb(null, data)\n                    } else {\n                        return new Promise(resolve =\u003e resolve(data))\n                    }\n                })\n        })\n    }\n}\n```\n\n## 异常收集\n\n这里使用 egg 进行异常收集\n\n将错误接收并转码写入到日志中\n\n```JavaScript\nasync index() {\n    const { ctx } = this;\n    const { info } = ctx.query\n    const json = JSON.parse(Buffer.from(info, 'base64').toString('utf-8'))\n    console.log('fronterror:', json)\n    // 记入错误日志\n    this.ctx.getLogger('frontendLogger').error(json)\n    ctx.body = '';\n  }\n```\n\n## **整理与上报方案**\n\n除了异常报错信息本身，我们还需要记录用户操作日志，以实现场景复原。这就涉及到上报的量和频率问题。如果任何日志都立即上报，这无异于自造的 DDOS 攻击。因此，我们需要合理的上报方案。\n\n### **前端存储日志**\n\n|              |        |              |                |            |        |\n| ------------ | ------ | ------------ | -------------- | ---------- | ------ |\n| **存储方式** | cookie | localStorage | sessionStorage | IndexedDB  | webSQL |\n| **类型**     |        | key-value    | key-value      | NoSQL      | SQL    |\n| **数据格式** | string | string       | string         | object     |        |\n| **容量**     | 4k     | 5M           | 5M             | 500M       | 60M    |\n| **进程**     | 同步   | 同步         | 同步           | 异步       | 异步   |\n| **检索**     |        | key          | key            | key, index | field  |\n| **性能**     |        | 读快写慢     |                | 读慢写快   |        |\n\n综合之后，IndexedDB 是最好的选择，它具有容量大、异步的优势，异步的特性保证它不会对界面的渲染产生阻塞。缺点，就是 api 非常复杂，不像 localStorage 那么简单直接。针对这一点，我们可以使用**hello-indexeddb**这个工具\n\n当一个事件、变动、异常被捕获之后，形成一条初始日志，被立即放入暂存区（indexedDB 的一个 store），之后主程序就结束了收集过程，**后续的事只在 webworker 中发生**。在一个 webworker 中，一个循环任务不断从暂存区中取出日志，对日志进行分类，将分类结果存储到索引区中，并对日志记录的信息进行丰富，将最终将会上报到服务端的日志记录转存到归档区\n\n## 日志分析\n\n日志分析的关键在于 webpack 打包时将打包完成的 sourceMap 进行上传\n\n### webpack Plugins\n\n```JavaScript\napply(compiler) {\n    console.log('UploadSourceMapWebPackPlugin apply')\n    // 定义在打包后执行\n    compiler.hooks.done.tap('upload-sourecemap-plugin', async status =\u003e {\n        // 读取sourcemap文件\n        const list = glob.sync(path.join(status.compilation.outputOptions.path, `./**/*.{js.map,}`))\n        // console.log('list:', list)\n        for (let filename of list) {\n            await this.upload(this.options.uploadUrl, filename)\n        }\n    })\n}\n```\n\n### 服务端接收并保存\n\n```JavaScript\nasync upload() {\n    const { ctx } = this\n    const stream = ctx.req\n    const filename = ctx.query.name\n    const dir = path.join(this.config.baseDir, 'uploads')\n    // 判断upload目录是否存在\n    if (!fs.existsSync(dir)) {\n      fs.mkdirSync(dir)\n    }\n\n    const target = path.join(dir, filename)\n    const writeStream = fs.createWriteStream(target)\n    stream.pipe(writeStream)\n}\n```\n\n### 反序列化 Error\n\n使用 error-stack-parser 将上传的\n\n## 信息上报\n\n### 用户体验层\n\n[[Performance#关键性能指标]]\n\n### 业务层\n\n- PV(Page View)：页面浏览量或点击量\n- UV()：指访问某个站点的不同 ip 地址的人数\n- 页面停留时间：用户在每一个页面的停留时间\n\n## 小程序错误上报\n\n**差异化劫持，格式化上报**\n\n劫持 APP 方法\n\n```JavaScript\n  // 劫持原小程序App方法\n  rewriteApp() {\n    const originApp = App;\n\n    const self = this;\n    App = function (app) {\n      // 合并方法，插入记录脚本\n      ['onLaunch', 'onShow', 'onHide', 'onError'].forEach((methodName) =\u003e {\n        const userDefinedMethod = app[methodName]; // 暂存用户定义的方法\n        if (methodName === 'onLaunch') {\n          self.getNetworkType();\n          self.config.setLocation \u0026\u0026 self.getLocation();\n          self.config.setSystemInfo \u0026\u0026 self.getSystemInfo();\n        }\n        app[methodName] = function (options) {\n          methodName === 'onError' \u0026\u0026 self.error({ msg: options }); // 错误上报\n          return userDefinedMethod \u0026\u0026 userDefinedMethod.call(this, options);\n        };\n      });\n      return originApp(app);\n    };\n  }\n```\n\n劫持 Page 方法\n\n```JavaScript\n  // 劫持原小程序Page方法\n function rewritePage() {\n    const originPage = Page;\n    Page = (page) =\u003e {\n      Object.keys(page).forEach((methodName) =\u003e {\n        typeof page[methodName] === 'function'\n          \u0026\u0026 this.recordPageFn(page, methodName);\n      });\n      // 强制记录两生命周期函数\n      page.onReady || this.recordPageFn(page, 'onReady'); // 这个函数记录错误的时间，所在页面，方法名等信息\n      page.onLoad || this.recordPageFn(page, 'onLoad');\n      // 执行原Page对象\n      return originPage(page);\n    };\n  }\n```\n\n### 环境信息获取\n\n```JavaScript\n//app.js\nglobalData:{\n    referrer:{}\n}\nonShow(options){\n    this.globalData.referrer=options\n}\n\n// SDK.js\nlet App= getApp()\nlet refererObj= App.globalData.referrer\n```\n\n## 参考文章\n\n- [前端资源加载失败优化 | AlloyTeam](http://www.alloyteam.com/2021/01/15358/)\n- [使用 vue+node 搭建前端异常监控系统](https://mp.weixin.qq.com/s?__biz=MzAwMDY2OTU3NQ==\u0026mid=2247483938\u0026idx=1\u0026sn=071276a967d289cd6fc52599da7099fc\u0026chksm=9ae420caad93a9dc3338077c4ebec113ce3815b107182792312d39d3dd58a6da42f86f2d94e7\u0026mpshare=1\u0026scene=1\u0026srcid=1012eLPZMNk9ggaxTGm2Ofgi\u0026sharer_sharetime=1602485080984\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=e916915e2e1878497a86d937dde233c512320fc8e640b974e1f6c8c394c152aad3a254e5a4afe776e24633c05a376f0859850be412fb70d735aee1c4f2c332918e39756025b36355e5ce41ffc21e4190f8b32f8a56f9edc97078f44646c9e857c3fba9fdf680b5e4f92e9cffd766a34a0f91a8b579ea96b3beaddc2db079c7e5\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6300002f\u0026lang=zh_CN\u0026exportkey=AbhxOcEv5LRRnJfJpOYk54M%3D\u0026pass_ticket=RBJLbuhFUaC7C9iLpQ3G0QWDO%2FARo9ozdYLpRAv%2BPLVGoUhb9Vsl%2FpuWtmjHagMs\u0026wx_header=0)\n- [深入理解前端性能监控](https://mp.weixin.qq.com/s?__biz=MzUzNjk5MTE1OQ==\u0026mid=2247487964\u0026idx=1\u0026sn=bd50e0b48efc9a26c733e76c4159762c\u0026chksm=faec9504cd9b1c1222b63267a27939c567cd0306a1db227eb77132be1d467be008d344cf1d04\u0026mpshare=1\u0026scene=1\u0026srcid=0913rGwXFrCN0r0Sw4dlB9eI\u0026sharer_sharetime=1600002595509\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=2feebe5847c6e0bc331f0531a0062a22c6a77e1714978022748867c3e6f7fdf3572cc4b0f1cefc7209b4ee272f0b306f520eb065c223c2e0a75e06144b45c94decfae44e4e2efd1cef22401d277069cf0f643807b04cb9e6840b48abcb43e9235449e0abc1e91d9bdfcf71c6f95545a19135a8486191820fde8c7da86053ae2b\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6300002f\u0026lang=zh_CN\u0026exportkey=AYK1gS0QZbiyqzYZK1AxjSY%3D\u0026pass_ticket=RBJLbuhFUaC7C9iLpQ3G0QWDO%2FARo9ozdYLpRAv%2BPLVGoUhb9Vsl%2FpuWtmjHagMs\u0026wx_header=0)\n- [一文从零彻底搞懂前端的内存监控、异常、泄漏](https://mp.weixin.qq.com/s?__biz=MzI2NTk2NzUxNg==\u0026mid=2247488384\u0026idx=1\u0026sn=986fa865425162a9ac23259dec41671d\u0026chksm=ea941173dde398654a1840c5abf482e71f69274c70d27bc5aff71caf7b6c04c9984e1fa3e35a\u0026mpshare=1\u0026scene=1\u0026srcid=0911J18opV3TGVyDfVt5Avkw\u0026sharer_sharetime=1599787444615\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=c30e52a6f1284ff4350756ad970a6facd60382717dc26f8beb7f9138b3b55be70dbdd831275f3370037525d45d6bf4b9900c7a7e126901013bb62caba32afbb5bd5b86da5997434ea34cc766ac627b280f23b48f703657f0240834d11d0b3cd13c342aa454412dea2853e0ae4059c0a44ceb3d0367d53d5b59229916b7c47b0d\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6300002f\u0026lang=zh_CN\u0026exportkey=Af4iBS%2BDgcgsY5FmtNTv1rU%3D\u0026pass_ticket=RBJLbuhFUaC7C9iLpQ3G0QWDO%2FARo9ozdYLpRAv%2BPLVGoUhb9Vsl%2FpuWtmjHagMs\u0026wx_header=0)\n- [完善的前端异常监控解决方案](https://mp.weixin.qq.com/s?__biz=MzA3MjkwNTM1Mw==\u0026mid=2649140436\u0026idx=1\u0026sn=ee16143bca46329e97f825e4e8018b03\u0026chksm=87052b32b072a224c6748fdee887fed2e674eb8a9e8e56032a5819671bf1b695bda853e5a572\u0026mpshare=1\u0026scene=1\u0026srcid=0819yumnayDisywshbEeNjsy\u0026sharer_sharetime=1597848188765\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=e916915e2e187849eea0cdd2d2945d6d3bd32745cf323c23d708dbbfda954aa0ba6305fc22ff9311e7fad83862288bf9aa991c7b3d0c1c5df0605562458b3b4ed28b794fdafa49043d52041a8ed4bade98c6eabe9ffa31369e2e902e7f87ced69a92df3e0fb76c650fb6fbf02e73ad1600f794af1976d463655b7d6b399f38ea\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6300002f\u0026lang=zh_CN\u0026exportkey=AUHT36tpKw4Y18ZV90c0kEk%3D\u0026pass_ticket=RBJLbuhFUaC7C9iLpQ3G0QWDO%2FARo9ozdYLpRAv%2BPLVGoUhb9Vsl%2FpuWtmjHagMs\u0026wx_header=0)\n- [搭建前端监控平台之数据上报](https://mp.weixin.qq.com/s?__biz=Mzg5NDAyNjc2MQ==\u0026mid=2247485425\u0026idx=1\u0026sn=c6b9cf30bc5748e5ecfea40d63949499\u0026chksm=c0249297f7531b8196f40c0f2908cc87ff634e0f96d62cbf35ca46d6339c2ed4424ddf111e9e\u0026mpshare=1\u0026scene=1\u0026srcid=1110oDOswZMOEFXzypr3tBUI\u0026sharer_sharetime=1604981995699\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=2feebe5847c6e0bc7b1dac79d29ea0e15a1a01f7ba190cd7eae1aa71d893790bd3d1e5299374971282fc0f5574d3e1687084eeb9129ff7b798f0595fc45d84d0def007c84690c5dce423a2c64755d6d39d17e453f7c8e003e59a53a9d14ce4ac24219b06782354121fdebe48c66b20e8195a48c44aea4d87ab3bbf7e51a7a4b4\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6300002f\u0026lang=zh_CN\u0026exportkey=ARrT%2FYtgK3GYB%2FsKP1kiQ1k%3D\u0026pass_ticket=RBJLbuhFUaC7C9iLpQ3G0QWDO%2FARo9ozdYLpRAv%2BPLVGoUhb9Vsl%2FpuWtmjHagMs\u0026wx_header=0)\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BC%95%E6%B5%81":{"title":"引流","content":"\n# 引流\n\n![[《爆款小红书：从零到百万粉丝的玩赚策略》#掌握流量]]\n\n### 知乎蓝海词获客\n\n蓝海词大家都懂，在知乎，一个赛道的品类里有非常多的问答。蓝海词是那些有人关注，但关注的人不多，竞争也不多的问答。\n\n比如一个问题，每个月都有 1000 个人在看。但是问题下面只有三个回答，你去把它回答给占住。占住之后，你等于每个月白捞 1000 的流量。\n\n你回答 100 个 500 个，你就把这些流量全部吃住，1000 乘以 500，就是每个月有 50 万的流量。\n\n#### 例子\n\n一家做旧房翻新业务的创业公司，想通过做内容的方式吸引用户，提供服务。那么请问怎么做？做一个公众号，然后天天写吗？\n\n**不是。他们选择了在知乎这个问答社区冷启动。知乎的用户更有耐心，更喜欢看优质的长内容，然后他们就去知乎把关于装修和旧房翻新的问题都答了一遍。并且在回答中，留下了关注公众号的引子。通过这种方式，实现引流。**\n\n结果在短时间内，就涨了几万精准粉丝。\n\n**再然后，他们又和用户属性相同的大号做互推，通过相互推荐的方式，用户又很快涨到十几万。**这时，他们在公众号上推送文章的效果，就有保证了。\n\n## 微信读书\n\n每日共读，流量巨大，都是爱读书的人群，付费潜力大\n\n# 参考资料\n\n- [微信读书引流15天赚回生财门票，私域增加近2000读书粉8个社群实践复盘 - 飞书云文档](https://h7i1q54cm3.feishu.cn/docx/D2wudjBKGoGy4jxDUAFctpgKnTc)\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BD%92%E7%BA%B3%E6%8E%A8%E7%90%86":{"title":"归纳推理","content":"\n# 归纳推理\n\n西蒙的有限理性\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BD%92%E7%BA%B3%E6%B3%95":{"title":"归纳法","content":"\n# 归纳法\n\n归纳法是通过实践推导结论，把连续性的经验推广到一切时空。然而，并非所有事物都有连续性，固有的思维会让你陷入“归纳法谬误”。打破认知边界，实现第二曲线创新，你需要全新的思维模式——[[演绎法]]。但是演绎法必须有一个基石，一个来自系统之外、能够逻辑自洽的元起点。这个元起点既可以称为第一前提、逻辑奇点，也可以称为第一性原理。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BD%92%E7%BA%B3%E9%97%AE%E9%A2%98":{"title":"归纳问题","content":"\n# 归纳问题\n\n#卡片/术语卡\n\n## 简介\n\n当我们进行推理时，比如，当我们进行论证的时候，我们的论证过程几乎总是包含隐含的前提。正如其名称所示，隐含的前提就是为了使推理看起来合理而必需的前提，但这些前提都是暗示的而不是明确表达出来的。\n\n## 关键点：\n\n前面提到的那句话，也就是未来将继续像过去一样，是每一个关于未来的推理所必需的隐含前提，尽管通常都不为人察觉。\n\n总结一下，休谟的观点是每一个归纳推理都依赖于“未来将继续像过去一样”的隐含前提。但是，用来解释支撑这个隐含前提的主要（似乎也是唯一的）方法是循环的，因此，看起来这个关键的隐含前提无法得到足够支撑。所以，关于未来的推理依赖于一个无法得到支撑的假设，这些推理从逻辑上也就无法得到支撑。\n\n首先请注意，休谟的观点具有很强的一般性。它适用于所有关于未来的推理——可以是关于日常事务的推理（比如太阳从东方升起），可以是关于科学规律在未来仍然成立的推理，也可以是认为未来的机械学将与其过去的内容相同的观点，等等。\n\n其次，也是理解休谟的一个重点，那就是休谟没有试图说服我们不去做关于未来的推理。休谟认为对未来进行推理是我们天性中的一部分。就像我们不能自愿停止呼吸，我们也不能不去对未来进行推理。休谟的问题是，**我们是否可以从逻辑上为我们关于未来的推理提供依据**，而他的答案是：我们不可以。\n\n## 例子：\n\n    -  有一路公交车从你家开到餐厅。\n    【公交车在星期天正常运营。】\n    -  在我们过去的经验中，太阳总是从东方升起。\n    【未来会继续像过去一样。】\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BE%90%E8%BF%9C%E7%9A%84%E6%8A%95%E8%B5%84%E8%AF%BE%E6%8A%95%E8%B5%84%E5%8E%9F%E5%88%99%E4%B8%8E%E5%AE%9E%E6%88%98%E6%96%B9%E6%B3%95":{"title":"《 徐远的投资课：投资原则与实战方法 》","content":"\n# 《 徐远的投资课：投资原则与实战方法 》\n\n# 元数据\n\n\u003e [!abstract] 徐远的投资课：投资原则与实战方法\n\u003e - ![ 徐远的投资课：投资原则与实战方法|200](https://weread-1258476243.file.myqcloud.com/weread/cover/80/YueWen_34261011/t7_YueWen_34261011.jpg)\n\u003e - 书名： 徐远的投资课：投资原则与实战方法\n\u003e - 作者： 徐远\n\u003e - 简介： 15年实战打磨×精华案例 横跨9大模块×财富热点解读 财富要自由，自己先成长。 徐远的投资课，让你读一点，懂一点，会一点。大多数人，并非专业投资人，不需要有很多的经济、金融和数学知识，也没时间每天跟踪经济动态，紧盯金融市场，而本书的目的就是教我们明白基本的、重要的投资原理，在理解原理、掌握实务之后，学会投资，让钱“生”钱。 在北京大学教授金融投资课程的基础上，徐远老师结合自己对宏观经济、金融市场和投资实践的理解与经验，分别从投资原理，包括对投资的基础要素、基本原理的理解，投资工具如股票、债券、基金、房产、保险、黄金等，以及投资实务如怎么配置资产、怎么选择工具等三部分入手，紧扣“有没有用”“如何用”，对投资理财做了详细梳理，帮助读者实实在在掌握投资。\n\u003e - 出版时间 2020-10-01 00:00:00\n\u003e - ISBN： 9787521721331\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第九讲 股票指数，巡航股海的导航仪\n\n- 📌 沪深300、中证500、中证1000，这三个指数的成分股是不重合的，沪深300是大盘股，中证500是排除沪深300之后的中盘股，而中证1000，是排除沪深300和中证500之后的小盘股。 ^34261011-13-5338-5431\n    - ⏱ 2021-07-09 22:09:58\n\n## 本章小结 债券：不可忽视的常规武器\n\n- 📌 债券基金回报率差异不大，选择规模较大、流动性好的基金即可，其中被动管理的ETF基金管理费较低，是不错的考虑。 ^34261011-23-1022-1076\n    - ⏱ 2021-07-10 11:00:23\n\n## 第十九讲 为什么明星基金可能是个坑？\n\n- 📌 基金经理的违规操作，可以归为三大类，分别是抬轿子、老鼠仓、利益输送。4.有3种办法可以帮助你识破违规操作，分别是“查底牌”、“识前科”和“破迷信” ^34261011-25-5127-5231\n    - ⏱ 2021-07-10 11:15:45\n\n## 第二十四讲 魔鬼的两个细节\n\n- 📌 总体来说，定开基金的表现并不出色。 ^34261011-30-2955-2972\n    - ⏱ 2021-07-10 11:34:06\n\n## 本章小结 基金：专业化的魔力与陷阱\n\n- 📌 （1）基金业绩是看基金的历史业绩，强调长期、稳健的业绩。（2）基金经理很重要，选基金就是选基金经理。选基金经理的时候，要看他的历史业绩和从业年限。历史业绩选长期稳健的，从业年限选6~8年的。（3）选基金公司的时候，要选资产规模大、口碑好的基金公司。（4）一般来说，要选择规模较大的基金，同一个基金公司，最好选择它的旗舰基金。（5）机构持仓比例，太低和太高都不太好，20%~60%之间好一些。 ^34261011-31-1640-1959\n    - ⏱ 2021-07-10 11:43:11\n\n## 第五章 房产\n\n- 📌 1.房产在家庭财富中占比最大，达到3/4以上，是财富的主要载体。2.全球大城市房价都很高，中国房价高并不是特殊现象。3.富裕的家庭喜欢购买和持有房产，高净值人士更是把家庭财富的40%以上配置在房产上，推高了房价。4.房产成为富人的首要资产配置，是因为两个特点，一是回报率高，二是风险低。从1870年以来的一个半世纪里，房产的长期年均回报率比股票高2个百分点。 ^34261011-32-7801-8073\n    - ⏱ 2021-07-10 22:30:52\n\n## 第六章 金融衍生品\n\n- 📌 金融衍生品有三个本质特征，分别是：零和游戏、时间期限、杠杆风险。这三个特征使得衍生品不是时间的朋友，而是时间的敌人。 ^34261011-36-5739-5797\n    - ⏱ 2021-07-11 08:50:31\n\n## 第七章 保险\n\n- 📌 说，很多家长可能还不了解，小宝宝出生一年内就可以办理政府提供的“新生儿医保”。而且在宝宝出生三个月内办理医保卡的，享受医保待遇就从出生之日开始算起，还可以报销一部分宝宝出生时的医疗费用 ^34261011-39-1861-1953\n    - ⏱ 2021-07-11 09:02:40\n\n## 第三十四讲 黄金的投资和避险价值\n\n- 📌 现在人们常说的央行印票子，就是从这个时候开始的。以前央行要想印票子，必须先储备黄金，没有黄金没法印。但是1971年开始，作为纸币背后定海神针的黄金，彻底消失了。这个变化，是迄今为止人类货币史上最根本性的变化。 ^34261011-44-2809-2913\n    - ⏱ 2021-07-11 10:58:29\n\n## 第三十五讲 投资黄金：错误的和正确的方法\n\n- 📌 如果你是短期投资者，快进快出，那还是黄金ETF好一些，因为成本很低，只有0.03%~0.08%，而纸黄金的成本有0.3%左右。如果你是长期投资者，买入持有，不频繁交易，那么纸黄金好一些，虽然交易佣金高，但是没有持有成本，而黄金ETF的持有成本一年有0.6%。 ^34261011-45-3615-3744\n    - ⏱ 2021-07-11 11:11:02\n- 📌 持有黄金相当于持有美元资产 ^34261011-45-6064-6077\n    - ⏱ 2021-07-11 11:14:50\n\n## 第三十七讲 让你的对手为你工作\n\n- 📌 有效市场的实质是一种竞争机制。大家都想去挣超额利润，于是世界上就没有超额利润了，只有正常利润了。聪明的投资者会利用竞争对手的努力，通过买大盘指数，获得正常利润。找到一种机制，让竞争对手为你工作，说的就是这个意思。 ^34261011-48-2137-2243\n    - ⏱ 2021-07-11 12:07:53\n\n## 第三十九讲 投资找锚，投机跟风\n\n- 📌 投资：买入资产是因为看好内在价值，买入等待升值。投机：买入资产不是因为内在价值，而是预期别人会出更高价接手。 ^34261011-50-1124-1207\n    - ⏱ 2021-07-11 13:40:03\n- 📌 投资和投机有5个区别。1.投资是看好资产的内在价值，买入等待升值；投机是看好资产的心理价值，预期别人会以更高的价格入手，因此买入等待转手。2.投资的期限较长，投机的期限较短。3.投资对资产流动性的要求不高，投机对资产流动性要求较高。4.投资者力求准确判断资产的内在价值，不犯错误，发现错误会尽快止损；投机者允许犯错误，但是期望别人犯更大的错误。5.投资者在价格下跌时，会继续买入；投机者在价格下跌时，会选择卖出。 ^34261011-50-6810-7171\n    - ⏱ 2021-07-11 13:44:27\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n入门级书 ^16142247-7rItchMFk  \n⏱ 2021-07-11 15:58:13\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BE%AE%E5%89%8D%E7%AB%AF":{"title":"微前端","content":"\n目的是为了拆分项目，有以下几个好处\n\n1. 使项目更小，打包的更快\n2. 能接入不同的框架\n3. 每个团队可以独立出去维护，减少相互依赖\n\n## 优势和劣势\n\n- 只需要更新子系统的文件，提高了更新的效率\n- 各个团队只需要关注自己的子应用\n\n劣势：每次刷新都需要加载很多资源  \n代码上会有一些不大相关的代码\n\n## 原理\n\n1. Qiankun 是基于 Single-Spa，路由命中了指定的地址，webpack5\n2. 样式隔离和 js 隔离原理，\n\n## 为什么不用 [[lerna]]\n\n1. 组件库有一些全局的数据、环境变量、配置等，可能没办法获取\n2. \n\n## 框架\n\n- [[QianKun]]\n- [[Single-Spa]]\n- [[zwsl-admin]]\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BE%AE%E5%89%8D%E7%AB%AF%E9%AA%8C%E8%AF%81":{"title":"微前端验证","content":"\n- [x] http请求保持正常\n- [ ] 弹框要覆盖全局\n- [x] 加载速度正常\n- [x] 路由跳转正常\n- [x] 没有跨域问题\n- [x] 样式正常\n- [x] 状态管理正常\n- [ ] 各项目环境一一对应\n- [x] 用户信息等全局数据能正常获取\n\n## 无限刷新问题\n\npackage.json 的name不能重复\n\n## common访问静态资源访问到当前启动项目\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230717160255.png)\n\n需要资源的全路径\n\n## 几个特殊的包需要加到package 里\n\n- react-transition-group\n\n## 组件库到最低版本\n\n0.20.5\n\n## 子项目不能用全局的 css\n\n## 打包\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230724161838.png)\n\n使用远程路径会无法打包\n\n## 服务器\n\n依赖下载方式\n\n```shell\nyarn install--registry=http://172.16.200.9:8081/repository/npm-group/\n```\n\n## 跨域问题\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725160923.png)\n\n## 样式重复加载\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725170756.png)\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BE%B7%E5%9B%BD":{"title":"时间线","content":"\n在世界上还没有德国这个国家的时候，相当多的一部分德意志人就移居美国了。直到 1871 年，普鲁士、巴伐利亚、巴登、梅克伦堡、黑森和其他的日耳曼小国才由俾斯麦统一起来，建立了德国。诚然，在公元 750 年时，德文就是书面语言了，而**日耳曼民族**（不包括侵欧匈奴人）远在公元前 1 世纪就有史可稽了。\n\n德国是[[歌德]]、[[贝多芬]]、[[康德]]和[[莱布尼茨]]的故乡。技术高超是德国人的特殊象征。蔡斯（Zeiss）和福伦达（Voigtlander）这两家光学仪器公司的名字，在他们（以及其他德国商家）驰名于照相机时代之前，早就蜚声天下了。\n\n# 时间线\n\n在 18 世纪和 19 世纪，德意志各邦是由一些小诸侯统治着的，经常处在动乱之中。宗教改革和反改革，在天主教各邦和新教各邦都使大批教徒成为难民，三十年战争更把他们的经济搞得一团糟，并使德意志民族的人口减少了 1/3。1708 ～ 1709 年冬季的严寒使德意志的酿酒业遭到惨重损失，其后若干年一直未能恢复过来。\n\n后来，在 18 世纪和 19 世纪初期，法国大革命、拿破仑征战各国以及滑铁卢战役之后，根据维也纳会议贵族统治的复辟，这一系列事件对德意志民族向外国移民都曾产生过深刻的影响。\n\n在 1683 年，13 个信奉梅农教派的家族在宾夕法尼亚建立了日耳曼城（今天费城的一部分）。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BF%83%E6%B5%81":{"title":"心流","content":"\n# 心流\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BF%83%E6%B5%81%E6%9C%80%E4%BC%98%E4%BD%93%E9%AA%8C%E5%BF%83%E7%90%86%E5%AD%A6":{"title":"《 心流：最优体验心理学 》","content":"\n# 《 心流：最优体验心理学 》\n\n# 元数据\n\n\u003e [!abstract] 心流：最优体验心理学\n\u003e - ![ 心流：最优体验心理学|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/826/921826/t7_921826.jpg)\n\u003e - 书名： 心流：最优体验心理学\n\u003e - 作者： 米哈里·契克森米哈赖\n\u003e - 简介： “心流”是指我们在做某些事情时，那种全神贯注、投入忘我的状态——这种状态下，你甚至感觉不到时间的存在，在这件事情完成之后我们会有一种充满能量并且非常满足的感受。心理理论之父、积极心理学奠基人米哈里·契克森米哈赖在30年前，在大量案例研究基础上，开创性地提出了“心流”的概念。本书系统阐述了心流理论，进入心流状态的条件，从日常生活、休闲娱乐、工作、人际关系等各方面，阐述如何进入心流状态。对心理学爱好者和研究者来说，《心流》是理解积极心理学等领域不可或缺的理论素材；对大众读者来说，这更是一本提升幸福感和效率的行动指南。\n\u003e - 出版时间 2017-12-01 00:00:00\n\u003e - ISBN： 9787508675534\n\u003e - 分类： 个人成长-人生哲学\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第二章 控制意识，改善体验的品质\n\n- 📌 我们接收的每一条资讯，都要经过自我的评判。它对我们的目标是威胁、支持，还是完全中立？股市下跌的消息往往令银行家担忧，但对政治异议分子却可能是振奋人心的好消息。一条新资讯可能会使我们付出所有心力应付威胁，造成意识的失序；但它也可能强化我们的目标，激发出更多的精神能量。 ^921826-20-2993-3126\n    - ⏱ 2021-06-10 10:29:39\n\n## 第三章 心流的构成要素\n\n- 📌 挑战绝不限于竞争或体能活动，即使当事人并不期望乐趣，但挑战仍是乐趣泉涌的契机。在此我们以研究中的一位艺术家为例。对大多数人而言，观画的乐趣是一种透过直觉的即时过程，但这位艺术家却说：“很多画都非常直接……你从中找不到什么值得兴奋之处，但有一些画会构成某种程度的挑战……这些画会留在你的心中，也就是最有趣的作品。”即使像观画或欣赏雕刻艺术这么被动的乐趣，也与作品所蕴涵的挑战息息相关。 ^921826-26-2288-2479\n    - ⏱ 2021-06-10 10:50:50\n- 📌 正如在控制感那一节已经讨论过的，我们必须认清心流有使人上瘾的魔力；我们也应该承认“世上没有绝对的好”这个事实，任何力量都可能被滥用。爱可能导致残酷的行径，科学可能会带来毁灭，科技不加管制也会造成污染。最优体验是能量的一种形式，而凡是能量，都既可以用于造福人，也可以用于破坏。正如火能带来温暖或灾害一样，原子能可以发电，也可能使全世界化为灰烬。能量是力量，但力量只是工具，目标才能决定它会使人生更丰富还是更痛苦。 ^921826-27-2237-2442\n    - ⏱ 2021-06-10 11:18:03\n\n## 第四章 如何在日常生活中寻找心流？\n\n- 📌 我们逐渐认清，我们的道德观只适用于自己的文化。在此信念下，不能用一套价值标准去评判另一套价值标准。由于任何跨文化的价值评判，都必然迫使所评判的文化暴露于另一套全然陌生的价值标准之下，因此根本无从比较。 ^921826-30-960-1060\n    - ⏱ 2021-06-10 11:26:32\n\n## 第六章 思维之乐\n\n- 📌 力量与金钱不能带来幸福，幸福存在于正确与多样性之中 ^921826-44-2351-2376\n    - ⏱ 2021-06-10 21:29:51\n- 📌 谈话的艺术已经失传，200年来实用主义的意识形态使一般人以为，谈话的目的只是传递有用的资讯，以至于现代人只重视沟通过程中是否包含有实用的资讯，要求越简洁越好，不切题的话都被视为浪费时间。 ^921826-45-987-1080\n    - ⏱ 2021-06-10 21:35:49\n- 📌 “业余者”和“爱好者”两个词这些年来声名狼藉，主要该怪内在目标与外在目标的分际变得模糊不清。业余者假装懂得的跟专业者一样多，可能是个错误，会造成一些问题。 ^921826-49-1489-1566\n    - ⏱ 2021-06-10 21:47:58\n\n## 第七章 工作之乐\n\n- 📌 他们认为工作是强加的限制，妨碍他们的自由，必须尽可能地逃避。 ^921826-53-2568-2598\n    - ⏱ 2021-06-11 10:21:06\n- 📌 这些零零碎碎的方法或许有帮助，但真正能解决工作压力的方法却是把它当作改善体验品质的策略。说的总是比做的容易，要做到这一点，就必须把精神能量集中投注在塑造个人目标上，无视一切转移注意力的诱惑。 ^921826-53-4390-4485\n    - ⏱ 2021-06-11 10:24:11\n\n## 第八章 人际之乐\n\n- 📌 家庭成员之间的完全信赖、无条件接纳，只有在毫不吝惜投入注意力时才有意义，否则它不过是空洞的姿态与做作罢了。 ^921826-59-8814-8867\n    - ⏱ 2021-06-14 15:38:18\n\n## 第九章 挫折中如何自得其乐？\n\n- 📌 如果没法子专心阅读一本书，我们非但不设法提升注意力，反而丢下书，打开电视，让剪接粗糙、不时被广告打断、情节低俗的电视节目进一步割裂我们的注意力。 ^921826-66-2630-2702\n    - ⏱ 2021-06-14 16:00:00\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7r50fmSeD  \n⏱ 2021-06-15 17:16:02\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E5%BF%83%E7%90%86%E8%B4%A6%E6%88%B7":{"title":"实例","content":"\n# 实例\n\n## 丢失的电影票\n\n\u003e 问题 8（N=200）：设想你想看一场电影，每张票的价格是 10 美元。入场时，你发现票丢了。座位没有标记，而且票又找不到。你愿意花 10 美元再买一张票吗？\n\n愿意。（46%）不愿意。（54%）\n\n\u003e 问题 9（N=183）：设想你打算看一场电影，每张票的价格是 10 美元。入场时，你发现丢了 10 美元。你现在还愿意花 10 美元买一张票吗？\n\n愿意。（88%）不愿意。（12%）\n\n我们将这点不同归因于局部账户。去电影院被看成是种交易，其中买票的钱被交换成看电影。再买一张票提升了看电影的成本，以至于很多受试者都认为这难以接受。\n\n## 5 美元的彩票\n\n\u003e 问题 10：你会接受一个有 10%的概率获得 95 美元、90%的概率损失 5 美元的赌吗？  \n\u003e 问题 11：有种抽奖有 10%的概率赢得 100 美元、90%的机会什么也得不到，你愿意花 5 美元参加这种抽奖吗？\n\n有 42 位受试者在问题 10 中不愿意赌一把，却在与问题 10 有着相同结果的问题 11 中选择了参加抽奖。\n","lastmodified":"2023-09-18T14:54:47.554454549Z","tags":null},"/%E6%80%8E%E4%B9%88%E6%88%90%E4%B8%BA%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%BA%BA":{"title":"怎么成为高效学习的人","content":"\n# 怎么成为高效学习的人\n\n## 带着问题\n\n1. 怎么快速学习新行业的知识\n2. 如何坚持进行学习\n\n## 读书笔记\n\n### 找资源\n\n1. 善用搜索，百度\u0026chrome [[学会搜索]]\n2. 用好的APP 微信读书\u0026 得到\n3. 寻找三级导师，跟人学\n   - 寻找领域最牛的人，关注其公众号等\n   - 列出领域最值得看的书\n   - 提出好问题[[好问题清单]]\n4. [[资源清单]]\n\n### 制定学习目标\n\n#### 修改前的目标\n\n\u003e 有这么一个笑话：每当1月1号的时候，每个人都宛如戏台上的老将军，浑身插满了flag。\n\u003e\n\u003e 但实际情况是什么呢？你也别笑，我知道绝大多数人，到了来年的12月31日，几乎会拿出一张一模一样的清单来。也就是说，上一年的flag全倒了\n\n真好今年立了一堆flag，看看怎么去改进\n\n- [ ] 保持每周一本(非技术书)的频率，一年读完48本书\n- [ ] 计算机基础的完整学习\n- [ ] 恢复跑步计划，一周三次以上\n- [ ] 旅游至少两次，骑行，爬山\n- [ ] 见丈母娘并得到认可\n- [ ] 将更多demo落地到实际中\n\n#### 四个条件：\n\n##### 有场景\n\n有场景。就是如果我达到了目标，要在某个地方能验证它；学会了一样东西，至少能在一个地方用\n\n##### 有距离\n\n一个好的目标，它应该跟你的现状有一定的距离，跳一跳才能够得着。\n\n##### 有抓手\n\n很多人定目标，就没有细节的抓手，比如每年读50本书。但是从哪读起呢？读哪类书？读到什么程度呢？不知道。\n\n一般来说，当你在立一个目标的时候，至少要明确这么几个事\n\n- 第一，**开始和结束的时间**。\n- 第二，**具体的执行动作。**比如你说我要减肥，它就是一个抽象的动作。但你说我今天晚上不吃晚饭，这就是个具体的动作。\n- 第三，**执行动作的数量**。比如我要多读书，就没有数量，要把数量定下来，比如每天读五页书。\n- 第四，**执行动作的完成度。**从一开始就明确，到什么程度，这个动作算真的完成，避免糊弄自己。\n\n这些就叫做“有抓手”。抓手的设计很重要，因为只有抓手明确，你的浑身的力气和激情，才有释放的地方。\n\n##### 有阶梯\n\n我们给自己立目标的时候，特别喜欢一上来就立个终极目标，然后按时间和天数平分。\n\n**但是我们都知道，这样的平均用力，是无法坚持的。**\n\n#### 修改后的目标\n\n时间限定： 2021.1.1 - 2022.1.1\n\n- [ ] 总体目标，一年读完48本书，每天晚上读书至少一小时，多补少退，并且输出读书笔记给马小居看，并得到夸奖\n- [ ] 分成计算机网络，计算机组成原理和编译原理三部分，3个月一部分，具体时间业务之余进行阅读。场景：在年终之前可以独立完成计算机组成实验，\n- [ ] 跑步计划， 目标治好自己的腰间盘突出，工作日7点去健身房跑步半小时\n- [ ] 旅游计划，场景：和马小居出去玩增进感情，\n- [ ] 爬山，目标爬完西湖群山 ，时间暂定夏天，前提 坚持跑步\n- [ ] demo这个 ，我先了解完大搜车业务，三个月后制定详细计划\n\n### 怎么学的更快更好\n\n#### 学前给自己提4个问题\n\n1. 这门课/这本书的标题xx，我认为它应该主要是谈什么问题的？\n2. 关于这个问题，在学习之前，我知道些什么？\n3. 关于这个主题，在学习之前，我的观点是什么？\n4. 接下来我要开始学习，我最想知道的、最想通过老师解决的问题是什么？\n\n#### 指读法\n\n通过跟踪手指阅读，进行逐字逐句的阅读，避免细节的丢失。\n\n#### 多环境输入\n\n在平时可以通过PDF + 记录笔记\n\n练习从1倍速听书到三倍速，适应公交等碎片时间\n\n#### 记忆宫殿法\n\n**假想自己大脑里有个宫殿，这个宫殿可以是一个你很熟悉的空间，比如你的家、你的办公室，甚至是你随身背的包包。这些空间，你闭着眼也知道它们是怎么分布的。然后，把你需要记忆的东西，“放到”这个宫殿的各个地方。**\n\n\u003e 我曾经逼罗胖做过一次实验。有一天，让他连续听完18个陌生人演讲，马上做一个总结性的即兴演讲，这其实真的很难。\n\u003e\n\u003e 但罗胖当时很好地完成了这个任务，他用的就是记忆宫殿法。只不过他的宫殿是人一生的各个阶段。他把18个演讲，分别放到自己生命中的一个年份。比如20岁那一年，我想听谁的演讲，为什么。然后50岁那一年，我想听到谁的演讲，为什么，然后一个个罗列下去。\n\u003e\n\u003e 每个年份只关联一个演讲，而年份的顺序肯定不会忘记，演讲的内容也就不会忘了。\n\n训练方法：[《与爱因斯坦月球漫步：三步唤醒你的惊人记忆力》](https://www.dedao.cn/ebook/bxEYR1zAbZMmVzK4p1oxl67XeNaB83OgGm392GJERgryYQdDnqjkPLvO5eOZ8Nqr)\n\n#### 刷书法\n\n适用于想要快速扩展视野\n\n- 第一步，先看序言，或者是第一章，只看个开头，然后马上跳到倒数第二章。这样，可以对这本书做个初步判断\n- 第二步，要有帝王的派头。当我刷书的时候，我要有一个想象：在知识的世界里，我是国王，而这些作者是我派出去的大将，他们都驻守边疆。如果有事儿的话，他们都要给我汇报。比如金融界有什么新鲜事了？让金融学家香帅来给我报一报。思想界有什么新鲜事了？让哲学学者刘擎来给我汇报一下。这样的话，你就会刷得比较快，你知道不同的作者，在你心目当中是怎么分工的。\n- 第三步，作为帝王，你心里有一张任务清单。就是我不能无目的地刷书，要定期想一想，我现在正面对的挑战是什么？然后，就重点关注回应这些挑战的书籍。\n\n### 怎样学以致用\n\n#### 记笔记\n\n记笔记要分为两轮\n\n第一轮看的时候通过记录关键词，可以让第二次阅读的时候如何记录有个框架即可\n\n第二轮进行细读，并且可以加入自己的理解\n\n#### 讲小课\n\n“十岁假设法”。就是你假装把学到的知识，讲给一个十岁的小孩听。\n\n如果在你转述的时候，对方都能听懂，而你自己也觉得说得很来劲，还能扛得住对方的追问，那这个知识，在你这就算被消化了。\n\n#### 会迁移\n\n主要学会强行问自己两个问题\n\n**1.我所学的这件事，它能用在什么地方**  \n**2.这个知识不能迁移到什么地方？**\n\n#### 列清单\n\n**光想不行，咱得真干，而且还得给自己列出一张操作清单**\n\n因为，你真干了之后，你只有能拉出清单来，知道你所有操作的关键点在哪，你能做这个总结，你才算把这个知识，真正地内化和固化成自己的能力。\n\n### 如何快乐学习\n\n想要快乐学习，就是要需要得到一些正反馈\n\n1. 小本子原理  \n   用小本子记录下来，犹如现在通过blog进行学习记录，一年后回过头来肯定充满自豪\n\n2. 建立秘密基地  \n   通过一个地方输出自己的观点，收获点赞\n\n3. 打造环境场  \n   在家里设定一个空间，比如办公桌椅，坐上去以后就只能做一件事，比如学习、读书，不能吃饭玩手机\n\n4. ”惊奇日记“\n\n   每天都要求自己，在临睡前问问自己，今天有没有发生哪些，让我拍案惊奇的事。也就是说，我知不知道一些，让我觉得“我的天啊，原来事情是这样的”。如果我知道这些事情，我就要记录下来。如果没有遇到这样的事情，今天可以不记，不强求。\n\n## 学习记录\n\n[脱不花·怎样成为高效学习的人](https://www.dedao.cn/course/LZ1RgB0EW3NK0wjsLbXkP7vj68pDeA)\n\n2021.1.19 一刷\n\n2021.1.20 二刷\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2":{"title":"《 思考，快与慢 》","content":"\n# 《 思考，快与慢 》\n\n# 元数据\n\n\u003e [!abstract] 思考，快与慢\n\u003e - ![ 思考，快与慢|200](https://weread-1258476243.file.myqcloud.com/weread/cover/86/YueWen_573975/t7_YueWen_573975.jpg)\n\u003e - 书名： 思考，快与慢\n\u003e - 作者： 丹尼尔·卡尼曼\n\u003e - 简介： 诺贝尔经济学奖得主丹尼尔·卡尼曼经典之作，彻底颠覆你对思考的看法！横扫全球各大畅销书排行榜，《经济学人》年度十佳图书，巴曙松、何帆、王福重等知名经济学家高度评价。卡尼曼认为，我们的大脑有快与慢两种作决定的方式，常用的无意识的“系统1”和有意识的“系统2”。他还介绍了很多经典有趣的行为实验，指出我们在什么情况下可以相信自己的直觉，什么时候不能相信；指导我们如何在商场、职场和个人生活中作出更好的选择，以及如何运用不同技巧来避免那些常使我们陷入麻烦的思维失误。\n\u003e - 出版时间 2012-07-01 00:00:00\n\u003e - ISBN： 9787508633558\n\u003e - 分类： 个人成长-认知思维\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 序言\n\n- 📌 这位投资官所面对的问题（我是否要投资福特公司股票）就很难，但更简单且相关的问题（我喜欢福特汽车吗）却很快在他的脑海中形成了答案，并且让他就是否作出投资这个问题也作出了相应的选择。这就是直觉启发法的核心观点：当面对难题时，我们往往会对相对简单的问题进行回答，却忽略了自己已经置换了原始问题这个事实。 ^573975-4-9882-10030\n    - ⏱ 2021-12-01 18:04:15\n- 📌 可悲的是，人们总是孤立地看待问题，表现出框架效应，即决策的制定往往因为对所回答问题不合逻辑的选择而受到影响。 ^573975-4-11409-11463\n    - ⏱ 2021-12-02 11:05:51\n\n## 第1章 一张愤怒的脸和一道乘法题\n\n- 📌 当系统1的运行遇到阻碍时，便会向系统2寻求支持，请求系统2给出更为详细和明确的处理方式来解决当前问题。系统2在系统1无法提供问题答案时，就会被激活，这好比你碰到了“17×24”这样的乘法题，系统1无法给出答案，系统2便被激活来解决问题。 ^573975-6-6120-6238\n    - ⏱ 2021-12-02 14:54:15\n- 📌 系统1和系统2的分工是非常高效的：代价最小，效果最好。通常情况下，这种分工很有效，因为系统1很善于完成自己的本职工作：它在熟悉情境中采取的模式是精确的，所作出的短期预测是准确的，遇到挑战时做出的第一反应也是迅速且基本恰当的。然而，系统1存在成见，在很多特定的情况下，这一系统易犯系统性错误。你会发现这个系统有时候会将原本较难的问题作简单化处理，对于逻辑学和统计学问题，它几乎一无所知。系统1还有一个更大的局限，即我们无法关闭它。如果看到屏幕上显示一个你认识的单词，你就能读出这个词——除非你的心思完全不在它上面。 ^573975-6-6680-6936\n    - ⏱ 2021-12-02 15:27:40\n- 📌 不是所有错觉都是视觉上的，还有思维方面的，我们将其称为认知错觉。 ^573975-6-8999-9031\n    - ⏱ 2021-12-02 15:32:52\n- 📌 提到认知错觉，最常被问及的问题就是能否避免这种错觉。上述各例传达的信息不容乐观。因为系统1是自主运行的，我们无法随意使其停止，因此直观思维所导致的错误常常难以避免。我们不可能一直没有成见，因为系统2可能对系统1产生的错误毫无所知。 ^573975-6-9614-9729\n    - ⏱ 2021-12-02 15:35:38\n\n## 第2章 电影的主角与配角\n\n- 📌 赫斯在文章中还提到了颠茄（belladona）——一种使人瞳孔变大的物质，曾作美瞳之用。作者还提到，一些常去赶集的人常常戴着墨镜，因为这样就能隐藏自己对商品的兴趣了。 ^573975-7-1623-1706\n    - ⏱ 2021-12-02 15:46:28\n\n## 第4章 联想的神奇力量\n\n- 📌 此外，只是想到背后中伤某位同事就会使人更想去买香皂、消毒剂或清洁剂，而不是去买电池、果汁或者糖果。当人们感觉自己的心灵受到了玷污，往往也会引发他们清洗自己身体的想法，这种冲动被称为“麦克白效应”。 ^573975-9-6967-7065\n    - ⏱ 2021-12-03 15:37:32\n- 📌 统1包含了对这个世界的认知模式，能立即估测哪些事情是正常的，哪些是出人意料的，它是你作出快速直觉性判断的依据，且这种判断十有八九是准确的，而你的所有判断活动几乎都是在这一系统的指引下毫无意识地完成的。然而，系统1也是你直觉中很多系统性错误的根源， ^573975-9-8822-8945\n    - ⏱ 2021-12-03 15:43:49\n\n## 第5章 你的直觉有可能只是错觉\n\n- 📌 重复能引发放松状态和令人舒心的熟悉感。著名心理学家罗伯特·扎伊翁茨（RobertZajonc）曾潜心关注重复某种刺激和这一刺激最终带来的轻微情感波动之间的关系，扎伊翁茨称之为曝光效应（mere exposure effect）[插图] ^573975-10-7336-7451\n    - ⏱ 2021-12-06 10:33:12\n\n## 第6章 意料之外与情理之中\n\n- 📌 系统1的主要功能是维护并更新你个人世界的模式，它呈现的都是常态下的思维模式。这个模式由许多联想和结果共同构成，这些联想由情境、事件、行为等概念引发，而结果则总是伴随某种规律出现，有可能是两者同时出现，也有可能出现时间只差那么一点点。随着这些联系的形成和加强，联想概念的模式逐渐展现出发生在你生活中的各种事件的结构，这一模式还将决定你对当下的理解和对未来的期望。 ^573975-11-754-934\n    - ⏱ 2021-12-06 10:35:24\n- 📌 事实上，所有的标题都要满足我们对逻辑连贯的需求：一件大事必然会带来一些后果，而这些后果也需要一些原因对其作出解释。我们对那天发生的事情所知有限，于是系统1便熟练地将这些知识片段组合成一个连贯的因果关系。 ^573975-11-4491-4592\n    - ⏱ 2021-12-06 11:10:03\n\n## 第7章 字母“B”与数字“13”\n\n- 📌 有系统2参与时，我们几乎会相信所有事情。因为系统1不仅好骗，还容易产生偏见，而尽管系统2掌管怀疑和不信任的大权，但是它有时很忙，不忙时也很懒惰，总会擅离职守。的确，已有证据显示，当人们劳累或是精力耗尽时，更容易受那些空洞却有说服力的信息影响，例如广告。 ^573975-12-2837-2963\n    - ⏱ 2021-12-06 11:33:51\n- 📌 联想记忆的运作是导致“确认偏误”的原因之一。如果有人问你：“山姆友好吗？”你就会想到山姆的各种行为举止；而如果有人问你：“山姆是不是很不友好？”你就很难想起他的许多举动。 ^573975-12-2992-3077\n    - ⏱ 2021-12-06 11:34:53\n- 📌 如果你赞同一个总统的政见，你可能也会喜爱他的声音及着装。喜爱（或讨厌）某个人就会喜爱（或讨厌）这个人的全部——包括你还没有观察到的方面——这种倾向就叫做光环效应。 ^573975-12-3427-3508\n    - ⏱ 2021-12-07 10:27:38\n- 📌 艾伦：聪明——勤奋——冲动——爱挑剔——固执——忌妒心强本：忌妒心强——固执——爱挑剔——冲动——勤奋——聪明如果你像我们一样，你就会更喜欢艾伦一些。 ^573975-12-4118-4253\n    - ⏱ 2021-12-07 10:20:37\n- 📌 我们对一个人性格特征的观察顺序是随机的。然而，顺序的确很重要，因为光环效应注重第一印象，而后续信息在很大程度上都被消解掉了。 ^573975-12-4612-4674\n    - ⏱ 2021-12-07 10:31:47\n\n## 第9章 目标问题与启发性问题形影不离\n\n- 📌 在此我们又看到了系统2的另一个“特性”。到目前为止，我似乎已经将其描述成一个给系统1留有足够余地的默许监视器。我描述的系统2还具有主动搜寻记忆的功能、复杂计算功能、比较功能、规划功能和决策功能。 ^573975-14-5897-5994\n    - ⏱ 2021-12-07 11:29:48\n- 📌 系统1的特点·生成印象、感觉和倾向；当系统2支持这些行为时，它们就会成为信仰、态度和意图。·自主且快速运行，只需付出较少努力，甚至不用付出努力，没有自主控制的感觉。·当发现（搜寻）特殊形式时，能接受系统2编控来调动注意力。·在接受了一定的训练后，能够做出熟练的回应，产生直觉。·为联想记忆激发出来的各种想法创造连贯形式。·将认知放松感和真理错觉、愉快的感觉以及放松的警惕感联系起来。·区分常态中令人惊奇之事。。推断原因和意图。。忽略歧义，按捺住心中的疑问。·夸大情感的一致性（光环效应）。·将注意力集中在当前的证据上，忽略不存在的证据（眼见即为事实）。·作一些基本估测。。通过常态和原型来表现集合，但不要将两者看成一个整体。·通过测量确定不同程度对应的匹配物（比如音量的大小）。·真正去计算，而不是空想（思维的发散性）。·有时用简单点的问题替代难题（启发法）。·对变化的感知比对形态的感知更敏锐（前景理论）。*·对可能性作出过高估计。*·对数量越来越不敏感（心理物理学）。*·对损失的反应比获得更强烈（损失厌恶）。*·严密设计决策问题，分别进行讨论。 ^573975-14-6871-7913\n    - ⏱ 2021-12-07 11:30:48\n\n## 第10章 大数法则与小数定律\n\n- 📌 对规律的错觉在方方面面影响着篮球赛场。你要用多少年的观察才能肯定一个投资顾问是有真才实学的？一个执行总裁实现多少次成功的兼并，董事会才能确定他对这项工作有着非凡的才能？简单说来，如果你听从自己的直觉，就常常会因为把随机事件看做是有规律的事件而犯错。我们都非常愿意相信生活中大多数事情并不是随机的 ^573975-16-8639-8786\n    - ⏱ 2021-12-08 11:08:30\n- 📌 小数定律包含在大脑工作的两个重要部分中。·夸大对小样本的信任只是众多错觉中的一种——比起信息的可靠度，我们会更加注重信息本身的内容，其结果就是我们会将周围的世界变得比数据所能证明的更加简单和统一。在想象的世界中过早下结论比在现实中更有把握。·统计学家的很多观察研究都可归结到因果关系的解释上，但他们却不承认是这样的。许多事实其实只是巧合，包括事件的采样。对偶发事件作出因果关系的解释必然是错误的。 ^573975-16-9576-9836\n    - ⏱ 2021-12-08 11:17:03\n\n## 第13章 焦虑情绪与风险政策的设计\n\n- 📌 桑斯坦越来越相信，对风险带有偏见的反应是导致公共政策中优先处理权不稳定和错位的重要原因。立法者和监管人员对民众的无理要求可能会反应过度，因为他们有着很强的政治敏感性，也因为他们和其他民众一样容易抱有同样的认知偏见。 ^573975-19-4775-4882\n    - ⏱ 2021-12-13 10:35:42\n- 📌 艾拉事件说明，我们的大脑解决小风险的能力有一个基本限度：我们要么完全忽视风险，要么过于重视风险，没有中间地带。每位等待晚归女儿的家长都能体验到这种感觉。你也许知道真的是（几乎是）没有什么可担心的，但你的大脑会不自觉地闪现危险的景象。 ^573975-19-6886-7002\n    - ⏱ 2021-12-13 10:42:20\n\n## 第14章 猜一下，汤姆的专业是什么？\n\n- 📌 当你怀疑信息的可靠性时，可以做一件事：作概率判断时，往基础比率那方面想。别期望遵循这条原则会很容易——它需要在付出很多努力的情况下，才能实现自我监督和自我控制。 ^573975-20-7478-7558\n    - ⏱ 2021-12-13 11:03:36\n\n## 第15章 琳达问题的社会效应\n\n- 📌 出所料，人们对更详细、更丰富的描述作出的概率判断更高，这一点有违逻辑。预言家总会给其客户设下陷阱：对情节加以详述会使其更可信，却更不可能成为现实。 ^573975-21-4447-4520\n    - ⏱ 2021-12-13 11:31:27\n\n## 第16章 因果关系比统计学信息更具说服力\n\n- 📌 然而，我有可能错了，如果发觉自己所处的环境中还有许多人有可能去提供帮助，我可能就不会走出去了。别人的存在会削弱我最初的责任感 ^573975-22-5791-5853\n    - ⏱ 2021-12-13 15:28:38\n- 📌 尼斯贝特和博吉达发现，当他们向学生展示令人惊讶的统计学事实时，学生什么也学不到；但当学生惊讶于个体案例时，例如知道两个友好的人对求救的人袖手旁观时，他们会立刻归纳并推断出帮助他人似乎比自己想象的要困难。尼斯贝特和博吉达将结论总结为耐人寻味的一句话：这些受试者不愿从普遍现象中推导出特殊性，这一点与他们愿意从特殊现象中归纳出普遍性如出一辙。 ^573975-22-7745-7945\n    - ⏱ 2021-12-13 15:37:09\n\n## 第17章 所有表现都会回归平均值\n\n- 📌 当时我告诉他们关于技能训练的一条重要原则：对良好表现的嘉奖比对错误的惩罚更有效。不管是对鸽子、老鼠、人类，还是其他什么动物的研究，都给这个说法提供了证据 ^573975-23-489-565\n    - ⏱ 2021-12-13 15:39:04\n- 📌 糟糕的表现常常会有提高，而好的表现则会变得糟糕，这跟表扬与惩罚都没有关系。 ^573975-23-1399-1436\n    - ⏱ 2021-12-13 15:42:57\n\n## 第18章 如何让直觉性预测更恰当有效？\n\n- 📌 有些预测判断，比如那些工程师所作的预测，主要就是通过查找表格、精确计算以及对类似项目的结果进行仔细分析得来的。还有一些预测则需要直觉和系统1的共同参与，主要有两种类型。有些直觉主要依靠反复训练得来的技能和经验。 ^573975-24-648-753\n    - ⏱ 2021-12-14 09:27:00\n\n## 第19章 “知道”的错觉\n\n- 📌 这个错觉的核心是我们认为自己了解过去，这也表明未来也应该是可知的，但事实上，我们对过去的了解比我们自认为能够了解的要少。“知道”不是唯一一个会引起错觉的词。“直觉”和“预感”等词一般也可用来形容过去的想法变成了现实。 ^573975-26-2958-3066\n    - ⏱ 2021-12-14 16:02:38\n- 📌 尼克松访问结束后，费斯科霍夫和贝斯让这些人回想他们对15个可能出现的结果的预测。结果很明显。如果一个事件果真发生了，人们就会夸大自己此前作出的预测的可能性；如果可能的事件并未发生，受试者就会错误地回忆说自己当初一直都认为此事发生的可能性不大。接下来的多次实验表明，人们不仅会高估自己最初的预测，还会高估其他人作出的预测。 ^573975-26-4118-4278\n    - ⏱ 2021-12-14 16:04:12\n- 📌 《基业长青》和其他类似书籍的基本概念是：良好的管理措施会得到认同，而执行这些措施会带来丰厚的回报。这两点都有些言过其实了。公司是非常成功还是不怎么成功，其间的区别在很大程度上要看这家公司是否幸运。 ^573975-26-8494-8592\n    - ⏱ 2021-12-14 16:21:35\n\n## 第20章 未来是不可预测的\n\n- 📌 众多研究者有一个普遍认同的观点，那就是几乎所有炒股的人，不管他们对股票是否了解（很少人了解股票），都在玩碰运气的游戏。交易者的主观经验只不过是他们在很不确定的情况下作出的看似明智的猜测而已。然而在高效率的市场中，明智的猜测比瞎猜也准不了多少。 ^573975-27-6304-6425\n    - ⏱ 2021-12-14 16:40:38\n- 📌 第一点是，预测错误不可避免，因为这个世界就是不可预知的；我们应该了解的第二点是，我们不应该相信高度主观的自信就是准确性的指示器 ^573975-27-11348-11411\n    - ⏱ 2021-12-14 17:15:05\n\n## 第21章 直觉判断与公式运算，孰优孰劣？\n\n- 📌 即使是不那么正规严肃的遴选面试，直觉也会起到积极作用，当然前提是按照规定收集客观信息并对不同特性进行独立评分。我建立了一个给予“闭眼”评估和整合6项指标同等权重的公式。从这件事中我学到一个普遍规律：不要简单地相信直觉判断——无论是你自己的还是他人的——但也不要完全抛开它。 ^573975-28-9256-9392\n    - ⏱ 2021-12-15 10:23:09\n- 📌 设想你要为你的公司招聘一名销售人员。如果真的想选择最合适的人选，那么你应该这样做：首先，选择一些这个岗位要求的先决条件（比如技能熟练程度、个性稳重程度、可靠性等）。不要列太多，6个左右即可。这些条件最好相对独立，同时要保证你通过一个问题就能够对这几个条件进行评估。下一步就是为每个条件都列出一些问题，并想好如何对其进行评估，分数为1～5分。你应该清楚什么情况“最弱”，什么情况“最强”。 ^573975-28-9682-9875\n    - ⏱ 2021-12-15 10:23:47\n\n## 第22章 什么时候可以相信专家的直觉？\n\n- 📌 环境有规律可循，直觉才可相信 ^573975-29-5110-5124\n    - ⏱ 2021-12-15 14:21:17\n- 📌 我的大多数时间则用在了对临床医生、股票投资者以及政治学者等人的研究上，这些人普遍都在做毫无依据的长期预测 ^573975-29-5320-5372\n    - ⏱ 2021-12-15 14:21:53\n- 📌 人们对直觉的自信心不能作为他们判断的有效性的可靠指标。换句话说，当有人告诉你你应该相信他们的判断时，不要相信他们，也不要相信自己。 ^573975-29-5734-5799\n    - ⏱ 2021-12-15 14:27:18\n\n## 第23章 努力养成采纳外部意见的决策习惯\n\n- 📌 我从中悟出了三点，第一点是显而易见的，我偶然得到了两种截然不同的预测方法。后来，这两种方法被我和阿莫斯称为内部意见和外部意见。第二点是我们最初的预测，即完成项目需要大约两年的时间，体现出一种规划谬误。我花了很长的时间才悟出第三点，我将这一点称为非理性坚持，一如我们那天做的荒唐事：没有终止那个项目。面对选择时，我们因为事业心而丢掉了理性。 ^573975-30-2409-2578\n    - ⏱ 2021-12-15 14:47:39\n- 📌 看轻或是忽略分布信息的普遍趋势可能是预测产生错误的主要原因。因此，计划者应该尽力划分出预测问题的类别，这样才能充分利用所有能够获取的分布信息。 ^573975-30-6250-6321\n    - ⏱ 2021-12-16 10:43:01\n\n## 第24章 乐观主义是一柄双刃剑\n\n- 📌 规划谬误只是普遍存在的乐观偏见的一种表现形式。我们中的大多数人都认为世界是美好的，但世界却没有想象般美好；我们觉得自己的贡献很大，但事实上并没有那么大；我们认为自己设定的目标很容易实现，但其实实现的可能性也没有那么大。 ^573975-31-433-542\n    - ⏱ 2021-12-16 10:57:45\n- 📌 然而，无论在社会生活中还是在股票市场中，乐观主义极其重要。个人及企业会奖励那些提供了冒险且有误导性信息的人，而不是说真话的人。我们从造成大萧条的金融危机中学到的是：总有一段时间，专家间和企业间的竞争会造成大家对风险和不确定性视而不见。 ^573975-31-7629-7746\n    - ⏱ 2021-12-16 14:29:18\n- 📌 为“事前验尸”。流程十分简单：当一个机构即将做出一个重要决策但还没有正式下达决议时，克莱恩提议召集对这个决策有所了解的人开一次简短的会议。在会议之前有一个简短的演说：“设想我们在一年后的今天已经实施了现有计划，但结果惨败。请用5～10分钟简短写下这次惨败的缘由。” ^573975-31-9305-9437\n    - ⏱ 2021-12-16 14:31:39\n\n## 第27章 禀赋效应与市场交易\n\n- 📌 经验丰富的商人显然已经学会了正确提问，即“与可以得到的其他东西相比，那个杯子真的是我特别想‘得到’的吗”。经济学家会问这个问题，有了这个问题，禀赋效应就不复存在了，因为得到的快乐和放弃的痛苦之间的不对称性没有关联。 ^573975-35-9442-9549\n    - ⏱ 2021-12-16 17:25:50\n\n## 第30章 被过分关注的罕见事件\n\n- 📌 人们对前景理论的最初构想包括这样的观点：“罕见事件不是被忽视就是被过度重视。”不过，这个说法并没有详细说明在什么情况下事件会被忽视，什么情况下会被过度重视，也没有从心理学上对此作出解释。 ^573975-38-1485-1578\n    - ⏱ 2021-12-18 19:45:48\n- 📌 分母忽视这个观点有助于解释为什么不同的风险表达方式所造成的效果会有这么大的不同。如果你看到“能使儿童免受某种疾病侵袭的疫苗有0.001%的风险将导致终身瘫痪”这样的说法时，就会觉得这个风险看似很小。现在，请考虑用另外的方式描述这一风险：“在10万名接种疫苗的儿童中，有一个将会终身瘫痪。 ^573975-38-7269-7412\n    - ⏱ 2021-12-18 19:54:07\n- 📌 我们已经知道系统1更善于处理独立事件，而不是整个范畴的事件。 ^573975-38-7555-7585\n    - ⏱ 2021-12-18 19:54:20\n\n## 第32章 心理账户是如何影响我们的选择的？\n\n- 📌 理性的决策者只会对当前投资的未来结果感兴趣，经济人不会去考虑纠正先前的错误。当有更好的投资项目时，对亏损账户进行额外投资的决策被称为“沉没成本悖论”，这是一个代价高昂的错误决策，在大大小小的许多决策中都能看到其身影。 ^573975-40-3341-3449\n    - ⏱ 2021-12-20 09:33:50\n- 📌 人们对由于不采取行动而导致的结果，会比因行动而产生的结果有更为强烈的情绪反应（包括后悔） ^573975-40-6219-6263\n    - ⏱ 2021-12-20 10:19:59\n\n## 第33章 评估结果的逆转\n\n- 📌 “当你单独看某件事时，你很容易受系统1的情感反应的支配。” ^573975-41-8850-8879\n    - ⏱ 2021-12-20 10:46:50\n\n## 第35章 体验效用与决策效用的不一致\n\n- 📌 这种选择对医疗实践有所启示，我们注意到：·如果目的是为了减少患者的痛苦记忆，那降低最为疼痛时的疼痛感就比将疼痛的过程减到最短更为重要。同样的道理，如果患者在过程结束时感到的疼痛相对较轻，他对此过程的记忆就会更好，那么逐渐减轻疼痛比急剧减轻更可取。·如果想减少实际体验到的痛苦，迅速完成这个过程或许更合适，即使这样做会让患者更疼痛并给患者留下可怕的记忆。 ^573975-44-3818-4056\n    - ⏱ 2021-12-20 15:53:40\n\n## 第38章 思考生活\n\n- 📌 刚结婚或马上要结婚的人当被问到对生活的整体评价时，很有可能就会联想到结婚这件事。 ^573975-47-2147-2187\n    - ⏱ 2021-12-20 18:17:33\n- 📌 们为自己设定的目标对于他们要做什么，以及对只关注经验自我的幸福感是难以维持的这一事实的感受都极为重要。幸福不是忽略人们想要得到的。 ^573975-47-4102-4167\n    - ⏱ 2021-12-20 18:20:56\n\n## 结语\n\n- 📌 统1是我们许多错误的原因，但也是我们许多正确做法的原因，而且我们也常做正确的事。我们的想法和行动通常由系统1指导，是当机立断的。系统1的一个优点就是储存在我们联想记忆中丰富而详细的世界：在这个世界里，人们能在不到一秒的时间内，从普通事件中区分出令人惊奇的事件；立即对自己所期望的事生成想法，并对令人惊奇之事和正在发生的事自动搜寻有因果关系的解释。 ^573975-48-7531-7704\n    - ⏱ 2021-12-21 10:56:24\n- 📌 系统1的运行特征，包括眼见即为事实、强度匹配和联想一致性等，会产生可预测的偏见和认知错觉，比如锚定效应、回归平均值的预测、过度自信，以及许多其他错觉。 ^573975-48-8495-8570\n    - ⏱ 2021-12-21 11:04:23\n- 📌 避免系统1出错的方法从原则上讲是很简单的：认识到你正处于的认知领域，放缓并要求系统2来加以强化。 ^573975-48-8850-8898\n    - ⏱ 2021-12-21 11:06:48\n\n## 附录A 不确定性下的判断：启发法和偏见\n\n- 📌 本文描述了在不确定的情况下进行判断的三种启发式：（1）代表性。人们通常在需要判断物体A是否属于类别B或是事件A是否属于过程B时，就会使用代表性；（2）事件的可得性。当人们需要估测某类事件发生的频率或是某个特定进展的合理性时，就会使用可得性。（3）通过锚定进行调整。当相关数值可得时，许多预测都会用到锚定。使用这些启发式不仅能节约很多时间，大多数时候也很奏效，但它们也会导致一些系统性的错误。更好地理解这些启发式和它们带来的偏见，能够在不确定的情境下提高判断和决策的质量。 ^573975-49-16795-17030\n    - ⏱ 2021-12-22 18:01:02\n\n# 读书笔记\n\n##\n\n### 划线评论\n\n- 📌 回归平均值 ^16142247-7vwe0RWP3\n    - 💭 均值回归，起初是金融学的一个重要概念。均值回归是指股票价格、房产价格等社会现象、自然现象（气温、降水），无论高于或低于价值中枢（或均值）都会以很高的概率向价值中枢回归的趋势。根据这个理论，一种上涨或者下跌的趋势不管其延续的时间多长都不能永远持续下去，最终均值回归的规律一定会出现：涨得太多了，就会向平均值移动下跌；跌得太多了，就会向平均值移动上升；自然界由于有惯性的作用，社会现象中，比如股价房价领域，由于心理作用、投机作用等，有时甚至有矫枉过正的令人措手不及的惊人现象。\n    - ⏱ 2021-12-13 15:40:38\n   \n\n## 第17章 所有表现都会回归平均值\n\n### 划线评论\n\n- 📌 生活给予我们的反馈常常违背常理。因为当别人取悦我们时，我们也会对他好；当别人对我们不好时，我们也会对他产生厌恶之情。然而从统计学角度来看，我们却是因为对人友好而受到惩罚，因为举止无礼而得到嘉奖。 ^16142247-7vwenCBXC\n    - 💭 这个事实应该怎么理解？ 比如扶老奶奶这样的事，比如自私的人能赚到更多的钱吗\n    - ⏱ 2021-12-13 15:46:14\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7vL2Oaa2m  \n⏱ 2021-12-23 09:29:36\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%81%92%E6%B8%A9%E8%8A%B1%E6%B4%92":{"title":"恒温花洒","content":"\n## 迷瞪\n\n所有花洒品牌基本都是自建品牌，很少有代工厂。\n\n箭牌性价比较高\n\n汉斯格雅 双飞雨 4899\n\n### 外观和材质\n\n### 不同水压环境下\n\n双飞雨推荐水压 3kg\n\n### 表面电镀性能\n\n盐雾测试\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%81%A9%E6%96%AF%E7%89%B9%E5%B8%95%E6%96%AF%E5%BA%93%E5%B0%94%E7%BA%A6%E5%B0%94%E5%BD%93":{"title":"恩斯特·帕斯库尔·约尔当","content":"\n# 恩斯特·帕斯库尔·约尔当\n\n恩斯特·帕斯库尔·约尔当（Ernst Pascual Jordan）出生于汉诺威。在我们的史话里已经提到，他是物理史上两篇重要的论文《论量子力学》和《论量子力学 Ⅱ》的作者之一，可以说也是量子力学的主要创立者。但是，他的名声显然及不上波恩或者海森堡。这里面的原因显然也是多方面的，1925 年，约尔当才 23 岁，无论从资格还是名声来说，都远远及不上元老级的波恩和年少成名的海森堡。当时和他一起做出贡献的那些人，后来都变得如此著名：波恩、海森堡、泡利，他们的光辉耀眼，把约尔当完全盖住了。从约尔当本人来说，他是一个害羞和内向的人，说话有口吃的毛病，总是结结巴巴的，所以他很少授课或发表演讲。更严重的是，约尔当在“二战”期间站到了希特勒的一边，成为一个纳粹的同情者，被指责曾经告密。这大大损害了他的名声。约尔当是一个作出了许多伟大成就的科学家。除了创立基本的矩阵力学形式，为量子论打下基础之外，他同样在量子场论、电子自旋、量子电动力学中作出了巨大的贡献。他是最先证明海森堡和薛定谔体系同等性的人之一，他发明了约尔当代数，后来又广泛涉足生物学、心理学和运动学。他曾被提名为诺贝尔奖得主，却没有成功。约尔当后来显然\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%81%A9%E9%87%8C%E7%A7%91%E8%B4%B9%E7%B1%B3":{"title":"恩里科·费米","content":"\n# 恩里科·费米\n\n恩里科·费米（1901 年 9 月 29 日－1954 年 11 月 28 日），美籍意大利裔物理学家，美国芝加哥大学物理学教授。 他对**量子力学**、**核物理**、**粒子物理**以及**统计力学**都做出了杰出贡献，曼哈顿计划期间领导制造出世界首个核子反应堆（芝加哥 1 号堆），也是原子弹的设计师和缔造者之一，被誉为“**原子能之父**”。费米拥有数项核能相关专利，并在 1938 年因研究由中子轰击产生的感生放射以及发现超铀元素而获得了诺贝尔物理学奖。他是物理学日渐专门化后少数几位在理论方面和实验方面皆能称作佼佼者的物理学家之一。  \n费米在统计力学领域做出了他第一个重大理论贡献。物理学家[[沃尔夫冈·泡利]]1925 年提出了泡利不相容原理。费米依据这一原理对于理想气体系统进行了分析，所得到的统计形式现在通常称作费米–狄拉克统计。现在，人们将遵守不相容原理的粒子称为“费米子”。之后，泡利又对 β 衰变进行了分析。为使这一衰变过程能量守恒，泡利假设在产生电子时同时会产生一种电中性的粒子。这种粒子当时尚未观测到。费米对于这一粒子的性质进行了分析，得出了它的理论模型，并将其称为“中微子”。他对 β 衰变进行理论分析而得到的理论模型后来被物理学家称作“费米相互作用”。这一理论后来发展为弱相互作用理论。弱相互作用是四种基本相互作用之一。费米还对由中子诱发的感生放射进行了实验研究。他发现慢中子要比快中子易于俘获，并推导出费米寿命方程来描述这一放射过程。在用慢中子对钍核以及铀核进行轰击后，他认为他得到了新的元素。尽管他因为这一发现而获得了诺贝尔物理学奖，但这些元素后来被发现只是核裂变产物。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%81%B6%E6%84%8F":{"title":"《 恶意 》","content":"\n# 《 恶意 》\n\n# 元数据\n\n\u003e [!abstract] 恶意\n\u003e - ![ 恶意|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/30/839030/t7_839030.jpg)\n\u003e - 书名： 恶意\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 读完《恶意》，才算真正认识东野圭吾！畅销书作家出国前夜在家中被杀，凶手很快落网，对罪行供认不讳……小说一开始，案件便告侦结。在彻查被害人与凶手的过去之后，加贺警官面对看似平淡无奇的案件，却感到如坠万丈深渊一般无边的寒意。本书是东野圭吾挑战推理小说写作极限的杰作，受到读者、评论界广泛好评。本书被列为东野圭吾的巅峰之作，与《白夜行》同享光辉与荣耀，这两部作品恰似两生花——《白夜行》为爱粉身碎骨，《恶意》因恨万劫不复。\n\u003e - 出版时间 2013-01-01 00:00:00\n\u003e - ISBN： 9787544258616\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n## 事件之章 野野口修的手记\n\n- 📌 袋里再确认一遍，“加贺……对吧？”“是，我是加贺。”他郑重地朝我欠身行礼，说道，“以前承蒙您照顾。”“哪里，我才是。”弯腰答礼后，我再度端详起他来。已经十年了，不，应该更久，他那精悍的神色似乎磨砺 ^839030-3-17604\n    - ⏱ 2017-10-24 10:54:15\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6Ut54jElE  \n⏱ 2017-10-25 11:41:42\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%82%96%E8%AE%BA132022%E7%89%88":{"title":"《 悖论13（2022版） 》","content":"\n# 《 悖论13（2022版） 》\n\n# 元数据\n\n\u003e [!abstract] 悖论13（2022版）\n\u003e - ![ 悖论13（2022版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/34/YueWen_818911/t7_YueWen_818911.jpg)\n\u003e - 书名： 悖论13（2022版）\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 冬树醒来，发现自己竟然毫发无损。但四周街道上传来巨响，车辆撞在一处，燃起冲天大火。而其他人都不见了：过去的某一瞬，似乎有大事发生。  \n空荡荡的东京城里，冬树游荡着，绝望地寻找事故发生的原因。遍地残骸中，他声嘶力竭地呼喊，突然，后背顶上了一把枪。  \n“别动。”响起一个女人的声音。  \n13时13分13秒，难以想象的残酷世界突然出现。一片荒芜的东京，只剩下不同年龄、不同背景的13个人。\n\u003e - 出版时间 2021-11-15 00:00:00\n\u003e - ISBN： 9787544286329\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6VYF6waea  \n⏱ 2017-12-26 00:12:17\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%84%8F%E5%A4%A7%E5%88%A9":{"title":"意大利","content":"\n# 意大利\n\n意大利半岛的悠久历史，可以追溯到耶稣基督之前的罗马共和国和罗马帝国，然而作为一个国家，意大利相对来说又是年轻的，仅始于 1861 年。\n\n意大利各地各区都有自己的土话，有点类似于温州的“十里不同音’\n\n在地理上，该国被亚平宁山脉一分为二，形成了许多相互隔绝的山谷，西西里岛和撒丁岛是两大岛屿。\n\n意大利南部的气候和地形造成了该地的贫困。气温虽说相对还算适中，但降雨量偏低而且又集中在少数几个月份。作物生长季节恰是干旱的--“旱情可能持续 6 个月或更久”。雨季到来时，往往又是倾盆而下，造成水土流失。\n\n尽管意大利南部大多属丘陵和山峦地带，但其间高原的高度恰恰不利于农业。一方面这些高原太高且崎岖不平，所以不宜种庄稼，另一方面却又嫌太低，因为无法积雪。倘能积雪，春天就可融化，形成缓慢而平稳的水流，滋润农田。\n\n除了缺乏欧洲其他某些国家普遍存在的有利条件之外，意大利农田的土壤在冬天也得不到大自然的恩赐，因为没有严寒去形成次第的结冰和解冻，从而使土质松软。意大利南部的农民完全凭人力及耕畜来完成松土的繁重劳动\n\n意大利自然条件的先天不足，既表现在农业方面，也表现在工业方面。高山和丘陵占据了该国陆地面积的 75%。只有一半的国土属可耕地，可耕地又大多集中在北部。在南部，高山一直“绵亘到海外，所以可耕地只局限在山村周围、高原和海岸边的平地”，而海岸边的平地一般又都十分“狭窄”。不管是从质还是从量上来看，意大利还缺乏冶炼钢铁--现代工业的支柱--所必需的煤和铁矿石。\n\n历史加重了大自然造成的问题。意大利南部长期是历代争霸帝国和王朝的战场。在各个不同的时代，意大利南部被形形色色的外族人征服过，包括伦巴第人、阿拉伯人和诺曼底人。\n\n意大利文化复兴的硕果，是意大利北部的产物，对南部的影响很小。哥伦布、但丁、米开朗基罗和罗西尼都是北意大利人。\n\n意大利北部可谓得天独厚，辅之以人和。春天和夏天，当庄稼需要水时，这里正值雨季。北部有“好几条因阿尔卑斯山积雪融化而水量相对较为稳定的河流”，这些河流“为工农业提供了可观的水源和动力”。\n\n教育反倒被认为是对家庭神圣性的一种侵犯，是把一个儿童作为一个孤立的个体抽调出来，教之以与其家庭信奉相左的一套价值体系。对于贫困潦倒的平民百姓来说，失去一个孩子做帮手或出外挣钱的机会，实在是一种不堪忍受的损失。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%90%E5%8A%9F%E7%9A%84%E7%AE%97%E6%B3%95":{"title":"成功的算法","content":"\n# 成功的算法\n\n→ 幸福=健康+财富+良好的人际关系  \n→ 健康=锻炼+饮食+睡眠  \n→ 锻炼=高强度耐力训练+体育运动+休息  \n→ 饮食=天然食物+间歇性禁食+植物  \n→ 睡眠=不要闹钟+8 ～ 9 小时+昼夜节律  \n→ 财富=收入+财富 ×（投资回报率）  \n→ 收入=责任+杠杆+专长  \n→ 责任=个人品牌+个人平台+承担风险？  \n→ 杠杆=资本+人力+知识产权  \n→ 专长=无法通过培训获得的知识  \n→ 投资回报=“买入并持有”+估值+安全边际\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%90%E7%AB%8B%E6%96%B0%E5%85%AC%E5%8F%B8":{"title":"成立新公司","content":"\n在支付宝花9.9就可以注册公司了，现在是拉新阶段所以便宜。搜`云上公司注册`\n\n现在很多省份政府网站都是支持全程0成本网络开办的。但是办公地址、代记账这些是有成本的。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%90%E9%83%BD":{"title":"成都","content":"\n# 成都\n\n#城市\n\n过去十年间，成都展现出对人才的强大吸引力。自 2017 年实施“人才新政”以来，平均每天约 500 人落户成都。从 2019 年起，在新一线城市中，成都人口增量仅次于杭州。去年成都更成为全国最热门迁入地，人口一年净增 20 万以上。\n\n- 但是工资基本要打对折。**成都本土企业实力较弱，也开不出太高的工资。**根据财富杂志评选的世界 500 强企业榜单，中国大部分上榜企业位于北上广深。直到 2021 年，新希望控股集团才以 316 亿美元的营收位列榜单第 390 位，成为四川首家本土世界 500 强企业。\n- **除了工作，住在哪是最影响打工人幸福感的因素。** 二手房的破旧成都比一线更无法接受。\n- “成都分为两座城，高新区和其他区。“迁徙成都的人，基本上在高新区定居。这里不像成都，更像是北上广的复刻版。\n- **内卷风气也在此地兴盛。**“太多人涌入成都了”，\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E4%BB%AC%E4%BB%A8":{"title":"《 我们仨 》","content":"\n# 《 我们仨 》\n\n# 元数据\n\n\u003e [!abstract] 我们仨\n\u003e - ![ 我们仨|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/626/858626/t7_858626.jpg)\n\u003e - 书名： 我们仨\n\u003e - 作者： 杨绛\n\u003e - 简介： 1998年，钱钟书逝世，而他和杨绛唯一的女儿钱瑗已于此前（1997年）先他们而去。在人生的伴侣离去四年后，杨绛用心记述了他们这个特殊家庭63年的风风雨雨、点点滴滴，结成回忆录《我们仨》。\n\u003e\n\u003e - 出版时间 2012-09-01 00:00:00\n\u003e - ISBN： 9787108042453\n\u003e - 分类： 人物传记-文学家\n\u003e - 出版社： 生活·读书·新知三联书店\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6ZvevwTmM  \n⏱ 2018-05-18 16:47:03\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E4%BB%AC%E6%89%BE%E6%9D%A5-8-%E4%BD%8D%E6%88%90%E5%8A%9F%E8%BD%AC%E4%B8%93%E4%B8%9A%E7%9A%84%E6%9C%8B%E5%8F%8B%E8%BF%99%E4%BA%9B%E6%98%AF%E4%BB%96%E4%BB%AC%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A":{"title":"我们找来 8 位成功转专业的朋友，这些是他们的心得体会","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [我们找来 8 位成功转专业的朋友，这些是他们的心得体会](https://sspai.com/post/71117)\n- tag：#\n- date: [[ 2022-02-09  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 总结起来就是一句话：如果有兴趣，那就去做。但这样的「做」并不是一腔热血的莽撞，而是需要经过各方面考虑，达成一个审慎的决定再去实践的。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E5%9B%BD%E5%9C%B0%E6%96%B9%E6%94%BF%E5%BA%9C%E6%8E%A8%E5%8A%A8%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95%E7%9A%84%E6%A8%A1%E5%BC%8F":{"title":"我国地方政府推动经济发展的模式","content":"\n# 我国地方政府推动经济发展的模式\n\n- 第一个特点是城市化过程中“重土地、轻人”。\n- 第二个特点是招商引资竞争中“重规模、重扩张”。\n- 第三个特点是经济结构上“重投资、重生产、轻消费”。\n  - 优点是能快速扩大投资和对外贸易，利用全球化的契机拉动经济快速增长\n  - 缺点是经济结构失衡。对内，资源向企业和政府转移，居民收入和消费占比偏低，不利于经济长期发展；\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E6%9D%80%E4%BA%86%E4%BB%96":{"title":"《 我杀了他 》","content":"\n# 《 我杀了他 》\n\n# 元数据\n\n\u003e [!abstract] 我杀了他\n\u003e - ![ 我杀了他|200](https://weread-1258476243.file.myqcloud.com/weread/cover/25/YueWen_25178363/t7_YueWen_25178363.jpg)\n\u003e - 书名： 我杀了他\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 读完《我杀了他》，99%的人都找不到凶手，你会不会是那1%？作家穗高在自己的婚礼上中毒身亡，他的经纪人、编辑和新娘的哥哥都以为是自己成功杀掉了他，并为此沾沾自喜。婚礼一周后，一封邀请函让三个嫌疑人聚到穗高家，等待着他们的是刑警加贺和新娘。案情逐渐清晰，谁把毒药混入穗高的鼻炎药是解谜的关键，但每个人为了自保而给出的证词，却出乎意料地成为另外两人无罪的证明。加贺听完证词，坚定地说“答案已经出来”，而只有凶手才能听懂他接下来要说的一番话。\n\u003e - 出版时间 2019-04-01 00:00:00\n\u003e - ISBN： 9787544294119\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-791VaTlnX  \n⏱ 2019-06-11 00:34:11\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E8%A7%82":{"title":"我的世界观","content":"\n# 我的世界观\n\n这本书其实是认识世界的一种方式，他带给我最大的改变不是让我更好更多的认识了这个世界，而是让我明白了应该如何正确的去认识。\n\n亚里士多德时期的世界观就好像一个有机生物，各个部分发挥其功能来实现其目标。而现代世界观，也就是牛顿世界观，则是像一个精密的机械，所有物体之间像齿轮一样相互联系，都可以通过计算得出。\n\n量子理论的发现，似乎有点动摇牛顿世界观，我们发现量子之间没有相互作用，并没有像牛顿世界观形容的那样，万物之间皆有关联，我们仍没有找到量子这么运动的原因，但量子理论数学在过去 70 年中几乎从来没有发生过变化，也没有做出过不正确的预言。也许未来的人们对我们的观点也会像我们认为亚里士多德世界很奇怪一样，纳闷我们怎么会有这样的观点。\n\n所以我们得到的一点反思就是，不要迷信世界观，世界观的改变也不是一夕之间改变的，量子理论的出现已经初显牛顿世界观的错误，我们要学会以正确的科学思维去思考和判断。\n\n其实各个学科都应该本着这样的科学实现，无数不可估算的变量随机生成了这个世界，就像无数人对世界的微小改变，就会创造出一个个完全不同的世界，这也是像经济，历史这样的预测难度无法估量的原因。像美洲大陆，如果没有外来的干涉会不会一直处于农耕时期，早年历史的发展更多是地理的隔绝，随地发展。\n\n越来越意识到世事没有绝对，作为个体而言，我们只是宏观叙事下的小小变量，每件事发生都是无数事件统计而成的概率，不断的学习，了解越多的变量，也许开始的时候，你会预估的比较远，但掌握更多的变量提升的是胜率，做长期的事也是这样。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E7%9A%84%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86%E6%B5%81":{"title":"我的信息处理流","content":"\n## 信息输入\n\n### **想法、灵感**\n\n通过[[flomo]]记录脑子里突然出现的想法和灵感。\n\n### **关注的信息流**\n\n比如我每天会固定浏览这几个信息来源\n\n- [[RSS]] 订阅的一些信息源\n- 掘金、虎嗅等榜单\n- 得到、微信读书等书籍阅读\n- 隔段时间看下少数派和邮件\n- 小报童的订阅\n- [[github]]看下别人的 star 和推荐\n- [[红板报]]\n\n发现好的文章进行标记整理，目前是存到 [[Notion]]，方便未来专题学习或者写作的时候查阅。（但是目前有点陷入了囤积癖\n\n有一个新的想法，加入到[[简悦]]稍后读中，划线和标签也在稍后读中做，只有内化成自己的知识以后才写到 Obsidian，这样简悦就可以作为一个很好的文献笔记盒，Obsidian内也不用记录很多**别人的笔记**了\n\n#### `米斯特软的` 的方式是\n\n- 文章和视频，我会首先打开它们快速地略读，如果确定我有兴趣深入地读，我就会把他保存到 [[Readwise Reader]] 这个稍后读工具里\n\n  \u003e 并且打 tag ，并注释**为什么我想读这篇文章？我想从这篇文章里得到什么？我会强迫自己添加一篇稍后读的文章的时候思考这个问题，并且用十几个字简单地描述。这样当我在之后读这篇文章的时候，我可以带着我的问题去阅读，这样会更有效率。**\n\n- 新的产品，新的技术，新的开源库之类的，我会点进去快速地了解一下这个东西，如果我觉得可能在日后我会用到它，我就会把它保存到 [[Raindrop]] 这个书签管理服务。\n- [[微信读书]] ，他写了个叫 [NotePal](https://sspai.com/link?target=https%3A%2F%2Fnotepal.randysoft.org%2F) 的工具帮我把微信读书的笔记转换到 Readwise 的格式，然后我会在读完一本书之后手动地同步到 Readwise.\n\n### 笔记组织\n\n[[ P.A.R.A]]\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E7%9A%84%E5%AE%B6%E7%94%B5":{"title":"我的家电","content":"\n烟灶：方太 EMQ5T + TH29B https://item.jd.com/10045460536100.html  \n嵌入式洗碗机: 小米16 套洗碗机 P1 https://item.jd.com/10069921629900.html  \n冰箱:美的 424 https://item.jd.com/100041814745.html  \n深600mm；宽759mm；高1912mm\n扫地机器人:石头 P10 上下水版本 https://item.jd.com/100046462652.html#crumb-wrap  \n热水器: 海尔 KL3 https://item.jd.com/100020173419.html  \n蒸烤箱：小米 S1 https://item.jd.com/10066203367134.html  \n洗烘套装： 小天鹅 86+35 https://item.jd.com/68115453982.html\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E7%9A%84%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F":{"title":"我的知识管理系统","content":"\n#状态/todo 这个流程图要日常完善  \n[知识管理系统](obsidian://open?vault=Obsidian\u0026file=Excalidraw%2F%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F)\n\n# 我的知识管理系统\n\n## 每日生活\n\n也就是他们常说的日课\n\n这个一直不知道怎么搞\n\n按 L 先生的先来  \n每天早上第一件事，在行思录下新建一篇，主要记录以下三点：  \n快捷键`cmd + H`,记录一定要顺畅，不然容易不记\n\n### **今天所做的事情。**\n\n可以比较粗略，也可以很细致。\n\n### **工作的思考和复盘。**\n\n单单记录「做了什么事」是意义不大的，重要的是，要把你在工作中的思考 —— 比如项目的进展、遇到的问题、产生的想法，一起记下来，才能让它发挥更大的作用。 结合[[KPT 复盘法]]\n\n### **当天的碎片信息。**\n\n除了工作之外，每一天我可能会接触到各种各样的信息，产生各种各样的想法，这些，也很有必要及时记下来。\n\n我会把这些碎片信息大体上分成两类：小的，记录在「每日生活」里；大的，另起一页，整理到「INK-P」的「Inbox」里。\n\n这么一想确实好一点，我现在都是`cmd+N`直接新建一张卡片，很容易导致卡片数量的爆炸，却没有很多实用的消息。\n\n## 知识管理\n\n## 数据库\n\n收集类的主要以[[Notion]]作为主力数据库\n\n这里和L 先生有一点区别是，他把稍后读和人际管理也放在 Notion，而我更喜欢在[[简悦]]和[[RSS]]中\n\n不过我看他的 2023 最新版里面也把稍后读放到了[[Raindrop]]\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%91%E7%9A%84%E7%B2%BE%E7%A5%9E%E5%AE%B6%E5%9B%AD":{"title":"《 我的精神家园 》","content":"\n# 《 我的精神家园 》\n\n# 元数据\n\n\u003e [!abstract] 我的精神家园\n\u003e - ![ 我的精神家园|200](https://weread-1258476243.file.myqcloud.com/weread/cover/38/YueWen_920500/t7_YueWen_920500.jpg)\n\u003e - 书名： 我的精神家园\n\u003e - 作者： 王小波\n\u003e - 简介： 李银河独家授权，并亲自校订全稿。王小波杂文精选集！王小波以平民的视角，平民化的写作方式，犀利的批判意识，为我们展示了一个纯粹的精神家园。《我的精神家园》是王小波的一部杂文集。话题大多涉及他对生活方式、电影等媒体的看法以及国外见闻的思考。他从身边小事入手，以犀利的视角，为我们展示了一个理想的精神家园，电光石火般让人幡然惊醒。我们在他的精神家园中穿行着，感受着他对思想，对自己，对写作的真诚，领悟着他思考的姿态、深切的人文关怀、平实豁达而宽容的理性精神。徜徉其中，我们分明听见了他从天堂里发出的笑声和他充满机智妙趣的耳语。\n\u003e - 出版时间 2018-01-01 00:00:00\n\u003e - ISBN： 9787530220269\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 北京出版集团北京十月文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n携带着思考的黑色幽默  \n ^16142247-6XIrP3sk4  \n⏱ 2018-03-06 20:49:55\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%98%E8%83%9C%E5%8D%8E%E5%B0%94%E8%A1%97%E5%85%B8%E8%97%8F%E7%89%88":{"title":"《 战胜华尔街（典藏版） 》","content":"\n# 《 战胜华尔街（典藏版） 》\n\n# 元数据\n\n\u003e [!abstract] 战胜华尔街（典藏版）\n\u003e - ![ 战胜华尔街（典藏版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/30/YueWen_927587/t7_YueWen_927587.jpg)\n\u003e - 书名： 战胜华尔街（典藏版）\n\u003e - 作者： 彼得·林奇 约翰·罗瑟查尔德\n\u003e - 简介： 最早阅读彼得·林奇的著作还是十几年前的事，当时我对这位美国富达公司麦哲伦基金经理印象最深的一点就是他强调日常生活经验有助于股票投资，比如，你可以通过对家门口百货店或餐饮店业务兴旺与否的观察，来选择这家公司的股票。对大多数无缘调研上市公司又重视基本面的投资者来说，这可是个福音。这么多年过去了，我又重读了几本林奇自己写的以及别人写他的书，发现了许多过去没有注意的地方。\n\u003e - 出版时间 2018-02-01 00:00:00\n\u003e - ISBN： 9787111590224\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 我的伙伴们毫不沉默\n\n- 📌 对于那些来自其他基金公司的分析师以及证券公司营业部销售人员的选股建议，我非常注意有选择性地加以采纳。这种选股建议在质量上参差不齐，如果根本不了解到底是谁推荐这些股票就盲目轻信，后果将会是非常危险的 ^927587-30-4984-5082\n    - ⏱ 2021-09-18 16:21:11\n\n## 耐心终有回报\n\n- 📌 我于是回答道，我把麦哲伦基金的投资组合分为两部分：一部分是小盘成长股和周期型股票，另一部分是保守型股票：“当股市下跌时，我卖出保守型股票而增持小盘成长股和周期型股票，当股市回升时，我就卖出小盘成长股和周期型股票中已经获利的股票，再用这些资金买入保守型股票。” ^927587-31-9643-9772\n    - ⏱ 2021-09-22 10:32:53\n\n## 股市过热\n\n- 📌 我来教给你一个非常简单的赚钱之道。每年年末11月和12月许多投资者为了利用投资亏损来避税会低价抛售股票，你只要趁机买入那些股价重挫的股票，等到第二年1月，这时股价总是会反弹，这就可以让你赚上一笔。这种年末下跌年初反弹的现象被称为“一月效应”，在小盘股上表现尤其突出。过去60年来，小盘股1月涨幅为6.86%，而同期股市平均涨幅只有1.6%。 ^927587-38-2668-2838\n    - ⏱ 2021-09-23 10:25:14\n- 📌 为了防止我对自己的持股有了新欢就忘了旧爱，我用一本大学生常用的大笔记本，详细记录我对每一只股票的投资过程，包括从季报和年报上摘录的重要信息，当时决定买入的原因以及上一次决定卖出的原因。在我上班的路上或夜深人静在家独坐时，我就把这个大笔记本拿出来细细翻阅，就好像有些人细细翻阅从阁楼里找出来的旧情书一样 ^927587-38-4121-4271\n    - ⏱ 2021-09-23 10:27:21\n- 📌 尽管可口可乐装瓶公司股价下跌，但我觉得这家公司的发展前景比以前更加暗淡，所以也把这只股票从荐股名单中删掉了。房利美股价已经上涨，但我认为公司未来前景仍然非常良好，所以我连续第7年推荐这只股票。要记得，股价比过去低了，并不是买入的理由；股价比过去高了，也并不是卖出的理由。 ^927587-38-5526-5661\n    - ⏱ 2021-09-23 10:28:43\n\n## GH公司\n\n- 📌 一般而言，权益负债比率这么高，就足以让我把这种股票从名单上删掉。不过有些其他因素会让我酌情考虑：第一，这些债务不是短期债务，要过好几年才到期；第二，这些债务都不是银行借款，因为对于负债比例较高、财务杠杆较大的企业，银行借款是相当危险的，一旦公司经营上遇到问题，银行马上会要求归还贷款，这就使公司资金短缺，使本来能够应付过去的问题很可能会变成致命的打击 ^927587-43-4185-4360\n    - ⏱ 2021-09-24 09:17:45\n\n## 25条股票投资黄金法则\n\n- 📌 1．投资很有趣、很刺激，但如果你不下功夫研究基本面的话，那就会很危险。2．作为一个业余投资者，你的优势并不在于从华尔街投资专家那里获得所谓专业投资建议。你的优势其实在于你自身所具有的独特知识和经验。如果充分发挥你的独特优势来投资于自己充分了解的公司和行业，那么你肯定会打败那些投资专家。3．过去30多年来，股票市场被一群专业机构投资者所主宰，但是与一般人的想法正好相反，我认为这反而使业余投资者更容易取得更好的投资业绩。业余投资者尽可以忽略这群专业机构投资者，照样战胜市场。4．每只股票后面其实都是一家公司，你得弄清楚这家公司到底是如何经营的。5．经常出现这样的事：短期而言，比如好几个月甚至好几年，一家公司业绩表现与其股价表现毫不相关；但是长期而言，一家公司业绩表现肯定与其股价表现是完全相关的。弄清楚短期和长期业绩表现与股价表现相关性的差别是投资赚钱的关键。同时，这一差别也表明，耐心持有终有回报，选择成功企业的股票方能取得投资成功。6．你得弄清楚你持股的公司基本面究竟如何，你得搞明白持有这只股票的理由究竟是什么。不错，孩子终究会长大，但是股票并非终究会上涨。7．想着一旦赌赢就会大赚一把，于是大赌一把，结果往往会大输一把。8．把股票看作你的孩子，但是养孩子不能太多，投资股票也不能太多，太多你就根本照顾不过来了。一个业余投资人，即使利用所有能利用的业余时间，最多也只能研究追踪8～12只股票，而且只有在条件允许的情况下才能找到机会进行买入卖出操作。因此，我建议业余投资者在任何时候都不要同时持有5只以上的股票。9．如果你怎么也找不到一只值得投资的上市公司股票，那么就远离股市，把你的钱存到银行里，直到你找到一只值得投资的股票。10．永远不要投资你不了解其财务状况的公司股票。让投资者赔得很惨的往往是那些资产负债表很差的烂股票。在买入股票之前，一定要先检查一下公司的资产负债表，看看公司是否有足够的偿债能力，有没有破产风险。11．避开那些热门行业的热门股。冷门行业和没有增长的行业中的卓越公司股票往往会成为最赚钱的大牛股。12．对于小公司股票来说，你最好躲在一边耐心等待，等到这些小公司开始实现盈利时，再考虑投资也不迟。13．如果你打算投资一个正处于困境之中的行业，那么一定要投资那些有能力渡过难关的公司股票，而且一定要等到行业出现复苏的信号。不过，像生产赶马车鞭子和电子管这样的行业是永远没有复苏的希望了。14．如果你在1只股票上投资1000美元，即使全部亏光也最多不过是亏损1000美元，但是如果你耐心持有的话，可能就会赚到1000美元甚至50000美元。业余投资者完全可以集中投资少数几家优秀公司的股票，但基金经理人则根据规定不得不分散投资。业余投资者持有股票数目太多就会丧失相对于专业机构投资者能够集中投资的优势。只要找到几只大牛股，集中投资，业余投资者一辈子在投资上花费的时间和精力就远远物超所值了。15．在任何一个行业，在任何一个地方，平时留心观察的业余投资者就会发现那些卓越的高成长公司，而且发现时间远远早于那些专业投资者。16．股市中经常会出现股价大跌，就如同东北地区严冬时分经常会出现暴风雪一样。如果事先做好充分准备，根本不会遭到什么损害。股市大跌时那些没有事先准备的投资者会吓得胆战心惊，慌忙低价割肉，逃离股市，许多股票会变得十分便宜，对于事先早做准备的投资者来说反而是一个低价买入的绝佳机会。17．每个人都有投资股票赚钱所需要的知识，但并非每个人都有投资股票赚钱所需要的胆略，有识且有胆才能在股票投资上赚大钱。如果你在股市大跌的恐慌中很容易受别人影响，吓得赶紧抛掉手中所有的股票，那么胆小怕跌的你最好不要投资股票，也不要投资股票型基金。 ^927587-106-639-2667\n    - ⏱ 2021-09-27 17:05:27\n- 📌 18．总是会有事让人担心。不要为周末报刊上那些危言耸听的分析评论而焦虑不安，也不要理会最近新闻报道中的悲观预测言论，不要被吓得担心股市会崩盘就匆忙卖出。放心，天塌不下来。除非公司基本面恶化，否则坚决不要恐慌害怕而抛出手中的好公司股票。19．根本没有任何人能够提前预测出未来利率变化、宏观经济趋势以及股票市场走势。不要理会任何对未来利率、宏观经济和股市的预测，集中精力关注你投资的公司正在发生什么变化。20．如果你研究了10家公司，你就会找到1家远远高于预期的好公司。如果你研究了50家公司，你就会找到5家远远高于预期的好公司。在股市中总会有让人惊喜的意外发现，那就是业绩表现良好却被专业机构投资者忽视的好公司股票。21．不研究公司基本面就买股票，就像不看牌就打牌一样，投资赚钱的机会很小。22．当你持有好公司的股票时，时间就会站在你这一边；持有时间越长，赚钱的机会就越大。耐心持有好公司股票终将有好回报，即使错过了像沃尔玛这样的优秀公司股票前5年的大涨，未来5年内长期持有仍然会有很好的回报。但是如果你持有的是股票期权，时间就会站在你的对立面，持有时间越长，赚钱的机会越小。23．如果你有胆量投资股票，却没有时间也没有兴趣做功课研究基本面，那么你的最佳选择是投资股票型基金。你应该分散投资于不同的股票基金。基金经理的投资风格可分为成长型、价值型、小盘股、大盘股等，你应该投资几种不同风格的股票投资基金。注意：投资于6只投资风格相同的股票基金并非分散投资。投资者在不同基金之间换来换去，就会付出巨大的代价，得支付很高的资本利得税。如果你投资的一只或几只基金业绩表现不错，就不要随便抛弃它们，而要坚决长期持有。24．在过去10年里，美国股市平均投资收益率在全球股市中仅仅排名第八，因此，你可以购买那些投资于海外股市且业绩表现良好的基金，从而分享美国以外其他国家股市的高成长。25．长期而言，投资于一个由精心挑选的股票或股票投资基金构成的投资组合，业绩表现肯定要远远胜过一个由债券或债券基金构成的投资组合，但是投资于一个由胡乱挑选的股票构成的投资组合，还不如把钱放在床底下更安全。 ^927587-106-2698-3833\n    - ⏱ 2021-09-27 17:05:40\n\n# 读书笔记\n\n## 第10章 超级剪理发记\n\n### 划线评论\n\n- 📌 通常情况下，我从来不晓得自己到底看起来好看还是难看，即使当时从超级剪美发店的镜子里看到自己给剪成这般模样，我也没有表示一句不满。 ^16142247-7tyaiijAt\n    - 💭 我也是这样的= =\n    - ⏱ 2021-09-24 09:50:02\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%88%B4%E7%BB%B4%E7%8E%BB%E5%A7%86":{"title":"戴维·玻姆","content":"\n# 戴维·玻姆\n\n戴维·玻姆（英语：David Bohm，1917 年 12 月 20 日－1992 年 10 月 27 日），英籍美国物理学家，对量子力学有突出的贡献，并曾参与曼哈顿工程。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%89%80%E8%B0%93%E6%83%85%E5%95%86%E9%AB%98%E5%B0%B1%E6%98%AF%E4%BC%9A%E8%AF%B4%E8%AF%9D":{"title":"《 所谓情商高，就是会说话 》","content":"\n# 《 所谓情商高，就是会说话 》\n\n# 元数据\n\n\u003e [!abstract] 所谓情商高，就是会说话\n\u003e - ![ 所谓情商高，就是会说话|200](https://weread-1258476243.file.myqcloud.com/weread/cover/16/YueWen_856423/t7_YueWen_856423.jpg)\n\u003e - 书名： 所谓情商高，就是会说话\n\u003e - 作者： 佐佐木圭一\n\u003e - 简介： 日本深受欢迎的人际沟通课程，世界知名企业员工指定培训教材！这不是一本无趣的说话励志书，这是一本有趣的口才教科书！7个突破口+8个技巧，措辞小改变，人生大转变！说话不只是一种“感觉”，还是一门“技术”！不走弯路，以最短的时间掌握说话技巧。和任何人都聊得来，世界就是你的。人际沟通中怎样措辞？怎样把握说话的场合和时机？如何领略说话精髓，悟透说话之道，很快在众人中脱颖而出？作者通过自己多年来掌握的语言措辞技巧告诉大家该如何修炼说话能力，如何提高自己的说话水平。在本书中，你可以通过熟悉“7个突破口”和“8个技巧”，并阅读大量实践故事，更好地掌握并运用语言措辞的技巧，使自己成为说话高手。\n\u003e - 出版时间 2016-09-01 00:00:00\n\u003e - ISBN： 9787550286092\n\u003e - 分类： 个人成长-沟通表达\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-70HnBdzVA  \n⏱ 2018-07-06 10:39:30\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%89%8B%E5%86%99-promise":{"title":"手写 promise","content":"\n手写 promise\n\n#### 简易实现\n\n```JavaScript\nfunction Promise(excutro) {\n  let self = this;\n  self.onResolved = [];\n  self.onReject = [];\n  self.stauts = \"pedding\";\n\n  function resolve(value) {\n    if (self.stauts === \"pedding\") {\n      self.stauts = \"resolved\";\n      self.value = value;\n      self.onResolved.forEach((fn) =\u003e fn(value));\n    }\n  }\n\n  function reject(reson) {\n    if (self.stauts === \"pedding\") {\n      self.stauts = \"reject\";\n      self.reson = reson;\n      self.onResolved.forEach((fn) =\u003e fn(value));\n    }\n  }\n  excutro(resolve, reject);\n}\n```\n\n#### then\n\n```JavaScript\nPromise.prototype.then = function (resolved, rejected) {\n  let self = this;\n  let promise2;\n  resolved = typeof resolved === \"function\" ? resolved : (val) =\u003e val;\n  if (self.stauts === \"resolved\") {\n    return (promise2 = new Promise((resolve, reject) =\u003e {\n      try {\n        x = resolved(self.value);\n        if (x instanceof Promise) {\n          x = x.then;\n        }\n        resolve(x);\n      } catch (e) {\n        reject(e);\n      }\n    }));\n  }\n  if (self.stauts === \"pedding\") {\n    return (promise2 = new Promise((resolve, reject) =\u003e {\n      try {\n        self.onResolved.push(function () {\n          try {\n            x = resolved(self.value);\n            if (x instanceof Promise) x = x.then(resolve, reject);\n          } catch (e) {\n            reject(e);\n          }\n        });\n      } catch (e) {\n        reject(e);\n      }\n    }));\n  }\n};\n```\n\n#### all\n\n```JavaScript\nPromise.prototype.all = function (promiseArr) {\n  let index = 0;\n  let result = [];\n  return new MyPromise((resolve, reject) =\u003e {\n    promiseArr.forEach((p, i) =\u003e {\n      //Promise.resolve(p)用于处理传入值不为Promise的情况\n      MyPromise.resolve(p).then(\n        (val) =\u003e {\n          index++;\n          result[i] = val; //所有then执行后, resolve结果\n          if (index === promiseArr.length) {\n            resolve(result);\n          }\n        },\n        (err) =\u003e {\n          reject(err);\n        } //有一个Promise被reject时,MyPromise的状态变为reject\n      );\n    });\n  });\n};\n```\n\n#### race\n\n```JavaScript\nPromise.prototype.race = function (promiseArr) {\n  return new MyPromise((resolve, reject) =\u003e {\n    //同时执行Promise,如果有一个Promise的状态发生改变,就变更新MyPromise的状态\n    for (let p of promiseArr) {\n      MyPromise.resolve(p).then(\n        //Promise.resolve(p)用于处理传入值不为Promise的情况\n        (value) =\u003e {\n          resolve(value);\n        }, //注意这个resolve是上边new MyPromise的\n        (err) =\u003e {\n          reject(err);\n        }\n      );\n    }\n  });\n};\n```\n\n#### stop\n\n```JavaScript\nPromise.cancel = Promise.stop = function () {\n  return new Promise(function () {});\n};\n```\n\n#### done\n\n```JavaScript\nPromise.prototype.done = function () {\n  return this.catch(function (e) {\n    // 此处一定要确保这个函数不能再出错\n    console.error(e);\n  });\n};\n```\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%89%93%E9%80%A0%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C%E7%B3%BB%E7%BB%9F":{"title":"打造高效写作系统","content":"\n# 打造高效写作系统\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2022-01-04]]\n- Notes:\n\n## 总结\n\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104163043.png)\n\n## 闪念\n\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104153544.png)\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104165252.png)  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104165311.png)\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104165838.png)  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104170019.png)  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104170149.png)\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104171823.png)\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%89%98%E9%A9%AC%E6%96%AF%E6%9D%A8":{"title":"托马斯·杨","content":"\n# 托马斯·杨\n\n这个未来反叛派领袖的成长史是一个典型的天才历程：他 2 岁的时候就能够阅读各种经典，6 岁时开始学习拉丁文，14 岁就用拉丁文写过一篇自传，到了 16 岁时他已经能够说 10 种语言。在语言上的天赋使得杨日后得以破译埃及罗塞塔碑上的许多神秘的古埃及象形文字，并为埃及学的正式创立做出了突出的贡献（当然，埃及学的主要奠基者还是商博良）。不过对于我们的史话来说更为重要的是，杨对自然科学也产生了浓厚的兴趣，他学习了牛顿的《数学原理》以及拉瓦锡的《化学纲要》等科学著作，为将来的成就打下了坚实的基础。\n\n## 光的双缝干涉\n\n把一支蜡烛放在一张开了一个小孔的纸前面，这样就形成了一个点光源（从一个点发出的光源）。现在在纸后面再放一张纸，不同的是第二张纸上开了两道平行的狭缝。从小孔中射出的光穿过两道狭缝投到屏幕上，就会形成一系列明、暗交替的条纹，这就是现在众人皆知的干涉条纹\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%89%BF%E8%AF%BA%E5%8D%87%E7%BA%A7%E6%95%88%E5%BA%94":{"title":"承诺升级效应","content":"\n# 承诺升级效应\n\n当一个领导者认为自己不能犯错的时候，企业内部通常会出现所谓的“承诺升级效应”（Escalation of Commitment）。简单来讲，就是领导者为了维护自己的面子，即便发现错误，也不会停止投入，甚至还会继续追加投入，以证明自己是对的。这样，企业用来保护领导者面子的成本，自然会超过解决问题的成本，而且最终这种追加投入非但不能带来有效的收益，甚至还会成为企业走向下坡路的引路石。\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E7%9A%84%E8%B0%83%E7%A0%94%E5%92%8C%E8%AE%BE%E8%AE%A1":{"title":"技术方案的调研和设计","content":"\n# 技术方案的调研和设计\n\n我们可以主动寻找项目存在的问题和痛点，并尝试去解决。不同的项目或是同一个项目的不同时期，关注的技术点都会不一样。对于一个前端项目来说，技术价值常常体现在系统性能、稳定性、可维护性、效率提升等地方，比如：\n\n- 对于用户量较大的项目，对系统稳定性要求较高，开发过程中需要关注是否会导致历史功能不兼容、是否会引入新的问题等；\n- 对于大型复杂的项目，常常涉及多人协作，因此对系统可维护性要求更高，需要避免每次的改动都会导致性能和稳定性的下降，如何提升协作开发的效率等；\n- 对于一次性的活动页面、管理端页面开发，技术挑战通常是如何提高开发效率，可以使用配置化、脚手架、自动化等手段来提升页面的开发和上线效率；\n","lastmodified":"2023-09-18T14:54:47.558454569Z","tags":null},"/%E6%8A%8A%E8%87%AA%E5%B7%B1%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95":{"title":"《 把自己作为方法 》","content":"\n# 《 把自己作为方法 》\n\n# 元数据\n\n\u003e [!abstract] 把自己作为方法\n\u003e - ![ 把自己作为方法|200](https://weread-1258476243.file.myqcloud.com/weread/cover/81/cpPlatform_3300003962/t7_cpPlatform_3300003962.jpg)\n\u003e - 书名： 把自己作为方法\n\u003e - 作者： 项飙 吴琦\n\u003e - 简介： 两代北大学人，跨越北京、牛津、温州、杭州、上海五地，历时三年完成了这场谈话。从项飙教授的个人经验切入，追索一系列超越自我的问题，其中涉及对中国社会半个世纪以来的变化、知识共同体、全球化与民粹主义、人类学方法论等题目的思考。这本书提供了一份对话实录，也给出了一种审视问题、思维操练的方法——在自我泛滥的潮流中，如何给自己定位，在全球化的年代，如何创造性地建设身边的小世界，在思想受困的社会，如何回答宏大的命题。\n\u003e - 出版时间 2020-07-01 00:00:00\n\u003e - ISBN： 9787532176953\n\u003e - 分类： 社会文化-社科\n\u003e - 出版社： 上海文艺出版社\n\n# 高亮划线\n\n## 童年图景\n\n- 📌 后来我发现，普通人这么关心政治，关心社会变化，这在世界范围内其实很少。我知道日本人在餐桌上从来不谈政治，认为谈政治是一种不文明的行为。我就很奇怪，问我爱人为什么大家不谈政治，她说你谈了以后，可能会破坏情谊。因为大家的政治观点可能不一样，老婆不知道丈夫投票投了哪个党，爸爸不知道儿子投了哪个党，没有这种讨论。德、法的群众比较政治化，和我们有点像。 ^3300003962-7-3123-3295\n    - ⏱ 2021-12-24 15:36:44\n- 📌 他能对身边的事情形成一个图景。比如说做年糕，他会把从浸水、攒米[插图]到火候掌握很系统地讲出来，能够把其中的道理勾勒出来，事情和事情的联系也就清晰起来，形成一个图景。 ^3300003962-7-3712-3884\n    - ⏱ 2021-12-24 15:37:27\n- 📌 他突然说，“文革”不是完全错的，你看一些干部，到60年代已经开始坐小车、穿皮鞋，肚子越来越大，毛说，这样下去不行，那有什么办法，只好发动群众。 ^3300003962-7-4589-4660\n    - ⏱ 2021-12-24 15:52:09\n- 📌 距离感、怀疑心可能还是蛮重要的，否则去大学就很容易被卷入别人的话语里去 ^3300003962-7-9589-9624\n    - ⏱ 2021-12-29 11:33:47\n\n## 北大青年的焦虑\n\n- 📌 十八九岁的孩子本来应该找伙伴，有各种天真的想法，但在那种情况下，大家都在算计如何保护自己，如何取悦你的班长、副班长或者炊事员。其实能拿到的利益非常小，如果不取悦，也不一定有什么风险。 ^3300003962-9-1055-1146\n    - ⏱ 2021-12-29 11:41:07\n- 📌 有观点认为，在20世纪，战争和军队是做了一些好事的，彻底打乱了社会等级。如果没有战争，日本和英国可能都不会有重工业。 ^3300003962-9-1317-1375\n    - ⏱ 2021-12-29 11:42:02\n- 📌 比方说德国，最老牌的资本主义国家之一，长期实行“社会市场经济”的模式，强调竞争，强调个人企业家精神，同时非常强调国家对市场秩序的调配、福利制度，又有很深的基督教传统在里面——人是怎么回事，在市场上怎么对待人，失败以后怎么办，什么样的成功应该引以为荣、什么样的成功要引以为耻。苏东解体之后，它就成了赤裸裸的资本主义，只有成功和失败的区别，没有可耻的成功和可荣的成功之间的区别，完全根据最后现金的获得量来衡量，哪怕是用可耻的方法获得了成功，也可以很自豪，甚至比正常的方法更值得骄傲，说明你聪明、大胆。 ^3300003962-9-2769-3017\n    - ⏱ 2021-12-29 15:07:41\n- 📌 我那天也跟我妈妈讲这个事，我要去别人家玩，外公第一句话就是不要去，他说你去别人家，可能会给别人造成麻烦，别人很客气地招待你，也许心里并不想让你来。这种怀疑心其实给我造成很大的阴影，到现在为止还是这样。这跟我爱人的性格完全不一样，我爱人的性格是，她觉得别人见我这么高兴，他们也会很高兴，所以她想做什么事情，第一个想法就是去做，而我第一个想法是先想反面。 ^3300003962-9-3767-3942\n    - ⏱ 2021-12-29 15:50:52\n- 📌 大部分地方院校的老师其实对自己身边的生活兴趣很小，看一下学术期刊上写什么文章，就往上套，主要目的是进入那个话语体系，而不是观察身边的世界。 ^3300003962-9-6048-6117\n    - ⏱ 2021-12-29 15:58:14\n- 📌 为什么因为照顾子女而腐败，大家就觉得好像可以宽容一点？同时我们对腐败官员的揭露，却把大量篇幅放在男女关系上，而对这个人究竟怎么贪污、制度设计哪里有问题、贪污造成的具体后果又讲得很虚幻？道德是多维度的，为什么在这个维度给予那么大的权重，其他的事情给予小的权重？ ^3300003962-9-9327-9456\n    - ⏱ 2021-12-29 17:05:18\n\n## 研究“浙江村”\n\n- 📌 我一直拷问自己，为什么我在理论这方面欠缺严重？因为我在北大确实没有接受什么理论训练，而且我的阅读量也很低，阅读能力比较差。这个听起来比较奇怪，但我在北大就有这种感觉，更大的震撼是出国之后看到他们对文献的处理能力。这是一种很重要的能力，因为我们大量的信息和思考方式是一定要通过文字表达出来的，积累确实很重要。 ^3300003962-10-2033-2186\n    - ⏱ 2021-12-29 17:07:29\n- 📌 一方面我和知识分子说话有点心理障碍，大家都读过的东西我不知道，另一方面我觉得有些知识分子活在话语里，讲的是从一个话语到另一个话语之间的逻辑推演，也许和实际发生的事情相去很远。 ^3300003962-10-3040-3127\n    - ⏱ 2021-12-29 17:10:04\n- 📌 他们不讲理论，只讲故事讲经历，讲见地，很直接，一刀插进去再提出来。他们讲事情，都要讲到“点”上去，也就是导致某个现象的最重要的原因，而这个原因又往往是以前没有被意识到的。但是他们似乎没有耐心把这个“点”演化开来，形成系统的论证，聊天中点到为止，又跳到另外一个点去了。他们其实提出了大量让人非常兴奋的假设，但是没有去验证。 ^3300003962-10-4998-5158\n    - ⏱ 2021-12-29 17:14:34\n- 📌 现在想起来主要是语言的问题，自己不懂的东西就认为不好。一方面是完全的震惊，另一方面又没有深刻的反思。这个可能跟竹内好讲的中国和日本的区别有点像，就是说受到新的文化冲击时“回心”（中国）和“转向”（日本）的问题[插图]。“回心”是彻底粉碎，彻底反思自己为什么跟人家不一样，不是简单地问差距在哪里，而是问差别在哪里，把这个差别看作一种既定事实，同时也是思考和创造的来源，这是革命性的；另外一种是“转向”，就是他所说的日本的方式。 ^3300003962-10-8479-8898\n    - ⏱ 2021-12-29 17:18:12\n- 📌 在实地调查之前，没有任何一个东西给我真正的启发，我就把那些词都放在一起。调查回来之后，看到一本论文集叫作《虚拟》（Virtualism）[插图]，它的序言是我到了牛津后第一次看懂一篇英文文章，因为我的英语那时好一点了，那篇文章不是什么经典，但就是因为懂了，思路就一下子打开了。这就回到前面我们讲的，理论不在于新不新、深不深，更不在于正确不正确，而是能不能形成沟通性。 ^3300003962-10-9064-9431\n    - ⏱ 2021-12-29 17:28:26\n\n## 年轻人之丧\n\n- 📌 老师来讲历史课，完全没有概念，为什么要讲这一段跟现在看起来完全无关的事情，这段历史对今天的学生究竟有什么意义、有什么意思？这样就不能把历史的事实激活。激活有两种办法。一种是进入历史的内部，讲三国就讲三国内部的故事，这是一种比较粗浅的把它讲得有趣的办法。更重要的是能够建立一些联系，比如三国之间权力的争斗、领土之间的变迁以及人们的领土意识，和我们现在完全不一样，可以把这一层讲出来。 ^3300003962-11-697-887\n    - ⏱ 2021-12-29 17:31:23\n- 📌 说实话，西方教育还是比较强。我们这种咬牙坚持的能力比他们强，学了西方学生没学的东西，但平均来看，他们的工作热情、纪律性比国内教育的学生要强。 ^3300003962-11-916-986\n    - ⏱ 2021-12-29 17:31:34\n- 📌 Fun的意思就是能够对事情本身发生很大的兴趣和热情，不需要外在的回报来刺激热情。艺术、数学这些东西都是很好的例子，可能是人的本性。我们的家庭和学校教育，活生生地逼着你去想回报，就算有个人兴趣，也叫你千万不能把这个当作职业。取向就非常不一样。艺术上的热情还是比较自然的，爱画画的人总是爱画画，但其他工作，比如研究性的、公益性的，会牵扯到很多很繁琐的细节，确实要有一种持续的热情。不能完全靠自发，而是需要通过教育。 ^3300003962-11-1721-1926\n    - ⏱ 2021-12-29 17:33:44\n- 📌 日本给我们一个警示，出现了很多封闭的宅男宅女，生活非常稳定和固化。日本的教育也不太行，很强调工匠精神，强调执着、专注，也不太强调fun。 ^3300003962-11-2208-2276\n    - ⏱ 2021-12-29 18:09:39\n- 📌 确实，今后的经济政治关系可能会发生很重大的变化，人们不太需要花很多时间做物质工作去赚钱，我们能够用比较少的投入获得足够的生存资源，在这个情况下，经济活动在一个社会人的活动里的位置会变得越来越不重要。那个时候要有全新的想象。比如基本收入（basic income），意思是公民每个月都拿那么多钱，不管工作不工作。极端的情况下出现大量人工智能，很多工作自动化，剩下的就是分配问题。中国当然不太可能很快这样，但也需要新的想象。如果赚钱糊口不是主要的目的了，你的生活意义是什么，你怎么和社会形成关系？ ^3300003962-11-3299-3545\n    - ⏱ 2021-12-29 18:15:34\n- 📌 我们这些年改革，在老百姓的生活里，其实是一个生命意义、生活意义转移的过程。读好书、考好学、找个好工作、家里给买房子，一直是将意义外化转移，到最后没有必要转移了，就是要回到人本身。国家也是这样，过去任何问题都首先是经济问题，经济发展了，好像其他都能解决。但你看现在的民族政策、内地和香港的关系、青年的问题，靠经济发展都解决不了，而且经济也不可能无限发展，不可能给每个人一架私人飞机随便开，所以越来越回到意义本身。意义不是虚无缥缈的人文精神，而是来自人和人的关系怎么构造，这跟经济有很大关系，回到物质资源如何分配、社会关系如何协调这些问题，但不一定建立在生产劳动的基础上了。 ^3300003962-11-3620-3905\n    - ⏱ 2021-12-29 18:17:44\n\n## 边缘与中心\n\n- 📌 真正的英雄不是改变世界，而是改变自己生活的每一天。 ^3300003962-12-613-638\n    - ⏱ 2021-12-29 18:19:45\n- 📌 在现代性之下，“边缘”和“中心”变成一组对立关系，中国人又有那么强的中心情结，觉得边缘的生活不值得过，造成极大的焦虑。权力和资源过度集中。人们常说“红二代”一般不腐败，因为从小家庭条件比较好，钱无所谓，我想是有道理的，你看我们的日常生活或者新闻报道，不少巨贪都是从社会底层上来，包括在学术单位里，那些从底层上来的人往往更加容易变本加厉，就是因为他们对自己“边缘”的定位。他不认这个命。为了从边缘进入中心可以不择手段，进入中心之后觉得原来在边缘学到的那些做人原则也可以统统不要。 ^3300003962-12-642-880\n    - ⏱ 2021-12-29 18:22:21\n- 📌 如何把边缘的生活变得有趣，这很大程度上是文化建设和意识形态的问题。 ^3300003962-12-3020-3053\n    - ⏱ 2021-12-29 18:26:00\n- 📌 学者在这方面有很大的责任，不一定老讲全国性的大问题，而是把一些具体的小东西讲清楚。今天全国需要几千个、上万个乡绅，如果他们能够发掘、系统化地方的声音，就很有意思。地方的声音就是强调它的多元，这会给中国的长治久安打下很好的基础， ^3300003962-12-3443-3556\n    - ⏱ 2021-12-29 18:27:08\n- 📌 比较简单地讲，如果在英国讨论政治——英国也是很乱的，它跟法国不一样，它很晚才有中央集权，到现在中央集权也不是很强，到今天也没有成文的宪法，但它又曾经是一个全球性的帝国——我的观察是他们好像没有觉得必须要有一个成型的历史叙述。它没有很好的历史叙述，但这个国家在实践中积淀了很多原则，连贯性比较强。中国有一点倒过来，中国在事实上的连贯性很弱，也有很多的断裂，但每一个朝代都修前朝的历史，在历史书写上连贯性很强，所以就造成了很强的意识上的连贯性——我们是“中国人”，有“中国”这么一个单位。但在实际的生活逻辑上，其实有极大的断裂。而英国的国别认同，在精英中比较强，对中产阶级来讲则是很模糊的事，他们搞不清楚英国人是谁，也不关心这样的问题。 ^3300003962-12-7262-7578\n    - ⏱ 2021-12-29 18:33:41\n- 📌 是，但不一定是回到中国的命题，而是回到自己作为一个边缘者、回到我是谁的问题。想清楚究竟我能做什么，我跟世界的关系是什么。我认为世界上所有的人都有这个问题，都得搞清楚自己是谁，否则都会有这种危机，除非完全盲目地被主流裹挟进去。 ^3300003962-12-9448-9560\n    - ⏱ 2021-12-29 18:46:55\n\n## 个人危机\n\n- 📌 我今年管招生，看到很多中国学生的申请，博士、硕士我都看了，我发现很多同学会找一些有名的人写一封很简短的推荐信。另外一个策略是找自己的老师写，我们完全不知道这个推荐人是谁，但写得比较具体、实在。在这种情况下，后者的效果要远远好于前者。 ^3300003962-13-2795-2911\n    - ⏱ 2021-12-30 10:05:21\n- 📌 。我回去看别人写的研究计划，也吓一跳，非常直白朴素，就像是跟父母讨论一样。这类研究计划的打分远远高于雄心壮志、很正式的那种。这对我也是一个教训。我们在国内写报告，好像就是要高于生活，要写得很拽很正式，脱离生活，如果把吃喝拉撒睡都写进去，好像很不正常。 ^3300003962-13-3100-3225\n    - ⏱ 2021-12-30 10:06:11\n- 📌 申请的题目也一样，一定要很具体，如果让我看到你对这个题目有真心的感触，我就更加能够理解你为什么要做这个题目，会对你有信任，信任你会做下去。有的题目显然是从别人那里抄过来的，感觉就不一样。西方强调个人性，我觉得很有道理。政治家也是一样，大家都想知道这个人的生活习惯，早餐吃什么，喜欢喝什么酒，只有知道了你的真实性之后，才可以信任你。当然东方文化在政治上是相反的，这些东西都要被隐蔽，领导人不是个人，他是权力的化身，这就是不太一样的理解。 ^3300003962-13-3481-3698\n    - ⏱ 2021-12-30 10:10:08\n\n## 全球化与逆全球化\n\n- 📌 我原先分析，这是两个美国之间关系的调整，一个是全球美国、精英美国，一个是地方美国和平民美国。特朗普代表了平民美国对精英美国的反动。长期来看，特朗普到现在究竟会对全世界的政治格局造成什么效果，还没有很强的证据证明会有灾难性的结局。他不太靠谱，那不很好吗？ ^3300003962-14-1191-1317\n    - ⏱ 2021-12-30 10:46:53\n- 📌 距离感其实就是历史感。有的事件发生了，不要把它在象征意义上做太多诠释，这是我反对的。 ^3300003962-14-1368-1410\n    - ⏱ 2021-12-30 10:47:05\n- 📌 中国作为大国，一个很大的优势是，即使大家都不搞全球化了，国内还是有很大的空间。全球化、反全球化这个问题可能有一定的虚假性，所谓虚假性是我们还是被新闻中的许多词汇所迷惑。 ^3300003962-14-2813-2897\n    - ⏱ 2021-12-30 11:05:52\n- 📌 英国脱欧其实情况相当复杂，投票脱欧的人，很多是这些年在英国没有得到好处的农村人，生活变得更困难，但是真正倡导的人，鲍里斯·约翰逊[插图]等人都是精英，所谓的蓝领加紫袜子。蓝领是工人，紫袜子是贵族。紫袜子为什么要脱欧？这些人是没有民族主义概念的。一个印度作家写过，英国有皇族、有共和派、有种族主义，但没有民族主义，因为英国从来都是以世界看世界，当英国成为一个国家的时候，它就是一个帝国的形式。 ^3300003962-14-3480-3950\n    - ⏱ 2021-12-30 11:09:23\n- 📌 说要把中国故事讲好，这种心理需求本身是有问题的。为什么“一带一路”是一个中国故事？牵涉到那些巴基斯坦人、埃塞俄比亚人，他们怎么讲？这里很复杂 ^3300003962-14-4679-4749\n    - ⏱ 2021-12-30 11:10:57\n- 📌 。但事实上，很多人在国内卖鞋卖不掉，只能去非洲卖，但是到了国外，别人就觉得四川人来打工、河南人来种菜、温州人来卖打火机，统统都跟中建一样，是“一带一路”计划的。中国经济体量那么大，出去一点很自然的，即使上面不提倡，他们也得出去。但是一定要把这些多样丰富的实践讲成一个故事，往往会造成别人没有必要的警惕。 ^3300003962-14-4848-4999\n    - ⏱ 2021-12-30 11:11:05\n- 📌 中国叙述在我看来是一种比较狭隘的思路，它要靠一种制度框架来界定自我。你是中国人，出生在中国，成长在中国，这是事实，但是你看问题的时候，可以是一个母亲，是一个女儿，是一个六十岁退休的老师，这些都是看问题的视角。 ^3300003962-14-5030-5134\n    - ⏱ 2021-12-30 11:11:23\n- 📌 欧洲可能短期内问题处理不好，而中国动员全省的力量、全国的力量办一件事，当然能办得很好；但问题是说你得看明年，这个事情办完之后，十年以后是什么效果，这方面欧洲做得很成熟。的确是天天抗议示威，人们成天抱怨，这个就是它的常态，也是一种政治智慧。 ^3300003962-14-5878-5997\n    - ⏱ 2021-12-30 11:17:24\n- 📌 这也是知识分子的修养，看到一个事不会轻易地兴奋，说我们城市化办得好，那就要去问，原来住这儿的人去哪儿了，他们怎么想的，为什么其他国家那些人就没有被清理。老是反着问。反着问也不是故意挑刺，也是一种乐趣吧。我觉得这就是反思，反思不一定要咬着牙，有的时候跟道德一样，需要拿下来放在手里，这样捏捏那样捏捏，就进入这个事情内部去了。 ^3300003962-14-6409-6570\n    - ⏱ 2021-12-30 11:18:45\n\n## 用80年代来批判80年代\n\n- 📌 。有一次高平子[插图]的孙子跟胡适说他要继承张载说的“为天地立心，为生民立命，为往圣继绝学，为万世开太平”，胡适就说，怎么叫“为天地立心”，你解释给我听，你的祖父是学天文的，你不应该再引这些不可解的话 ^3300003962-15-891-1132\n    - ⏱ 2021-12-30 11:32:13\n- 📌 一般人认为80年代是一种理想主义，这个词我觉得还是比较精确，所谓理想主义首先就是一种超越，存在的价值就是对现状的超越，就是追求现在不存在的东西。 ^3300003962-15-5400-5472\n    - ⏱ 2021-12-30 14:46:27\n\n## 什么是批判\n\n- 📌 法律过程、律师制度。我小时候觉得律师制度很奇怪。这个人是不是坏人已经很明显，为什么需要律师在那里辩护。但“辩”这个概念很重要，就是说一定要假设我们不知道事实的过程是怎么回事，然后通过“辩”来把事实过程明晰起来。过程明晰之后，我们可能会发现那些明显的结论可能都是错的！学术也是这样，不能靠直觉去判断，一定要去证明它，要去展示结论是怎么达到的。往往越是明显的结论，越难去证明，但是一旦证明了以后，会是很大的贡献 ^3300003962-16-2814-3017\n    - ⏱ 2021-12-30 14:59:36\n- 📌 比如在解放前的温州，出海捕鱼的渔民是一个特殊的群体，不能与农民通婚，只有在非常落魄的情况下，农民才会跟渔民通婚。如果是渔民的话，女人衣服连襟的方向都是反的，要往右走，让大家远远一看就知道是贱民，分化到了这个程度。要把这些具体的东西讲出来，去考虑为什么在那样的社会里要划分得那么绝对，甚至在服饰、发髻的样式上，要故意强化出来。 ^3300003962-16-7970-8132\n    - ⏱ 2021-12-30 15:23:41\n\n## 理解的学问\n\n- 📌 那种通透是不成立的，如果这样的话，世界就不改变了，历史就是静止的。事实上世界一直都在变，通透的人怎么去解释这个变？如果说一切都是随机的不可言说的，那是反历史的。深刻是从网状知识结构中来的，而那种犬儒式投降式地回到自己的小世界，买完菜、做完饭，其他什么都不管，只是消极地用最小耗能法去应对，生命也可以维持下去，但就停止思考了。那就把生命的活的网变成一个死的点。 ^3300003962-17-4734-4913\n    - ⏱ 2021-12-30 15:32:32\n\n## 访谈之前\n\n- 📌 ，社会科学告诉你，其实没有什么很强的规律，都在于自己怎么样去理解这个世界，怎么样主动地采取行动。可能会有大的图景，但没有所谓的规律，因为一旦发现规律，那么一切到此为止，就不需要再去做工作了。它是通过科学的态度去证伪，去搜集材料，把事情搞清楚，但最后是要武装你，进一步去创造新的现实，去改变现实。 ^3300003962-19-1339-1486\n    - ⏱ 2021-12-30 15:35:01\n- 📌 我们总体的社会环境，有很强的冲动要把人符号化、象征化，这个大学，那个名人，很多人都是抱着五颜六色的泡泡在漂。年轻人要有勇气去问：这是在干什么，这个大学好在哪儿，跟我有什么关系，名人不名人的，先看看他在说什么，说的东西有没有趣，直截了当地去理解。符号是靠大家撑着的，如果不撑它，符号就没有了。把符号化的东西消解掉，形成有机的小群体、横向的领导力，不要指望有父母亲式的人物给你保护。我们从小的教育符号化太重了，要摆脱那个，用比较自然的方式问问题，用有机的语言说话，这需要一段时间的培养。 ^3300003962-19-2590-2831\n    - ⏱ 2021-12-30 15:47:48\n\n## 牛津记忆\n\n- 📌 牛津的环境很好，但牛津的研究不一定很前沿。我希望有一个放松的环境去考虑我自己的小世界，如果在美国，可能就不那么放松，因为他们总是要前沿化，一定要坐头排，那也会走火入魔，经常是为了前沿而前沿。社会生活里有很多问题都是老问题，一定要把老问题吃透。不断制造新的语汇，这没什么太大的意思。 ^3300003962-20-1916-2056\n    - ⏱ 2021-12-30 15:57:42\n- 📌 消极的自由，就是不要管我；积极的自由，就是我要去建设 ^3300003962-20-3605-3631\n    - ⏱ 2021-12-30 16:02:28\n- 📌 我个人觉得还是高水平的大锅饭比较好。否则就没底了，大学里发奖金给钱，搞得乌烟瘴气，拿了钱的觉得可以拿更多，没拿到的当然不高兴，不如一下子刷平。我爸就老不理解这个事，他说刷平了那不是谁都不工作了吗？的确有一批人不工作，什么都不发表。但大学、社会、个人生活都是一个生态系统，每个人有不一样的能力，有的人教学教得好，但不做研究，有的人就是发表不了论文著作，但这个人能聊天，聊天对我们来说也是很重要的财富。没有竞争压力了，大家最独特的才华才会体现出来。 ^3300003962-20-5378-5600\n    - ⏱ 2021-12-30 16:08:28\n- 📌 但是我没有小资产阶级式的情绪化。我从小有一个特点，就是不太愿意多愁善感（unsentimental），我从来也不过生日，没有写信送卡片、关爱小动物之类的习惯，就是非常物质化地生存，要节省，不能浪费…… ^3300003962-20-7617-7717\n    - ⏱ 2021-12-30 16:30:14\n\n## 距离感与直接性\n\n- 📌 因为有了人的劳动投入之后，真和假、实和虚、熟悉和不熟悉才会形成强烈的对比。 ^3300003962-21-2830-2867\n    - ⏱ 2022-01-04 10:55:14\n- 📌 回到怎么做到“直接”的方法上来，“直接”的意思是：第一，要有内容；第二，要有碰撞，有冲击力；第三，要写得直白。首先一定要在内容上有丰富的积累，对事情有切入，不能只讲在面上的总体判断。切入是要看清楚事情是怎么由内而外地构成。我上课的时候会讲这两者的分别，explain（解释）和explain away（搪塞），explain away就是造出一个自圆其说的说法，把这个事情settled（处理掉）。典型的例子，比如人口流动研究中的“推拉理论”[插图]或者经济中的供求关系，因为有供有求，所以事情发生。这不是解释，其实是把问题解释没了。真正的解释是切入，要进去，去问：需求到底从哪里来的？是怎样被构造出来？供给也是这样，资源怎样被调动？一定要看看里面的内容是怎样发生的，冲突是什么。 ^3300003962-21-5305-5804\n    - ⏱ 2022-01-04 10:59:20\n\n## 人类学的圈子\n\n- 📌 的。至于同行，因为我对别人不太熟悉，不能够形成对话。这里其实有个问题，学术研究只是变成了同行之间的对话，你说话是为了让我批判。这是我一个朋友说的西方人类学陷入的困境：一个人类学家说了点什么，是为了让别的人类学家有话可说。 ^3300003962-22-2600-2710\n    - ⏱ 2022-01-05 15:57:11\n\n## 非虚构写作\n\n- 📌 对很多青年思考者来说，他们不是职业的知识分子，那就要把自己和社会的关系想清楚，就是“认命不认输”[插图]的那个说法。 ^3300003962-23-4794-4952\n    - ⏱ 2022-01-05 16:07:52\n\n## 学术不是天职\n\n- 📌 。如果有一个想法是从中文先发展出来的，我会用英语再表达一下，在英语表达的过程当中，就会发现原来很多想法不严密，有很多东西需要解释，一解释的话，就会发现所用的概念和所指的现象之间的联系并不自明。用了一个比较模糊的词，究竟对应什么具体现象，有时候对应不上。倒过来，如果用英文形成的想法，用中文去表达之后，也会发现很多问题。比如自己以为有一定创新意义的说法，用中文一说，发现其实没什么意思，没有新的见地在里头，敏锐性不够，杀伤力不足。所以中文可以检测出内容上究竟有多少新意，英文检测论证过程、定义是不是基本清楚，如果这两个都通过了，我就比较自信。 ^3300003962-24-2530-2800\n    - ⏱ 2022-01-05 16:16:45\n- 📌 讲事情无非是两种讲法。一种是大量地简化，简化到一个已经成型的模子里面，这样就把这个事情安定下来，放到盒子里，看起来很清楚。另外一种讲法是把内部的复杂性都讲出来，那就成了没底的事，因为要在比较有限的时间和空间里把事情讲出来，别人会越听越糊涂，因为细节都是绕的，整个盒子倒在桌上，不成系统。所以要提纲挈领。要讲故事，只有对大的问题有关怀，知道背后的基本问题指向在哪里，才能把复杂性带出来。打个比方，在日常生活里有很多矛盾搞来搞去，很纠结，它们不一定是钱多钱少的问题，也不一定是自由不自由的问题，什么算是有足够的自由这都是讲不清楚的事，真正引发矛盾的可能是一个具体的尊严问题，有的时候是面子，有的时候是所谓的人格，这也是老百姓经常用的话语。抓准了这个基本指向，细节都会有它的意义。 ^3300003962-24-2896-3233\n    - ⏱ 2022-01-05 16:17:26\n\n## 民族与民粹\n\n- 📌 人口贩卖也是冷战之后、90年代初出现的政策概念。出现这个概念，很大程度上是因为西欧对来自东欧的性工作者的一种道德恐惧。首先，柏林墙倒塌之后，西欧觉得无数的人会从东边过来，很恐惧，要遏制这个情况。第二，西欧的公众对性产业仍然有根深蒂固的道德恐惧，但是又不能讲它不好，因为西欧的女权主义非常强势，认为性产业是一种“性劳动”，要充分尊重和保护，不应去禁止或在道德上谴责。所以政策就把性产业的问题转化成一个人口贩卖的问题。它的意思是说，要是从东欧移到西欧做性工作者，不可能是自愿的，没有妇女会自愿做性工作者，肯定是被贩卖的，是这么一个逻辑的链条 ^3300003962-25-922-1190\n    - ⏱ 2022-01-05 16:23:18\n- 📌 他要打破我们今天国别的框架，认为很多跨国联系长期存在，三百年前有贸易网络，可能比国家更重要。像我这样从北大出来的人，觉得这个没意思，因为今天最重要的框架还是国别。后来我才慢慢理解到，这种视野相当重要，不是去否认今天国家的重要性，而是如果对国家有历史性的了解，就能相对化，有距离感，那种乡绅的东西就会出来。乡绅为什么要学历史，西方的知识分子为什么要学古典学，学希腊、罗马，不是要简单地建立一个自我叙述，虽然它可以被那样利用，民族主义就是要构建出一个非常连贯的单线的历史叙述；而是可以帮助我们建立起另外一种时间感，长时间感，使你对今天的政治有一个比较好的把握，同时又有比较健康的距离感。 ^3300003962-25-2279-2570\n    - ⏱ 2022-01-05 16:26:54\n- 📌 我比较反对创造性或者天才的说法。任何东西都是靠做出来的，不做的话什么都没有。小时候课本里面的达·芬奇画鸡蛋，都蛮真实的，技术性的东西相当重要，只讲空洞的东西是不行的。 ^3300003962-25-3020-3103\n    - ⏱ 2022-01-05 16:29:32\n- 📌 。艺术不完全是靠想象，艺术很具体，你对今天早上那一束阳光的感受，是很具体的，要把握那种感受，一定要把它做出来，通过雕塑或者画画，色彩的调配，物质性很强。夸夸其谈相当可怕，好像一种灵感让自己感动起来，但是飘过去了就什么都没有 ^3300003962-25-3370-3481\n    - ⏱ 2022-01-05 16:30:00\n- 📌 首先，没有所谓真正的全人类，全人类也是某一种视角。其次，我们如果也学你看全人类，其实是对自己在世界上位置的背叛，要尊重我们被殖民、被剥削的过程，必须靠民族主义来对抗那种普适、抽象的叙述。所以我觉得民族主义在今天还是很重要，我把它看作一种斗争工具，但如果认为这是中国人对世界格局、世界关系本质化的反应，那就一点意思都没有，因为我们知道民族主义在中国是晚清才兴起的，是很多人的斗争，把它消解成那样，其实很不负责任。 ^3300003962-25-4884-5089\n    - ⏱ 2022-01-05 17:02:34\n- 📌 欧洲的历史学家是把莱茵河西岸叫作市民的民族主义（civic nationalism），把莱茵河东岸叫作民族的民族主义（ethnic nationalism）。西岸的意思就是以法国为代表的共和主义，有共同的政治理念，不管什么肤色什么民族，只要尊重我的政治理念和宪法，都是公民。东岸是东欧、巴尔干，主要看你爹是谁、你姓什么、信什么宗教、皮肤的颜色。后者是种族性的，而前者是原则性的，一直有这个区分。 ^3300003962-25-5499-5696\n    - ⏱ 2022-01-05 17:03:55\n- 📌 我写过，中国的社会主义革命其实是民族主义和国际主义紧密结合的，否则不可能有社会主义，社会主义是世界性的。官方界定毛泽东的最大贡献，不是建立了新中国，而是“伟大的马克思主义者”，他把马克思主义提到一个新的高度，是世界性的贡献。现在把他讲成一个民族主义者。中国有很多人都是民族主义者，包括章太炎、孙中山，开始排满，然后要共和，然后又走社会主义道路，大家都在世界格局里寻找位置，民族这条线划在哪里，是非常动态的过程，不是天然给予的范畴。现在很多民族主义的情绪是把民族这条线给绝对化了，看不到历史上民族是怎么形成的，但是又拿历史上的斗争和自己狭隘的理解套起来，所以很多年轻人也就被绕进去了。 ^3300003962-25-5875-6166\n    - ⏱ 2022-01-05 17:05:14\n\n## 新加坡启蒙\n\n- 📌 她让我理解到电影、诗歌、艺术、民谣其实和学术一样，都是人类自我表达的方式。你想多可怕，我要等到那个时候才理解到学术是人的一种实践，到了三十多岁才启蒙，在牛津都没有理解到。因为从小到大，学习是天职，从来不问为什么学习，没有想过学术和寓言其实是一回事，跟唱歌是一回事。 ^3300003962-26-944-1076\n    - ⏱ 2022-01-05 17:06:20\n- 📌 我们讲到中心和边缘，大有大的难处，而因为小，能看到的东西就多。这个话听起来很奇怪，大的东西内在不是更多吗？是，中国很复杂，但中国中心的任务往往是消解这些复杂性，把它简单化、统一化，因为它怕这个复杂。但在新加坡这样的小地方，政治上当然要统一，但文化上要生存，唯一的办法就是要强调多样性。 ^3300003962-26-1487-1629\n    - ⏱ 2022-01-05 17:10:02\n- 📌 新加坡比温州还小，温州有九百多万人口，新加坡只有五百万 ^3300003962-26-1755-1782\n    - ⏱ 2022-01-05 17:10:15\n- 📌 你的这个问题提得很好，为什么会在一个小地方受启蒙。正是因为把我原来那些大的象征性、符号性、固定性的思维，那种自大解放出来了。瓦妮老笑我，她一下子就能把我看清楚，估计她经常见我们这样的人。她说印度尼西亚学者也有这个问题，被国族的自我论述淹没，动不动就要讲大的东西，在不理解、不懂的情况下，把国族放到很高的层次上。新加坡就不能那么讲，它也没有自己的历史，就是一个小岛，1899年开埠，然后英国人殖民，后来又归了日本人。这样一段很短的历史，没有统一的语言，没有统一的文化，是一个本不应该存在的国家。到现在为止，他们心理上的出发点还是这样，“我们的存在，其实违反了历史的自然规律”，所以要不断努力，要走在历史前头。这个意思很深，但这正是我们生存的意义所在，永远不能把任何东西认为是自然而然的。 ^3300003962-26-2130-2472\n    - ⏱ 2022-01-05 17:11:33\n- 📌 在小的地方，更清楚地看到人的世界。东南亚很有趣，你看国家很小很弱，但生活也可以很好，不在世界中心就没有意义了？ ^3300003962-26-2565-2620\n    - ⏱ 2022-01-05 17:12:11\n\n## “盘根”式共同体\n\n- 📌 为什么“人的再生产”，而不是物的再生产，变得越来越重要？在流动的过程中，是不是告诉我们一种新的全球范围内的政治经济学关系？物的生产的重要性减弱了，人的生产的重要性上升了。生产出多少辆车，做多少双鞋，其实赚不了多少钱，不如好的大学、好的医疗技术、好的养老环境重要。“人的再生产”现在已经成为很重要的财富积累和价值的来源。背后的意思是，在国际格局中，谈中国崛起、亚洲崛起，如果只是追求物的生产，那肯定永远追不上。因为你在做太阳能板的时候，别人在新的“生活方式”上下功夫，而生活方式是赚钱的来源。 ^3300003962-27-1804-2049\n    - ⏱ 2022-01-05 17:37:45\n- 📌 真正的纽带一个是共同的研究兴趣；再一个是个人关系，就是友情；第三是异质性，我们每个人不一样，我的研究想得比较大、比较空，但有的人就做得很细，有互补性。也有国度上的异质性，有的人做泰国研究，有的人做日本，有的人做中国。团体内部一定要有异质性，而且这个异质性要比较大，如果大家都是做中国某一件事的研究，那在一起能说什么呢？关系也变得紧张，到最后还有知识产权、署名权问题。案例不一样，视角不一样，甚至有的时候在一些根本问题上不一样，也没有关系，可能有的人觉得我这种做法太空，不可能实现，但也可以聊，这种“空”可能对他也有启发性，有想象力。国内的主要问题还是异质性不够，纯粹的同质性的合作关系，深化不下去。 ^3300003962-27-2220-2519\n    - ⏱ 2022-01-05 17:49:54\n\n## 跨国性的自洽的小世界\n\n- 📌 韦伯（Max Weber）讲得很清楚，理性化可能是一种牢笼，所以我们都渴求通过一种有机的个人性的盘根式的小世界抵制这个体制。 ^3300003962-28-560-622\n    - ⏱ 2022-01-05 18:12:53\n- 📌 我们碰到乌干达的朋友、苏格兰的朋友时，要了解他们的本土，同时又要建立一种共通性，这里就要把握好层级的问题。我们之间究竟重合在哪里，在共同建立起来的东西里，经过了哪些抽象化，提炼了哪些，删除了哪些特殊性，要把这个过程想得很清楚。所以，地方性和全球性都不是真实的，都是人为的。 ^3300003962-28-2069-2205\n    - ⏱ 2022-01-05 18:28:07\n\n## 大学应该寻找例外\n\n- 📌 现在去看那些改革开放四十年的回顾，都认为恢复高考是很重要的机会，觉得这是天经地义的事，恢复高考就说明社会恢复了基本的理性，实现了基本的正常，但这是谁的正常？对农民来讲，恢复不恢复高考，对当时90%的农民来讲影响不大，但是恢复高考把此前的官僚和城市知识分子一下子拢进来，其实是一个政党和当时社会主义体制下的精英的重新联盟。大学当然是搞精英主义，你看现在回忆恢复高考的人，很多都是干部子弟，从农村回到城市，不仅恢复了原来比较优越的地位，而且用这种途径在文化、道德上使自己的优越正当化、合法化。 ^3300003962-29-1228-1472\n    - ⏱ 2022-01-10 15:29:17\n- 📌 总的来讲，确实有意思的事不太多。说老实话，学界的进步比我原来想象的要小，我原来认为国内那么多变化，听他们一讲，提的都是很有意思的现象，却没有什么分析，蛮奇怪的。 ^3300003962-29-4488-4568\n    - ⏱ 2022-01-10 15:33:33\n\n## 新研究\n\n- 📌 再生产和学生的流动就很有关系，现在的英语教育、出国留学，不仅是简单的镀金，而是要改变人本身。家长们不仅仅是想让孩子读个洋学位好找工作，而是越来越觉得国内的教育不符合人性，把孩子的天性快乐搞没了，出国是为了保护“人”。 ^3300003962-31-1217-1325\n    - ⏱ 2022-01-10 16:12:21\n\n## 共同理想\n\n- 📌 而自我证明这个概念是个悖论。要证明自己其实就是没有自己，意思是说，要通过已经预设的原则和标准、别人的逻辑和流程来证明自己的存在，其实是取悦别人，把自己搞没有了。对个人来讲，就是要求一份认可，这个是我们在教育上的教训，都太深刻了，包括我自己。做事情是要活得光鲜，不是活得快乐。去哪里旅游，主要是拍照让人看。前提当然也是一种自卑。英国就从来没有要证明自己，日本军国主义兴起，就是要证明自己不比欧洲差。所以你讲得很对，自我证明是很危险的。 ^3300003962-32-2406-2622\n    - ⏱ 2022-01-10 16:20:32\n\n## 乡绅作为方法\n\n- 📌 原来就是这个意思，利用人民代表去取代乡绅，这就是很复杂的一个问题。现代国家的设立，很多人说导致了劣绅淘汰良绅，资源掠夺型的、自私自利的乡绅取代了原来比较文化型的乡绅。人民代表完全是地方各界群众的代表，如果能够把人民代表大会制度做好，那也是乡绅的现代化，好的人民代表就应该是乡绅。 ^3300003962-33-1571-1710\n    - ⏱ 2022-01-10 16:30:19\n\n## 访谈之前\n\n- 📌 有一个现象我现在感到很奇怪，中国有部分青年激进化程度比我想象的还要高。这提出一个信号，“悬浮”会导致两种效果。第一个是焦虑，大家都很忙，跑来跑去，一些基本的生活理念变得非常保守，就是所谓的新家庭主义，中国式逼婚，一定要生小孩，一定要买房子，跟这种单一化联系到一起。正因为“悬浮”之后，自己当下的行为本身不能产生意义，就有点原教旨主义，家里那点事儿成了人生唯一的意义寄托。这种新保守主义的对立面就是激进，因为多样、矛盾的经历很难厘清、给予意义，所以觉得需要革命式的、全面的、翻天覆地的变化，其他都是虚幻，都是假的，都在压迫。“悬浮”解释了经济为什么能够增长那么快，全国人民都奔着一个目标去，都在为自己奋斗，拼命干活，挣钱，也导致了这两个潜在的问题。你觉得中国思想界能够给这样的同学提供什么帮助？ ^3300003962-35-1134-1480\n    - ⏱ 2022-01-10 16:36:56\n\n## 人的再生产\n\n- 📌 如果拿人的流动去看，原来的发达国家依然是“人的再生产”的产业中心，它们把握教育、医疗和各种知识产权，以及生活方式的潮流。把资本主义的这个变化和前面我讲的流动趋势放在一起，似乎得到了一个解释，为什么中国人在变富的同时追求所谓“早发早移”，也就是说，尽快赚钱然后尽早移民，很重要的原因就是移民并不是为了赚钱，而是为了“人的再生产”，为了更加稳定的可预期的未来，为了更好的子女的教育、更洁净的空气、更多的绿地，但赚钱还得在中国赚，因为这里的利润比西方还要高。 ^3300003962-36-2459-2685\n    - ⏱ 2022-01-10 16:42:04\n- 📌 看中国留学生的历史，改革开放之后大概可以分三个阶段。第一个阶段是从1976年到1992年。教育是改革开放的第一枪之一，1978年中美有一个教育交流“口头谅解”[插图]，那时的留学生以公派为主，年纪偏大，以工科为主，硕士特别是博士为主，从来没有听过有人出去上本科。而且一定要回来。留学带有非常强的价值取向，就是去西方学先进的技术、理念、制度、管理方式，作为中国未来的榜样。第二个阶段是从90年代到最近，不再是公派为主，体现出个体化、低龄化、学科多样化，但我觉得最重要的一点变化是价值取向的取消。价值取向有两个变化，第一，不再必然回国报国，不再为报国而学习，第二也不认为西方代表着未来，是榜样国家。为国服务和普世价值，两重意义都被动摇，更加功利性、工具化。最近就很明显，大家不再觉得美国的制度是榜样，但问他为什么要去，他说当然要去，去了那儿有空气，有绿地，工作还很舒服。 ^3300003962-36-3125-3752\n    - ⏱ 2022-01-10 16:45:38\n- 📌 今天更明显，很多年轻人去了美国留学，不觉得美国代表任何终极价值，反而觉得中国制度很好，但是一心要待在美国，成天就是摇号，一年摇三次，想拿到绿卡。 ^3300003962-36-4376-4448\n    - ⏱ 2022-01-10 16:45:58\n- 📌 但是在很多鼓励留学生回国创业的政府项目中，我也看到一个悖论。这些项目一方面非常强调经济理性，说我们投入那么多钱，鼓励他们回来，主要是为了促进经济发展，对我们生活有利，肯定是双赢合作。但另一方面，具体怎么做，怎么把钱分出去，希望你做什么，操作的模式又有非常强的仪式化特征。比如，如果只要经济合作，直接谈项目就完了，为什么需要把所有项目集中在一起，开一个大会，搞签字仪式？开这个会来很多人，花不少冤枉钱。具体的活动流程高度仪式化，也有很强的情感意识形态，包括“祖国”、“母亲”、“贡献”这种话语在里面。这种留学生回国政策，把仪式和理性结合在一起，我叫它仪式经济。这个概念至少有两个意义。第一是国家投入很多钱做这个仪式，所以本身存在一个办仪式的经济。第二，真正让这个仪式获得说服力，让人信服它的，是一个经济主义话语，是经济双赢，理念上是高度经济主义的。 ^3300003962-36-6053-6426\n    - ⏱ 2022-01-10 16:47:20\n\n## 阶层流动的悖论\n\n- 📌 我们可以说这种经济增长确实是物质生产主义的，主要靠物质生产的积累来实现高速的大规模的增长，很大程度上正是以不重视“人的再生产”为代价。举一个关于“悬浮”的例子。有一位出租车司机，开两班车，我问他怎么不累，身体怎么样。他说：“身体？身体是以后的事。”这就是以“人的再生产”为代价，来追求高速度。很多人说，你说得太理想了，要是大家不那么高速的话，我们年轻人基本的物质条件上不去，就会有大规模的失业、贫困，会有更大的问题。这个有点似是而非。要用中国现在的经济总量来讲的话，如果进行彻底地再分配，这些问题都会解决掉，我们的物质总量，够大家过得好。现在我们好像被绑架了，一定要更高更快更强，正是因为不太愿意进行激烈的再分配，已经获得的人还要获得更多，同时又要把下面的人也提上去，这个确实很难，今后可能还是要慢慢走向再分配的思路。 ^3300003962-37-3158-3517\n    - ⏱ 2022-01-10 16:53:30\n- 📌 钱是我赚的，怎么可以再分配？这个人类学有话可讲。你讲到小时候的集体生活，占有的概念是很薄弱的，人应该分享，“占有”确实是改革开放之后才逐渐盛行，人们变得斤斤计较。现在“占有”成为重要的人生目标，确实值得更好地研究，因为中国传统里没有特别强的占有概念。最重要的资源是土地吧，土地有地表、地下权的分离，土地流转比较频繁，大多数情况下地主不是特别大，富不过三代，轮流来，宗族又有义田来济贫。现在的“占有”，占和有可以说是对立的。你居者有其屋，那是“有”；你一个人买那么多套房子，把房价抬得那么高，自己食利，那就是“占”了。 ^3300003962-37-3559-3817\n    - ⏱ 2022-01-10 16:56:37\n\n## 再谈乡绅\n\n- 📌 之前您提到过舅舅对您影响很大，这次在温州，我见到他，果然是一个本地通，他似乎知道温州的一切是怎么构成的，真是一个具体的有乡绅感觉的例子。中国社会里其实一直有很多这样的人，散布在各行各业里，并不好统一定义他们，就是什么都知道一点，什么都能讲，而且讲得很有趣，能把生活的质感和层次讲出来。 ^3300003962-40-1271-1413\n    - ⏱ 2022-01-10 17:10:03\n- 📌 另外这和我们对性关系、性别关系的认识都有关。比如在西方，这些玩笑在我们同学这样的社会阶层是不可想象的，特别是男女同学都在一起的时候。在他们看来，性关系是很直接的事情，不需要遮掩，所以也不用到一定年龄说出来。你要跟一个西方人开这样的玩笑，像吃豆腐之类，他第一反应是你在讲一个事实，能把他吓死。然后你说，不用怕，只是个玩笑，他就更糊涂了，对他们来说这没有什么好笑的。但我们讲出来是有一种解放感，然后这个解放感会在群体里形成特殊的亲密感，所以有趣。这类玩笑在印度、日本也不太可能，要看具体的圈子。这又和对性别关系的理解有关。 ^3300003962-40-2706-2965\n    - ⏱ 2022-01-10 17:12:04\n\n# 读书笔记\n\n## 童年图景\n\n### 划线评论\n\n- 📌 “三种人” ^16142247-7vMY9elgd\n    - 💭 清理“三种人”，是文化大革命结束后，中国共产党党内进行拨乱反正和人事调整的一项政治运动。三种人指的是：造反派起家的人、帮派思想严重的人、打砸抢分子。主持这场运动的为反对“文化大革命”的一派，以邓小平、陈云、胡耀邦等党内元老为主，目的是防止改革开放的方针被“文革”遗留分子翻案。\n    - ⏱ 2021-12-24 15:51:47\n\n### 划线评论\n\n- 📌 “抓革命”是什么意思，因为对我来讲，“抓”都是抓坏人，革命是好的，怎么会“抓”呢？ ^16142247-7vMWBHSAE\n    - 💭 从小就爱思考反常的事\n    - ⏱ 2021-12-24 15:28:16\n   \n\n## 边缘与中心\n\n### 划线评论\n\n- 📌 我是中国人，这不是一个骄傲不骄傲的问题，我就出生在这个文化里面，就跟我是温州人一样，我出生成长在中国七八十年代一个南方中小城市，这是命，一定要百分百去拥抱它，嚼透它。在这个意义上，我的身份认同很清晰。大家现在说的身份认同有另外一层意思，好像认同了一个东西，就要捍卫一套价值，要遵循一定的行为规则，继承一定的文化气质，这个因果关系对我来说不存在。 ^16142247-7vUL6LvUt\n    - 💭 我认同这样的身份价值，而不认为我仅因为我出生成长而去捍卫价值，要寻找你愿意捍卫这个价值的原因\n    - ⏱ 2021-12-29 18:46:03\n   \n\n## 非虚构写作\n\n### 划线评论\n\n- 📌 LGBT群体 ^16142247-7w5f8wXmj\n    - 💭 LGBT是女同性恋者（Lesbian）、男同性恋者（Gay）、双性恋者（Bisexual）与跨性别者（Transgender）的英文首字母缩略字。\n    - ⏱ 2022-01-05 16:11:15\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8A%91%E9%83%81%E7%97%87":{"title":"抑郁症","content":"\n目前，**世界关于抑郁症的主流科学循证疗法依然是认知行为疗法占据主导地位**。\n\n但是参见文献 doi: 10.1037/0022-006X.4.658. 中的说法，行为激活疗法的效果超越认知行为疗法，与抗抑郁症药物效果相当。\n\n**替换情境，我们才更容易摆脱抑郁症的影响**。绝大多数时候，当一个人深陷抑郁症困境中，其实已经很难摆脱自己的“个人概念”，无论如何纠正，都是一件难事。\n\n## 如何改善\n\n1. **首先，要理解情境是一个容器，我们很难将其割裂开来。** 预防抑郁症，尤其需要注意多户外运动。心理健康疾病常常伴随阳光摄入不足。如果长期呆在雨季较多的城市，那么换一个阳光日照更足的城市；如果长期呆在朝北的房间，那么租房刻意朝南；如果长期呆在室内，那么中午午餐以及周末尽量外出。\n2. **情绪是人与情境长期交易之后形成的产物。** 思考下有哪些情境容易引发人类对未来之思与不得不沉醉于当下呢？各位可以根据自己的情况选择恰当的生活方式。\n3. **情境本质上是他人他事他物。** 预防抑郁症，需要果断远离那些不够好的情境。\n4. **从大脑算力上来说。人类难以处理复杂情境。** 因此，你需要不断降低情境复杂度。对预防抑郁症来说，我们宁愿与一两人相处，享受亲密关系，而不是经常呼朋唤友——这是降低人际复杂度。\n5. **吃好睡好喝好，才能改善大脑处理情境的能力。**\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8A%95%E5%BD%B1%E4%BB%AA":{"title":"投影仪","content":"\n# 投影仪\n\n带光学变焦镜头的三色激光机型 比较完美的方案，但是还没出\n\n极米 H6 有光学变焦 但是其他都比不上同价位的当贝F6 和海信 cls  \n当贝F6 不管是SDR还是HDR感觉画面都很好，尤其是色准是最好的\n\n## SDR和 HDR 对比\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230604181132.png)\n\n## 发光方式\n\n### LED\n\n最便宜，亮度高\n\n### 灯泡机\n\n### 三色激光\n\n预算充足，打游戏，可以买三色激光  \n显色比较好\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8A%95%E8%B5%84":{"title":"可转债打新","content":"\n# 可转债打新\n\n可转债这块出了一个新规，从 2022 年 6 月 18 号开始，可转债交易门槛提高，必须要有 2 年证券交易经验，而且有 10 万元的资产要求。之后开户打新债的，都得满足这个门槛才行了。在这之前开户的就不受影响。  \n身边还是有很多人没事就会去打打新债。这个新规出来之后，打新账户增加速度肯定下降，打新中签概率估计会提高。另外这次新规还对可转债提出了涨跌幅限制，游资暴炒的热情会降低，我们打新债暴赚的概率也会减少了。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8A%95%E8%B5%84%E4%B8%AD%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E6%9B%B4%E6%96%B0%E7%89%88":{"title":"《 投资中最简单的事（更新版） 》","content":"\n# 《 投资中最简单的事（更新版） 》\n\n# 元数据\n\n\u003e [!abstract] 投资中最简单的事（更新版）\n\u003e - ![ 投资中最简单的事（更新版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/55/YueWen_29750244/t7_YueWen_29750244.jpg)\n\u003e - 书名： 投资中最简单的事（更新版）\n\u003e - 作者： 邱国鹭\n\u003e - 简介： 投资本身是一件很复杂的事，我们是否可以化繁为简、直接追问什么才是投资的本质？有没有一些简单可行的法则和工具能够让我们直接触及投资的本质？ 《投资中最简单的事》（更新版）为读者呈现的正是符合投资的内核和本质的、与时俱进的普适性规律，这些规律不会因为时间的流逝而有所淡化，相反，自本书第一版面世5年来，这些规律经过了时间的检验和市场的充分验证，更新版不仅在第一版的基础上新增了作者当下的思考，还对于那些反复被证明有效的规律进行了拓展和完善。高毅资产董事长邱国鹭从多年投资的自身经验出发，剖析了“便宜才是硬道理”“定价权是核心竞争力”“人弃我取，逆向投资”“投资应该数月亮，胜而后求战”等简单易行的投资原则，阐明了“对于大多数人而言，只有价值投资才是真正可学、可用、可掌握的”这一观点，分享了易于普通投资者学习、操作的投资方法。在对“投资中最简单的事”娓娓道来的过程中，作者用生动晓畅的语言分享了自己投资生涯中的丰富投资实例，使本书兼具了易读性与实操性。\n\u003e - 出版时间 2020-03-31 00:00:00\n\u003e - ISBN： 9787513660389\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中国经济出版社\n\n# 高亮划线\n\n## 再版序\n\n- 📌 任何表面复杂的事物，只要掌握了内在的规律，其内核和本质应该是清晰易懂的， ^29750244-4-535-571\n    - ⏱ 2021-06-11 18:01:31\n\n## 初版序\n\n- 📌 做事先做人，要常怀感恩之心，要多读书，读书的意义不在于积累知识而在于培养能力。 ^29750244-5-4291-4330\n    - ⏱ 2021-06-11 18:08:35\n\n## 第一部分 投资理念\n\n- 📌 互联网的本质是“人生人”，优势在于能以极低成本服务无数客户，规模效应体现在“人多”，“二八”现象不明显，是典型的散户经济，得散户者得天下。银行业的本质是“钱生钱”，规模效应体现在“钱多”，80%的业务来自20%的客户，“二八”现象显著，得大户者得天下，而且那20%的大客户是需要线下的高端服务的，这就是网上银行至今在欧美日韩都没有很成功的案例的重要原因 ^29750244-6-5542-5718\n    - ⏱ 2021-06-11 18:14:30\n\n## 02 人弃我取，逆向投资的关键\n\n- 📌 在面对其他类似食品安全事件的逆向投资机会时，投资者可以思考这样几个问题：●有无替代品。若有替代品（例如三株口服液之类的营养品就有众多替代品），则谨慎；若无替代品，则积极。●是个股问题还是行业问题。如果主要是个股问题，则避开涉事个股，重点研究其竞争对手；即使是行业问题（例如毒奶粉），也可关注受影响相对较小的个股。●是主动添加违规成分还是“被动中枪”。前者宜谨慎，后者可积极。●该问题是否容易解决。若容易解决，则积极；若难以解决（例如三聚氰胺问题），影响可能持续的时间长且有再次爆发的可能性，则谨慎。●涉事企业是否有扎实的根基。悠久的历史传承和广泛的品牌美誉度在危机时刻往往有决定性的作用，秦池、孔府的倒台就是由于根基不稳而盘子却铺得太大。●是否有突出的受害者个例。这决定了事件对消费者的影响是否持久。 ^29750244-7-3901-4478\n    - ⏱ 2021-06-11 18:21:53\n\n## 03 便宜是硬道理\n\n- 📌 我们看一下货币的供应量M2，2011年与2010年相比，增速只有12.7%[插图]。我们都知道，M2的合理增速应该大致比名义GDP快2~3个点。相对于我们的经济增长速度，当前的货币供应量只是一个基本的、能够满足现有经济运行需要的水平。 ^29750244-8-2023-2227\n    - ⏱ 2021-06-11 18:32:58\n- 📌 选股票，一定是先选行业。就像买房子，一定是先看社区，社区不行，房子再漂亮也不行。买股票也是，股票本身再好，只要这个行业不好，一样很难涨起来 ^29750244-8-6851-6927\n    - ⏱ 2021-06-11 18:39:51\n\n## 第二部分 投资方法\n\n- 📌 国家授予的垄断意味着它的定价权受到政策限制。我们并不喜欢垄断本身，我们喜欢的是垄断带来的定价权，所以定价权受限制的垄断没有意义。 ^29750244-10-10684-10748\n    - ⏱ 2021-06-11 19:10:56\n- 📌 历史上的股市见底信号1．市场估值在历史低位；2.M1见底回升；3．降存准或降息；4．成交量极度萎缩；5．社保汇金入市；6．大股东和高管增持；7．机构大幅超配非周期类股票；8．强周期股在跌时抗跌，涨时领涨；9．机构仓位在历史低点；10．新股停发或降印花税。 ^29750244-10-23561-23695\n    - ⏱ 2021-06-11 19:38:32\n\n## 第三部分 投资风险\n\n- 📌 价值投资最需要的是坚守，最害怕的是坚守了不该坚守的。金融危机时花旗从55元跌至1元的过程就深度套牢了无数盲目坚守的投资者。关键是要避开价值陷阱。所谓价值陷阱，指的是那些再便宜也不该买的股票，因为其持续恶化的基本面会使股票越跌越贵而不是越跌越便宜。 ^29750244-14-1745-1868\n    - ⏱ 2021-06-12 11:03:13\n- 📌 许多国家的股票市场（包括A股市场）的历史数据表明，高估值成长股的平均回报远不及低估值价值股，原因就在于成长陷阱比价值陷阱更常见。 ^29750244-14-4441-4505\n    - ⏱ 2021-06-12 11:08:09\n- 📌 因为价值投资缺乏自我纠错的功能，所以实践者必须是强者思维，而不是弱者思维。弱者思维的思路是当市场跌下来时要尊重市场，例如跌幅超过15%就减仓，不管市场下跌是出于什么原因。相反，价值投资者需要判断是市场错了，还是自己错了，需要做的是止错而非止损，这是两者之间的区别。 ^29750244-14-9337-9469\n    - ⏱ 2021-06-12 11:14:36\n\n## 09 价值投资的局限性\n\n- 📌 因此，价值投资的第一个基本条件：所买的公司的内在价值应该是相对容易确定的。 ^29750244-16-1689-1726\n    - ⏱ 2021-06-14 14:15:58\n- 📌 价值投资的第二个基本条件：所投资的公司的内在价值应该相对独立于股票价格。 ^29750244-16-2299-2335\n    - ⏱ 2021-06-14 14:15:37\n- 📌 价值投资的第三个基本条件：要在合适的市场阶段采用 ^29750244-16-2766-2790\n    - ⏱ 2021-06-14 14:16:24\n- 📌 价值投资的第四个基本条件：选取合适的投资期限。 ^29750244-16-3164-3187\n    - ⏱ 2021-06-14 14:17:00\n\n## 第四部分 投资心理学\n\n- 📌 其实，股票的投资价值与买入成本无关；该不该卖，也与你是否亏损无关。1万元亏损带来的痛苦是1万元盈利带来的喜悦的2倍 ^29750244-19-1952-2009\n    - ⏱ 2021-06-14 14:38:03\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8B%89%E6%96%90%E5%B0%94":{"title":"拉斐尔","content":"\n## 《 雅典学院 》\n\n现存在[[意大利]][[梵蒂冈博物馆]]\n\n巨型绘画《雅典学院》，特意将柏拉图和[[亚里士多德]]这两位大哲并列地放在中间，然后通过两个人的手势暗语他们思想观点的差异——柏拉图手指向天，表示他认为上天有永恒不变的理念；亚里士多德手心向地，表示他关注的重点是真实的可触碰的世界。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230426174017.png)\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8B%94%E9%AB%98%E5%B1%82%E6%AC%A1":{"title":"拔高层次","content":"\n# 拔高层次\n\n对于讨论的讨论  \n对于研究的研究  \n对于思考的思考\n\n与其让自己成为讨论的一员，不如去剖析他们\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E6%8C%87%E5%8D%97":{"title":"《 指数基金投资指南 》","content":"\n# 《 指数基金投资指南 》\n\n# 元数据\n\n\u003e [!abstract] 指数基金投资指南\n\u003e - ![ 指数基金投资指南|200](https://weread-1258476243.file.myqcloud.com/weread/cover/3/YueWen_921090/t7_YueWen_921090.jpg)\n\u003e - 书名： 指数基金投资指南\n\u003e - 作者： 银行螺丝钉\n\u003e - 简介： 雪球大V银行螺丝钉，手把手教你定投致富！《指数基金投资指南》作者银行螺丝钉，专注于低估值指数基金投资，系统性地讲解各类指数基金，以及投资指数基金的有效策略，教你“买什么，怎么买；卖什么，怎么卖”。针对不同需求，设计出三种投资模式：养老定投计划、上班族加薪计划、子女教育定投计划，全面介绍如何通过投资指数基金，稳赚！不管你是投资小白，还是进入股市厮杀多年也没找到可靠的、可复制的盈利路径的投资者，阅读《指数基金投资指南》，就可以笑看股市风云，静待财富增长了。\n\u003e - 出版时间 2017-11-01 00:00:00\n\u003e - ISBN： 9787508682549\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n##\n\n- 📌 [插图] ^921090-36-12141-12142\n    - ⏱ 2020-02-13 12:23:00\n\n## 常见宽基指数基金\n\n- 📌 想要在国内的主板上市，上市公司必须达到最近3个会计年度净利润为正并且累积超过人民币3000万元，最近3个会计年度经营活动产生的现金流量净额累计超过人民币5000万元，或者最近3个会计年度营业收入累计超过人民币3亿元。 ^921090-21-10564-10672\n    - ⏱ 2020-02-12 20:00:38\n- 📌 ·营业收入：公司过去5年营业收入的平均值。·现金流：公司过去5年现金流的平均值。·净资产：公司在定期调整时的净资产。·分红：公司过去5年分红总额的平均值。 ^921090-21-20481-20684\n    - ⏱ 2020-02-12 20:12:09\n\n## 行业指数基金\n\n- 📌 ·材料：金属、采矿、化学制品等。·可选消费：汽车、零售、媒体、房地产等。·必需消费：食品、烟草、家居等。·能源：能源设备与服务、石油天然气等。·金融：银行、保险、券商等。·医药：医疗保健、制药、生物科技等。·工业：航空航天、运输、建筑产品等。·信息：硬件、软件、信息技术等。·电信：固定线路、无线通信、电信业务等。·公共事业：电力、天然气、水等。 ^921090-22-1705-2196\n    - ⏱ 2020-02-12 21:05:40\n\n## 价值投资的理念\n\n- 📌 一般来说，盈利收益率越高，代表公司的估值就越低，公司越有可能被低估。 ^921090-25-8493-8527\n    - ⏱ 2020-02-13 09:47:25\n\n## 博格公式法挑选指数基金\n\n- 📌 他发现，决定股市长期回报的最关键的三个因素。分别是：初始投资时刻的股息率、投资期内的市盈率变化、投资期内的盈利增长率。 ^921090-27-942-1001\n    - ⏱ 2020-02-13 10:47:04\n\n## 提高定投收益的5个小技巧\n\n- 📌 这里给读者分享一个判断资金分配比例的公式。指数基金是一种风险比较高的资产，我们可以用100减去自己当前的年龄，用得到的数值加上百分号就是适合投入到指数基金中的资金比例。 例如当前年龄35岁，总流动资产100万元，则100-35=65。65%就是可以投资于指数基金的资金比例，再用100万乘以65%也就是65万元。 ^921090-36-15564-15849\n    - ⏱ 2020-02-13 12:24:40\n\n## 构建属于自己的定投计划\n\n- 📌 一套知识体系，只是看完能掌握10%的内容；看完又去实践，能掌握50%的内容；能给别人讲明白，才算是基本都掌握了。另外，给别人讲述的过程中，也能够帮助我们对自己的定投计划查漏补缺。 ^921090-39-8010-8099\n    - ⏱ 2020-02-13 12:34:18\n\n## 三个定投计划实例\n\n- 📌 后期每年取用多少资金量，才可以不影响指数基金的积蓄积累呢？这里有一个参考标准。如果我们每年从计划中取用的资金不超过总市值的4%，就不会影响长期取用。 例如，持有25万元市值的指数基金，每年取用不超过1万元，就可以保证一直有钱可取。 这是因为指数基金自身会不断 ^921090-40-1167-1424\n    - ⏱ 2020-02-13 12:35:30\n\n# 读书笔记\n\n## 常见宽基指数基金\n\n### 划线评论\n\n- 📌 中证100指数，代码为000903。  \n中证100指数是从沪深300指数中，再挑选出规模最大的100只股票组成的。比起上证50指数，它覆盖了深交所的大公司，所以更加全面一些。 ^16142247-7f5phqpcn\n    - 💭 上证50 –\u003e 上海大型公司股市整体走向  \n沪深300 –\u003e 国内大型公司股市整体走向  \n中证500 –\u003e 国内中型公司股市整体走向  \n中证100 –\u003e 从沪深300从挑选前100个股票\n    - ⏱ 2020-02-12 20:55:20\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7f6wD3ATx  \n⏱ 2020-02-13 14:34:13\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8C%87%E7%BA%B9%E9%94%81":{"title":"指纹锁","content":"\n## 迷瞪\n\n都是防君子不放小人  \n不是高技术含量\n\n### 价格\n\n- 小米全自动 1499\n- 凯迪仕K9S 1499\n- 德施曼Q5S 2299\n- 鹿客SV40 1949\n- 三星DR717 3499\n- 某品牌 349 （东方三号\n\n### 评测\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513193836.png)\n\nNFC、指静脉、门卡解决的都是指纹 脱落或者磨平了不识别的问题，有一种就行\n\n三星续航最差\n\n小米出现了软件问题\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8C%91%E6%88%98%E5%B8%B8%E8%AF%86":{"title":"挑战常识","content":"\n# 挑战常识\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8C%91%E9%80%89%E5%8F%AF%E8%A7%86%E5%8C%96%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6":{"title":"挑选可视化数据框架","content":"\n# 挑选可视化数据框架\n\n# 结论\n\n虽然有很多开源图表库，但绝大部分不是已经弃坑就是将要弃坑了，目前真正能用的就只有 ECharts、Ploty.js、Vega 和 G2。\n\n- Ploty.js、Vega 的维护量和使用量都在减少，样式也比较基础，不太适合商业化使用场景\n- ECharts 和 G2 都是大公司在维护，但是 Echarts 的社区贡献图表和代码提交的活跃度都远高于 G2\n  - 在移动端和 PC 端可以使用同一套代码运行，减少维护成本。\n  - 一个庞大的图表社区[Gallery](https://gallery.echartsjs.com/explore.html#sort=rank~timeframe=all~author=all)\n  - 独一无二的 Echarts-gl,图表库中唯一的真三维\n- G2 将图表拆分成了很多组成部分，比如数据源、数据转换、坐标系、图形等，通过将它们组装起来实现各种展现效果 Ï，只是简单的图表配置，也可以使用他的上层封装[Ant Design Charts](https://charts.ant.design/zh/docs/manual/introduction)、\n  - 个人认为 antd design 的设计更美观一点\n  - 有关系图、流程图等的图编辑器[X6 图编辑引擎 | AntV](https://antv-x6.gitee.io/zh/)\n  - 对小程序/H5/weex 有着更好支持的[所有图表 | F2](https://antv-f2.gitee.io/zh/examples/gallery)\n  - 有对地理空间可视化更好支持的 [蚂蚁地理空间数据可视化 | L7](https://l7.antv.vision/zh)\n\n在可见的下一次图形技术变革，只有 **WebGPU**,但是他对二维图表的影响有限，所以后续应该不会出现更好的前端图表库了\n\n图形需求很通用，难以差异化竞争，所以建议选择 echarts，在特定需求按需引入 G2 即可\n\n# 图表库详细对比\n\n通过在 github 上筛选 star 数量和最近活跃次数的进行筛选\n\n## D3\n\n### github contributors\n\n![d3‘s contributors](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211228102207.png)\n\n### 大致介绍\n\nD3 是前端最著名的可视化图表库，有着类似 jQuery 的链式调用，D3 还有鲜明的特点是将功能拆得非常细，做到了函数级别，从数据解析、转换到布局算法都有提供，这使得开发者可以十分灵活地进行组合，实现各种可视化的展现，这使得 D3 非常适合拿来学习的可视化算法，而且还能很方便地将这些算法整合到自己的项目中。  \nD3 是一款成功的可视化基础设施，它的源码值得学习，但不推荐直接使用它例子开发图表，一方面基于它写的代码上手门槛高，另一方面是它的定位并非图表库，要用的话最好是其它基于 D3 开发的图表库，比如 [Ploty.js](https://github.com/plotly/plotly.js)\n\n## Echarts\n\n### github contributors\n\n![echarts’s contributors](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211228102308.png)\n\n### 大致介绍\n\nEcharts 是百度商业前端团队基于 Canvas 开发的图表库  \nECharts 的配置项相当多，预计超过 600 个，  \n具有一个非常巨大的社区，如果想配制出漂亮的图表，建议多逛逛 [Gallery](https://gallery.echartsjs.com/explore.html#sort=rank~timeframe=all~author=all)，可以淘到很多漂亮的效果，只看官方文档是想不到的，  \nEcharts 其实有不少自己独特的功能，其中最具亮点的就是 Echarts-gl，它能实现三维图表和地球的展示，这点其他开源库基本没有，而其它商业图表都是基于 SVG 的，只能弄仿三维效果，只有 Echarts-gl 是基于 WebGL 做的真三维，可以配置光照、材质、阴影等，还有独家的后期特效功能。  \n在 WebGL 领域 claygl 是唯一支持延迟渲染的，包括 Three.js（尝试过但[放弃了](https://github.com/mrdoob/three.js/issues/7095)）、Babylon.js、Playcanvas 以及各种你没听说过的 WebGL 引擎都不支持，所以它们都会限制光源数量，比如最多 4 个。\n\n## G2/F2\n\n### github contributors\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211228102715.png)\n\n### 大致介绍\n\n基于面向对象的思想进行开发可视化库，是比可直接拿来用的图表库低一层，所以之后开发了更加简单易用的 [G2Plot](https://antv-g2plot.gitee.io/zh/docs/manual/introduction) 专注于普通图表的绘制。\n\n单独为移动端封装了 F2，做了更好的适配。  \n值得一提的是 AntV 团队还弄了很多方向，比如关系图 G6/X6、地图 L7、自动选图 AVA 等，但这些项目大多只有一个人，团队精力可能有点分散了。\n\n## 其它开源图表库\n\n开源图表库还有很多 Star 数量比较高的，这里简单汇总一下：\n\n- [Highcharts](https://www.highcharts.com.cn/demo/highcharts) ，作为一个商业公司，有十来个人进行持续的更新迭代\n- [TOAST UI Chart](https://github.com/nhn/tui.chart) 是韩国 NHN 公司搞的，贡献者比较少，感觉快要弃坑了，大公司里的非主业项目经常这样，表示理解。\n- [Chartist.js](https://github.com/gionkunz/chartist-js) 别看它有 12.2k 的 Star，看提交历史肯定弃坑了，3 年只提交了 20 次。\n- [Frappe Charts](https://github.com/frappe/charts) 代码只有 3.5k 行，最近提交很少且文档很简陋，13.4k Star 说明他们的推广策略很厉害，也是个值得学的案例。\n- [Raphael](https://github.com/DmitryBaranovskiy/raphael) 特别古老的前端图形库，2008 年就有了，不少图表库的底层基于它，它自己也有个 [g.Raphaël](https://github.com/DmitryBaranovskiy/g.raphael) 图表库，不过只开发了两年就停了，可能是作者在 Adobe 忙别的事情去了，比如折腾过 [Snap.svg](https://github.com/adobe-webplatform/Snap.svg)，但也弃坑了。\n- [vis.js](https://github.com/visjs) 主要是绘制关系图的，曾经有段时间弃坑过，不过最近还有少量更新，类似的还有 [dagre](https://github.com/dagrejs/dagre)、[GoJS](https://gojs.net/latest/index.html)和 [Draw2D](http://www.draw2d.org/)。\n- [TradingView](https://github.com/tradingview/lightweight-charts) 专注做股票类的，似乎很专业，有不少分析 k 线的小工具。\n- [uPlot](https://github.com/leeoniya/uPlot) 以体积小巧作为主要优点，然而体积小只是因为功能少，2k 多行代码做不了啥，所以它的配置项和交互都很少。\n- [Chartkick.js](https://github.com/ankane/chartkick.js) 将 Chart.js、Google Charts 和 Highcharts 的接口封装起来，提供一套更简单的 API，一方面是更简单，另一方面是万一其中某个挂掉了可以直接换别的，然而这也意味着它的功能非常有限，毕竟是取交集。\n- 另外还有些 gis 领域的专用可视化库，比如 [cesium](https://cesium.com/cesiumjs/)、[deck.gl](https://deck.gl/)，但国内对测绘是有规定的，最好直接用百度、高德。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8E%A5%E5%8F%A3%E5%92%8C%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B":{"title":"接口和面向接口编程","content":"\n# 接口和面向接口编程\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%8E%A5%E7%A0%81%E5%B9%B3%E5%8F%B0":{"title":"接码平台","content":"\n- [无敌云短信](https:/www.clearcode.cn)：,一个免费在线接收短信验证码的网站，仅提供国内和美国的临时电话号码。网站提供的号码可用于注册一些不重要的网站账号或者APP账号。它是目前提供国内临时号码最多的接码平台之一，有上百个中国电话号码供你选择。\n- [云际云短信](https://yunjisms.xyz)：,国内知名的短信接码平台，提供大量免费的中国号段和美国号段临号码，可用于在线接收短信，接收短信验证码，每个号码的延迟时间约为30秒。如果长时间没有收到短信验证码，建议尝试一组号码。值得一提的是，云际云短信还是全球唯一一家接入了所有美国电信服务商的平台，所以它提供的美国号段也是相当富。  \n- [来信短信云](https:/www.zusms.com/phone/china)：,一种免费服务，用于在线接收手机短信验证码不需要注册。网站提供大量 的国内临时号码和香港临时号码，此外还有一些美国和加拿大号码，你可以使用它来接收来FACEBOOK,TELEGRAM,WECHA T,VK,PAYPAL,ALIPAY等发来的手机短信验证码。  \n- [小鸟接码](http://www.nsms.com)：, 是一个提供在线免费接码服务、接收短信验证码服务、免费的临时邮件等多样的方式进行无限接码的平台，可用于注册一些网站和pp,并且都是免费的。网站提供的国内临时号码虽然不多，但相比较稳定。  \n- [Turtle SMS](https://turtle-sms.xyz/):,提供免费的国内手机号用来接收短信和验证码。你可以使用这些手机号来注册网站或者APP 而不需要额外的购买中国手机号。目前网站有7个中国临时号码可用。  \n- [Shoujihao](https:/www.shoujihao.me/numbers/All):Nubrsw,是一个在线接收免费的短信验证服务的平台，提供来自美国、加拿大、法国、德国、澳大利亚新西兰、中国大陆、中国香港、中国台湾的临时电话号码，你可使用这些号码注册或验证任何网络服务，如Twitter、电报、Facebook、谷歌Gmail、WhatsApp、Uber、LINE、KAKAO、WeChat等等。  \n- [SMSCodeOnline](https:/smscodeonline.com/virtual-phone/cn):,拥有超过200个免费的临时电话号码或虚拟电话号码，包括中国大陆、港澳台、美国、德国、俄罗斯、英国、加拿大、澳大利亚等国家。其中国内的虚拟电话号码62个，香港的有58个，澳门的有6个。  \n- [Kinghai萤火虫](https://xinghai.party/)：,提供中国、美国、英国等多国高达100多个临时电话号码，其中大多数都是国内号码，非常适合用于注册国内的豆瓣、百度、华为、小米、珍爱网、荔枝等网站账号时使用。  \n- [短信接收](https://www.freereceivesms.com/cn)：也是中国免费收简讯的平台，除了有中国手机号码外，也有提供美国、加拿大、 英国、日本、香港、澳门、韩国、马来西亚、我罗斯、德国、西班牙等国家电话号码，拥有29个家，总共有350个临时电话号码 可以使用。\n- [SMS-Activate是在线接受短信的虚拟号码服务](https://sms-activate.org/cn)\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%91%A9%E5%A4%A9%E5%A4%A7%E6%A5%BC":{"title":"摩天大楼","content":"\n中国是名符其实的\"摩天大楼王国\"，[据相关统计](https://www.chartr.co/stories/2022-07-20-1-china-skyscraper-capital-of-the-world)，中国的摩天大楼总数超过世界其他地方的总和。\n\n中国各个城市，不管大城市或小城市，都热衷于建造摩天大楼。这是多种原因促成的。\n\n\u003e （1）超高层建筑比普通建筑的楼价更高，出售的面积更多，房产商可以赚取高额利润。\n\u003e\n\u003e （2）超高层建筑带来大量投资，有利于财政收入和城市知名度，政府支持建造。\n\u003e\n\u003e （3）超高层建筑可以迅速改变城市老旧面貌，带动旧区改造，市民往往也欢迎。\n\n但是，很少有人提到摩天大楼的致命缺点：**它根本不宜居，造成许多环境问题、经济问题、社会问题。**Ï\n\n## 摩天大楼的缺点\n\n**（1）耗能巨大。**摩天大楼往往采用全玻璃的钢架结构，这意味着它是一个大型温室。\n\n晴天时，太阳辐射使得大楼内部留存巨大的热量。再加上，内部的大量人员、电气设备和照明，发热量惊人。\n\n因此，摩天大楼必须配备大型空调来排热。它的每平方米耗能，比普通高楼多得多。\n\n如果改成双层玻璃的外墙，就会大大减少制冷和供暖需求（因为多了一个空气隔热层），但是会增加建筑成本，以及建筑物的占地面积。\n\n另一方面，全封闭的摩天大楼需要与外界保持通风，维持内部的清洁空气，这也非常耗费能量。  \n**（2）环境成本。**超高层建筑遇到风，会产生高速的下沉气流，使得地面产生强风，让行人深受其害。所以，摩天大楼底下往往是一大片行人稀少的空地，形成不了热闹的街区。\n\n另一方面，楼越高，上部的风速就越大，空气温度也越低。所以，摩天大楼不适合有阳台，即使有，也往往无法使用，甚至很危险。\n\n此外，摩天大楼的玻璃幕墙会产生巨大的阳光反射，造成光污染。\n\n**（3）工程问题。**一栋300米高楼的建造成本，比10栋30米大楼要高得多，因为要解决很多不必要的工程问题。\n\n\u003e - 地基需要挖多深，才能支撑这么高的楼？\n\u003e\n\u003e - 排污管需要多大，才能容纳数千人产生的污水？\n\u003e\n\u003e - 水泵需要多大，才能产生足够的水压，确保60层或70层以上的供水？\n\u003e\n\n**（4）安全隐患。**如果发生紧急事件，无法使用电梯，怎样才能让高层的人们快速撤离到地面？\n\n**（5）社会问题。**超高层建筑的居民，出门都必须乘坐电梯，而且楼下步行范围内，往往没有可去的地方，只能选择从地库开车出行。这会使得人们不轻易出门，对健康和社交都不利。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%92%92%E5%93%88%E6%8B%89%E7%9A%84%E6%95%85%E4%BA%8B":{"title":"《 撒哈拉的故事 》","content":"\n# 《 撒哈拉的故事 》\n\n# 元数据\n\n\u003e [!abstract] 撒哈拉的故事\n\u003e - ![ 撒哈拉的故事|200](https://weread-1258476243.file.myqcloud.com/weread/cover/54/YueWen_22355133/t7_YueWen_22355133.jpg)\n\u003e - 书名： 撒哈拉的故事\n\u003e - 作者： 三毛\n\u003e - 简介： 她以一支笔坚持看守个人文字上的简单和朴素；从遥远的撒哈拉到敦煌戈壁，她不随波逐流，也不诠释人生，只做生活的见证者；她是我们心中浪漫、洒脱、真性情的永远的三毛，永恒的传奇。她以“三毛”的笔名，写下脍炙人口的散文，造就了流浪文学的经典之作，畅销三十余年热度不减，并唤起了无数人心中的撒哈拉之梦。每一粒沙地里的石子，尚且知道珍爱它，每一次日出和日落，都舍不得忘怀，更何况，这一张张活生生的脸孔，又如何能在回忆里抹去他们。《撒哈拉的故事》记录三毛与荷西苦中作乐的婚姻生活、撒哈拉威人的异域文化，以及沙漠地带的动荡局势……十几篇质朴的散文，洋溢着旺盛的生命力，倾倒了全世界的华文读者。\n\u003e - 出版时间 2017-03-01 00:00:00\n\u003e - ISBN： 9787530214787\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 北京出版集团北京十月文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7bIuS33Mq  \n⏱ 2019-09-28 12:46:32\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%94%BE%E5%AD%A6%E5%90%8E":{"title":"《 放学后 》","content":"\n# 《 放学后 》\n\n# 元数据\n\n\u003e [!abstract] 放学后\n\u003e - ![ 放学后|200](https://weread-1258476243.file.myqcloud.com/weread/cover/96/yuewen_840686/t7_yuewen_8406861685499369.jpg)\n\u003e - 书名： 放学后\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 我在这所女子高中教数学五年了，日子风平浪静，但近来一切都变了。  \n上周六去学校的路上，有人突然撞过来，我险些跌落铁轨；星期一放学后，我在学校淋浴，差点中机关触电；星期二放学后，我经过教学楼，从三楼飞出一个花盆砸向我头顶；星期四放学后，在我常用的更衣室内有人中毒死去，而且现场的门被人从里面顶住了……  \n我报了警，自己也决心调查，没想到学校里又有人死去了，而我在回家的夜路上被人驾车猛然撞击。这一次放学后，我还躲得掉吗？\n\u003e - 出版时间 2017-09-05 00:00:00\n\u003e - ISBN： 9787544291224\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6XjqcC2oV  \n⏱ 2018-02-18 09:58:25\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%94%BF%E5%BA%9C%E7%AB%9E%E4%BA%89%E4%B8%8E%E5%B8%82%E5%9C%BA%E7%AB%9E%E4%BA%89%E7%9A%84%E5%B7%AE%E5%88%AB":{"title":"政府竞争与市场竞争的差别","content":"\n# 政府竞争与市场竞争的差别\n\n“官场+市场”的竞争体制，可以帮助理解我国经济的整体增长，但这种体制的运行效果，各地差异很大。官员或政府间的竞争，毕竟不是市场竞争，核心差别有三。\n\n- 第一，缺乏真正的淘汰机制。地方政府就算不思进取，也不会像企业一样倒闭。政绩不佳的官员虽然晋升机会可能较少，但只要不违法乱纪，并不会因投资失败或经济低迷而承担个人损失。\n- 第二，绝大多数市场竞争是“正和博弈”，有合作共赢、共同做大蛋糕的可能。而官员升迁则是“零和博弈”，晋升位置有限，甲上去了，乙就上不去。所以在地区经济竞争中会产生地方保护主义，甚至出现“以邻为壑”的恶性竞争现象。\n- 第三，市场和公司间的竞争一般是长期竞争，延续性很强。但地方官员任期有限，必须在任期内干出政绩，且新官往往不理旧账，因此会刺激大干快上的投资冲动，拉动地区 GDP 数字快速上涨，不惜忽视长期风险和债务负担。  \n  这三大差别增加了地区间竞争所产生的代价，也可能滋生腐败。此外，政府不是企业，不能以经济效益为单一目标，还要承担多重民生和社会服务职能。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%95%99%E8%82%B2":{"title":"教育","content":"\n# 教育\n\n![热爱和“自觉”](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220525104538.png)\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD":{"title":"数字花园","content":"\n# 数字花园\n\n数字花园是介于笔记应用和博客应用之间的半公开数字展览馆，半公开指的不是读者没有权限阅览，而是很多想法只是相互关联的半成品，令他人难以轻易看懂。\n\n因为数字花园降低了对内容的要求，不强求作者将所有内容都打磨成文章级的成果，数字花园就会鼓励作者产出更多的内容，不拘一格降笔记。\n\n就像你会把每个想法，每份笔记都记录下来，化作一颗种子，去悉心照料，嫁接他们，让他们成长出新的枝干和果实。\n\n# 别人的花园\n\n- [oldwinterの数字花园](https://garden.oldwinter.top/README#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n- [[值得关注的信息源#Andy的 blog]]\n\n# 参考资料\n\n- 最全的数字花园资源站，工具、手册、理念、网站： [GitHub - MaggieAppleton/digital-gardeners: Resources, links, projects, and ideas for gardeners tending their digital notes on the public interwebs](https://github.com/MaggieAppleton/digital-gardeners)\n- 英文的数字花园收录： [GitHub - KasperZutterman/Second-Brain: A curated list of awesome Public Zettelkastens 🗄️ / Second Brains 🧠 / Digital Gardens 🌱](https://github.com/KasperZutterman/Second-Brain)\n- 别人的理解： [什么是数字花园（Digital Garden）？ - 知乎](https://www.zhihu.com/question/400660802/answer/1604090859##)\n- 打造数字花园的工具实践： [构建自己的数字花园-工具篇 | 思考问题的熊](https://kaopubear.top/blog/2021-04-14-digital-garden-tools/)\n- [万字长文：如何选笔记软件、做知识管理、建数字花园？ —— - 即刻App](https://m.okjike.com/originalPosts/62b9c3cb2c5643956663f412)\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8":{"title":"数据驱动","content":"\n# 数据驱动\n\n对于提交表单的页面实现，数据驱动的编程方式同样可以分成三个步骤。\n\n1. 第一步：对页面进行抽象设计，使用合适的数据结构来表达。\n2. 第二步：这个表单除了具备 name 和 email 两个数据，还包括两个分别用于改变数据的方法。因此，我们给该表单添加上更新值的方法：\n3. 第三步：实现静态页面，并把数据和事件绑定到页面中。我们将步骤 1 中的数据绑定到页面中书输入框和展示值的地方，同时在需要监听事件的元素上绑定上述的方法。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%87%E4%BB%B6%E5%A4%B9%E7%AE%A1%E7%90%86%E6%B3%95":{"title":"文件夹管理法","content":"\n# 文件夹管理法\n\n在早期以 Evernote 为首的「知识管理」工具中，大多推荐采用「文件夹管理」笔记条目，这种方法就是将我们在物理世界管理笔记的方法原样照搬到软件中，即通过文件夹的层级关系组织和管理「笔记条目」，\n\n文件夹管理法的优缺点比较明显：\n\n- 优点：文件夹管理法很容易理解，也是非常符合人类直觉的方式，几乎没有学习成本。\n- 缺点：由于同一条笔记只能属于一个文件夹层级，这让我们在存储笔记的时候会遇到分类模糊的问题，同时当我们找笔记的时候也会比较模糊，这一切都不符合「管理」这件事的初衷。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%87%E6%98%8E%E7%8E%B0%E4%BB%A3%E5%8C%96%E4%BB%B7%E5%80%BC%E6%8A%95%E8%B5%84%E4%B8%8E%E4%B8%AD%E5%9B%BD":{"title":"《 文明、现代化、价值投资与中国 》","content":"\n# 《 文明、现代化、价值投资与中国 》\n\n# 元数据\n\n\u003e [!abstract] 文明、现代化、价值投资与中国\n\u003e - ![ 文明、现代化、价值投资与中国|200](https://weread-1258476243.file.myqcloud.com/weread/cover/34/YueWen_29196155/t7_YueWen_29196155.jpg)\n\u003e - 书名： 文明、现代化、价值投资与中国\n\u003e - 作者： 李录\n\u003e - 简介： 《文明、现代化、价值投资与中国》是喜马拉雅资本创始人、查理·芒格家族资产管理者李录的理论文集。全书包含上下两篇，上篇主要讨论了现代了的本质，包含现代化诞生的成因与影响，以及对中国在现代化进程上的可能性做出预测。作者站在全体人类的角度，思考人类未来的共同命运。下篇是李录二十余年来价值投资的经验集合，包含价值投资的观念、方法与实践，以及多年深耕于这一领域的思考与感悟，弥补了这一影响世界的投资理论在中国出版市场的缺失。\n\u003e - 出版时间 2020-02-01 00:00:00\n\u003e - ISBN： 9787521712599\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 序二 得道者多助 ——常劲\n\n- 📌 地理位置的独特性，让中国出现了大的帝国，最早发明了“政治贤能制”。而同样因为地理位置，西方最早发明了“经济贤能制”，并且最早进入了现代科技文明。 ^29196155-4-11145-11217\n    - ⏱ 2021-08-11 14:53:45\n- 📌 价值投资是一个说的人多但真正实践的人很少的小众领域。 ^29196155-4-12623-12649\n    - ⏱ 2021-08-11 14:56:01\n\n## 自序 真知即是意义\n\n- 📌 我们创造了超越自然的文明，通过真知的无限积累让文明的无限进步成为可能。 ^29196155-6-6428-6463\n    - ⏱ 2021-08-11 15:11:46\n\n## 上篇 文明、现代化与中国\n\n- 📌 为什么中国与西方差距如此悬殊？中国如何能够赶上西方？赶上以后的中国会是什么样的？是否还能重现往日的辉煌？ ^29196155-7-533-585\n    - ⏱ 2021-08-11 15:18:22\n\n## 人类文明的第一次飞跃\n\n- 📌 人类和其他动物相比，最大的特点就是脑容量巨大，计算能力超强。虽然大脑只有人体重的2%，却要消耗人20%的能量。人类如果要等大脑完全成熟以后出生，母亲将根本无法生产。为了解决这个问题，人类只能在胎儿大脑没有完全发育成熟之前就把他们提前生产出来。这和其他哺乳动物都不一样。无论是牛、马、羊、狮子、老虎，这些动物出生后很快就可以独立站立、生长、生活，甚至捕食。可是人出生的时候离成熟和独立生活还很远，还需要几年时间才能够站立、行走、说话，大脑才能完全发育成熟。所以人类新生儿的死亡率很高，但是成熟后的优势也很明显。当气候变得有利于生物，人类的优势就表现得格外突出。这个优势充分体现在了人类文明的第一次飞跃，也就是走出非洲的飞跃。 ^29196155-9-2120-2431\n    - ⏱ 2021-08-11 15:30:53\n\n## 农业文明的诞生\n\n- 📌 历史，就是懒惰、贪婪、又充满恐惧的人类，在寻求让生活更容易、安全、有效的方式时创造的，而人类对此毫无意识。 ^29196155-10-3736-3789\n    - ⏱ 2021-08-11 15:52:34\n\n## 美洲大陆的发现及其划时代影响\n\n- 📌 美洲大陆及大西洋经济的形成给整个欧洲大陆的知识分子提出了一系列新的问题。因为航海时代的到来和新大陆的发现，这个时代的人们开始面临一些最根本的技术问题，无论是对地理学、地质学、生物学、航海技术、天文学，还是对政府的本源、经济的本质等等，都提出了一系列新的问题。此时欧洲的知识分子们试图去找到这些问题的本源，希望以一种机械式的观点来理解这个世界。如果说一两百年以前的文艺复兴还是人们希望在过去的圣人典籍中得到答案的话，此时的启蒙运动中，人们已经不满足于现有的知识，强烈需要提出一种新的知识体系和世界观，解释新大陆所带来的新问题，需要以观察、实验为基础，能够反复被验证，也能用来预测的更牢靠的知识。 ^29196155-13-2723-3019\n    - ⏱ 2021-08-11 17:39:07\n\n## 现代化有没有可能在中国诞生\n\n- 📌 可以想象，在当时现代科学已经有可能，也最可能在中国发生。然而正当西方的文艺复兴后大航海轰轰烈烈展开之时，宋朝初期的新儒学却在一两百年之后转向新儒学的另一支——宋明理学，让中国转而进入一个保守的思想禁锢的时代。 ^29196155-15-1318-1422\n    - ⏱ 2021-08-12 10:02:01\n- 📌 如前文所述，3.0科技文明诞生的最根本原因是大西洋经济的形成，其最大的特点就是在几乎无政府的状态下发展起来的自由市场经济。这种经济体制和以往任何文明、国家所诞生的经济体制都截然不同，因为私人资本在其中所起的核心作用，及有限政府的保障作用：保障私人财富、私人资本以及自由市场经济运行的基本规则。这样的经济体之所以能在17世纪以后，在环大西洋周边形成，完全是历史的安排。 ^29196155-15-2931-3114\n    - ⏱ 2021-08-12 10:04:06\n\n## 现代化的传播与现代化的道路之争\n\n- 📌 科技文明传播的方式也是先进地区对落后地区的殖民，落后地区对先进地区的模仿，或者两者共存。这个过程给居住在落后地区的人带来的不仅是进步，也是灾难。北美、澳大利亚的原住民几乎被欧洲人带来的细菌全部消灭，非洲、印度、南美沦为完全的殖民地，中国变成半殖民地。东方原有的文明中心中，只有日本选择了主动现代化，率先在19世纪后工业化，逃脱了被殖民的命运。 ^29196155-16-1053-1224\n    - ⏱ 2021-08-12 10:17:29\n\n## 对中国未来几十年的预测 ——社会政治可能的演进\n\n- 📌 今天，即使在较为发达的宪政民主制国家，这一制度也不是没有弊端。在充分民主的情况下，民意政治更能代表局部、短期利益，而常常与整个社会的整体、长期利益相矛盾。 ^29196155-20-2690-2767\n    - ⏱ 2021-08-12 14:24:38\n\n## 从文明史角度看当今中美关系及科技文明时代的东西方关系\n\n- 📌 最后一个派别就是支持特朗普上台的民粹派，主要由美国的中、下层阶级组成，在全球化和中国崛起的过程中，他们非但没有享受到好处，还成为了牺牲品，例如失业、产业空心化等等。 ^29196155-21-10324-10406\n    - ⏱ 2021-08-12 17:05:03\n\n## 价值投资在中国的展望 ——2015年10月在北京大学光华管理学院的演讲\n\n- 📌 通货膨胀实际上就是一个货币现象，当货币发行总量超过经济体中商品和服务的总量的时候，价格就会往上增长。为什么增长呢？当然因为经济不断增长，就需要不断地投资。在现代经济里，这要通过银行来实施。银行要想收集社会上的闲散资金，需要付出储蓄利率。这个储蓄利率必须是正的，使得它的放贷利率也必须是正数。这样整个经济里的钱要想去增长，就要提前增量；要想实现实体经济增长，就要提前投资。 ^29196155-24-10584-10769\n    - ⏱ 2021-08-13 09:14:21\n- 📌 第一，股票不仅仅是可以买卖的证券，实际上代表的是对公司所有权的证书，是对公司的部分所有权。这是第一个重要的概念。这个概念为什么重要呢？投资股票实际上是投资一个公司，公司随着GDP的增长，在市场经济持续增长的时候，价值本身会被不断地创造。那么在创造价值的过程中，作为部分所有者，我们持有部分的价值也会随着公司价值的增长而增长。 ^29196155-24-13095-13257\n    - ⏱ 2021-08-13 09:26:01\n- 📌 第二，理解市场是什么。股票一方面是部分所有权，另一方面它确确实实也是一个可以交换的证券，可以随时买卖。这个市场里永远都有人在叫价。 ^29196155-24-13403-13468\n    - ⏱ 2021-08-13 09:26:17\n- 📌 第三，投资的本质是对未来进行预测，而预测得到的结果不可能百分之百准确，只能是从零到接近一百。那么当我们做判断的时候，就必须要预留很大的空间，叫安全边际。 ^29196155-24-13707-13783\n    - ⏱ 2021-08-13 09:29:14\n- 📌 第四，巴菲特经过自己50年的实践增加了一个概念：投资人可以通过长期不懈的努力，真正建立起自己的能力圈，能够对某些公司、某些行业获得比几乎所有人更深的理解，而且能够对公司未来长期的表现，做出比所有其他人更准确的判断。在这个圈子里面就是自己的独特能 ^29196155-24-14173-14295\n    - ⏱ 2021-08-13 09:36:38\n- 📌 如果把赚钱的方法一点一滴毫无保留告诉所有的人，大家都觉得你这个赚钱的方法真对，真好，我佩服，这就是可持续的。这就叫大道，这就叫正道。 ^29196155-24-15345-15411\n    - ⏱ 2021-08-13 09:37:50\n- 📌 我们在决定投资之前至少要知道10年以后这个公司大概会是什么样，低迷时什么样，否则怎么判断这个公司的价值不低于这个范围？要知道这个公司未来每年产生的现金流反映到今天是多少，我们得知道未来十几年、二十几年这个公司大致的现金流。作为公司创始人，明年什么样知道吗？ ^29196155-24-16752-16880\n    - ⏱ 2021-08-13 09:43:28\n- 📌 这是判断价值投资的一个核心问题，是运气还是能力 ^29196155-24-18556-18579\n    - ⏱ 2021-08-13 09:49:16\n- 📌 所以我认为未来中国会继续在3.0文明主航道上走下去应该是个大概率的事情。因为她离开的成本会非常非常高，像中国这样一个文化、一个民族，如果对她的历史比较了解的话，我认为她走这样的道路，尤其是大家已经明白了现代文明的本质后，再去走回头路的可能性是非常小的。中国离开全球共同市场的几率几乎为零。中国要改变市场经济规则几乎也是非常小概率的事件。 ^29196155-24-30162-30330\n    - ⏱ 2021-08-13 10:11:07\n\n## 价值投资的知行合一 ——2019年11月在北京大学光华管理学院的演讲\n\n- 📌 顺便谈谈，指数投资为什么也可以有长期回报？因为指数投资基本上就是全部投资者和投机者的总和，如果投机者最终的结果归零，那么指数投资的结果实际上就是投资者的净结果。 ^29196155-25-7063-7143\n    - ⏱ 2021-08-13 10:35:56\n- 📌 要弄清楚这个公司为什么赚钱、怎么赚钱、将来会赚多少钱？遇到竞争的状态如何？它在竞争中的地位如何？我把这个过程统称为建立自己的能力圈。 ^29196155-25-7530-7596\n    - ⏱ 2021-08-13 10:36:29\n- 📌 知识是慢慢积累起来的，但是你必须一直抱有对知识的诚实（intellectual honesty）的态度。这个概念非常重要，因为人很难做到真正客观理性。 ^29196155-25-12621-12696\n    - ⏱ 2021-08-13 10:50:03\n- 📌 第一点，他要比较独立，看重自己内心的判断尺度，而不太倚重别人的尺度。 ^29196155-25-13614-13648\n    - ⏱ 2021-08-13 10:51:12\n- 📌 第二点，这个人确实能够做到相对客观，受情绪的影响比较小。当然，每个人都是感情动物，不能完全摆脱感情的影响，但是确实有些人能够把追求客观理性作为价值观念、道德观念来实践。 ^29196155-25-13833-13917\n    - ⏱ 2021-08-13 10:52:14\n- 📌 下面一个品性也比较特殊，这个人既要极度地耐心，又要非常地果决，这是一个矛盾体。没有机会的时候，他可以很多很多年不出手，而一旦机会降临，又一下子变得非常果决，可以毫不犹豫地下重注。 ^29196155-25-14169-14258\n    - ⏱ 2021-08-13 10:52:31\n- 📌 第四点，就是芒格先生为什么可以连续四五十年这么做，就是他对于商业有极度强烈的兴趣。 ^29196155-25-14657-14698\n    - ⏱ 2021-08-13 10:53:06\n- 📌 我们观察到的物质世界基本上是一个熵增的世界，能量从高处往低处流动，大的总是能够吃掉小的，体积大的星球撞击体积小的星球必然能将其压碎，整个地球、宇宙到一定程度也会走向湮灭。但是人类世界不同，人可以把世界变成一个熵减的世界，可以让熵倒流。人可以通过学习，从完全无知变得博学；人可以通过修身养性，成为一个道德高尚的人，对社会有贡献的人；人还可以创造出这么多以前根本无法想象的新事物。 ^29196155-25-19389-19577\n    - ⏱ 2021-08-13 11:16:38\n- 📌 如果你对一个公司的研究达到懂的状态，你要能看得出10年以后它最坏的情况是什么样。 ^29196155-25-22151-22191\n    - ⏱ 2021-08-13 11:29:45\n- 📌 他说如果我想拥有一个观点，我必须得比我能够找到的最聪明的且反对这种观点的人还能反驳这个观点，只有在这种情况下我才配拥有这个观点。 ^29196155-25-22871-22935\n    - ⏱ 2021-08-13 11:31:05\n- 📌 所以让自己的兴趣来引导，用科学的方法、诚实的态度缓慢地、一点一滴地去积累知识，仍然是我看到的唯一可靠的学习方法。 ^29196155-25-24081-24137\n    - ⏱ 2021-08-13 11:36:41\n- 📌 我从不去判断具有哪些典型特征（prototype）、哪些标准人格的人可以在市场经济中成为优秀的企业家。市场经济恰恰就能让各种各样有特色的人都有可能创造出一个适合他的企业，然后取得很大的成功。所以我的结论是没有一个统一的标准说具备什么样素质的人就一定会成功。 ^29196155-25-26781-26909\n    - ⏱ 2021-08-13 11:40:55\n- 📌 沃伦对幸福的定义是：我想要爱我的人是真心爱着我（People who I want to love me actually loveme）。 ^29196155-25-34193-34264\n    - ⏱ 2021-08-13 15:38:43\n- 📌 芒格有一句话，他说你怎么去找到好的太太呢？第一步你得让自己配得上你的太太，因为好的太太肯定不是个傻子 ^29196155-25-34722-34772\n    - ⏱ 2021-08-13 15:40:22\n\n## 价值投资的常识与方法 ——2006年在哥伦比亚大学商学院的讲座\n\n- 📌 价值投资者要把自己培养成一个学术型的研究人员、侦探，甚至记者，要有探究万物运行原理的永不满足的好奇心。因为你认知越深，越有可能成为更好的投资者。所以你必须葆有对任何事物的兴趣和好奇心，这其中包括各行各业的生意、政治、科学、技术、人性、历史、诗歌、文学……基本上任何事物都可能影响到投资。当然，我不想吓坏你们（笑），你们不一定非要什么都去学，但我的意思是这种求知若渴的态度会让你受益匪浅。当你的学习积累到一定程度，也许会偶然地获得灵光一现的洞见——这种洞见就是知识赐予你的良机，而其他人根本无缘获得。 ^29196155-26-3819-4068\n    - ⏱ 2021-08-13 15:49:24\n- 📌 我不希望你们只从已经名载史册的投资者的经典案例中挑例子，能不能给我一个公司的名字，是他们没有买，但也有这些特征的，不在伯克希尔的组合里的？ ^29196155-26-20632-20701\n    - ⏱ 2021-08-13 17:44:43\n\n## 投资是一个发现自己的过程 ——2013年3月哥伦比亚大学商学院Graham\u0026Doddsville杂志采访精编\n\n- 📌 投资游戏中很重要的一部分就是做自己。因为投资中多多少少总有一些“零和博弈”的元素，所以你必须在这个过程中找到一个与自己个性相合的方式，并通过长时间努力取得优势。当你买入时，必然有人在卖出；反之亦然。两方中必定有一个人做了错误的决定。你必须要确定你比对手知道得更多，预测得更准确。这是一个竞争激烈的游戏，你会碰到很多既聪明又勤奋的人。 ^29196155-27-626-792\n    - ⏱ 2021-08-13 18:04:50\n\n## 中国经济未来可期 ——2019年年度书评及感悟\n\n- 📌 是在全球化背景下，经济体在经过成熟发展期，进入到发达经济阶段后，会进入到被追赶阶段。为什么会出现这种情况呢？因为在这个时期，国内的生产成本增加到一定水平后，在海外的其他发展中国家投资就变得更有优势。 ^29196155-33-5469-5568\n    - ⏱ 2021-08-16 17:44:23\n\n# 读书笔记\n\n## 现代化的传播与现代化的道路之争\n\n### 划线评论\n\n- 📌 1868年之后，经过30多年的明治维新，日本初步完成了工业化，1889年完成了宪政改革，1895年在工业化不到30年后击败了清军，又在1905年击败了西方强权之一——俄国。日本用不到40年的时间完成了整个工业化过程，而与此同时的中国，在1861年到1908年这段现代化最关键的时期，都处在慈禧比较昏庸的统治之下。1840年虽然英国的钢铁战舰“强敌号”打开了中国的国门，逼迫中国睁开双眼面对3.0文明的到来，但是在中国被现代化的过程中，真正的“强敌”却是日本。工业化以后的日本，认为自己已经有能力统一整个原来的东方文明中心，并以此为基地与西方抗衡，因此发动了全面的殖民战争，一直到1945年的二战失败。 ^16142247-7suN4NatP\n    - 💭 40年完成工业化，接连击败中国，俄国，这速度不亚于中国近40年的发展了。\n    - ⏱ 2021-08-12 10:21:56\n   \n\n## 从文明史角度看当今中美关系及科技文明时代的东西方关系\n\n### 划线评论\n\n- 📌 避免修昔底德陷阱 ^16142247-7sveyeSqx\n    - 💭 修昔底德陷阱（英语：Thucydides Trap或Thucydides's Trap）是美国政治学者格雷厄姆·艾利森创造的一个术语，用来描述当新兴强国威胁到现有强国的国际霸主地位时导致的一种明显的战争倾向，该术语主要是为了描述美国与中华人民共和国之间的潜在冲突。\n\n修昔底德陷阱基于古代雅典历史学者和军事将领修昔底德的一段话，修昔底德认为雅典和斯巴达之间的伯罗奔尼撒战争是不可避免的，因为斯巴达对雅典实力的增长心生恐惧。  \n    - ⏱ 2021-08-12 17:21:27\n\n   \n\n## 价值投资的知行合一 ——2019年11月在北京大学光华管理学院的演讲\n\n### 划线评论\n\n- 📌 一个人不管有多大能力，在一个非常差的环境里其实也做不出多么优秀的结果；一个相对资质没那么高的人，在一个特别好的行业里面，也可以做得非常优秀。比如有很多优秀的国企，其实它们的领导压根就没干过企业，这也不影响它们的业绩表现很好。 ^16142247-7swomuYnD\n    - 💭 这就是段永平说的好的商业模式\n    - ⏱ 2021-08-13 11:37:55\n   \n\n# 本书评论\n\n## 书评 No.1\n\n这本书最令我震撼的还是前面历史的部分，后面就觉得一般了 ^16142247-7sCnljTuZ  \n⏱ 2021-08-17 10:02:23\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%AF%E5%B7%B4%E8%BE%BE":{"title":"斯巴达","content":"\n## 300勇士\n\n公元前480年，波斯帝国皇帝薛西斯为了一雪当年父亲大流士兵败希腊的耻辱，准备了一支数十万人的大军入侵希腊。而希腊这边，各个城邦则临时组了一支6000人左右的军队，由斯巴达领导，迎战波斯。同时，斯巴达派出了它最精锐的300名重装步兵作为中坚力量。当然，也有一种说法认为这支队伍包括统帅一共只有299人，但是现在人们一般习惯称为300勇士\n\n根据历史记载，在希腊联军原本的计划里，他们会在奥林帕斯山的坦普峡谷（Vale of Tempe）中设伏。但是波斯人却提前得知了这个消息，绕开了这个山谷，大军一路挺进希腊，情况十分危急。这时，统率希腊联军的斯巴达国王列奥尼达一世率军进驻希腊的交通要道[[温泉关]]抵挡波斯大军，以防止整个希腊都被攻陷\n\n虽然在这场战役中希腊一方失败了，但是他们成功地阻击了波斯大军三天，为后方的雅典赢得了备战的时间。温泉关战役堪称是世界军事史上的一次壮举。此次战役证明了斯巴达人的勇猛与善战，是斯巴达强大战争实力的体现\n\n## 斯巴达的特点\n\n### 独裁专制\n\n斯巴达奉行的是“二王制”，也就是有两个国王。国王只有在战争时才有权力，一个出征，一个留守。而平时，权力都掌握在五位执政官和元老院手中。同时，为了防止两个国王联合起来，两个王室之间不许相互联姻。而且他们也不得与外国联姻，防止国王与其他城邦勾结。\n\n### 军事色彩浓郁\n\n斯巴达和雅典等城邦还有一个不同，它拥有大量的奴隶，那些奴隶大多是在战争中俘获的俘虏。有了这些奴隶来干活，斯巴达男性公民最重要的任务就是作战。因此，斯巴达也是一个军事色彩极其浓厚的城邦国家。每一个斯巴达人从生下来开始，就要接受国家的安排。\n\n男的生下来要检查身体，体质差的，会被长老扔到荒山野岭。7 岁后进军训练，60 岁任要作为预备役。  \n女人也要强加锻炼，认为只有强壮的母亲才能生出强壮的孩子。\n\n### 轻视文化教育\n\n跟重视军事和战争完全相反的是，斯巴达人相当轻视文化教育，只维持着严酷的纪律。斯巴达要求大家讲话要简明，直截了当。同时，他们实施严格排外政策，禁止外邦人无故入境，因为害怕外邦人的移入会破坏他们的军事生活传统。\n\n另外，对国民的生产和经济活动，斯巴达也严格管控。\n\n可能正是因为以上这些特点，斯巴达虽然军事非常强大，而且在希波战争中发挥了重要的作用，又在伯罗奔尼撒战争中战胜了雅典，但是它一直没有赢得希腊各城邦的敬意，自身的文明也没能得到充分地发展。\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%B0%E5%86%A0%E7%97%85%E6%AF%92":{"title":"新冠","content":"\n# 新冠\n\n- **2022 年 1 月 19 日** [Ï 奥密克戎新毒株 XE 出现！传播速度快 10%Ï](https://mp.weixin.qq.com/s/SG-E-v2QwFUbs2s4rHPg2Q)\n- [[上海疫情]]\n- 2022.04.27 杭州开始常态化核酸\n- 2022.12 全面放开两周，病毒仿佛消失了一般\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%B0%E5%8F%82%E8%80%85":{"title":"《 新参者 》","content":"\n# 《 新参者 》\n\n# 元数据\n\n\u003e [!abstract] 新参者\n\u003e - ![ 新参者|200](https://weread-1258476243.file.myqcloud.com/weread/cover/19/YueWen_840704/t7_YueWen_840704.jpg)\n\u003e - 书名： 新参者\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 《新参者》是日本作家东野圭吾的长篇小说，一部让人读后热泪盈眶的推理小说，讲述了一个靠逻辑破不了的案子，情才可以。  \n新参者，指新加入、刚到来的人。  \n东京，日本桥。一个单身女人在公寓内被杀。警方发现她最近刚搬到这里居住。  \n负责调查的是刚调到日本桥地区的刑警加贺。仙贝店、高级料亭、陶瓷器店、钟表店、民间艺术品店，加贺走访案发地附近一家家店铺。他的调查看上去琐碎又与案情无关：通勤轨迹不同于往常的保险员、替老板给情人买人形烧的料亭小伙计、关系不睦的陶瓷器店婆媳、因女儿私奔而断绝父女关系的钟表店老板……  \n案件真相就在充满人间烟火的家长里短中逐渐显露。\n\u003e - 出版时间 2016-02-01 00:00:00\n\u003e - ISBN： 9787544281102\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6UWelvyLc  \n⏱ 2017-11-13 15:36:48\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%B0%E5%9E%8B%E8%AF%88%E9%AA%97":{"title":"新型诈骗","content":"\n# 新型诈骗\n\n新型诈骗的特点\n\n1. 作案时空范围迅速扩大，跨省、跨境、跨国犯罪比较突出．  \n   犯罪团伙一般采取远程的、非接触式的, 受害人无法详细描述嫌疑人的人数和体貌特征,  \n   隐蔽性很强.\n2. 团伙作案，反侦查能力非常强。  \n   犯罪团伙内部组织很严密，他们采取企业化的运作，分工很细．有专人负责购买手机、开  \n   银行账户、拨打电话、转账等，同时相互保密，下一道工序不知道上一道工序的情况.另外,  \n   犯罪分子作案使用的手机基本是无须身份证开户登记的,开设的银行账户多冒用他人身份信  \n   息，故难以在短时间内查明嫌疑人的真实身份，给打击此类犯罪带来一定的难度．\n3. 科技含量提高，手法日趋隐蔽．  \n   电信诈骗多利用手机、互联网、电话为载体，使用群发器、设立虚假网站等来行骗，嫌疑  \n   人在一个固定地点安放群发器、选择好手机号段后，以群发器或网络群发自动发出短信，侵  \n   害对象的范围大幅增加，受害人一旦回应，便迅速转入对方人工台，嫌疑人便使用各种伎俩  \n   进行对话行骗．诈骗分子利用 VOIP 网络电话，操作的服务器和 IP 地址大多在境外，事先  \n   在电脑上装上一种叫“任意显”的软件，可以让对方电话或手机随意显示电信、公安、法院  \n   等部门号码。 4.转账取款迅速，难以查控.  \n   一旦有人受骗，将钱汇入其账户，嫌疑人便会快速将钱跨省区域、跨银行进行分散转账。  \n   当天跨省或在境外使用数十张甚至上百张银行卡在多个 ATM 机上将钱全部取走；现在发展  \n   到，利用第三方公司注册的 POS 机先把钱一次性转走，再拆分，再取款，加大了侦查的难  \n   度.\n4. 信息诈骗手段翻新速度很快．  \n   开始只是用很少的钱买一个“短信发射器”，发展到英特网上的任意显号软件、显号电  \n   台等等，成了一种高智慧型的诈骗．从诈骗借口来讲，从最原始的中奖诈骗、消费信息发展  \n   到绑架、勒索、电话欠费、汽车退税等等，可以说新骗术每时每刻都在产生.\n","lastmodified":"2023-09-18T14:54:47.56245459Z","tags":null},"/%E6%96%B0%E5%BB%BA%E5%89%AF%E6%9C%AC%E4%BC%98%E5%8C%96":{"title":"6 个标签的情况","content":"\n# 6 个标签的情况\n\n## 初次新建副本\n\n### DOM 渲染时间\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106112017.png)  \n大概需要 20 - 3 = 17S 完全渲染完成\n\n### 请求数量\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106112126.png)  \n大概需要 35 个请求时间接近 5S\n\n## 第二次新建副本\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106112401.png)\n\n大概需要 10+S\n\n请求数量差不多\n\n# 优化以后\n\n## 初次新建副本\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106113032.png)  \n基本 7S 内渲染完成，没有乱码中间态，用户体验提升\n\n### 请求数量\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106113159.png)\n\n优化到 15 个 ，请求时间 3S 左右\n\n## 第二次新建副本\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220106113522.png)\n\n渲染时间 6S 左右\n\n###\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%96%B0%E8%83%BD%E6%BA%90":{"title":"新能源","content":"\n# 新能源\n\n![[Pasted image 20210916194102.png]]\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%A0%E5%8C%85%E6%9E%84%E5%BB%BA":{"title":"无包构建","content":"\n## 无包构建\n\n无包构建指的是：在构建时只需处理模块的编译而无须打包，把模块间的**依赖关系完全交给浏览器来处理。**浏览器会加载入口模块，分析依赖后，再通过网络请求加载被依赖的模块。通过这样的方式简化构建时的处理过程，提升构建效率。\n\n### [[Vite]]\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173226.png)\n\n详细运行查看[Vite](Vite.md)\n\n### Snowpack\n\n[[Snowpack]] 是另一个比较知名的无包构建工具，从整体功能来说和上述 Vite 工具提供的功能大致相同，主要差异点在 Snowpack 在生产环境下默认使用无包构建而非打包模式（可以通过引入打包插件例如 @snowpack/plugin-webpack 来实现打包模式）\n\n### 无包构建与打包构建\n\n优点：\n\n- 初次构建速度快\n- 按需编译，在浏览器渲染时，根据入口模块分析加载所需模块，编译过程按需处理\n- 增量构建速度快\n\n缺点：\n\n- 浏览器网络请求数量剧增，尤其对不支持的 HTTP2.0 的服务器\n- 浏览器兼容性\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%A0%E6%8D%9F%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8F":{"title":"无损图像格式","content":"\n无损压缩是一种使文件更小、传输或下载速度更快的方法，但它可以解压缩回完全相同的原始文件。 ZIP 和 RAR 是流行的文件压缩无损文件格式。在 Web 环境中，GZIP 压缩通常用于缩小 JavaScript 和 CSS 文件。在图像压缩中，PNG是众所周知的无损格式。\n\n## 比较 PNG、WebP、AVIF 和 JPEG XL\n\n所有这些都可以在当今的浏览器中使用，但 JPEG XL 除外，Chrome 和 Firefox 支持 JPEG XL，但首先必须使用功能标志启用。这些浏览器的后续版本可能会默认支持 JPEG XL。\n\n### 文件大小\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230724155445.png)\n\n### ### 编码速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230724155500.png)\n\n### 结论\n\n与最优化的 PNG 相比，大多数现代无损图像格式（例如 [[WebP]] 和 JPEG XL）在效率上都有很大提高。\n\nWebP 有着更小的存储和更快的编码速度，但是safiri 不支持\n\n### 参考资料\n\n- [比较 PNG、WebP、AVIF 和 JPEG XL](https://siipo.la/blog/whats-the-best-lossless-image-format-comparing-png-webp-avif-and-jpeg-xl)\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%A0%E7%95%8C%E6%88%90%E9%95%BF":{"title":"《 无界成长 》","content":"\n# 《 无界成长 》\n\n# 元数据\n\n\u003e [!abstract] 无界成长\n\u003e - ![ 无界成长|200](https://weread-1258476243.file.myqcloud.com/weread/cover/90/3300011390/t7_3300011390.jpg)\n\u003e - 书名： 无界成长\n\u003e - 作者： 谢胜子\n\u003e - 简介： 这是—本写给所有想要突破自我的年轻人的成长和进步之书。有野心的95后必读成长书！用无界思维驱动多元潜力，实现你的第二次成长。  \n2020年福布斯中国U30上榜者、香港区块链金融公司商务副总裁、江苏卫视《—站到底》冠军谢胜子向你讲述自己如何通过实习在美国、留学在英格兰、跨界转行等个人经历实现无界成长。  \n“无界”是一种认知方式，驱动你去做你想做的任何事，你越没有边界感，你的潜力就越强大。\n\u003e - 出版时间 2020-05-01 00:00:00\n\u003e - ISBN： 9787549631582\n\u003e - 分类： 个人成长-励志成长\n\u003e - 出版社： 文汇出版社\n\n# 高亮划线\n\n## 第一章 实习在美国｜孤独与野心\n\n- 📌 我很开心你有自己的想法，但在职场中永远不要为自己过于主动而感到难堪 ^3300011390-4-7227-7260\n    - ⏱ 2022-03-09 10:47:20\n- 📌 交流永远是分很多层级的，你在这个层级的交流无障碍，并不意味着随着交流层级加难加深，你还能应对自如。 ^3300011390-4-12849-12898\n    - ⏱ 2022-03-09 10:52:08\n- 📌 哪怕是旁人眼中再健谈再有魅力的社交高手，也不会永远都得心应手，也会时常感到不适或语塞。没有百分百的社交者，只有百分百的让你融入的环境，勇敢克服心理上的不适，是主观能动地去降低边缘化程度的第一步。 ^3300011390-4-13782-13879\n    - ⏱ 2022-03-09 10:54:03\n- 📌 语言依托的是文化背景，你不足够了解文化就没有办法彻底掌握好一门语言。如果你被动着很难插话，很难顺着聊下去，试着主动发起话题，去聊你擅长的事情。看看当地的电视新闻和报纸杂志，把有意思的小故事记下来，主动地去跟别人谈论。如果他们讲的笑话你不明白，时机合适的话你可以问，他们或许会因为你的不解而觉得可爱 ^3300011390-4-13978-14126\n    - ⏱ 2022-03-09 10:54:38\n- 📌 “你们要不停地跟别人聊天，不断地去和不同职业、不同年龄的人聊天，解决问题的勇气和灵感很多都是聊出来的 ^3300011390-4-14216-14266\n    - ⏱ 2022-03-09 10:54:55\n- 📌 量变到质变的故事终会发生。中间那些来来回回的细节我已经记不清了，但我记得好像从某一个阶段开始，我不再需要去准备聊天卡了，我也不需要只瞄准那些我准备过的人去说话了 ^3300011390-4-15982-16062\n    - ⏱ 2022-03-09 10:56:46\n- 📌 这是我在美国实习的最大收获之一，不论是导师还是想要争取的客户，不要太期待他们能安排出整块时间。学会“见缝插针”地交流很重要。比如在会议上遇到了想结识的人，如果只是问对方之后什么时间方便聊一聊，一般不会得到直接的答复。还不如在走出会议室的那三十秒即刻聊起来，或者在对方的车还没到的时候陪着等一等，其实每一个人都有未曾被他人捕捉到的“闲置的零碎时间”，这就是机会。 ^3300011390-4-20599-20779\n    - ⏱ 2022-03-09 11:06:27\n- 📌 多年之后我听别人说，有一点表演型人格的人，往往能更快抓住一门外语的精髓。 ^3300011390-4-24392-24428\n    - ⏱ 2022-03-09 11:10:01\n- 📌 虽然现在想来，这种“角色附体”的方式还是挺孩童气的，但对那个阶段的我却大有裨益。人在拥有自己的处事风格之前，首先要学会模仿。 ^3300011390-4-25219-25281\n    - ⏱ 2022-03-09 11:10:50\n- 📌 而且我发现，比起被动地被夸奖，主动去夸赞别人其实更能增强一个人的自信。 ^3300011390-4-25987-26022\n    - ⏱ 2022-03-09 11:11:51\n- 📌 另外，西方文化中有一条非常好的美德就是“不轻易评判”。美剧展现的价值观非常多元，无论是事业，感情还是婚姻，都是如人饮水，冷暖自知，适合自己的才是最好的。同事们平日里交谈的话题会更偏向于爱好和生活，而不是人生选择。无论关系多亲密，大家最多都只是给建议，不会评头论足，更不会代替决定。无论对方的选择让你觉得有多荒唐和不可理解，都要以一种淡定包容的方式去倾听。在这种氛围里，任何人都会更有底气去表达、去拒绝、去成为自己。 ^3300011390-4-26051-26258\n    - ⏱ 2022-03-09 11:12:12\n- 📌 适应与快速学习能力虽好，但将来你就会知道，一定会有失手的时候，一定会有你怎么努力都进不去的局面。真正可以给你万无一失的安全感的是，无论把你抛在哪里，无论外界对你的态度如何，你都可以只依靠自己与自己的交流然后继续前行的能力 ^3300011390-4-28248-28358\n    - ⏱ 2022-03-09 11:26:47\n\n## 第二章 留学英格兰｜商科学子的自我修养\n\n- 📌 学长的信息就过来了：“约你7点半呢，就是希望可以在8点见到你，慢慢来，完全不用急。”后来，我参加过很多饭局，如果是我“被迟到”，我都会借用他的这一句话，善解人意中带着一种得体的暧昧。 ^3300011390-5-12431-12522\n    - ⏱ 2022-03-09 15:10:47\n- 📌 2016年的欧洲杯在法国举行，伦敦和巴黎是著名的“双城”（狄更斯的《双城记》讲述的就是伦敦和巴黎的故事），往返于这两个城市间的欧洲之星列车是全世界最火的火车线路之一，交通非常便捷。 ^3300011390-5-18740-18830\n    - ⏱ 2022-03-09 15:19:54\n\n## 第三章 当我们谈论面试时，我们在谈论什么\n\n- 📌 我遇到过一些人格魅力很强的HR，他们经常说：“没关系的，随便问什么都可以。”你会有一瞬间觉得你的挚友就坐在对面，真的想放飞自我聊点别的。但这显然不行，问的问题依然要跟专业、职业和行业有关，永远头悬一根线，知道自己在什么场景中，这个问题究竟为什么而问。这才是稳重、成熟的做法。 ^3300011390-6-15448-15585\n    - ⏱ 2022-03-09 16:02:06\n- 📌 如果面试者全程给出的都是可证伪的有效信息，那面试的效率会非常高，面试官内心的把握度也会很高。而这也从侧面证明了，面试者具备了非常高的素质和极强的换位思考能力。 ^3300011390-6-20875-20954\n    - ⏱ 2022-03-09 16:27:42\n- 📌 不管遇到什么问题，你都不要被问题本身牵着走，而是要想，如果我是面试官，我问这个问题的目的是什么？然后用这样的思路去回答。面试官只有接收了有效信号时，才会觉得省力，觉得开心。 ^3300011390-6-22842-22928\n    - ⏱ 2022-03-09 16:31:12\n- 📌 换位思考除了最基本的臆想和理解能力之外，更关乎人生体验、信息搜寻与表达技巧等。从来没有哪种能力是单线的，任何能力都是立体而纵横交错的。 ^3300011390-6-22957-23024\n    - ⏱ 2022-03-09 16:31:28\n- 📌 如果你拥有漂亮的锁骨，就大胆地去穿一字肩；如果你的腿部修长，就多穿高腰牛仔裤；如果你的皮肤白皙，就多穿露肤的服装，展现元气，不要总是担心自己的赘肉。当别人的目光落在你身上的时候，一定会关注你最打眼、最有魅力的地方，所以你的心理权重也应当如此。不要总想着怎样去遮挡你自己不满意的部分，可能别人压根不会注意到。和很多事情一样，扬长，永远比避短重要。 ^3300011390-6-24764-24965\n    - ⏱ 2022-03-09 16:51:21\n\n## 第四章 职场与跨界转型｜从四大会计师事务所到区块链\n\n- 📌 对标到谈合作中，对方其实也并不关心你为什么想做成这件事情以及你们公司有什么样的蓝图，对方只想知道，通过合作他将如何获利。这个道理本身并不难理解，但付诸实践，能一上来就把关键点聊出来的人并不多。 ^3300011390-7-19905-20030\n    - ⏱ 2022-03-09 17:42:26\n- 📌 一位前辈告诉我，在研究新事物的时候，一定要抱着盲人摸象的心态。不断地提醒自己，你看到的只是局部，你也只能看到局部，能找到一些角度去理解它已经难能可贵，不要期待你能用上帝之眼去俯视那些新的技术与知识，要有敬畏之心。 ^3300011390-7-23288-23394\n    - ⏱ 2022-03-09 17:45:34\n- 📌 创业之后就更不用说了，能成为一把手的人，往往是那些“撺盘子”的人，他们拉得到融资，建得起团队，搞得定技术，他们认识很多人。 ^3300011390-7-27887-27948\n    - ⏱ 2022-03-09 17:50:00\n- 📌 做出这种莽撞的邀约时，一定要在最后一句话为对方设置台阶，如果他想拒绝，就会顺着台阶走下来，不至于让场面太尴尬，如果他不想拒绝，则会忽略这个台阶。 ^3300011390-7-32822-32894\n    - ⏱ 2022-03-09 17:57:34\n- 📌 所有发生在职场环境中的聊天看似随意但并不随意，像准备一场演讲那样去准备聊天话题并不为过。 ^3300011390-7-37057-37101\n    - ⏱ 2022-03-09 18:03:12\n- 📌 所谓聊天能力，除了表达，也关乎倾听。 ^3300011390-7-37521-37539\n    - ⏱ 2022-03-09 18:04:45\n\n## 第五章 这是一个日趋无界的世界\n\n- 📌 越是积累得多，吸收信息时脑子里火花碰撞的快感就越强烈。知识不是孤立的、各成一派的，知识本身就是一片海洋，是互联的、一体的、无边无际的。面对浩瀚无垠的大海难免无从下手，所以聪明的人类人为划分了学科与类别，帮我们找到入口与支点。 ^3300011390-8-4472-4584\n    - ⏱ 2022-03-11 10:19:04\n- 📌 一位看了一千部电影的朋友跟我说，即使有耐力用三四年啃完《托尔斯泰全集》，对世界的理解就真的比我们更深吗？输入的媒介和形式并不重要，能否持续地高质量输入才是重要的。 ^3300011390-8-6778-6859\n    - ⏱ 2022-03-11 10:39:12\n- 📌 心理学中有一条“飞轮效应”理论，指的是起初想让静止的飞轮转动起来，必须花费很大的力气，但每转一圈都可以使第二圈转动得更快。一旦体系运作起来，之后会变得越来越容易。斜杠并不是一个单纯的风险分散的职业发展选择，找到每一条业务线之间的连接点，整合起来，最终形成任何单线作战的人都无法达到的竞争优势，才是斜杠身份的价值。 ^3300011390-8-11240-11396\n    - ⏱ 2022-03-11 10:48:35\n\n# 读书笔记\n\n## 第一章 实习在美国｜孤独与野心\n\n### 划线评论\n\n- 📌 我觉得美剧帮助我完成了“如何讲好一个故事”的启蒙教育。尤其是第一季的第一集，人物如何出场，穿什么样的衣服，说什么样的话，用什么场景奠定全剧的基调，怎样能既吸引你看下去但又留下足够多的伏笔。这里面可以拆开了揉碎了看的门道实在是太多了。 ^16142247-7xCKQLIyn\n    - 💭 很好的一个刻意练习的例子，比别人多一步思考。\n    - ⏱ 2022-03-09 11:09:12\n   \n\n## 第二章 留学英格兰｜商科学子的自我修养\n\n### 划线评论\n\n- 📌 有一件很玄学的事情，当你刚认识或记住一个人的时候，你会很频繁地偶遇他。 ^16142247-7xCMEruXS\n    - 💭 孕妇效应\n    - ⏱ 2022-03-09 11:36:42\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%A0%E9%99%90%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8":{"title":"无限滚动列表","content":"\n# 无限滚动列表\n\n主要是手机端和 pc 端会遇到需要一直滚动 不好放分页的情况。\n\n主要是通过监听底部dom是否出现在可视区域，然后做数据请求，处理一些特殊情况。主要使用[[IntersectionObserver]]来实现，让我们更轻易地实现可见区域交叉监听。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%A5%E8%AE%B0%E6%A8%A1%E6%9D%BF":{"title":"事件记录","content":"\n#日记\n\n# 事件记录\n\n## 卧薪尝胆\n\n今年最重要的5个目标  \n本月最重要的5个目标  \n本周最重要的5个目标\n\n## 今日复盘\n\n### 今日计划完成情况：\n\n学习上  \n工作上  \n生活上\n\n### 为什么没有完成？\n\n### 打算如何改进调整？\n\n## 吾日三省\n\n与他人：今日人际关系处理是否妥当？  \n与自己：今日情绪管理是否妥当？  \n与做事：今日事项安排是否妥当？\n\n## 重要感悟\n\n所见  \n所感  \n所思  \n所行\n\n## 明日计划\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%B6%E9%97%B4%E7%A7%BB%E6%B0%91":{"title":"《 时间移民 》","content":"\n# 《 时间移民 》\n\n# 元数据\n\n\u003e [!abstract] 时间移民\n\u003e - ![ 时间移民|200](https://weread-1258476243.file.myqcloud.com/weread/cover/34/YueWen_624530/t7_YueWen_624530.jpg)\n\u003e - 书名： 时间移民\n\u003e - 作者： 刘慈欣\n\u003e - 简介： 《时间移民》是中国科幻文学之王刘慈欣的中短篇小说集，其中包括《时间移民》《镜子》《吞食者》《西洋》等刘慈欣经典获奖作品，是近年来刘慈欣作品的最好版本。\n\u003e\n\u003e - 出版时间 2014-12-01 00:00:00\n\u003e - ISBN： 9787539964188\n\u003e - 分类： 精品小说-科幻经典\n\u003e - 出版社： 江苏文艺出版社\n\n# 高亮划线\n\n## 序\n\n## 思想者(3)\n\n- 📌 东方的天空越来越亮，群星开始隐没，思云山露出了剪影般的轮廓，在它高高的主峰上，在那被蔓藤覆盖的天文台废墟中，这两个年近六十的人期待地望着东方，等待着那个光辉灿烂的脑细胞升出地平线。 ^624530-28-3159-3253\n    - ⏱ 2017-11-21 21:52:08\n\n# 读书笔记\n\n## 序\n\n### 划线评论\n\n- 📌 关于“德先生”和“赛先生”的事 ^16142247-6V3uiLpMe\n    - 💭 民主与科学\n    - ⏱ 2017-11-18 10:07:08\n   \n\n## 思想者(3)\n\n### 划线评论\n\n- 📌 东方的天空越来越亮，群星开始隐没，思云山露出了剪影般的轮廓，在它高高的主峰上，在那被蔓藤覆盖的天文台废墟中，这两个年近六十的人期待地望着东方，等待着那个光辉灿烂的脑细胞升出地平线。 ^16142247-6V8Np5El7\n    - 💭 有个疑问：为什么不调取第一次观测到天狼星的波段然后对比下34年后的波段\n    - ⏱ 2017-11-21 21:52:09\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6VgoiXAUq  \n⏱ 2017-11-26 21:42:17\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%B6%E9%97%B4%E7%AE%80%E5%8F%B2%E6%8F%92%E5%9B%BE%E6%9C%AC-3300057531":{"title":"《 时间简史（插图本） 》","content":"\n# 《 时间简史（插图本） 》\n\n# 元数据\n\n\u003e [!abstract] 时间简史（插图本）\n\u003e - ![ 时间简史（插图本）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/71/cpplatform_tadxea7kfkukkqziwcf4zs/t7_cpplatform_tadxea7kfkukkqziwcf4zs1682661702.jpg)\n\u003e - 书名： 时间简史（插图本）\n\u003e - 作者： 史蒂芬·霍金\n\u003e - 简介： 《时间简史》讲述关于宇宙本性的最前沿知识，但是从那以后无论在微观还是宏观宇宙世界的观测技术方面都有了非凡的进展。这些观测证实了霍金教授在该书第一版中的许多理论预言，其中包括宇宙背景探险者卫星（COBE）的最近发现，它在时间上回溯探测到离宇宙创生的30万年之内，并显露了他所计算的在时空结构中的涟漪。尽管霍金教授的著述极为清晰而机智，有些读者仍然觉得难以掌握复杂的概念。为了使读者加深理解，本版还增加了240多幅彩色插图，包括卫星图像和照片。\n\u003e - 出版时间 2012-01-01 00:00:00\n\u003e - ISBN： 9787535732309\n\u003e - 分类： 科学技术-科学科普\n\u003e - 出版社： 湖南科学技术出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n马克一下TAT头一本把我看成智障的书 2018年一定要啃完 ^16142247-6ZEjI4Ic6  \n⏱ 2018-05-24 16:06:31\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%97%B6%E9%97%B4%E7%AE%80%E5%8F%B2%E6%8F%92%E5%9B%BE%E6%9C%AC-757874":{"title":"《 时间简史（插图本） 》","content":"\n# 《 时间简史（插图本） 》\n\n# 元数据\n\n\u003e [!abstract] 时间简史（插图本）\n\u003e - ![ 时间简史（插图本）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/20/YueWen_757874/t7_YueWen_757874.jpg)\n\u003e - 书名： 时间简史（插图本）\n\u003e - 作者： 史蒂芬·霍金\n\u003e - 简介： 《时间简史》讲述关于宇宙本性的最前沿知识，但是从那以后无论在微观还是宏观宇宙世界的观测技术方面都有了非凡的进展。这些观测证实了霍金教授在该书第一版中的许多理论预言，其中包括宇宙背景探险者卫星（COBE）的最近发现，它在时间上回溯探测到离宇宙创生的30万年之内，并显露了他所计算的在时空结构中的涟漪。尽管霍金教授的著述极为清晰而机智，有些读者仍然觉得难以掌握复杂的概念。为了使读者加深理解，本版还增加了240多幅彩色插图，包括卫星图像和照片。\n\u003e - 出版时间 2012-01-01 00:00:00\n\u003e - ISBN： 9787535732309\n\u003e - 分类： 科学技术-科学科普\n\u003e - 出版社： 湖南科学技术出版社\n\n# 高亮划线\n\n## 第二章 空间和时间\n\n- 📌 [插图]图2.10　在池塘表面上散开的涟漪的时空图这些扩大的水波圆圈在具有两个空间方向和一个时间方向的时空中画出一个圆锥。正如我们已经看到的，麦克斯韦方程预言，不管光源的速度如何，光速应该是一样的，这已 ^757874-7-10752\n    - ⏱ 2018-05-20 18:16:18\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%E5%85%A8%E9%9B%862020%E7%89%88":{"title":"《 明朝那些事儿·全集（2020版） 》","content":"\n# 《 明朝那些事儿·全集（2020版） 》\n\n# 元数据\n\n\u003e [!abstract] 明朝那些事儿·全集（2020版）\n\u003e - ![ 明朝那些事儿·全集（2020版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/86/yuewen_32006467/t7_yuewen_320064671678700080.jpg)\n\u003e - 书名： 明朝那些事儿·全集（2020版）\n\u003e - 作者： 当年明月\n\u003e - 简介： 　　《明朝那些事儿》主要讲述的是从1344年到1644年这三百年间关于明朝的历史，参考《明实录》《明通鉴》《明史》《明史纪事本末》等二十余种明代史料和笔记杂谈，经明史专家毛佩琦审订推荐，俯瞰三百年明史，看到不一样的大明王朝：明朝，一个让人血性喷薄的朝代，一个光怪陆离的朝代、一个强悍而温情的朝代，一个历经劫难又恢宏大气的朝代。明朝就像中国历史的褶皱，每翻开一篇都有精彩无比的故事蕴含着属于中国人的文化密码、政治逻辑、人性经验。\n\u003e - 出版时间 2020-06-01 00:00:00\n\u003e - ISBN： 9787213094231\n\u003e - 分类： 历史-历史读物\n\u003e - 出版社： 浙江人民出版社\n\n# 高亮划线\n\n## 引子\n\n- 📌 由于早年读了太多学究书，所以我很痛恨那些故作高深的文章。其实历史本身很精彩，所有的历史都可以写得很好看，我希望自己也能做到。 ^32006467-2-336-398\n    - ⏱ 2022-03-16 14:58:18\n\n## 建国\n\n- 📌 陈独秀曾经问蒋梦麟考的是什么秀才，蒋梦麟回答是策论秀才，陈独秀非常得意，哈哈大笑，说自己考的是八股秀才，比策论秀才值钱。 ^32006467-18-7144-7204\n    - ⏱ 2022-03-16 22:01:06\n\n## 你死我活的战争\n\n- 📌 而那位叫马三保的人也因在此战中的优秀表现为朱棣所重用，并引为心腹，此人出生时父母以世道平和、平安成长之意，曾给他取名为和，又由于他在郑村坝立下大功，被朱棣赐姓“郑”。此后他便改名为郑和。 ^32006467-30-6536-6633\n    - ⏱ 2022-03-17 15:14:56\n\n## 帝王的烦恼\n\n- 📌 姚广孝，一个被后人称为“黑衣宰相”、争论极大的人，一个深入简出、被神秘笼罩的人，他的愿望其实很简单：一展胸中抱负，不负平生所学，足矣。 ^32006467-34-2979-3050\n    - ⏱ 2022-03-17 17:44:30\n\n## 郑和之后，再无郑和\n\n- 📌 当时世界上最强大的大明朝在拥有压倒性军事优势的情况下，能够平等地对待那些小国，并尊重它们的主权和领土完整，给予而不抢掠，是很不简单的。 ^32006467-37-10311-10378\n    - ⏱ 2022-03-17 21:42:07\n\n## 致命的疏漏\n\n- 📌 “即使日后身处绝境，亦需坚守，万勿轻言放弃！” ^32006467-84-7648-7671\n    - ⏱ 2022-03-21 18:03:37\n\n## 勇气\n\n- 📌 而死劾，并非是简单的文书，它是一种态度、一种决心，弹劾的罪状是足以置对方于死地的罪名，弹劾的对象是足以决定自己生死的人，弹劾的结果是九死一生。 ^32006467-86-9897-9968\n    - ⏱ 2022-03-21 18:35:07\n\n## 强敌\n\n- 📌 在日本史书里，战国被描述成一个英雄辈出的时代，无数勇猛之士在万军之中横冲直撞，着实壮观。但是实际情况可能并非如此，比如日本历史上著名的桶狭间战役，那位威震日本，号称无人可挡的大诸侯今川义元，手底下的全部兵力不过四五万人，仅此而已。当时，一般战役两方人数加在一起也就五六千人，要摆在中国，这也就是个仪仗队。不过倒怪不得日本同志们，毕竟人口有限，要组织个大规模战役难度太大，说句寒碜话，能战死个几千人已经很不容易了。 ^32006467-89-2478-2692\n    - ⏱ 2022-03-21 20:30:55\n\n## 侵略者的末日\n\n- 📌 戚继光的忍耐终于到了极点，他站了起来，高声说道：“于长生之道，我也有所心得，愿与诸位共享。”于是现场肃静下来，一个嘹亮的声音响彻着整座寺庙：“鞠躬尽瘁，夕死无憾，此即长生之术！” ^32006467-94-3501-3594\n    - ⏱ 2022-03-22 09:33:28\n\n## 致命的正义\n\n- 📌 还要特别提醒大家一句，具体问题要具体分析，徐阶和严世蕃之所以能把皇帝捏着玩，归根结底还是因为嘉靖同志爱面子，要换了朱元璋，估计不但严世蕃活不成，连办案的那几个书呆子也跑不掉，大家携手并肩一起见阎王。所以千万不要乱用此招，教条主义害死人啊。 ^32006467-98-11103-11222\n    - ⏱ 2022-03-22 10:56:14\n\n## 奇怪的人\n\n- 📌 其实后世很多人会质疑这样一个问题，徐阶和严嵩有什么不同？严嵩贪污，徐阶也不干净；严嵩的儿子受贿，徐阶的儿子占地；严嵩独揽大权，徐阶也是。表面上是一样的，实际上是不同的。用一句简单的话来说明，那就是：严嵩怠工，徐阶干活。 ^32006467-99-116-233\n    - ⏱ 2022-03-22 11:00:16\n- 📌 很多人并不清楚，在漫长的明代历史中，徐阶是一个极为重要的人物，重要到几乎超出了所有人的想象。他最伟大的成就，并不是打倒了严嵩，而是他所代表的那股势力。 ^32006467-99-1334-1409\n    - ⏱ 2022-03-22 11:12:37\n- 📌 这是一个不太起眼，却极为重要的转折点，它意味着一股强大势力的出现，强大到足以超越至高无上的皇权。这才是徐阶所代表的真正意义，绝非个人，而是相权，是整个文官集团的力量。 ^32006467-99-2152-2239\n    - ⏱ 2022-03-22 11:13:42\n- 📌 奇迹啊，现将此信主要内容介绍如下，以供大家学习参考：胡大人，我记得您以前外出巡视的时候说过，各州县都要节约，过路官员不准铺张浪费，但今天我县接待一个过往人员的时候，他认为招待过于简单，竟然毒打了服务员，还敢自称是您的儿子。我一直听说您对儿女的教育很严格，怎么会有这样的儿子呢？这个人一定是假冒的，败坏您的名声，如此恶劣，令人发指，为示惩戒，他的全部财产已被我没收，充入国库，并把此人送到您那里去，让您发落。 ^32006467-99-12558-12765\n    - ⏱ 2022-03-22 11:27:58\n\n## 成熟\n\n- 📌 在封建时代，就做封建时代的事，说封建时代的话，别指望人家有多高的觉悟，这就叫历史唯物主义。 ^32006467-101-9568-9613\n    - ⏱ 2022-03-22 14:02:41\n\n## 敌人\n\n- 📌 只有当你知道，他是一个正常人，有正常的欲望，有自己的小算盘，有过犹豫和挣扎，有过贪婪和污点，你才能明白，那个不顾一切、顶住压力坚持改革的张居正，到底有多么的伟大。所有的英雄，都是平凡的人。 ^32006467-107-10213-10311\n    - ⏱ 2022-03-22 16:43:43\n\n## 谜团\n\n- 📌 在名著《围城》中，钱锺书先生借用别人之口，对那位命运多变的主人公方鸿渐做出了这样一个评价：你是个好人，却并无用处。 ^32006467-109-4993-5054\n    - ⏱ 2022-03-22 17:21:34\n\n## 为了忘却的纪念\n\n- 📌 在这个世界上，笨人的第一特征，就是自认为聪明。 ^32006467-117-203-226\n    - ⏱ 2022-03-23 10:29:57\n\n## 东林崛起\n\n- 📌 但历史无数次证明，在皇权斗争中，好人最后的结局，就是废人。 ^32006467-122-8819-8848\n    - ⏱ 2022-03-23 14:30:30\n\n## 不起眼的敌人\n\n- 📌 老子说过，最好的国家，是老百姓不知道统治者是谁。从某个角度讲，万历同志做到了。 ^32006467-124-264-303\n    - ⏱ 2022-03-23 15:21:38\n- 📌 万历四十三年（1615），李成梁去世，年九十。不世之功臣，千秋之罪首。建功一世，祸患千秋，万死不足恕其罪！ ^32006467-124-10170-10227\n    - ⏱ 2022-03-23 15:41:35\n\n## 一个监狱看守\n\n- 📌 事实上，应该是一群精明的人，在无比黑暗的政治斗争中，输给了另一群更为精明的人，最终失败。 ^32006467-130-4108-4152\n    - ⏱ 2022-03-23 17:45:28\n\n## 道统\n\n- 📌 如果有人让你选择如下两个选项：坚持操守，坚定信念和理想，一生默默无闻，家徒四壁，为国为民，辛劳一生。或是放弃原则，泯灭良心，少奋斗几十年，青云直上，升官发财，好吃好喝，享乐一生。 ^32006467-132-10059-10152\n    - ⏱ 2022-03-23 18:52:46\n\n## 殉道\n\n- 📌 千年之下，可有一人，不求家财万贯，不求出将入相，不求青史留名，唯以天下、以国家、以百姓为任，甘受屈辱，甘受折磨，视死如归？我答：曾有一人，不求钱财，不求富贵，不求青史留名，有慨然雄浑之气，万刃加身不改之志。 ^32006467-134-3019-3126\n    - ⏱ 2022-03-23 20:21:43\n- 📌 不要以为渺小的，就没有力量；不要以为卑微的，就没有尊严。弱者和强者之间唯一的差别，只在信念是否坚定。 ^32006467-134-10428-10482\n    - ⏱ 2022-03-23 20:28:14\n\n## 纯属偶然\n\n- 📌 此前有个经济学家对我说，明朝灭亡的真正原因，是没钱。我表示同意，财政赤字太多，挣的没有花的多，最后垮台。但他看了看我，说：“我说的没钱，不是没有收入，是没钱。” ^32006467-149-1778-1866\n    - ⏱ 2022-03-24 10:15:43\n\n## 结束了？\n\n- 📌 是的，这就是我想说的，这就是我想通过徐霞客所表达的，足以藐视所有王侯将相，最完美的结束语：成功只有一个——按照自己的方式，去度过人生。 ^32006467-158-5061-5132\n    - ⏱ 2022-03-24 15:44:53\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%98%A5%E8%8A%82":{"title":"春节","content":"\n# 春节\n\n实际上，中国人正式把农历大年初一设定为春节加以庆祝，只有 110 年的历史，也就是从 1913 年才开始的。在此之前，中国人虽然有几千年每年冬天过节的历史，但过的并不是我们现在的大年初一的春节。在很长的一段时间里，过农历新年和过春节是两件不同的事情。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%98%A8%E6%97%A5%E7%9A%84%E4%B8%96%E7%95%8C":{"title":"《 昨日的世界 》","content":"\n# 《 昨日的世界 》\n\n# 元数据\n\n\u003e [!abstract] 昨日的世界\n\u003e - ![ 昨日的世界|200](https://weread-1258476243.file.myqcloud.com/weread/cover/58/YueWen_23796324/t7_YueWen_23796324.jpg)\n\u003e - 书名： 昨日的世界\n\u003e - 作者： 茨威格\n\u003e - 简介： 《昨日的世界》是奥地利作家斯特凡·茨威格创作的自传体文学作品,写于1939年至1941年间，是茨威格在临终前被迫流亡的日子里完成的。在茨威格离世以后，于1942年在斯德哥尔摩出版。在这部作品里，茨威格把个人命运与时代融为一体，通过自己所经历的人与事，展示了他生活过的城市和国家的文化生活风貌，记录了从第一次世界大战前夜到第二次世界大战时动荡的欧洲社会，描述了他与一些世界闻名的诗人、作家、雕塑家、音乐家交往的情景，批露了世界文化名人鲜为人知的生活轶事，同时穿插了作者各种细腻的心迹。茨威格从出生的城市维也纳和自己的犹太家庭写起，一直写到1939年9月已满60岁的时候，时值第二次世界大战爆发，他认为，这是“我们这些六十岁人的时代彻底结束”。\n\u003e - 出版时间 2018-06-01 00:00:00\n\u003e - ISBN： 9787532777150\n\u003e - 分类： 人物传记-文学家\n\u003e - 出版社： 上海译文出版社\n\n# 高亮划线\n\n## 太平世界\n\n- 📌 被理想主义蒙蔽的那代人抱着乐观主义的幻想，他们以为科技进步必然带来人类道德的迅速提高，这同我们今天幻想把“安全”这个词从词汇表中抹掉一样，是十分可笑的。 ^23796324-5-2635-2711\n    - ⏱ 2021-10-21 11:20:08\n\n## 上世纪的学校\n\n- 📌 一个人不一定非要像霍夫曼斯塔尔那样在中学阶段早熟成才；一个人也可以像里尔克那样，一步一步地成才。所以，一个人不必因为暂时写了一些不像样、不成熟、缺乏责任感的作品，马上就认定自己没有指望了。一个人也许不会再现霍夫曼斯塔尔的奇迹，但可以走里尔克走过的那条比较平稳寻常的成才之路。 ^23796324-6-18376-18513\n    - ⏱ 2021-10-25 18:04:44\n\n## 情窦初开\n\n- 📌 从弗洛伊德的学说中我们知道，有意识地去压抑自然的性冲动，实际上是根本不可能的，不过是迫使它进入危险的潜意识之中罢了。 ^23796324-7-1576-1634\n    - ⏱ 2021-10-25 19:14:35\n\n## 大学生活\n\n- 📌 任何外语都有自己独特的成语和习语，这是翻译诗歌的首要难题。正因如此，翻译诗歌需要译者有丰富的表达能力，而在平时人们却不注意这些。如何把外语中的成语译成妥帖入微的母语，需要译者反复揣摸，在我看来，这是一个艺术家的特殊的艺术乐趣。 ^23796324-8-20041-20154\n    - ⏱ 2021-10-26 14:15:24\n\n# 读书笔记\n\n## 情窦初开\n\n### 划线评论\n\n- 📌 可是，整个十九世纪囿于一种妄想，以为人们能够用理性主义的明智解决一切冲突；以为把人的自然本能隐藏得越深，他那烦躁不安的冲动就会越来越缓和；以为只要不向年轻人提性的问题，他们就会忘却身上存在的自然本性。 ^16142247-7ujUZieIZ\n    - 💭 现在的中国仍然是这样，对于性还是要敢于聊敢于了解，但又有所底线\n    - ⏱ 2021-10-25 19:16:31\n   \n\n## 大学生活\n\n### 划线评论\n\n- 📌 西奥多·赫茨尔 ^16142247-7ul596DCb\n    - 💭 1860年5月2日－1904年7月3日），是奥匈帝国的一名犹太裔记者，和现代政治的锡安主义创建人，也是现代以色列的国父。\n    - ⏱ 2021-10-26 13:38:17\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%99%AE%E4%BA%AC%E4%BC%A0%E7%A1%AC%E6%B1%89%E6%99%AE%E4%BA%AC%E5%92%8C%E4%BB%96%E7%9A%84%E6%9D%83%E5%8A%9B%E4%B8%96%E7%95%8C":{"title":"《 普京传：硬汉普京和他的权力世界 》","content":"\n# 《 普京传：硬汉普京和他的权力世界 》\n\n# 元数据\n\n\u003e [!abstract] 普京传：硬汉普京和他的权力世界\n\u003e - ![ 普京传：硬汉普京和他的权力世界|200](https://weread-1258476243.file.myqcloud.com/weread/cover/27/YueWen_845220/t7_YueWen_845220.jpg)\n\u003e - 书名： 普京传：硬汉普京和他的权力世界\n\u003e - 作者： 阿纳托利\n\u003e - 简介： 普京以诚挚而平易的态度，讲述六十年过往人生历程，娓娓道来，毫无隐瞒，字里行间洋溢其对人生奋斗的执著、对政治抱负的追求、对俄罗斯民众的崇高使命、以及这位铁血硬汉一步步走上权力巅峰背后鲜为人知的故事。本书自普京的出生着笔，从一名苏联海军的儿子到毕业于圣彼得堡国立大学，拥有经济学博士学位；从完成克格勃的训练，加入情报机关机要部门，到投身地方政府，就任圣彼得堡第一副市长；从经由同乡丘拜斯的推荐，加入俄罗斯总统事务管理局，到三年后，在叶利钦的支持下，高票当选俄罗斯总统。\n\u003e - 出版时间 2016-10-01 00:00:00\n\u003e - ISBN： 9787505738515\n\u003e - 分类： 政治军事-政治\n\u003e - 出版社： 中国友谊出版公司\n\n# 高亮划线\n\n## 简单而平凡的出身\n\n- 📌 用力一挥，他的鼻骨就被打折了，经过较长时间的调养才勉强恢复。虽然鼻子没有废掉，但拳击运动的确不能继续进行下去了。再次失败后，普京改弦易辙，将发展的重点放在了一些含金量更高的项目上，于是他很快对一项民族体育项目产生了浓烈的情愫，这就是苏联流行的桑勃式摔跤。所谓桑勃式摔跤，即苏联人民综合本国各个民族在体力和身体协调性等方面的优势，辅之以一定的擒拿自卫技术，从而创立的一种技术含量很高的摔跤运动。就如同苏联的米格- 25战斗机一样，虽然单个零部件的先进性不如美国的很多战机，可由于结构整合得力，在战场上的表现却远超美国空军几乎所有的同级别战斗机。桑勃式摔跤也是如此，通过对哥萨克、蒙古等诸多民族的摔跤技术的广泛吸纳，每一个精通这种摔跤的苏联人或外国人，一旦走到战场，都会成为一个格斗高手。 ^845220-5-11387\n    - ⏱ 2019-06-25 22:57:28\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-79CpfSK2a  \n⏱ 2019-07-05 00:13:37\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%99%B6%E4%BD%93%E7%AE%A1%E7%9A%84%E5%8F%91%E5%B1%95":{"title":"晶体管的发展","content":"\n1947年12月，美国贝尔实验室的三名物理学家肖克利、巴丁和布拉顿，利用一块锗晶体实现了对微弱电流的放大，宣告了晶体管的诞生。9年后，这三人一起获得了诺贝尔物理学奖。\n\n但就在同一年，苏联物理学家克拉斯洛夫和其研究生苏珊娜·玛多延，也在基辅一个秘密研究所里搞了相似的实验。并在第二年发表了研究成果，此事后来还引发了那一届诺贝尔奖是否公平的争议。\n\n但是在晶体管和电子管的选择上，美国和苏联因为制度的不同有了不一样的选择。因为之前要发展电子管，两边都有了成千上万的厂家，如果这时候切换技术路线，会导致大量工人和研究人员失业。所以苏联的专家建议发展电子管，1958年，苏联领导人[[赫鲁晓夫]]在听取过了相关实验报告后就做了一个指示：“**真空电子管在核电磁脉冲下的生存性能比晶体管要强，苏联以后不要搞晶体管，集中力量搞电子管小型化。**”\n\n这个时候即便你知道产业未来的发展方向，你敢说实话么？你肯定不敢。\n\n不是有那么句话么？**如果让19世纪末伦敦大街上拉车的马来投票，那汽车这种玩意儿，压根不会产生。**\n\n而美国的专家虽然也有这样的私心，但是在美国，无论是政府还是专业说的都不算，他们依从市场的选择。\n\n1954年，世界第一台晶体管收音机Regency TR-1（丽晶TR-1）在美国上世了。\n\n晶体管的小巧灵便，让这台收音机从过去的大家伙迅速缩小为了“掌中宝”，富裕的美国人没有谁能抵挡拥有一台晶体管收音机的诱惑。于是虽然丽晶 TR-1售价高达50美元，但上市第一年就卖了10万台\n\n而市场销量的暴增，很快就对研发产生了“正回馈”，尝到甜头的商家愿意出高价支持学者搞晶体管研发。那些不愿意在守旧的半官方研究所里混日子的有志研究者成批出走，投身更新锐的晶体管研究。\n\n于是那个时代美国不断发生类似“[[仙童八叛徒]]”的事件，电子研究的旧模式在市场商业竞争的刺激下被不断地颠覆、加速革新。\n\n美国将半导体集成电路用在他们的F-4鬼怪战斗机和AGM-12小斗犬导弹上。苏联意识到差距明显的情况 ，完成了一次艰难的转向，承认了晶体管的先进性，放弃了已经进入死胡同的电子管小型化尝试。\n\n此时，“穗宗”赫鲁晓夫已经下台了，“勋宗”[[勃列日涅夫]]上位，这位新领导急于看到苏联能在电子产业上赶超美国。于是下了死命令，要求苏联加速电子产业的研发，要钱给钱要人给人，但必须在十年内赶上美国。\n\n但这个命令，随后在苏联电子行业内，引发了另一些更让人匪夷所思的问题——**比如半公开的科研造假和徒劳无益的“杂技式科研”。**\n\n由于之前的方向的错误，苏联的电子技术理论和生产工艺到60年代已经与西方脱节了，虽然上层有令，但这个鸿沟无法立刻被填补。于是各苏联研究院为了多快好省的完成上级安排的任务，开始走捷径，仿造、剽窃甚至直接照抄美国同样的芯片设计。\n\n可是同时代的苏联民众由于消费力不足，市场的缺失。芯片批量生产出来，根本无法到民用市场上去卖钱。\n\n于是苏联的工业规划部门只能为这些山寨芯片强行安排一种应用场景——军工。\n\n“买个鼠标垫，想为它配个电脑”这在今天是个笑话，但“造了一颗芯片，需要为它配个导弹”，“造了一台发动机，需要为它配个坦克、飞机”，这在当时的苏联却是个实景。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9B%9D%E5%85%89%E6%95%88%E5%BA%94":{"title":"曝光效应","content":"\n# 曝光效应\n\n#卡片/术语卡\n\n曝光效应（the exposure effect or the mere exposure effect）：又谓多看效应、（简单、单纯）暴露效应、（纯粹）接触效应等等，它是一种心理现象，指的是我们会偏好自己熟悉的事物，[社会心理学](https://baike.baidu.com/item/%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6/80310)又把这种效应叫做熟悉定律，我们把这种只要经常出现就能增加喜欢程度的现象叫做曝光效应\n\n重复能引发放松状态和令人舒心的熟悉感。著名心理学家罗伯特·扎伊翁茨（RobertZajonc）曾潜心关注重复某种刺激和这一刺激最终带来的轻微情感波动之间的关系，扎伊翁茨称之为曝光效应（mere exposure effect）\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9B%B9%E5%A4%A9%E5%85%83":{"title":"曹天元","content":"\n# 曹天元\n\n曹天元：科普作家，1981 年生于上海\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9B%BF%E6%8D%A2":{"title":"替换","content":"\n# 替换\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99":{"title":"应用","content":"\n最少知识原则（LKP）说的是一个软件实体应当尽可能少地与其他实体发生相互作用。这里的软件实体是一个广义的概念，不仅包括对象，还包括系统、类、模块、函数、变量等。本节我们主要针对对象来说明这个原则，下面引用《面向对象设计原理与模式》一书中的例子来解释最少知识原则：\n\n\u003e 某军队中的将军需要挖掘一些散兵坑。下面是完成任务的一种方式：将军可以通知上校让他叫来少校，然后让少校找来上尉，并让上尉通知一个军士，最后军士唤来一个士兵，然后命令士兵挖掘一些散兵坑。  \n\u003e 这种方式十分荒谬，不是吗？不过，我们还是先来看一下这个过程的等价代码：\n\n```javascript\ngerneral\n\t.getColonel(c)\n\t.getMajor(m)\n\t.getCaptain(c)\n\t.getSergeant(s)\n\t.getPrivate(p)\n\t.digFoxhole();\n```\n\n**最少知识原则也叫迪米特法则（Law of Demeter，LoD），“迪米特”这个名字源自 1987 年美国东北大学一个名为“Demeter”的研究项目。**\n\n# 应用\n\n[[中介者模式]]很好地体现了最少知识原则。通过增加一个中介者对象，让所有的相关对象都通过中介者对象来通信，而不是互相引用。所以，当一个对象发生改变时，只需要通知中介者对象即可。\n\n外观模式\n\n## [[外观模式]]\n\n外观模式的作用是对客户屏蔽一组子系统的复杂性。外观模式对客户提供一个简单易用的高层接口，高层接口会把客户的请求转发给子系统来完成具体的功能实现。大多数客户都可以通过请求外观接口来达到访问子系统的目的。但在一段使用了外观模式的程序中，请求外观并不是强制的。如果外观不能满足客户的个性化需求，那么客户也可以选择越过外观来直接访问子系统。\n\n外观模式和最少知识原则之间的关系。外观模式的作用主要有两点。\n\n- 为一组子系统提供一个简单便利的访问入口。\n- 隔离客户与复杂子系统之间的联系，客户不用去了解子系统的细节。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB":{"title":"《 月亮与六便士 》","content":"\n# 《 月亮与六便士 》\n\n# 元数据\n\n\u003e [!abstract] 月亮与六便士\n\u003e - ![ 月亮与六便士|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/212/839212/t7_839212.jpg)\n\u003e - 书名： 月亮与六便士\n\u003e - 作者： 威廉·萨默塞特·毛姆\n\u003e - 简介： 《月亮和六便士》的情节以法国后印象派画家高更的生平为基础，主人公原是位证券经纪人，人到中年后突然响应内心的呼唤，舍弃一切到南太平洋的塔希提岛与土著人一起生活，获得灵感，创作出许多艺术杰作。毛姆在小说中深入探讨了生活和艺术两者的矛盾和相互作用。\n\u003e\n\u003e - 出版时间 2016-07-01 00:00:00\n\u003e - ISBN： 9787535486585\n\u003e - 分类： 文学-世界名著\n\u003e - 出版社： 长江文艺出版社\n\n# 高亮划线\n\n## 第一章\n\n- 📌 记的辛辣批评，让人不禁有点可怜这倒霉蛋。他为顾全体面而有所保留的地方被冠以虚伪，他的委婉被直斥为谎言，他的沉默被贬为阴险。博士揪住书中作家说不过去，身为人子却情有可原的小毛病，责怪整个盎格鲁撒克逊民族 ^839212-4-3347\n    - ⏱ 2017-09-19 13:18:30\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%89%E6%95%88%E7%9A%84%E8%AF%BB%E4%B9%A6%E6%96%B9%E5%BC%8F":{"title":"有效的读书方式","content":"\n有效的读书方式是关注`知识点`  \n\n简而言之，就是你在阅读一本书的时候，所看到的、感兴趣、有价值的 Data 或者 Information。  \n\n当我们碰到这些知识点的时候，停下来，把它们弄清楚，彻底弄懂它们的前因后果 —— 这才是有效的读书方式。\n\n也就是说，将它们从 D I 的阶段 ，提高、升华到 K。\n\n否则，读再多的书，也没有用，**你只是不断地在被灌输，作者自己的观点、逻辑和思维而已。**\n\n基本的原则是：**[[主题阅读]]**\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%89%E7%8A%B6%E6%80%81%E7%BB%84%E4%BB%B6":{"title":"有状态组件","content":"\n# 有状态组件\n\n由于灵巧组件面向业务，所以相对于展示组件来说，其功能更为丰富、复杂性更高，而复用度更低。**展示组件专注于组件本身特性**，**灵巧组件更专注于组合组件**。\n\n## 容器组件\n\n容器组件几乎没有复用性，它主要用在两个方面：**拉取数据与组合组件**。\n\n```js\nclass CardListContainer extends React.Component {\n\tstate = { cards: [] };\n\n\tasync componentDidMount() {\n\t\tconst response = await fetch(\"/api/cards\");\n\n\t\tthis.setState({ cards: response });\n\t}\n\n\trender() {\n\t\treturn \u003cCardList cards={this.state.cards} /\u003e;\n\t}\n}\n```\n\n## **高阶组件**\n\nReact 的官方文档将高阶组件称为 React 中**复用组件逻辑的高级技术**。高阶组件本身并不是 React API 的一部分，它是一种基于 React 的组合特性而形成的设计模式。简而言之，高阶组件的参数是组件，返回值为新组件的函数。\n\n### **抽取公共逻辑**\n\n用一个常见的例子来说，就是登录态的判断。  \n还有一个非常经典的场景就是**页面埋点统计**。\n\n### **链式调用**\n\n由于高阶组件返回的是一个新的组件，所以链式调用是默认支持的。\n\n```js\n// 函数调用方式\n\nclass RawUserPage extends React.Component {\n\n  ...\n\n}\n\nconst UserPage = checkLogin(PV('用户页面')(RawUserPage))\n\n// 装饰器调用方式\n\n@checkLogin\n\n@PV('用户页面')\n\nclass UserPage extends  React.Component {\n\n  ...\n\n}\n\n\n```\n\n### **渲染劫持**\n\n渲染劫持可以通过控制 render 函数修改输出内容，常见的场景是显示加载元素\n\n```js\nfunction withLoading(WrappedComponent) {\n\treturn class extends WrappedComponent {\n\t\trender() {\n\t\t\tif (this.props.isLoading) {\n\t\t\t\treturn \u003cLoading /\u003e;\n\t\t\t} else {\n\t\t\t\treturn super.render();\n\t\t\t}\n\t\t}\n\t};\n}\n```\n\n### 缺点\n\n- **丢失静态函数**。由于被包裹了一层，所以静态函数在外层是无法获取的。解决方案: `hoist-non-react-statics`\n- **refs 属性不能透传**。ref 属性由于被高阶组件包裹了一次，所以需要进行特殊处理才能获取。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%9F%E6%9D%83":{"title":"期权","content":"\n# 期权\n\n# 参考文章\n\n[# 赚点确定性的小钱，聊聊卖期权](https://mp.weixin.qq.com/s?__biz=MzAxNDE0MjA2OQ==\u0026mid=2650422624\u0026idx=1\u0026sn=4be8c41ab22d808a09283906010943f8\u0026chksm=8399427ab4eecb6cac68d9ff263977dfcf245aae4d68e2a8288d6dae93604181c977e25e29d5\u0026scene=21#wechat_redirect)\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2":{"title":"未来简史","content":"\n# 未来简史\n\n未来是怎样的\n\n我们应该如何面对未来\n\n情感不是人类独有的特质，而是所有哺乳动物（同时包括所有鸟类，可能包括某些爬行动物，甚至还包括鱼类）所共\n\n人类天生就是平等主义者，而不平等的社会必会招致怨恨和不满，绝不可能运作顺畅。 =》 不患寡而患不均\n\n人类编织出一张意义的网，并全然相信它，但这张网迟早都会拆散，直到我们回头一看，实在无法想象当时怎么可能有人真心相信这样的事。\n\n在文字出现之前，故事受限于人类大脑的能力，不能讲得太复杂，否则就没人能记得。但文字出现之后，忽然人类可以开始创造长篇复杂的故事，不再单靠人类大脑。正因为如此，文字让人能够以算法的方式组织整个社会。\n\n人类信仰 =\u003e 经济主导 =\u003e 人文情怀 =\u003e 人工智能\n\n## 读后感\n\n## 时间线\n\n2021.1.27 第八章\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E4%BB%8E%E6%99%BA%E4%BA%BA%E5%88%B0%E6%99%BA%E7%A5%9E":{"title":"《 未来简史：从智人到智神 》","content":"\n# 《 未来简史：从智人到智神 》\n\n# 元数据\n\n\u003e [!abstract] 未来简史：从智人到智神\n\u003e - ![ 未来简史：从智人到智神|200](https://weread-1258476243.file.myqcloud.com/weread/cover/44/YueWen_852290/t7_YueWen_852290.jpg)\n\u003e - 书名： 未来简史：从智人到智神\n\u003e - 作者： 尤瓦尔·赫拉利\n\u003e - 简介： 进入21世纪后，曾经长期威胁人类生存、发展的饥荒和战争基本被攻克，智人面临着新的待办议题：永生不老、幸福快乐和成为具有“神性”的人类。在解决这些新问题的过程中，科学技术的发展将颠覆我们很多当下认为无需佐证的“常识”，比如人文主义所推崇的自由意志将面临严峻挑战，机器将会代替人类做出更明智的选择。 更重要的，当以大数据、人工智能为代表的科学技术发展的日益成熟，人类将面临着从进化到智人以来*的一次改变，绝大部分人将沦为“无价值的群体”，只有少部分人能进化成特质发生改变的“神人”。 未来，人类将面临着三大问题：生物本身就是算法，生命是不断处理数据的过程；意识与智能的分离；拥有大数据积累的外部环境将比我们自己更了解自己。如何看待这三大问题，以及如何采取应对措施，将直接影响着人类未来的发展。\n\u003e - 出版时间 2017-01-10 00:00:00\n\u003e - ISBN： 9787508672069\n\u003e - 分类： 社会文化-社科\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第1章 人类的新议题\n\n- 📌 在远古农业社会，人类暴力导致的死亡人数占死亡总数的15%；而在20世纪，这一比例降至5%；到了21世纪初，更是只占全球死亡总数的约1%。[插图] 2012年，全球约有5600万人死亡，其中62万人死于人类暴力（战争致死12万，犯罪致死50万）。相较之下，自杀的人数有80万，死于糖尿病的更是有150万。[插图]现在，糖可比火药更致命。更重要的是，已经有越来越多的人觉得不可能发生战争。当政府、企业和个人规划不远的将来时，多半不会考虑战争的可能性，这是史无前例的。核武器发明之后，超级大国之间如果还想挑起战事，无异于集体自杀的疯狂举动，于是逼着全球最强大的几个国家找出和平的替代方案来解决冲突。同时，全球经济导向也已经从物质经济转变为知识经济。过去主要的财富来源是物质资产，比如金矿、麦田、油井，现在的主要财富来源则是知识。发动战争虽然能抢下油田，却无法霸占知识。因此，随着知识成为最重要的经济资源，战争能带来的获利已经下降；可能发生战争的地方越来越局限在世界的特定区域（比如中东和中非），这些地方仍然维持着旧式的物质经济。卢旺达在1998年入侵邻国刚果（金），抢占该国丰富的钶钽铁矿，这种矿石是生产手机和笔记本电脑不可或缺的重要原料，而刚果（金） ^852290-3-19627\n    - ⏱ 2021-01-02 21:47:45\n\n## 第4章 虚构的力量\n\n- 📌 虚构故事本身并没有错，而且有时还有其必要性。如果没有货币、国家或公司等人人接受的故事，复杂的人类社会就不可能正常运转。要先让大家都相信了同样的虚构规则，我们才可能一起踢一场足球；再让大家都相信一些类似的虚构故事，才能让市场或法庭真正发挥作用。然而，这些故事只是工具，不该成为目标和标准。一旦我们忘了这些只是虚构的，就会开始与现实渐行渐远。于是，可能只是为了“给公司赚很多钱”或是“保护国家利益”，就让我们掀起无边战火。公司、货币和国家，都只存在于我们的想象之中，是人类发明了这些概念，好让它们为人类服务；为什么最后反而是人类为这些概念服务，甚至牺牲性命呢？ ^852290-8-19514-19792\n    - ⏱ 2021-01-25 11:33:04\n\n## 第6章 与“现代”的契约\n\n- 📌 保护环境是个很好的主意，但如果有人连房租都交不起，对于没钱的恐惧就会远远高过对冰层融化的担心 ^852290-10-15985-16031\n    - ⏱ 2021-01-25 16:17:57\n\n# 读书笔记\n\n## 第5章 科学与宗教之争\n\n### 划线评论\n\n- 📌 更重要的是，科学如果想要打造出可行的人类制度，必然需要宗教协助。虽然科学家能够研究世界如何运转，却没有科学方法告诉我们人类该做些什么。 ^16142247-7nCaCjz5K\n    - 💭 我一直认为宗教带给人的信仰，引人向善都极好的\n    - ⏱ 2021-01-25 11:40:11\n   \n\n## 第6章 与“现代”的契约\n\n### 划线评论\n\n- 📌 我们可能觉得追求增长再自然不过，但这只是因为我们生活在现代世界，过去可不是这样的。 ^16142247-7nClviNdx\n    - 💭 任何现象都要结合着无形的网来看\n    - ⏱ 2021-01-25 14:26:25\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%AC%E5%BA%93%E8%87%AA%E5%8A%A8%E5%90%8C%E6%AD%A5%E5%88%B0-github":{"title":"本库自动同步到 github","content":"\n# 本库自动同步到 github\n\n主要使用[[Obsidian Git]] 插件\n\n但是其他作者有因为只需要每天备份发布一次就够了，所以采用自动化运行的工具 ,自动触发一下命令就好了\n\n```shell\ncd /Users/cdd/Works/Obsidian\ngit pull\ngit add .\ngit commit -m \"auto by keyboard\"\ngit push\n```\n\nmac上常见的工具有：[Keyboard Maestro](https://garden.oldwinter.top/Keyboard-Maestro)、hazel等\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%AC%E5%BA%93%E8%AE%BE%E8%AE%A1%E5%93%B2%E5%AD%A6%E5%8F%8A%E7%90%86%E5%BF%B5":{"title":"本库设计哲学及理念","content":"","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%AC6-%E9%A2%84%E6%9C%9F38K-%E6%9E%B6%E6%9E%84":{"title":"本 6-预期 38K-架构","content":"\n# 本 6-预期 38K-架构\n\n## 技术栈\n\n- 熟悉 React 和 Vue 及服务端渲染，了解部分核心原理及框架编码性能优化方式\n- 熟悉浏览器工作原理、关注最新安全策略、性能优化手段、WEB 安全漏洞防御\n- 熟悉 Git 工作流程及常用命令，有一定的 Shell 编写工具脚本能力\n- 熟悉 TCP. UDP. HTTP、HTTP2、HPACK 等协议\n- 熟悉 Linux 系统及命令、PHP 语言、Golang、Nginx 服务器、Docker 技术\n- 具备 Gitlab CICD 实践能力，熟悉常用配置 yml 语法及 Gitlab Runner 使用\n\n## 近期工作经历\n\n2019/12-至今  \n山月科技公司  \n金融 企业性质：民营规模：2000+人  \n职务：高级前端  \n职责：主要负责产业山月科技公司 Saas 平台的框架搭建及跟随业务变动进行合  \n理调整（支持多租户定制开发.换肤、定制布局等）开定期参与技术培训及闭队分享 参与前端开发流程规范制定、代码规范制定、Git commit 规范以及 CodeReview，以及初中级工程师进行指导。并参与\\*\\*\\*业务开发和维护。\n\n## 项目经历：\n\n项目名称：搭建并完善山月科技公司 Saas 平台  \n项目时间：2020-1 月-至今  \n技术栈 平台门户(Next.js)、运营系统(Vue.js)、小程序、Appflutter  \n项目架构： (主要介绍下平台门户）\n\n1. 因考虑 SEO 和自建同构渲染成本我们使用 Nextjs 进行开发以及参照 Readt 发展方向大部分组式+hooks 开发来复用逻辑\n2. 采用设置环境变量及基于 webpack 的 resolve.extensions 将环境变量动态设置为定制组件后缀名实现多租户和多主题定制开发（换肤及租户布局定制）\n3. 换肤采用 CSS 属性及基于主题色调整 lighten、darken、alpha 等转换而来\n4. 使用 Feature Flag(Toggle)代替 Feature Branches,有效避免分支维护及代码冲突和加快产品迭代速度\n5. 考虑应用公共状态只有 User、Config、Theme 等使用新版本 Context 来处理公共状态（目前也探索组件树内外共享全局状态的方案 valtio)\n6. 使用虚拟滚动表格解决大数据量表格性能问题使用动态创建 Web Worker 对大表格计算进行优化\n7. 使用 useRef 解决请求时序错乱问题，也探索了 AbortController 中断之前发出的请求省去浏览器解析 response\n8. 采用搭配使用 git pre-commit hook、Eslint . husky . lint-staged. prettier 来统一代码风格，避免 CodeRevicw 在代码风格上浪费时间\n9. 使用 immer 解决复杂 state 局部更新的性能开销问题，使用 XState 状态机来解决复杂组件开发  \n技术成果：平台服务端和客户端渲染支持 wcbp 格式图片，使 CDN 流量减少 40%，规范开发流程及实现开发环境 Gitlab CICD，减少成员犯错几率，提升 20%开发效率\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%AF%E8%AF%AD%E5%8D%A1":{"title":"术语卡","content":"\n#卡片/术语卡\n\n## 简介\n\n：xxxxx\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%B8%89%E5%A4%A7%E5%AE%9A%E5%BE%8B":{"title":"机器人三大定律","content":"\n# 机器人三大定律\n\n机器人三大定律，一般指机器人学三定律，最早出现于 1942 年阿西莫夫所著短篇小说《环舞》。  \n第一定律，机器人不得伤害人类个体，或者目睹人类个体将遭受危险而袖手不管；  \n第二定律，机器人必须服从人类给予它的命令，当该命令与第一定律冲突时例外；  \n第三定律，机器人在不违反第一定律、第二定律的情况下要尽可能保护自己的生存。\n","lastmodified":"2023-09-18T14:54:47.56645461Z","tags":null},"/%E6%9D%8E%E5%85%89%E8%80%80%E8%AE%BA%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%96%E7%95%8C":{"title":"《 李光耀论中国与世界 》","content":"\n# 《 李光耀论中国与世界 》\n\n# 元数据\n\n\u003e [!abstract] 李光耀论中国与世界\n\u003e - ![ 李光耀论中国与世界|200](https://weread-1258476243.file.myqcloud.com/weread/cover/49/YueWen_277542/t7_YueWen_277542.jpg)\n\u003e - 书名： 李光耀论中国与世界\n\u003e - 作者： 李光耀口述\n\u003e - 简介： 李光耀一讲话，各国总统、总理、外交官和企业首席执行官们都会洗耳恭听。他是新加坡的“国父”，在1959年至1990年担任新加坡总理，在50余年的世界舞台生涯中砥砺了智慧。他几乎是独当一面地领导了新加坡的转型，让新加坡的经济取得了西方式的成功。李光耀对东西方的地缘政治问题有自己独到的见解。从尼克松到奥巴马，历届美国总统都非常欢迎他访问白宫；从撒切尔到布莱尔，历任英国首相都肯定他的智慧；从新闻集团创始人默多克到埃克森美孚首席执行官蒂勒森，商业领袖们都对他的成就点头赞许。\n\u003e\n\u003e - 出版时间 2013-09-01 00:00:00\n\u003e - ISBN： 9787508640143\n\u003e - 分类： 政治军事-政治\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 中国领导人真的准备取代美国，成为亚洲乃至世界的第一大国吗？\n\n- 📌 中国与其他新兴国家不同，中国想按照自己的方式被世界接受，而非作为西方社会的荣誉会员。[插图] ^277542-8-1688-1731\n    - ⏱ 2022-02-17 16:50:10\n\n## 中国实施民族复兴的主要障碍是什么？\n\n- 📌 中国的国内生产总值的绝对额将不可避免地赶上美国，但其创新能力可能永远无法与美国匹敌，因为它的文化不鼓励进行思想的自由交流和碰撞。不然如何解释一个人口4倍于美国的国家（可能中国人才的数量也是美国的4倍）却少有技术突破呢？ ^277542-11-1024-1133\n    - ⏱ 2022-02-17 17:12:49\n- 📌 。中国在前进的道路上存在的劣势和需要克服的障碍比大多数观察人士意识到的都要多。在中国的治理问题中，最主要的问题之一就是缺少法治，在巨大的国家里，仍有一些黑恶势力在当地横行霸道。文化习惯束缚人们的想象力和创造力，而奖励顺从； ^277542-11-3589-3700\n    - ⏱ 2022-02-17 17:14:40\n\n## 中国会成为西方式民主国家吗？\n\n- 📌 不会。中国不会成为一个自由的西方式民主国家，否则就会崩溃。对此，我相当肯定，中国的知识分子也明白这一点。如果你认为中国会出现某种形式的革命以实现西方式民主，那你就错了。中国人要的是一个复兴的中国。 ^277542-15-432-530\n    - ⏱ 2022-02-17 17:16:47\n- 📌 但是现在中国人已经开始谈人权问题，而且他们认识到如果他们想得到世界的尊重，如果想在世界舞台赢得一定的地位，不仅仅在发达国家，甚至在发展中国家，那么他们就不会用野蛮的方式对待自己的人民。 ^277542-15-1578-1670\n    - ⏱ 2022-02-17 17:17:56\n\n## 应该如何评价习近平？\n\n- 📌 习近平性格内敛，不是说他不与你交流，而是说他不会显露自己的好恶。无论你是否说了一些惹他生气的话，他的脸上总是洋溢着令人愉悦的微笑。与胡锦涛相比，他更有钢铁般的意志。胡锦涛在上升过程中没有承受过习近平所忍受的那些痛苦。[插图]我会把习近平归类于纳尔逊·曼德拉这一级的人物，他们有强大的情感自制力，不会让个人的不幸和苦难影响其判断。换句话说，他让人印象深刻。[插图] ^277542-17-562-915\n    - ⏱ 2022-02-17 17:19:30\n\n## 美国的主要优势是什么？\n\n- 📌 美国经济出类拔萃的根源在于美国人富有企业家精神。企业家和投资者认为风险和失败都是自然的，是成功的必由之路。当他们失败时，他们能够做到在哪里跌倒、在哪里爬起来，一切重新开始。 ^277542-20-822-908\n    - ⏱ 2022-02-17 17:22:27\n- 📌 美国文化与东方文化之间的一个根本区别就是个体在社会中的地位不同。在美国文化中，个体的利益是主要的。这就使得美国社会具有非同一般的竞争力，获得了更大的竞争优势和更杰出的成就 ^277542-20-2488-2573\n    - ⏱ 2022-02-17 17:23:38\n- 📌 美国始终占据优势，因为它的社会是一个兼容并包的社会，而且英语是国际性语言，使得美国很容易吸引外国人才。与中国相比，美国的优势非常明显，因为它使用的是英语，这就使得美国能够从亚洲和欧洲吸引数以百万计的掌握英语的外国人才 ^277542-20-2815-2923\n    - ⏱ 2022-02-17 17:23:55\n\n## 美国政府的哪些方面最让人感到忧虑？\n\n- 📌 当你实行大众民主时，要赢得选票，你就不得不给选民提供更多的好处。而且如果你想在下一届选举中打败对手，承诺给选民的好处比以前还要多。因此，这就类似于拍卖过程中不断加价，而这样做的代价、债务却留给了下一代人，让他们承担。 ^277542-21-436-544\n    - ⏱ 2022-02-17 17:25:11\n\n## 美国文化最让人感到忧虑之处是什么？\n\n- 📌 亚洲人到美国后，很多人都会对美国的社会状况感到困惑和不安，例如：法律和秩序失去了控制；骚乱、毒品、枪支、抢劫、强奸和犯罪非常普遍；贫富差距显著；个人权利过度膨胀，对整个社会造成了损害；美国法律疑罪从无的理念过度保护人权，导致罪犯经常逃脱法律制裁……美国对贩毒者和吸毒者的人权的过度保护危害了整个社会的利益，涉毒犯罪猖獗。学校也受到了影响，在学生群体中，未成年人犯罪率很高，暴力行为普遍，辍学率高，纪律性和教学质量低下，结果培养了一大批没有竞争力的人。因此，这就形成了一个恶性循环。[插图] ^277542-22-1446-1687\n    - ⏱ 2022-02-17 17:36:48\n\n## 有效的政府需要“守护者”吗？\n\n- 📌 要想建立高效的政府，你必须选择优秀的人担任政府职务。在过去40年间，我观察到即便一个国家的政体落后，但如果由优秀的、强有力的领导人掌舵，政府还是令人满意的，能取得相当大的进步。 ^277542-23-1272-1360\n    - ⏱ 2022-02-17 17:39:52\n\n## 美国有欧洲化的风险吗？\n\n- 📌 我不希望新加坡人效仿美国人心安理得地依赖救济过日子，而是希望新加坡人学习美国的自强文化。这种文化特质使美国诞生了很多伟大的企业家，他们有魄力、有活力、有勇气创立和调整他们的企业，因此也就改变了美国经济，在这一点上，美国人比欧洲人和日本人做得好 ^277542-24-1324-1445\n    - ⏱ 2022-02-17 17:42:18\n\n## 为应对中国崛起，美国政策与行动应该如何调整？\n\n- 📌 美国人的文化优越感使美国很难在这方面进行调整，美国人相信他们的理念具有普世价值，比如个体至上的理念、无拘无束的言论自由。其实并非如此，过去不是，现在也不是。实际上，美国社会之所以能在这么长的时间内维持繁荣，并不是这些理念和原则的功劳，而是因为某种地缘政治意义上的运气、充足的资源、大批移民注入的能量、来自欧洲的充裕的资本和技术，以及两个大洋使美国免受世界冲突的影响。 ^277542-29-507-690\n    - ⏱ 2022-02-17 17:56:35\n\n## 在应对中国崛起的过程中，美国应该避免采取哪些政策与行动？\n\n- 📌 美国人权组织抨击中国，美国国会及美国政府以中国践踏人权、出售导弹技术为名威胁取消中国的贸易最惠国待遇……他们忽视了两国的文化、价值观及历史差异，使双边关系的战略考量服从于美国的国内议程。 ^277542-30-721-814\n    - ⏱ 2022-02-17 17:57:47\n\n## 印度的民主治理体制给其长远发展前景带来了哪些限制？\n\n- 📌 印度的发展速度是由其宪法、种族结构、选举模式以及由此产生的联合政府决定的，而这些因素都会加大决策难度。 ^277542-35-902-953\n    - ⏱ 2022-02-18 10:19:59\n\n## 印度的文化给其长远发展前景带来了哪些限制？\n\n- 📌 如果一个社会不重视培养优秀人才，使其获得最好的发展，我是不赞成的；如果一个封建社会等级森严，你的出身就决定了你在这个等级制度中的地位，我也是不赞成的。而这两点在印度的种姓制度中都得到了充分体现。 ^277542-36-782-879\n    - ⏱ 2022-02-18 10:44:52\n\n## 当前，印度经济有哪些优势？\n\n- 📌 印度的私营部门比中国的私营部门发展水平高……与中国公司相比，印度的公司治理模式国际化水平高、资本回报率高，而且印度资本市场较透明，运作状况良好。 ^277542-37-433-505\n    - ⏱ 2022-02-18 10:47:53\n- 📌 与中国相比，印度拥有比较强大的银行体系和资本市场。印度的制度比较强，尤其是法律制度较为完善，有利于为知识产权的形成与保护提供一个更好的环境 ^277542-37-639-708\n    - ⏱ 2022-02-18 10:48:06\n\n## 长远来看，印度经济面临哪些挑战？其长远发展前景如何？\n\n- 📌 印度不同的城市之间缺乏快速连通性……一旦印度的公路、港口、铁路等基础设施到位并削减繁文缛节，它不仅能在信息技术产业创造就业机会，还能在制造业和其他一切产业全面促进就业。工作机会越来越多，整个国家将焕然一新 ^277542-38-2054-2156\n    - ⏱ 2022-02-18 17:39:04\n\n## 在今后10年中，印度经济前景与中国相比如何？\n\n- 📌 然而，为什么中国的和平崛起会引发其他国家的担忧，而印度的发展则不会呢？是因为印度是一个存在多种政治力量的西方式民主国家、形成了一个内部相互制衡的体系吗？很有可能是这样，尤其是印度政府往往是由一二十个政党组成的联合政府…… ^277542-39-1151-1261\n    - ⏱ 2022-02-18 17:43:45\n\n## 印度的民主模式对亚洲其他国家的意义有多大？\n\n- 📌 如果中国的政治架构不进行调整以适应高增长率引发的社会变化，那么印度就会占据优势，因为从长远来看，印度的政治体制更加灵活 ^277542-40-1276-1335\n    - ⏱ 2022-02-18 17:50:11\n\n## 在亚洲，印度会成为中国的战略性对抗力量吗？\n\n- 📌 印度军队（尤其是海军）成功实现了现代化，有能力维护自身安全。虽然中国在缅甸和巴基斯坦各建一个港口，但印度仍将在很长一段时间内主导印度洋地区 ^277542-41-1569-1638\n    - ⏱ 2022-02-18 17:58:18\n\n## 伊斯兰极端主义对西方构成了什么威胁？\n\n- 📌 我们现在面对的是一个在人类文明史上从未出现过的新形势，因为存在这样一群人，他们为了伤害别人，不惜毁灭自己。在他们之前，只有泰米尔伊拉姆猛虎解放组织会这样做，但该组织有明确的奋斗目标，那就是在斯里兰卡为泰米尔人建立一个家园。伊斯兰极端分子的目标却不同，因为他们是为了伊斯兰的宗教信仰而战 ^277542-44-769-911\n    - ⏱ 2022-02-18 18:01:01\n- 📌 伊斯兰主义没有什么问题，但当前的伊斯兰极端主义却是个问题。如果没有伊斯兰国家，石油供应就会出现问题，但拥有石油资源的伊斯兰国家容易滋生不稳定因素。伊斯兰主义、石油与大规模杀伤性武器结合在一起，无异于一个重磅炸弹……伊朗如果获得核武器，必将打破地缘政治均势，中东地区的其他国家也将要求发展核武器，这就增加了用于制造大规模杀伤性武器的核燃料落入恐怖分子之手的概率。 ^277542-44-1720-1900\n    - ⏱ 2022-02-18 18:51:42\n\n## 国民经济增长与国民竞争力的主要驱动因素有哪些？\n\n- 📌 一个民族的生活标准取决于很多基本因素：第一，它的资源总量与其人口总数的对比情况；第二，技术与工业发展水平；第三，教育培训水平；第四，文化、纪律和劳动力水平。 ^277542-54-448-526\n    - ⏱ 2022-03-04 15:54:25\n- 📌 一个国家人力资源的质量是决定国家竞争力最重要的因素。一个民族的创新能力、企业家精神、团队合作精神以及职业道德使他们在竞争中占据明显优势。[插图]在这种竞争中，有三个关键性特征，即企业家精神、创新和管理。第一个特征是发现新机会并勇于冒险的精神，第二个特征是创造出能够增加价值的新产品、新流程，第三个特征是良好的管理。要实现增长，企业管理者必须开拓新市场、创造新的营销渠道。[插图] ^277542-54-1076-1506\n    - ⏱ 2022-03-04 15:54:16\n- 📌 每个人都知道上海人非常聪明、机智，但很少有人知道为什么。这是因为在150多年里，自从成为通商口岸，上海就吸引了来自长江三角洲、浙江、江苏以及其他省份的人，这些人雄心勃勃、精力充沛且富有才华，网罗人才数量达两三亿 ^277542-54-4771-4876\n    - ⏱ 2022-03-04 15:57:36\n\n## 民主的风险有哪些？\n\n- 📌 只要你搞这种一人一票的模式，那么最容易煽动民众的事情就是做出一些简单的、煽情的呼吁，而不是承诺促进经济发展与增长或承诺其他民众不甚了解的事情，只需在一些简单的事情上做出承诺，比如种族自豪感、语言、宗教和文化。 ^277542-71-691-795\n    - ⏱ 2022-03-06 14:45:19\n\n## 您对社会进步之源的看法如何影响了您的战略思维？\n\n- 📌 德国和日本之所以能实现复苏，其中一个原因就在于战败后，它们的资本家、经理人、执行官、工程师和工人等都围绕着同一个目标而奋斗，即让他们的国家重新站稳脚跟。[插图] ^277542-81-2836-2913\n    - ⏱ 2022-03-06 15:21:14\n\n## 您对于社会停滞或倒退的观点如何影响了您的战略思维？\n\n- 📌 曾几何时，英国人非常擅长发明，取得了很多成果，包括蒸汽机、纺织机和电动机，他们在科学领域赢得了很多诺贝尔奖。然而他们没有将成果投入商业化应用，为什么英国人缺乏这种把创新进行商业化应用的能力呢？我认为这要归因于他们的文化。在长达200年的时间里，这个老牌的帝国形成了一种尊重历史悠久的富人家族和地主乡绅的社会氛围，而那些刚刚富起来的家族通常会受到一定的蔑视。聪明的人都渴望从事需要专业知识和技能的职业，比如律师和医生，希望在这些工作中获得成功，从而被别人羡慕，因为这些职业只需动用脑力、双手可以干干净净的，不像工程师或工人那样必须努力工作、双手脏兮兮的。英国的上流社会也不乐于接纳新富阶层，新富阶层的子女在读完公立学校和大学之后，才有机会受到社会欢迎，而到时他们的家族也变成了具有一定历史的富人家族……一个社会的环境和文化决定了一个民族或者某些社会成员的开拓创新精神……美国社会很注重这种开拓创新精神，其中有四个显著特征：（1）国家注重个人独立和自力更生；（2）尊重创业人员；（3）能接受创业和创业过程中的失败；（4）对收入差距大比较宽容。 ^277542-82-892-1361\n    - ⏱ 2022-03-06 15:23:27\n\n## 一个成功的领导人应该具备哪些品质？\n\n- 📌 我断定在所有制度中，荷兰皇家壳牌集团的制度是最好的。壳牌的人才评估系统把人的特质归结为三种：强大的分析能力，合理把握事实的能力，以及善于总结原则并关注基本事实的能力。 ^277542-83-1742-1825\n    - ⏱ 2022-03-06 15:24:39\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9D%8E%E5%BD%A6%E5%AE%8F":{"title":"李彦宏","content":"\n# 李彦宏\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9D%8E%E5%BD%A6%E5%AE%8F-%E6%99%BA%E8%83%BD%E4%BA%A4%E9%80%9A7%E8%AE%B2":{"title":"李彦宏-智能交通 7 讲","content":"\n# 李彦宏-智能交通 7 讲\n\n#input\n\n## Meatdata\n\n- author： [[李彦宏]]\n- link：[李彦宏·智能交通 7 讲](https://www.dedao.cn/course/article?id=Q8dpgOa54NZMVzmg1jKByzxkwYm2Rl)\n- tag：\n- date: [[2022-04-21]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n## 闪念\n\n### 自动驾驶的路线\n\n#### **单车智能**\n\n就是在车上装很多的传感设备，比如激光雷达、毫米波雷达等，目的是让车感知一切，训练汽车在极端场景下也能及时作出反应，安全驾驶。现阶段，美国的[[特斯拉]]公司和谷歌旗下的 [[Waymo]] 采取的就是这一路线。\n\n#### 车路协同\n\n简单讲，它比单车智能多了路端的感知、决策系统，多了车、路、人之间的交互联动。  \n立足长远是说，车路协同能够解决未来自动驾驶普及的难题；兼容当下指的是，车路协同还可以解决当下存在的一些交通难题。\n\n##### 优势\n\n- 首先是安全。单车智能很容易因为看不见、看不清而发生事故。而车路协同可以充当自动驾驶汽车的“眼睛”，帮助车辆感知视野盲区的信息。\n- 成本。如果将部分自动驾驶功能转移到路端，既可以补齐单车智能的短板，又可以大规模的降低成本。\n- 推动自动驾驶的商业化落地。车路协同这个技术方案，具有独特的中国优势。中国每年在交通基础设施上的投入达到万亿元的规模，在车路协同的行业标准、核心技术、全产业链布局方面也具备优势，中国有望在全球率先实现 L4 到 L5 级自动驾驶的大规模商业化落地。\n\n##### 缺点\n\n- 数据安全问题。设想是通过智能交通运营商来解决这个问题。\n\n### 自动驾驶提升交通安全\n\n- 事故大多都是人为因素。先来看两个数字：一个是美国公路安全管理局公布的，94%的交通事故是人为原因导致的，包括注意力不集中、决策失误、疲劳驾驶、醉酒驾驶等。中国公安部也公布过一个数字，人为因素造成的交通事故比例占到 90%。\n- 在“8”字形的道路场景当中，14 辆车中加入 1 辆自动驾驶的车，就能使平均车速提高一倍。原因是，自动驾驶汽车通过与前面的汽车之间保持缓冲，减少刹车次数，从而提升了车流的通行速度。\n- 如果越来越多的人选择自动驾驶出租车，而不是私家车出行。那么，由于人为失误导致的交通事故、道路拥堵等，都会大幅度减少。\n\n### 信控：让路口通行更高效\n\n#### “灯看车” 效果并不理想\n\n- 输入给智能信控系统的数据，不准确、也不全面。常用的地磁检测受长度的影响，同时车的多样式也有影响\n- 系统在计算时间的时候，仅仅考虑了单个路口，而不是对某个路段、某个区域，甚至整个城市所有的路口做全盘考虑。\n\n#### 缓解拥堵\n\n- 动态限速。很多人都觉得，车速快，通行效率就高。其实并不是这样的，在高峰时段，不做限速反而可能更容易造成拥堵。中国工程院院士郭仁忠曾经举过一个例子，当车辆通过某个信号灯的路口时，限速 30 公里每小时，它的通行效率比 40 公里每小时，甚至 60 公里每小时都要高。\n- 预约出行。每天出行者们几千万次的地图导航请求，就是一个个的预约行为。\n\n### 地图\n\n#### 高精地图\n\n地图如果要为自动驾驶服务，就不能像传统地图一样，只提供道路级导航信息，它还得精确到每一条车道上，也就是提供车道级别导航信息\n\n- 高精地图的精度要达到分米，甚至厘米级。\n- 采集的数据维度要更全。普通地图采集的主要是道路的数据，比如路的名字、方向、电子眼的位置等。跟普通地图相比，高精地图多了车道、防护栏、路灯、马路牙子等不同对象的数据。\n\n### 停车难\n\n根据行业数据，在中国只有 9％的城市停车位，使用率在 50％以上。你看，一边是一位难求，一边是大量车位闲置。资源错配导致了城市车位使用率的低下，也进一步加剧了城市停车难的困境。\n\n- 全量链接，就是把城市里尽可能多的停车位的信息都连到网上，做全量连接，让导航引导你去车位。\n- 精细管理。交管部门或者停车场的运营商，需要知道这个车是什么时候停进来的，停得规范不规范。\n- 自主泊车技术。我们开车的时间中有三分之一是用来找停车位的。通过自主泊车，这三分之一的时间完全可以省下来，因为车可以自己去找停车位。\n\n### 智慧高速\n\n- 智慧灯杆，大概每 30 米就有一个。这种灯杆有一套自动化照明系统，可以根据路面车流量情况，天气变化情况，自动调节亮度、色温。更重要的是，智慧灯杆它不只是用来照明的，还可以和能见度检测仪、专用摄像机、路面状态检测器、边缘计算设备等智能设备联动\n- 对已有的重要节点进行智能化改造，AI 技术替代重复性劳动，帮人来做信息筛选。被改造后的摄像头具备了图像识别能力，算法经过成千上万次的训练，能准确的识别出一些交通事件，比如高速路上有抛洒物，有车辆违规在高速路边停车，有事故发生了等等，然后将这些异常信息上报给管理人员。\n- 自由流收费，就是通过电子识别系统，对多条车道的车辆进行自动收费，司机就不用为了缴费减速、停车，通行效率就提升了。常见的自由流收费方式，一个是基于 ETC 的自由流收费，一个是基于北斗定位系统的自由流收费。\n- 全天候通行，38%的公路通行受阻是由恶劣天气造成。通过车路协同解决\n- 高速公路自动驾驶\n\n### MAAS-出行即服务\n\n它是一种出行服务的模式，呈现出来的就是一个平台，一个可供所有人使用的应用系统。一个城市的 Maas 平台，会把城市里所有类型的交通工具都整合起来，数据共享，统一调度，统一支付，统一管理。\n\n#### 难点\n\n- 公共交通是政府提供的基础公共服务，共享单车、网约车，背后是商业化运营的企业。更别说公共交通还各式各样，分别属于不同部门；一个稍大点儿的城市，共享单车、网约车也有好多家企业在做，要把这些都打通，难度可想而知。\n- 打通都是问题，各个平台之间数据资源还要开放共享，就更难了\n\n## 常青笔记\n\n- [[百度]]\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9D%AD%E5%B7%9E%E6%88%BF%E5%9C%B0%E4%BA%A7":{"title":"杭州房地产","content":"\n# 杭州房地产\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9E%84%E5%BB%BA%E4%BC%98%E9%9B%85%E7%9A%84%E7%9F%A5%E8%AF%86%E5%88%9B%E9%80%A0%E7%B3%BB%E7%BB%9F":{"title":"构建优雅的知识创造系统","content":"\n#学习类/学习/知识体系\n\n## Meatdata\n\n- author：\n- link： [构建优雅的知识创造系统](https://mp.weixin.qq.com/s?__biz=MzA3MzM0MjUyMQ==\u0026mid=2652149604\u0026idx=1\u0026sn=3c96ebfe992694e5c57affe9ef5ba33f\u0026chksm=84f0bc32b38735240509f604f8d8e50ab591a09290ca03d91960f174e1ea0448455b327e41a1\u0026mpshare=1\u0026scene=1\u0026srcid=07106LR3EnsU1As9E2FsxiJ7#rd)\n- tag：#\n- date: [[2021-12-31]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 在《学习六思》中我指出，知识管理不重要，重要的是掌握生成任意一个领域的知识体系的能力。\n- 当人们谈及知识管理，常常将其指向工具，如 Zotero、Endnote 等各类文献管理软件；又如印象笔记、为知笔记等各类笔记软件，再如 Wiki、Dropbox 等企业文件协同软件。将知识管理与效率工具混同在一起，这是知识管理最大的误区。\n- 人类的知识分为两部分，一部分是形式知识，它可以用正式的语言表述，包括语法陈述、数学表达式、技术规范、手册等。因此，这类知识可以在个体之间正式地且方便地进行传播。然而，除此之外，还有另外一类难以用正式语言表述的知识——暗默知识——更为重要。它属于植根于个体经验的个人知识，涉及像个人信念、视角及价值体系之类的无形要素。你可以管理既有知识，进行「组合」、「整合」与「集成」等操作；然而除此之外，你还有更重要的任务：生成新的知识，它们往往与「灵感」、「创意」和「想象力」相关。一个好的知识管理系统与一个好的知识创造系统不是一回事。这就是世界知识管理运动之父野中郁次郎的「知识创造论」。在野中郁次郎看来，\n- 知识是一种创造力量，它不仅存在于一个人的身上，也存在于通过各种相互作用与他人共享情境的、动态的「场」之中。不能创造「场」的组织也就不能创造新的知识。认知科学习惯将暗默知识（Tacit Knowledge）翻译为内隐知识。它来自英国哲学家波兰尼 1958 年的著作《个人知识》。之后，美国心理学家雷伯 (A.S.Reber) 在它基础上，做了大量研究，于 1967 年在著作《人工语法的内隐学习》中正式提出了内隐学习理论。如今，从内隐知识到内隐学习再到内隐认知，构成了当今认知科学的热门研究议题。形式知识可以管理；但暗默知识难以管理，它更多依赖创造者所处的「场」来生成。就像野中郁次郎所说，因此，我在教授心智学徒时，格外注重苏格拉底式的提问，以及一定是在我的书房授课，试图创造一个不同场，让学徒们领悟更多内隐知识，拥有自发生成自己的知识体系的能力。同样，在设计开智部落时，也是将所有同学扔到沉淀了大量优秀内隐模式的 Github 上，当大家看到高阶学习者如何提问、如何发起议题与关闭议题，慢慢地，就能生成更多知识。\n- 按照野中郁次郎的研究，生成新知识，暗默知识与形式知识的相互转换有四种模式\n- 层级目的卡片层级知识的最小单位，输入如原文摘抄，输出如读书卡片文件层级可用于交流的完整输出，如文章、论文、绘画文件或产品原型图项目层级涉及到多人或更长时间的系统输出，如图书或 APP 开发结合野中郁次郎等人的研究以及个人实践，我将知识创造分成三个层次。如下图所示：\n- 在卡片层级最大的误区是：分享。不少人误将卡片、文件和项目三个层级混为一谈，喜欢在卡片层级搞分享。这样每次撰写卡片时就增加了一个选择项：这张卡片我是该分享还是该存着自己看？增加的认知操作加大了认知负荷，从简单反应时变为选择反应时。所以尽可能在卡片层级少做分享。\n- 卡片写什么？你可以坚持每天写三张卡片：反常识卡、人名卡、术语卡。反常识卡是在拓展你的认知边界，人名卡与术语卡则是让你尊重知识源头的创造者。为什么说多数学习型社群是低效的？因为它们不符合认知科学原理。有的强调大牛讲座，有的强调订阅专栏，有的强调读书 / 听书 / 拆书，它们也许有些微价值，然而从大时间周期来看，是低效的甚至反科学的。你见过哪个大拿是听讲座听出来的或者只看书看出来的？所谓大拿，是因为有了与众不同的作品。而听讲座、订阅专栏这种行为无法大时间周期践行。那些知识，就好比听了很多别人的道理，多数是司机知识，对生成自己知识体系的帮助微不足道。\n- 而市面上的司机知识，则停留在卡尼曼的《思考，快与慢》这种水准。大家因为卡尼曼名气更大，诺奖得主嘛，极有可能只会去关注他一个人。然而一旦深入读完通识部落前三个月的这几本经典读物，几乎都明白了，很多大拿是跟卡尼曼反着来的。\n- 正如马奇所言，我们生活的世界重视现实的期望和清晰的成功，堂吉诃德两者皆无。但是尽管一个失败接着一个失败，他坚守愿景和使命。他坚韧不拔，因为他知道自己是谁。人才是最好的作品；成为自己，才是最好的奖赏，即使你在后人眼中，是向着风车冲刺的堂吉诃德。接着说说文件层级。先说说如何从卡片拼接为文件。卡片是素材，我不建议初阶学习者直接用自己的话来改写原作者的术语。因为此时你一知半解，急着用自己的知识体系去套另一个知识体系，同时急着用刚刚学会的术语去解决自己面临的现实问题，最终遭遇「知识的诅咒」。写诗之前先学会背诗。一旦发现自己不会一知半解，歪解作者愿意后，就可以用更多自己的话来解读，尝试将每张卡片，都表述为自己的话，未来可以直接使用在自己的作品中。举个例子，你可以像我一样，将马奇的一段金句，改写成可以直接在自己作品中引用的格式：\n- 阅读任意一本书，写八张卡片足矣：这本书的主题核心，就是最大的反常识卡，并且注意时间脉络。根据反常识，再补充三个证据—就产生三张术语卡；根据这些证据和案例，找出源头和提出术语的人是谁—产生一张人名卡，并且分析他为什么牛，有哪些作品，生平经历是什么；最后根据他写的非常震撼的话语—产生一张金句卡；行动卡是能够指导自己的行动的卡；最后还有一张任意卡，记录个人阅读感想一张反常识卡 + 三张术语卡 + 一张人名卡 + 一张金句卡 + 一张行动卡 + 一张任意卡，八张卡片可以囊括一本好书的核心内容。假设一张卡片 100 字，一篇千字文就出来了\n- 到了项目层级，才开始发生重心的转移，第一考量不再是个人战斗力，而是团队协同\n- 用柏拉图的话来说，知识不过是经过验证的真实信念。知识管理不仅包括管理既有的知识，更侧重生成新知识。 你需要从知识管理到知识创造，在卡片层级少分享多进行大时间周期的积累；在文件层级多分享，并可以像管理域名一样管理自己的知识创造，少用子文件夹多用搜索；在项目层级，你需要注重与人协同，采用树形结构创造知识，给每个项目创造一个优雅的 README 说明文件。\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9E%AA%E7%82%AE%E7%97%85%E8%8F%8C%E4%B8%8E%E9%92%A2%E9%93%81%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E7%9A%84%E5%91%BD%E8%BF%90%E4%BF%AE%E8%AE%A2%E7%89%88":{"title":"《 枪炮、病菌与钢铁：人类社会的命运（修订版） 》","content":"\n# 《 枪炮、病菌与钢铁：人类社会的命运（修订版） 》\n\n# 元数据\n\n\u003e [!abstract] 枪炮、病菌与钢铁：人类社会的命运（修订版）\n\u003e - ![ 枪炮、病菌与钢铁：人类社会的命运（修订版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/44/YueWen_854928/t7_YueWen_854928.jpg)\n\u003e - 书名： 枪炮、病菌与钢铁：人类社会的命运（修订版）\n\u003e - 作者： 贾雷德·戴蒙德\n\u003e - 简介： 荣获美国普利策奖、英国科普书奖！比尔·盖茨特别推荐作品！人类社会发展史的另类阐释，东西方文明差异的独特审视；美国普利策奖、比尔·盖茨特别推荐作品。为什么现代社会中的财富和权力的分配，是以今天这种面貌呈现，而非其他形式？为何越过大洋进行杀戮、征服和灭绝的，不是美洲、非洲的土著，而是欧洲人和亚洲人？各族群间的生活差异为何如此之大？ 对于现代人类、国家间的种种不平等现象，史学家往往存而不论，而在这部作品中，作者为许多大家熟悉以及想当然的答案赋予了截然不同的含义。在这部开创性的著作中，演化生物学家、人类学家贾雷德·戴蒙德揭示了事实上有助于形成历史最广泛模式的环境因素，从而以震撼人心的力量摧毁了以种族主义为基础的人类史理论。本书是理解人类社会发展史方面的一个重大进展，它记录了现代世界及其诸多不平等所以形成的原因，也是一部真正关于全世界各民族的历史，是对人类生活的完整一贯的叙述，具有很强的可读性。本书与戴蒙德的其他两部著作《崩溃》、《第三种黑猩猩》一起堪称为“人类大历史”。本书在2005年国外原版的基础上修订出版，新增“日本人乃何许人也”一章。\n\u003e - 出版时间 2016-07-01 00:00:00\n\u003e - ISBN： 9787532772322\n\u003e - 分类： 历史-世界史\n\u003e - 出版社： 上海译文出版社\n\n# 高亮划线\n\n## 第五章 历史上的穷与富\n\n- 📌 ：碳是生命的无所不在的基础材料，它的成分中含有很少量的放射性碳-14，而碳-14会衰变为非放射性同位素氮-14。宇宙射线不断地在大气中生成碳-14。植物吸收大气中的碳，其中碳-14和普遍存在的同位素碳-12保持着一种已知的几乎不变的比例（约1与100万之比）。植物中的碳接下去构成了吃这些植物的食草动物的躯体，也构成了吃这些食草动物的食肉动物的躯体。不过，这些植物或动物一旦死去，它们体内碳-14含量的一半每隔5700年衰变为碳-12，直到大约4万年后，碳-14含量变得很低而很难测出，也很难把它同受到少量的含有碳-14的现代材料的污染区别开来。因此，从考古遗址出土的材料的年代可以根据该材料内的碳-14与碳-12的比例计算出来。 ^854928-10-2569-2884\n    - ⏱ 2021-08-18 10:18:50\n\n## 第十一章 牲畜的致命礼物\n\n- 📌 病菌传播的最不费力的方式，就是等待着被动地传染给下一个受害者。有些病菌等待一个宿主被下一个宿主吃掉，就是这种策略的运用 ^854928-17-3678-3737\n    - ⏱ 2021-08-24 11:30:50\n\n## 第十三章 需要之母\n\n- 📌 粮食生产带来的定居生活使财产积累成为可能。不仅如此，由于另一个原因，粮食生产还在技术史上起了决定性的作用。它在人类进化中第一次使发展经济专业化社会成为可能，这种社会是由从事粮食生产的农民养活的不从事粮食生产的专门人员组成的 ^854928-19-21820-21931\n    - ⏱ 2021-08-25 10:36:08\n- 📌 澳大利亚是最小的一个大陆。澳大利亚大部分地区雨量稀少，物产贫乏，因此，就其所能养活的人口来说，它实际上就显然甚至更小。它也是一个最孤立的大陆。加之，粮食生产也从来没有在澳大利亚本地出现过。这些因素加在一起，就使澳大利亚成为唯一的在现代仍然没有金属制品的大陆。 ^854928-19-23413-23542\n    - ⏱ 2021-08-25 10:40:50\n- 📌 各大陆之间在面积、人口、技术传播的难易程度和粮食生产的开始时间等方面存在着差异，而这些差异又对技术的出现产生了种种影响，但所有这些影响都被夸大了，因为技术可以催化自身。欧亚大陆在开始时的巨大优势因此就变成了自1492年[插图]起的巨大的领先优势——其原因是欧亚大陆独特的地理条件，而不是那里的人特别聪明。我所认识的那些新几内亚人中就有潜在的爱迪生。不过，他们把自己的聪明才智用于解决适合自己情况的技术问题：不靠任何进口物品而在新几内亚丛林中生存的问题，而不是发明留声机的问题。 ^854928-19-24064-24385\n    - ⏱ 2021-08-25 10:41:41\n\n## 第十四章 从平等主义到盗贼统治\n\n- 📌 有一点应该是显而易见的，这就是酋长管辖地带来了对集中管理的、非平等主义社会来说带有根本性质的两难处境。从最好的方面说，它们可以提供个人无法承办的昂贵服务。从最坏的方面说，它们公然地在起着盗贼统治的作用，把实际财富从平民手中转移到上层阶级手中。这种高尚和自私的双重作用难分难解地联系在一起，虽然有些政府强调一种作用要大大多于强调另一种作用。盗贼统治者和英明政治家的区别，强盗贵族和公益赞助人的区别，只是程度不同而已：这只是一个从生产者那里榨取来的财物有多少被上层人物留下来的问题，是平民对把重新分配的财物用于公共目的喜欢到什么程度的问题。我们认为扎伊尔的蒙博托总统就是一个盗贼统治者，因为他把太多的财物（相当于几十亿美元）据为己有，而把太少的财物拿来重新分配（在扎伊尔没有可以实际使用的电话系统）。我们认为乔治·华盛顿是一个政治家，因为他把税款用于受到广泛赞誉的计划，而不是中饱总统的私囊。 ^854928-20-9985-10379\n    - ⏱ 2021-08-25 11:08:01\n- 📌 在现代国家中，乐于为国牺牲的思想由我们的学校、教会和政府大力灌输给我们公民，使我们忘记了它标志着同以往人类历史的彻底决裂。 ^854928-20-15603-15664\n    - ⏱ 2021-08-25 14:22:58\n\n## 第十五章 耶利的族人\n\n- 📌 尽管新几内亚的面积只有澳大利亚的十分之一，但由于新几内亚地处赤道附近，雨量充沛，地势高低错落和土壤肥沃，那里成了几乎同在澳大利亚一样多的哺乳动物和鸟类的生息之地。 ^854928-22-7305-7386\n    - ⏱ 2021-08-25 15:39:09\n- 📌 为什么澳大利亚没有发展出金属工具、文字和复杂政治结构的社会？一个主要的原因是那里的土著仍然以狩猎采集为生，而我们已在第十二到第十四章看到，这些发展在别处只有在人口众多、经济专业化的粮食生产者社会里出现。此外，澳大利亚的干旱、贫瘠和气候变化无常，使它的狩猎采集人口只能有几十万人。同古代中国或中美洲的几千万人相比，那意味着澳大利亚潜在的发明者要少得多，采用借助新发明来进行试验的社会也少得多 ^854928-22-15123-15317\n    - ⏱ 2021-08-25 16:02:36\n\n# 读书笔记\n\n## 第十四章 从平等主义到盗贼统治\n\n### 划线评论\n\n- 📌 我们由此知道，国家在公元前3700年左右出现于美索不达米亚，公元前300年左右出现于中美洲，2000多年前出现于安第斯山脉地区、中国和东南亚，1000多年前出现于西非。 ^16142247-7sOCGW3bj\n    - 💭 每次看到中国独立的出现在几个地区或洲之间，自豪感油然而生\n    - ⏱ 2021-08-25 11:16:47\n   \n\n# 本书评论\n\n## 书评 No.1\n\n好看，宏观角度带你看人类发展史。 ^16142247-7sQHZTuiL  \n⏱ 2021-08-26 20:11:08\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9F%8F%E6%8B%89%E5%9B%BE":{"title":"柏拉图","content":"\n在苏格拉底之后，柏拉图是在西方哲学史上影响力最大的古希腊哲学家。\n\n公元前429年，柏拉图出生在雅典的一个富裕贵族家庭。他在年轻的时候就展露出了不俗的才华，因此被希腊人称为阿波罗之子。\n\n当苏格拉底被判死刑后，28岁的柏拉图对当时的政治体制彻底绝望，于是开始游遍整个希腊世界寻求知识。他在四十岁时结束了旅行返回雅典，并在雅典城外创立了自己的学校——柏拉图学院，也被称为雅典学院。\n\n与老师苏格拉底不同的是，柏拉图留下了很多著作。其中，最有价值的是他记录苏格拉底思想的《对话录》。而在《对话录》一书中，又以[[《理想国》]]和[[《会饮篇》]]两篇最为知名。前者反映了柏拉图的政治主张，后者反映了柏拉图的哲学主张\n\n另外，柏拉图是哲学史上[[二元论]]早期的代表人物\n\n## 人际关系\n\n学生:[[亚里士多德]]\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0":{"title":"柯里化函数","content":"\n柯里化（curry）函数是一种把函数的元降维的技术，这个名词是为了纪念数学家**阿隆佐·邱奇**。\n\n```js\nfunction add(a, b) {\n  return a + b;\n}\nfunction curry(add) {\n  let arr = [];\n  return function reply() {\n    let arg = […arguments];\n    arr = arr.concat(arg);\n    if (arg.length == 0) {\n      return arr.reduce((p, c) =\u003e (p = add(p, c)), 0);\n    } else {\n      return reply;\n    }\n  };\n}\n\nlet sum = curry(add);\n\nconsole.log(sum(1, 2, 3)()); // 6\nconsole.log(sum(2, 3)(1)()); //12\n```\n\n柯里化函数帮助我们把一个多元函数变成一个不完全调用，利用Closure的魔法，把函数调用变成延迟的偏函数(不完全调用函数)调用。这在函数**组合、复用**等场景非常有用。比如：\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729171329.png)  \n\n虽然你可以用其他闭包方式来实现函数的延迟调用，但Curry函数绝对是其中形式最美的几种方式之一。（没 get 到，但还是记一下 说不定之后 get 到了\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A0%87%E5%87%86%E6%A8%A1%E5%9E%8B%E6%97%A0%E6%B3%95%E8%A7%A3%E9%87%8A%E7%9A%84%E4%BA%94%E4%B8%AA%E8%B0%9C%E5%9B%A2-%E5%AF%B9%E7%A7%B0%E6%9D%82%E5%BF%97":{"title":"标准模型无法解释的五个谜团 -  对称杂志","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [标准模型无法解释的五个谜团 |  对称杂志](https://www.symmetrymagazine.org/article/five-mysteries-the-standard-model-cant-explain)\n- tag：#\n- date: [[ 2022-01-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 标准模型是美丽的东西。它是粒子物理学中最严格的理论，其预测非常精确和准确。它在数学上列出了自然界的 17 个组成部分：六个夸克、六个轻子、四个载力粒子和希格斯玻色子。这些是由电磁力、弱力和强力统治的。 \n- 1. 为什么中微子有质量？\n- 2. 什么是暗物质？\n- 3. 为什么宇宙中有这么多物质？\n- 4. 为什么宇宙膨胀在加速？\n- 5. 是否存在与重力相关的粒子？\n- “这是一个非常经典的科学方法在行动中的例子，”阿尔伯特说。“每个答案都会带来更多问题；什么都没做。”\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86":{"title":"阅读状态","content":"\n# 阅读状态\n\n#状态/未完成  \n#状态/已完成  \n#状态/todo\n\n# 卡片\n\n#卡片/术语卡  \n#卡片/人物卡  \n**分析他为什么牛，有哪些作品，生平经历是什么；**  \n#卡片/反常识卡  \n**拓展你的认知边界的卡片**  \n#卡片/金句卡  \n**让你觉得震撼的话语**  \n#卡片/行动卡  \n**能够指导自己的行动的卡**\n\n# 知识分类\n\n#生活类/\n#学习类/前端/Vue  \n#学习类/前端/Vue\n#学习类/学习/知识体系\n#工作/\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86%E6%B3%95":{"title":"标签管理法","content":"\n# 标签管理法\n\n区别于文件夹管理法，标签管理法具备了足够的灵活性，标签管理法认为笔记、笔记本之间不应该有明确的层次结构，笔记被设想成一个不断变化的相互联系的虚拟矩阵，笔记和笔记之间通过「标签」进行关联。\n\n这样就打破了「文件夹管理法」的层级限制，同一个笔记可以标记不同的「标签」从而和其他笔记组成各种不同的关联，我们可以从一篇笔记找到同类的各种笔记，这样从一个笔记跳转到另一个笔记，从而启发我们的「灵感」\n\n## 标签的分类\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220104153544.png)\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A1%86%E6%9E%B6%E6%95%88%E5%BA%94":{"title":"框架效应","content":"\n#卡片/术语卡\n\n# 框架效应\n\n同一信息的不同表达方式常常会激发人们不同的情感。\n\n- “手术后一个月内的存活率是 90%”的说法要比“手术后一个月的死亡率是 10%”更令人安心。\n- 同样，说凉菜“90%不含脂肪”要比说“10%含有脂肪”更具吸引力。\n- 很明显，前述每组句子的深层含义都是相同的，只是表达方式不同而已，但人们通常能读出不同的含义，而且觉得自己的所见就是事实。\n\n# 实例\n\n## 关于存活率的数据\n\n\u003e 受试者都是医生，实验者给受试者看了两种肺癌治疗结果的数据，分别是手术治疗和放射治疗。手术治疗可保证有 5 年的存活时间，因此，大家都愿意选择手术，但在短期内，手术要比放射治疗的风险更大。一半的受试者读到了关于存活率的数据，其他人收到了关于死亡率的相关信息。对手术短期结果的两种描述是：\n\u003e\n\u003e - 第一个月的存活率是 90%。\n\u003e - 在第一个月里，有 10%的死亡率。\n\n90%的存活率听上去让人心安，而 10%的死亡率却让人感到恐惧。\n\n## 亚洲病害问题\n\n假设美国正为一场来自亚洲的异常疾病作准备，这场疾病估计会夺取 600 人的性命。为战胜这一疾病，我们提出了两种方案。假设对方案结果准确的科学估测如下：\n\n\u003e - 如果采用了方案 A，200 人会获救。如果采用了方案 B，有 1/3 的可能会救 600 人，\n\u003e - 有 2/3 的可能一个人也救不了。\n\n很多受试者都会选择方案 A：他们更愿意选择确定的选项，而不想赌一把。  \n方案的结果在第二种说法中有了不同的框架，如：\n\n\u003e - 如果采用了方案 A'，400 人会死。如果采用了方案 B'，\n\u003e - 有 1/3 的可能没人会死，而有 2/3 的可能有 600 人都会死。\n\n## 生育税\n\n- 富人的生育免税额是不是应该比穷人的更高？\n- 没有孩子的贫穷家庭是否要和没有孩子的富人家庭缴纳同样多的附加费？\n\n## 丢失的电影票\n\n- 一位女士买了两张价格为 80 美元的电影票。当她到了电影院时，打开钱包却发现票不见了。她会再买两张票吗？\n- 一位女士到了电影院，本想要买两张 80 美元的票，但排到时，她打开钱包却发现用来买票的 160 美元不见了。她可以用信用卡买票，但你觉得她会买吗？\n\n这个问题涵盖了心理账户和[[沉没成本]]悖论。不同的框架会触发不同的心理账户，且损失的严重性如何要看其指向的账户。若看某场表演的票丢了，人们很自然地会将损失指向“表演”这个账户。损失显然已经翻倍了，且远超过其应有的价值。相反，丢掉的钱会被记在“一般收入”的账户上：她会想电影院的常客比自己更穷，而且她会自问，自己可支配财富的减少是否会改变自己买票的决定。\n\n## 更省油的车\n\n- 亚当原来的车耗油，每加仑汽油能跑 12 英里，现在他换了一辆更省油的车，每加仑汽油能跑 14 英里。\n- 贝斯爱护环境，她把原来每加仑汽油跑 30 英里的车换成了每加仑汽油跑 40 英里的车。\n\n系统 2 算一算。如果两位车主都行驶了 10000 英里，亚当就是从 833 加仑减至 714 加仑，共省了 119 加仑。贝斯的耗油量就会从 333 加仑降到 250 加仑，只省了 83 加仑。\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A1%8C%E6%B8%B8":{"title":"桌游","content":"\n[BGA 线上桌游](https://boardgamearena.com/lobby)\n\n## 好玩的桌游\n\n### 璀璨宝石\n\n最佳人数：3-4 人  \n时长：45 分钟  \n简单易上手，握筹码有德州的感觉\n\n### 花砖物语\n\n最佳人数：3-4 人  \n时长：30 分钟  \n设计精美，简单易上手，用脑少，坑对手\n\n### 波多黎各：\n\n优点：参与度很好，  \n缺点：初始顺序上有优劣势\n\n### 七大奇迹\n\n机制简单清晰，套路不单一\n\n缺点：基本没啥互动\n\n### 电力公司\n\n需要一定计算，精打细算金钱分配  \n缺点：难度比较高\n\n### 殖民火星\n\n设计的很好，规则比较细  \n缺点：时长较长，难度较高，交互性比较低，思考久\n\n### 展翅翱翔\n\n养小鸟  \n5 人局/2h\n\n缺点：过于和平，主要是经营自己\n\n### 卡坦岛\n\n推荐至少 3 人，最佳 4 人  \n时长：1.5 小时\n\n### 方舟动物园\n\n### 阿纳克遗迹\n\n## 双人桌游\n\n### 四季物语\n\no\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91":{"title":"《 梦里花落知多少 》","content":"\n# 《 梦里花落知多少 》\n\n# 元数据\n\n\u003e [!abstract] 梦里花落知多少\n\u003e - ![ 梦里花落知多少|200](https://weread-1258476243.file.myqcloud.com/weread/cover/98/yuewen_22355126/t7_yuewen_223551261679986914.jpg)\n\u003e - 书名： 梦里花落知多少\n\u003e - 作者： 三毛\n\u003e - 简介： 她以一支笔坚持看守个人文字上的简单和朴素；从遥远的撒哈拉到敦煌戈壁，她不随波逐流，也不诠释人生，只做生活的见证者；她是我们心中浪漫、洒脱、真性情的永远的三毛，永恒的传奇。  \n《梦里花落知多少》真实地记录了爱人荷西意外离世后，三毛所经历的黑暗时光，然而哀恸过后的她愈发坚强，文字也愈发透着深情与力量。\n\u003e - 出版时间 2017-03-01 00:00:00\n\u003e - ISBN： 9787530214800\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 北京出版集团北京十月文艺出版社\n\n# 高亮划线\n\n## 克里斯\n\n- 📌 世上的事情本来便是恩怨一场，怎么算也是枉然，不如叫它们随风而去吧！ ^22355126-5-19827-19860\n    - ⏱ 2019-09-29 23:10:16\n\n## 雨禅台北\n\n- 📌 我从不视被邀吃饭是应酬。相聚的朋友们真心，我亦回报真心。这份感激因为口拙，便是双手举杯咽了下去。 ^22355126-7-5796-5844\n    - ⏱ 2019-09-29 23:24:22\n\n## 周末\n\n- 📌 在这个星期天的黄昏里，难道真的跟谁去讲两条裙子的故事。 ^22355126-8-10637-10664\n    - ⏱ 2019-10-01 15:22:07\n\n## 明日又天涯\n\n- 📌 有谁，在这个世界上不是孤独地生，不是孤独地死？ ^22355126-10-1971-1994\n    - ⏱ 2019-10-01 15:26:14\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%A8%AA%E7%A9%BA%E5%87%BA%E4%B8%96":{"title":"横空出世","content":"\n很多爱国人士回国，选择隐姓埋名一辈子，参与秘密计划\n\n美国和苏联都知道中国在秘密搞原子弹\n\n原来苏联专家选在敦煌，但人民解放军为了保护历史遗产，选择不用专家组的方案，深入被称为死亡之海的罗布泊自己寻找。\n\n苏联专家并不希望中国找出千吨级以上的原子弹，寻找了罗布泊十万平方公里的靶场。\n\n在罗布泊内设定靶场，需要解决水源、物质运输、天气炎热等等问题。\n\n代号 596， 寓意 1959 年 6 月\n\n只有一台计算机在科学院，别的部门也要用，用算盘算出计算机也要算几年的数据\n\n\u003e 横空出世 比较艺术化。。。例如当时计算方面的问题，有两部每秒300次的呼拉尔计算机，还有不少手摇计算器，并不像横片中所出现的几百位账房先生打算盘的景象。\n\n还有，发布在期刊上的错误结果的误导  \n这里没有于敏的出现，看到后面才发现用的都是化名\n\n陆光达 冯石\n\n需要大量的淡水来施工，混凝土。而罗布泊极度缺水，\n\n中国的原子弹工程真的很伟大，里面的任何一个人\n\n一吨原子弹的高浓度铀需要 5000 吨以上的铀矿\n\n1961 年 原子弹轰爆成功\n\n三年灾害\n\n断水断粮，官兵们想要让粮让水给知识分子\n\n1964 年 4 月，原子弹核心部件运往罗布泊\n\n夏世忠 和陆光达偶然会面，导致陆光达被禁足\n\n夏世忠的原型有点像 杨振宁\n\n陆光达是集合了[钱三强](https://zhidao.baidu.com/search?word=%E9%92%B1%E4%B8%89%E5%BC%BA\u0026fr=iknow_pc_qb_highlight)、邓稼先、涂守锷和程凯佳等人的形象，尤其是钱三强和何泽慧夫人的感情线。  \n但否认苏联专家数据，并在机场会见夏世忠，发生在邓稼先身上。\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AC%A2%E8%81%9A%E6%97%B6%E4%BB%A3":{"title":"欢聚时代","content":"\n# 欢聚时代\n\n## 一面\n\n1. Webpack 执行流程 [[Webpack 实现]]\n2. Loader 是怎么运行的 [[webpack_lodaer]]\n3. Webpack Plugin 是怎么执行的 [[webpack插件]]\n4. Fcp 能做什么优化\n5. Js 怎么判断数据类型 [[JS类型检测]]\n6. 进程和线程有什么区别 [[Chrome架构]]\n7. 两个 Tab 会共用一个进程吗\n8. 从输入网址到渲染中间都做了什么 [[Chrome关键渲染路径]]\n9. 讲一下你最深入的一个项目\n\n## 二面\n\n1. 介绍一下你最深入的一个项目 [[前端项目]]\n2. 有记录静态资源加载的成功率吗 [[错误监控系统]]\n3. 了解 node 的垃圾回收吗 [[V8#垃圾回收]]\n4. 首屏渲染你会怎么优化 [[FCP]]\n5. 介绍一下 React 的 V-dom [[React]]\n6. 了解 Vue 的响应式数据吗 [[Vue2源码阅读#深入响应式原理]]\n7. 前端基建有商业化的吗\n8. 你未来两年的规划是什么\n\n## 三面 HR 面\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97":{"title":"欧几里得","content":"\n# 欧几里得\n\n[[欧几里得几何学]]\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%87%A0%E4%BD%95%E5%AD%A6":{"title":"欧几里得几何学","content":"\n# 欧几里得几何学\n\n欧几里得几何学的 5 条公设：\n\n1. 由任意一点到另外任意一点可以画直线。\n2. 一条有限直线可以继续延长。\n3. 以任意点为中心及任意的距离可以画圆。\n4. 凡直角都彼此相等。\n5. 平面内一条直线和另外两条直线相交，若在某一侧的两个内角的和小于二直角的和，则这二直线经过无限延长后在这一侧相交\n\n同时，公理也有 5 条：\n\n1. 等于同量的量彼此相等。\n2. 等量加等量，其和仍相等。\n3. 等量减等量，其差仍相等。\n4. 彼此能够重合的物体是全等的。\n5. 整体大于部分。\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AD%A3%E5%88%99%E5%AD%A6%E4%B9%A0":{"title":"正则","content":"\n# 正则\n\n正则一直在我眼里一直是一串天文符号，但是他的作用又是无可异议的大，\n\n所以今天开始学习正则，虽犹如学习一门新语言，但冲就完事了。\n\n## 正则表达式到底是什么\n\n正则表达式(Regular Expression)其实就是一门工具，**目的**是为了字符串模式匹配，从而实现搜索和替换功能。它起源于上个 20 世纪 50 年代科学家在数学领域做的一些研究工作，后来才被引入到计算机领域中。从它的命名我们可以知道，它是一种**用来描述规则的表达式**。而它的底层原理也十分简单，就是使用状态机的思想进行模式匹配。\n\n我们可以通过[regexper.com/](https://regexper.com/) 来学习状态机运行\n\n通过[regex101.com/](https://regex101.com/)来测试你写的正则\n\n准备好了，那就 let’s go！\n\n### 单个字符\n\n最简单是就是 **/a/** 匹配字符串中的 a\n\n但是有一些特殊字符 就需要搭配 **\\ ** 来匹配：如下表\n\n| 特殊字符   | 正则表达式 | 记忆方式                                      |\n| ---------- | ---------- | --------------------------------------------- |\n| 换行符     | \\n         | **n**ew line                                  |\n| 换页符     | \\f         | **f**orm feed                                 |\n| 回车符     | \\r         | **r**eturn                                    |\n| 空白符     | \\s         | **s**pace                                     |\n| 制表符     | \\t         | **t**ab                                       |\n| 垂直制表符 | \\v         | **v**ertical tab                              |\n| 回退符     | [\\b]       | **b**ackspace,之所以使用[]符号是避免和\\b 重复 |\n\n### 多个字符\n\n匹配集合 使用 `/[123]/`\n\n每个字符都全部列出就显得很繁琐， 所以就可以使用 `/[0-9]/` 匹配所有数字\n\n| 匹配区间                                      | 正则表达式 | 记忆方式            |\n| --------------------------------------------- | ---------- | ------------------- |\n| 除了换行符之外的任何字符                      | .          | 句号,除了句子结束符 |\n| 单个数字, [0-9]                               | \\d         | **d**igit           |\n| 除了[0-9]                                     | \\D         | **not** **d**igit   |\n| 包括下划线在内的单个字符，[A-Za-z0-9_]        | \\w         | **w**ord            |\n| 非单字字符                                    | \\W         | **not** **w**ord    |\n| 匹配空白字符,包括空格、制表符、换页符和换行符 | \\s         | **s**pace           |\n| 匹配非空白字符                                | \\S         | **not** **s**pace   |\n\n### 循环和重复匹配\n\n| 匹配规则     | 元字符          | 联想方式                                                                                        |\n| ------------ | --------------- | ----------------------------------------------------------------------------------------------- |\n| 0 次或 1 次  | ?               | 且**问**,此事**有**还**无**                                                                     |\n| 0 次或无数次 | \\*              | 宇宙洪荒,**辰宿**列张：宇宙伊始，从无到有，最后星宿布满星空                                     |\n| 1 次或无数次 | +               | **一加**, +1                                                                                    |\n| 特定次数     | {x}, {min, max} | 可以想象成一个数轴，从一个点，到一个射线再到线段。min 和 max 分别表示了左闭右闭区间的左界和右界 |\n\n### 位置边界\n\n| 边界和标志 | 正则表达式 | 记忆方式                              |\n| ---------- | ---------- | ------------------------------------- |\n| 单词边界   | \\b         | **b**oundary                          |\n| 非单词边界 | \\B         | **not** **b**oundary                  |\n| 字符串开头 | ^          | 小**头尖尖**那么大个                  |\n| 字符串结尾 | \\$         | **终结**者，美国科幻电影，美元符\\$    |\n| 多行模式   | m 标志     | **m**ultiple of lines                 |\n| 忽略大小写 | i 标志     | **i**gnore case, case-**i**nsensitive |\n| 全局模式   | g 标志     | **g**lobal                            |\n\n#### 子表达式\n\n##### (?:pattern)\n\n非获取匹配，匹配 pattern 但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。\n\n##### (?=pattern)\n\n非获取匹配，正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。\n\n##### (?!pattern)\n\n非获取匹配，正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。\n\n##### (?\u003c=pattern)\n\n非获取匹配，反向肯定预查，与正向肯定预查类似，只是方向相反。例如，“(?\u003c=95|98|NT|2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。\n\n##### (?\u003c!pattern)\n\n非获取匹配，反向否定预查，与正向否定预查类似，只是方向相反。例如“(?\u003c!95|98|NT|2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。这个地方不正确，有问题\n\n| 回溯查找   | 正则                    | 记忆方式                                                            |\n| ---------- | ----------------------- | ------------------------------------------------------------------- |\n| 引用       | \\0,\\1,\\2 和 $0, $1, \\$2 | 转义+数字                                                           |\n| 非捕获组   | (?:)                    | 引用表达式(()), 本身不被消费(?),引用(:)                             |\n| 前向查找   | (?=)                    | 引用子表达式(())，本身不被消费(?), 正向的查找(=)                    |\n| 前向负查找 | (?!)                    | 引用子表达式(())，本身不被消费(?), 负向的查找(!)                    |\n| 后向查找   | (?\u003c=)                   | 引用子表达式(())，本身不被消费(?), 后向的(\u003c，开口往后)，正的查找(=) |\n| 后向负查找 | (?\u003c!)                   | 引用子表达式(())，本身不被消费(?), 后向的(\u003c，开口往后)，负的查找(!) |\n\n## JS 方法\n\n### replace() 方法\n\n```JavaScript\n//regexp 必需。规定子字符串或要替换的模式的 RegExp 对象。\n//replacement 必需。一个字符串值。规定了替换文本或生成替换文本的函数。\nstringObject.replace(regexp/substr,replacement)\n\n```\n\n*replacement* 可以是字符串，也可以是函数。如果它是字符串，那么每个匹配都将由字符串替换。但是 replacement 中的 \\$ 字符具有特定的含义。\n\n| 字符              | 替换文本                                            |\n| ----------------- | :-------------------------------------------------- |\n| $1、$2、…、\\$99 | 与 regexp 中的第 1 到第 99 个子表达式相匹配的文本。 |\n| \\$\u0026               | 与 regexp 相匹配的子串。                            |\n| \\$`               | 位于匹配子串左侧的文本。                            |\n| \\$'               | 位于匹配子串右侧的文本。                            |\n| \\$\\$              | 直接量符号。                                        |\n\n### match() 方法\n\n#### 用法\n\nmatch() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。\n\n该方法类似 indexOf() 和 lastIndexOf()，但是它返回指定的值，而不是字符串的位置。\n\n## 推荐阅读\n\n[《正则表达式不要背！》](https://juejin.im/post/6844903845227659271#heading-2)  \n[learn-regex · GitHub](https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md)\n\n- [实战：《正则表达式必知必会》](https://book.douban.com/subject/26285406/)\u003e\n- [精通：《精通正则表达式》](https://book.douban.com/subject/2154713/)\u003e)\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AD%A3%E5%88%99%E9%A2%98":{"title":"正则题","content":"\n# 正则题\n\n### 1.短横线命名转换成驼峰命名\n\nvar s1 = \"get-element-by-id\"; 给定这样一个连字符串，写一个 function 转换为驼峰命名法形式的字符串 getElementById\n\n解析：\n\n```JavaScript\nvar s1 = \"get-element-by-id\";\n\nconst toUpperCase = (s) =\u003e\n  s.replace(/-[a-z]/g, (x) =\u003e x.slice(1).toUpperCase());\n\nconsole.log(toUpperCase(s1));\n```\n\n### 2、正则题：实现正则获取 url params 对象\n\n```JavaScript\nfunction parseQuery(url) {\n    var queryObj={};\n    var reg=/[?\u0026]([^=\u0026]+)=([^\u0026]*)/g;\n    var querys=url.match(reg);\n    console.log(querys);\n    if(querys){\n        for(var i in querys){\n            var query=querys[i].split('=');\n            var key=query[0].substr(1),\n                value=query[1];\n            queryObj[key]\n              ? queryObj[key]=[].concat(queryObj[key],value)\n              : queryObj[key]=value;\n        }\n    }\n    return queryObj;\n}\n\n// [xyz] 一个字符集合。匹配方括号中的任意字符，[abcd] 和[a-d]是一样的\n// [^xyz] 一个反向字符集。也就是说， 它匹配任何没有包含在方括号中的字符。\n// + 匹配 1 次或多次\n// \\* 匹配 0 次或多次\n\nvar url='http:www.baidu.com/index?=name=username\u0026age=27\u0026pwd=zbc|123@\u0026likes=lol\u0026likes=beautifull girl\u0026$id=main#flag=66';\nconsole.log(parseQuery(url));\n```\n\n### 3、使用正则获取 URL 中参数值（QueryString）\n\n### 4、实现正则切分千分位（10000 =\u003e 10,000）\n\n```JavaScript\nvar numberStr = \"10000000\";\n\nconsole.log(numberStr.replace(/(?=([0-9]{3})+$)/g, \"$\u0026,\"));\n```\n\n### 5、匹配邮箱\n\n```JavaScript\nfunction parseQuery(url) {\n  let reg = /^[\\w]+@[\\w-]+(\\.[\\w-]+)$/g;\n  return url.match(reg);\n}\n\nconsole.log(parseQuery(`6xxxxxxx9_chen@qq.com`));\n\n```\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AD%A3%E5%8F%8D%E5%90%88":{"title":"例子","content":"\n任何事物都有两面性  \n找到它的另一面  \n再从更高的维度剖析它\n\n# 例子\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615150303.png)  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615150400.png)\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AD%A5%E5%B1%A5%E4%B8%8D%E5%81%9C%E6%96%B0%E7%89%88":{"title":"《 步履不停（新版） 》","content":"\n# 《 步履不停（新版） 》\n\n# 元数据\n\n\u003e [!abstract] 步履不停（新版）\n\u003e - ![ 步履不停（新版）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/64/yuewen_861050/t7_yuewen_8610501686308578.jpg)\n\u003e - 书名： 步履不停（新版）\n\u003e - 作者： 是枝裕和\n\u003e - 简介： 久违的横山一家人，每年只有在大哥纯平的忌日才会团聚。在沁凉的麦茶、红透的西瓜、母亲的拿手料理炸玉米天妇罗、加上外卖的寿司和鳗鱼饭之间，闲散地度过看似平淡的一天。然而他们细细分享品尝着的，却是欢笑背后隐隐的哀伤，小心翼翼的对话与按捺不住的争执中不经意触动的回忆，以及深藏在彼此心中不曾说出口的秘密……\n\u003e - 出版时间 2023-05-15 00:00:00\n\u003e - ISBN： 9787550297685\n\u003e - 分类： 文学-经典作品\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n对家人更好一点 ^16142247-7j4KrGFpT  \n⏱ 2020-07-24 11:26:09\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AF%94%E4%BA%9A%E8%BF%AA":{"title":"比亚迪","content":"\n# 比亚迪\n\n[[王传福]]  \n比亚迪坚信：在行业平稳期，管理是第一推动因素；但在行业变革时，技术会起决定性作用。\n\n研发上的不断加码，使得比亚迪已拥有超安全[[刀片电池]]、[[DM-i超级混动]]、[[e平台3.0]]、[[IGBT]]4.0、CTB 电池一体化技术 等核心技术。\n\n现在，比亚迪是全球唯一掌握电池、电机、电控及车规级半导体等新能源车全产业链核心技术的车企。\n","lastmodified":"2023-09-18T14:54:47.57045463Z","tags":null},"/%E6%AF%94%E7%89%B9%E5%B8%81":{"title":"比特币","content":"\n比特币的原始设想，只是提出了一个有趣的去中心化实验，但是等到有人发现可以从中获利，事情就变质了。\n\n这原本只是一群程序员在玩加密游戏，后来有人创建了纯粹的营利性企业，比特币从此就变了。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%AF%95%E8%BE%BE%E5%93%A5%E6%8B%89%E6%96%AF":{"title":"毕达哥拉斯","content":"\n著名的科学史家蒙洛蒂诺（Leonard Mlodinow）在[[《思维简史》]]一书中是这样解释的。他说，人类自文明诞生（从美索不达米亚的[[苏美尔文明]]算起），到古希腊的毕达哥拉斯之前，发展了几千年，获得了很多具体的科学知识。但是，所有的知识体系还都只能算是“前科学”。在蒙洛蒂诺看来，这种前科学充满了主观色彩和神秘性。即便是泰勒斯，对于一些解释不了的现象，依然要求助于神来解释。这就带来了一个大问题，一个人通过超自然力量给出的解释，可能跟另外一个人用同样方法给出的解释完全不同，甚至是矛盾的。\n\n但是，到了毕达哥拉斯之后，情况得到了改变。**毕达哥拉斯确立了数学规范化的起点，从此才有了基于理性探索自然规律，不受人主观想法所左右的科学**，然后科学的大厦才得以一步步发展起来。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%AF%97%E6%B9%BF%E5%A5%B4":{"title":"毗湿奴","content":"\n在婆罗门教的三个主神中，毗湿奴是“守护之神”。因此，教徒将他视为大众的保护之神。在尼泊尔和泰国，国王往往会被神化为毗湿奴的化身。黑天圣诞节，就是为了纪念毗湿奴化身的诞生。另外，按照印度教的说法，佛陀是毗湿奴的第九个化身。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B0%91%E7%B2%B9%E4%B8%BB%E4%B9%89":{"title":"民粹主义","content":"\n# 民粹主义\n\n**民粹主义（populism），又译为平民主义、大众主义、人民主义、公民主义，字根源自拉丁语 populus，是人民或群众的意思，通常被用来与精英主义、贵族制、共治主义或金权政治相对，其大意认为掌握权力的精英是腐败的，不值得信任，而民众直接的、没有论证的意愿是合理的。知识分子的民粹主义不是一个固定的说法，大意指对任何成型的理论的怀疑，强调实践经验和社会位置对认知的决定作用。**\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B0%B8%E4%B9%85%E7%AC%94%E8%AE%B0":{"title":"永久笔记","content":"\n# 永久笔记\n\n永久笔记需要你的笔记相对原子化，也即需要完整到可以脱离上下文，并且简洁、清晰。  \n长短不是问题，重要的是这张卡片对于笔记网络的贡献\n\n写永久笔记是技能，是需要练习的。所以不要想着一上来就能写永久笔记，你可以不断记录，但是一定要知道记录只是过程，融入自己的思想才能越来越容易写出永久笔记。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80":{"title":"汇编语言","content":"\n## 参考资料\n\n- [Intel 8086 CPU 在线模拟器](https://yjdoc2.github.io/8086-emulator-web/)：你可以在这个网页上，直接写汇编指令，编译后执行，查看 CPU 寄存器、指针、状态位、内存等等。可以用来学习汇编语言和 CPU 运行原理。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%83%E5%B0%94%E5%A4%AB%E5%86%88%E6%B3%A1%E5%88%A9":{"title":"沃尔夫冈·泡利","content":"\n# 沃尔夫冈·泡利\n\n沃尔夫冈·欧内斯特·泡利（德语：Wolfgang Ernst Pauli，1900 年 4 月 25 日－1958 年 12 月 15 日），奥地利理论物理学家，是量子力学研究先驱者之一。1945 年，在爱因斯坦的提名下，他因泡利不相容原理而获得诺贝尔物理学奖。[[泡利不相容原理]]涉及自旋理论，是理解物质结构乃至化学的基础。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%88%E9%98%B3":{"title":"美食","content":"\n# 美食\n\n- 号称沈阳三大美食-传说鸡架  \n[没有一只鸡能活着离开沈阳，上海老王实名推荐！【怎么这么值ep58-传说鸡架】_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Tv4y1j77g/?spm_id_from=333.1007.tianma.1-2-2.click\u0026vd_source=a930d80dde6abe687e6523994d230143)\n\n[南方人在东北点菜，12块吃撑震惊一整年【怎么这么值ep61-夕阳红小吃】\\_哔哩哔哩\\_bilibili](https://www.bilibili.com/video/BV1cc411V7ie/?vd_source=a930d80dde6abe687e6523994d230143)\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%89%E6%B2%A1%E6%88%90%E6%9C%AC":{"title":"实例","content":"\n沉没成本悖论导致人们在不被看好的事情上浪费了太多时间，例如不幸福的婚姻、没有希望的研究项目等。\n\n# 实例\n\n## 持续投入不好的项目\n\n设想一家公司已经在某个项目中投入了 5000 万美元。现在，这个项目误了工期，其最终回报的预计收益也没有最初计划的那样好。如果想要实现这个项目的最初目标，则需要 6000 万美元的额外投资。另一个提议是将同样的资金投入到一个新的项目中，且这个项目似乎可以带来更高的回报。这家公司会怎么做呢？通常的情况是，像冒着暴风雪开车那样，受到沉没成本影响的公司会继续将钱砸在那个不好的项目上，因为关闭这个项目的账户就相当于承认自己的失败，这是一种耻辱。这个情景属于四重模式中右上角那一栏的情况：在这种情况下，我们需要在必然的损失和不利的风险中作出选择，这样做通常是不明智的。\n\n## 割掉在盈利的股票\n\n\u003e 你需要钱来操办女儿的婚礼，所以想卖掉一些股票。你记得自己每一只股票的买进价，也能分辨出某只股票是“赢利股”（即当前价值高于你的买进价的股票），或是亏损股。在你所有的股票中，蓝莓牌瓷砖是一只赢利股；如果你在今天将其售出，就会得到 5000 美元的收益。你持有蒂芙尼电机相同的股份，现值是 5000 美元，但低于你的买进价格。你更有可能出售哪一只股票？\n\n如果将这个问题看做是在给你带来的快乐和给你造成的痛苦中作选择，你肯定会卖掉蓝莓牌瓷砖，以享受成功投资的乐趣。可以预料，金融研究中已经记录了大量人们售出自己的赢利股、保留亏损股的偏好——这被视为一种偏见，关于此还有一个晦涩难懂的名字：[[处置效益]]。他是窄框架的一种\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0":{"title":"《 沉默的大多数 》","content":"\n# 《 沉默的大多数 》\n\n# 元数据\n\n\u003e [!abstract] 沉默的大多数\n\u003e - ![ 沉默的大多数|200](https://weread-1258476243.file.myqcloud.com/weread/cover/49/YueWen_912825/t7_YueWen_912825.jpg)\n\u003e - 书名： 沉默的大多数\n\u003e - 作者： 王小波\n\u003e - 简介： 李银河独家授权，并亲自校订全稿。自从我辈成人以来，所见到的一切全是颠倒着的。在一个喧嚣的话语圈下面，始终有个沉默的大多数。本书收录了王小波的杂文代表作，他以卓越的文采，众醉独醒的姿态对社会道德伦理、国学与新儒家、个体尊严以及小说、艺术等方面进行了酣畅淋漓的剖析，表达了有理有趣的观点。时隔二十年，依然如同清流一般，读来让人沉思，让人捧腹，让人拍案叫绝。王小波说：我活在世上，无非想要明白些道理，遇见些有趣的事。倘能如我所愿，我的一生就算成功。我开始得太晚了，很可能做不成什么，但我总得申明我的态度，所以就有了这本书——为我自己，也代表沉默的大多数。\n\u003e - 出版时间 2017-04-01 00:00:00\n\u003e - ISBN： 9787530220368\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 北京出版集团北京十月文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-76ldN6MLp  \n⏱ 2019-02-21 10:24:27\n\n## 书评 No.2\n\n ^16142247-75mtpQuBJ  \n⏱ 2019-01-12 11:56:07\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%89%E9%BB%98%E7%9A%84%E8%9E%BA%E6%97%8B":{"title":"沉默的螺旋","content":"\n# 沉默的螺旋\n\n当一种声音占据主导地位时  \n其他少数派的声音会被淹没  \n你要做的就是找到它们，并把它们联结起来\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%99%E5%8F%91":{"title":"沙发","content":"\n## 沙发怎么选\n\n1，居家型沙发可以趟，能靠头，尺寸：   坐深大于65cm，靠背高度大于40cm， 坐高40cm左右。想要颜值高，选矮一点的，比例好看。  \n2，谈话型沙发减少尺寸。  \n3，功能型沙发，看乐至宝和芝华士。  \n\n沙发尺寸：  \n第一个原则，根据自己的电视背景墙来定，3：4就是非常合理的。比如4米的电视背景墙选3米左右的沙发，2.8-3.2的尺寸都可以选择。  \n第二个原则，买小不买大，尽量留白，空间好。  \n第三个原则，如果是小客厅，宁愿用休闲椅+直排，不要用贵妃位。  \n\n客厅规划布局，需要预留800mm的最小通行距离，老罗也在群里说过，600mm其实也可以。  \n\n沙发成本：  \n佛山中高端的3米直排沙发，好的布艺5，6000，真皮的7-9000，买多少看定位，看良心。  \n\n怎么买：  \n预算低于3000，选宜家  \n预算3000-5000，宜得力，顾家，源氏木语。  \n预算5000-8000，老罗自己家的沙发，北表，宜氧，格度，吱音这，线下线上一体的店，不踩坑\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D":{"title":"沙拉查词","content":"\n推荐使用，可以划词翻译，加入生词本，然后同步到[[欧路词典]]里进行 anki记忆\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%99%E7%AE%B1%E7%8E%AF%E5%A2%83":{"title":"沙箱环境","content":"\n# 沙箱环境\n\n沙箱环境听起来很复杂，但其实前端开发者经常接触到：除了浏览器环境以外，JavaScript 还会被运行在 Node. Js 环境中。Node. Js 是基于 Chrome V8 引擎的 JavaScript 运行环境，该环境中不存在 DOM API、window、document 等对象 API 和全局对象，因此也更无操作 DOM 节点一说。\n\n安全沙箱，就是将渲染进程和操作系统隔离的一道墙，由于这道墙，黑客就获取不到渲染进程之外的任何操作权限。\n\n我们知道安全沙箱**最小的保护单位是进程**，并且能限制进程对操作系统资源的访问和修改，这就意味着如果要让安全沙箱应用在某个进程上，那么这个进程必须没有读写操作系统的功能，比如读写本地文件、发起网络请求、调用 GPU 接口等。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173203.png)\n\n### 持久存储\n\n具体地讲，如下文件内容的读写都是在浏览器内核中完成的：\n\n- 存储 Cookie 数据的读写。通常浏览器内核会维护一个存放所有 Cookie 的 Cookie 数据  \n  库，然后当渲染进程通过 JavaScript 来读取 Cookie 时，渲染进程会通过 IPC 将读取  \n  Cookie 的信息发送给浏览器内核，浏览器内核读取 Cookie 之后再将内容返回给渲染进  \n  程。\n- 一些缓存文件的读写也是由浏览器内核实现的，比如网络文件缓存的读取。\n\n### 网络访问\n\n同样有了安全沙箱的保护，在渲染进程内部也是不能直接访问网络的，如果要访问网络，则需要通过浏览器内核。不过浏览器内核在处理 URL 请求之前，会检查渲染进程是否有权限请求该 URL,比如检查 XMLHttpRequest 或者 Fetch 是否是跨站点请求，或者检测 HTTPS 的站点中是否包含了 HTTP 的请求。\n\n### 用户交互\n\n通常情况下，如果你要实现一个 UI 程序，操作系统会提供一个界面给你，该界面允许应用程序与用户交互，允许应用程序在该界面上进行绘制，比如 Windows 提供的是 HWND,Linux 提供的 XWindow,我们就把`HWND`和`XWindow`统称为**窗口句柄**。应用程序可以在窗口  \n句柄上进行绘制和接收键盘鼠标消息。\n\n渲染进程不能直接访问窗口句柄，所以渲染进程需要完成以下两点大的改变。  \n第一点，**渲染进程需要渲染出位图**。为了向用户显示渲染进程渲染出来的位图，渲染进程需要将生成好的位图发送到浏览器内核，然后浏览器内核将位图复制到屏幕上。  \n第二点，**操作系统没有将用户输入事件直接传递给渲染进程，而是将这些事件传递给浏览器内核**。然后浏览器内核再根据当前浏览器界面的状态来判断如何调度这些事件，如果当前焦点位于浏览器地址栏中，则输入事件会在浏览器内核内部处理；如果当前焦点在页面的区域内，则浏览器内核会将输入事件转发给渲染进程。\n\n### 站点隔离（Site Isolation)\n\n所谓站点隔离是指 Chrome 将同一站点（包含了相同根域名和相同协议的地址）中相互关联的页面放到同一个渲染进程中执行。\n\n最开始 Chrome 划分渲染进程是以标签页为单位，也就是说整个标签页会被划分给某个渲染进程。但是，按照标签页划分渲染进程存在一些问题，原因就是一个标签页中可能包含了多个`iframe`,而这些`iframe`又有可能来自于不同的站点，这就导致了多个不同站点中的内容通过`iframe`同时运行在同一个渲染进程中。\n\n因此 Chrome 几年前就开始重构代码，将标签级的渲染进程重构为 iframe 级的渲染进程，然后严格按照同一站点的策略来分配渲染进程，这就是 Chrome 中的站点隔离。  \n实现了站点隔离，就可以将恶意的 iframe 隔离在恶意进程内部，使得它无法继续访问其他 iframe 进程的内容，因此也就无法攻击其他站点了。\n\n#### 为什么要让他们跑在一个进程里面呢？\n\n因为在一个渲染进程里面，他们就会共享 JS 的执行环境，也就是说 A 页面可以直接在 B 页面中执行脚本。因为是同一家的站点，所以是有这个需求的。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%B9%E6%B0%94":{"title":"油气","content":"\n# 油气\n\n[[中国海油]]\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B2%B9%E7%83%9F%E6%9C%BA":{"title":"油烟机","content":"\n## 迷瞪\n\n顶吸和侧吸 吸油烟差距不大\n\n影响吸烟的点\n\n- 风压\n- 样机距离位置\n\n### 米家智能净烟机 P1\n\n13m²/s\n\n###  \n\n## 款式选择\n\n老板偏向顶吸  \n方太偏向侧吸\n\n### 方太\n\n灶具 TH28B 和 TH29B 基本可以视为同款  \n28 需要固定尺寸在台面开槽，29B 多了两个可以调节的固定螺丝  \n5.0 kW 超大火力\n\n#### 方太EMQ5T\n\n性能款 顶吸  \n24 m + 900 pa + 53db  \n价格 4319\n\n#### 方太自动烹饪 Z1 +P1\n\n价格 9999\n\n#### 方太 JCD10C + TH28B\n\n挥手感应 3999 返可  \n23 m\n\n#### 方太 JCD15T+TH29B\n\n24 立方量 1000pa 风压 4799 参与返可\n\n### 老板\n\n#### 老板60X2S+57B5X\n\n顶吸入门款  \n变频风机 带挥手感应 22立风量 1000Pa风压 4149 参加返可\n\n#### 老板61X2S+57B5X\n\n24立风量和960Pa风压 5099 参与返可\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B3%A1%E5%88%A9%E4%B8%8D%E7%9B%B8%E5%AE%B9%E5%8E%9F%E7%90%86":{"title":"泡利不相容原理","content":"\n# 泡利不相容原理\n\n在量子力学里，泡利不相容原理（英语：Pauli exclusion principle，简称为泡利原理或不相容原理）表明，两个全同的费米子不能处于相同的量子态。这原理是由沃尔夫冈·泡利于 1925 年通过分析实验结果得到的结论。例如，由于电子是费米子，在一个原子里，每个电子都拥有独特的一组量子数，两个电子各自拥有的一组量子数不能完全相同，假若它们的主量子数，角量子数，磁量子数分别相同，则自旋磁量子数必定不同，它们必定拥有相反的自旋磁量子数。换句话说，处于同一原子轨域的两个电子必定拥有相反的自旋方向。\n\n全同粒子是不可区分的粒子，按照自旋分为费米子、玻色子两种。费米子的自旋为半整数，它的波函数对于粒子交换具有反对称性，因此它遵守泡利不相容原理，必须用费米-狄拉克统计来描述它的统计行为。费米子包括像夸克、电子、中微子等基本粒子。\n\n玻色子的自旋为整数，它的波函数对于粒子交换具有对称性，因此它不遵守泡利不相容原理，它的统计行为只符合玻色-爱因斯坦统计。任意数量的全同玻色子都可以处于同样量子态。例如，激光产生的光子、玻色-爱因斯坦凝聚等等。\n\n泡利不相容原理是原子物理学与分子物理学的基础理论，它促成了化学的变幻多端、奥妙无穷。2013 年，意大利的格兰沙索国家实验室团队发布实验结果，违反泡利不相容原理的概率上限被设定为 4.7×10-29。\n\n## 白话版\n\n一个原子就像一幢宿舍，每间房都有一个四位数的门牌号码。底楼只有两间房，分别是 1001 和 1002。而二楼则有 8 间房，门牌分别是 2001、2002、2101、2102、2111、2112、2121 和 2122。越是高层的楼，它的房间数量就越多，租金也越贵。脾气暴躁的管理员泡利在大门口张贴了一张布告，宣布不能有两个电子房客入住同一间房屋。于是电子们争先恐后地涌入这幢大厦，先到的两位占据了底楼那两个价廉物美的房间，后来者因为底楼已经住满，便不得不退而求其次，开始填充二楼较贵的房间。二楼住满后，又轮到三楼、四楼……一直到租金高得离谱的六楼、七楼、八楼。不幸住在高处的电子虽然入不敷出，却没有办法，因为楼下的便宜房间都住满了，没法搬进去。叫苦不迭的电子们把泡利那蛮横的规定称作“不相容原理”（The Exclusion Principle）。  \n![https://res.weread.qq.com/wrepub/epub_25622039_100](https://res.weread.qq.com/wrepub/epub_25622039_100)\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B3%B0%E5%8B%92%E6%96%AF":{"title":"泰勒斯","content":"\n泰勒斯是[[古希腊]]第一位留下名字的科学家，他对[[科学]]发展最大的贡献不是什么具体的科学发现，而是将“命题”，也就是对客观世界的确定性描述引入科学，并且建立各个命题之间的关系。他还提出，通过逻辑证明命题正确性的思想。\n\n在此基础之上，才有可能依靠逻辑和数学，发展出严密的科学体系。正因为他的这个贡献，他被后人称为**科学哲学（scientific philosophy）之父**\n\n不过，虽然说泰勒斯的思想相比同时期其他文明用超自然的力量，包括神话和英雄来解释自然现象，已经有了本质的进步。但是，泰勒斯本人并不排斥超自然的现象，只不过，他对那些超自然的现象往往倾向于给出自然的解释。比如，他认为水是万物之本原，地壳是漂浮在水中的，地震是地壳被海浪冲击导致的等等\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B4%97%E7%A2%97%E6%9C%BA%E9%80%89%E6%8B%A9":{"title":"洗碗机选择","content":"\n## 家电研究院\n\n### 旗舰款:  \n\n- [海尔W5000](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)  \n- [美的GX1000S](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/addc1a6d4fefaa5fc479bfd93713bda6.png@.webp)  \n- [方太v6](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/addc1a6d4fefaa5fc479bfd93713bda6.png@.webp)  \n- [方太C3B水槽洗碗机](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/addc1a6d4fefaa5fc479bfd93713bda6.png@.webp)  \n- [西门子全能仓Pro](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)  \n- [西门子12套晶蕾烘干](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)\n\n### 性价比款:  \n\n- [美的RX600Pro](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/addc1a6d4fefaa5fc479bfd93713bda6.png@.webp) 建议入手价：3999 白色可以选 rx600w\n- [海尔W30](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)  \n- [海尔X3000超窄机身](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)  \n- [华帝iE7](https://i0.hdslb.com/bfs/sycp/mgk/img/202202/e678dd37ebe54e6f448bae97c0329c2c.png@.webp)\n\n## 迷瞪\n\n结论先行: 买套数大的， 洗净程度、烘干程度、杀菌能力都没大的差别  \n\n要么买性价比高的两三千块的国产牌子（比如小米或京造），要么买洗净能力和碗篮设计都出色的八九千的AEG（FFB52910ZM）。\n\n### 型号对比\n\n海尔 w30  \n4999  \n自动开门，不会自动关门\n\n美的 GX1200  \nGX 系列和 P 系列 换壳机  \n和 1000 几乎一样，就泵的品牌有点差异  \n热风烘干\n\n西门子SJ456  \n三分钱两份货\n\n美诺 G7210  \n18900  \n开门器能自己关上  \n十分钱三分货\n\n### 洗净程度\n\n影响干净的是 碗的摆放程度和\n\n贵的不能在洗净力上有显著提升\n\n### 烘干程度\n\n几种烘干方式没太大差距\n\n### 杀菌能力\n\n营销噱头，主要靠高温\n\n贵的贵在哪  \n走线规范\n\n## 厨电小家电\n\n快速洗都能洗干净\n\n### 凯度 16J3S，\n\n容量设计合理，比较能装  \n噪音小\n\n### 美的600S\n\n操作面板不够多，需要手机操作\n\n### 方太NT1\n\n方太，噪音最吵\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B4%97%E8%A1%A3%E6%9C%BA%E9%80%89%E6%8B%A9":{"title":"洗衣机选择","content":"\n## 迷瞪\n\n洗不洗的干净根本没区别  \n都是 10 升 洗烘一体\n\n### 卡萨帝玉墨系列\n\n多个 连接 WIFI 功能\n\n#### 大同小异\n\n顶板多了吸音棉，  \n多了横梁  \n多了进水管\n\n多了开门照明灯\n\n#### 不同\n\n电机不一样  \n驱动电路不一样，多了保险丝\n\n### 激情兄弟\n\n3099\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83":{"title":"《 流浪地球 》","content":"\n# 《 流浪地球 》\n\n# 元数据\n\n\u003e [!abstract] 流浪地球\n\u003e - ![ 流浪地球|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/603/597603/t7_597603.jpg)\n\u003e - 书名： 流浪地球\n\u003e - 作者： 刘慈欣\n\u003e - 简介： 50亿年的壮丽生涯已成为飘逝的梦幻，太阳死了。幸运的是，还有人活着。地球航出了冥王星轨道，航出了太阳系，在寒冷广漠的外太空继续着它孤独的航程。地球在航行2400年后到达比邻星，再过100年时间，它将泊入这颗恒星的轨道，成为它的一颗卫星。\n\u003e\n\u003e - 出版时间 2014-07-01 00:00:00\n\u003e - ISBN：\n\u003e - 分类： 精品小说-科幻经典\n\u003e - 出版社： 山西春秋电子音像出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-76cPnFlG5  \n⏱ 2019-02-15 21:58:22\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%85%E6%9E%90%E6%B5%99%E5%95%86%E6%9C%AA%E6%9D%A5%E8%84%9A%E6%89%8B%E6%9E%B6":{"title":"浅析浙商未来脚手架","content":"\n公司的脚手架已经实现，可以学习的\n\n- 约定式路由\n- 路由懒加载\n- 命令行工具\n- webpack 优化\n- mock 数据，本地 mock 和远程 mock\n- doctor\n- [[MFSU]]\n- 内部 npm 包管理\n- 全局状态注入，APP\n\n感觉整体可以搞一个[[Umi]]\n\n还缺少可以加上的功能\n\n- useRequest\n- 按需加载不知道有没有\n- 快速刷新（Fast Refresh）。Fast Refresh 功能最大的特性是：开发环境下，可以保持组件状态，同时编辑提供即时反馈。\n- 本地管理台\n- 服务端渲染\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AD%98%E5%82%A8":{"title":"浏览器存储","content":"\n# 浏览器存储\n\n## cookie\n\ncookie 的产生是为了解决 http 传输无状态问题\n\n### 优点\n\n产生的时间较早，各大浏览器兼容性较好\n\n### 缺点\n\n1. 存储量小，虽然各大浏览器的实现不同，但大部分都是**4KB**\n2. 在每个请求上都会携带，增加无用的传输成本，降低传输效率\n3. 只能存储字符串\n4. 安全问题：可以随意访问，并且可以修改，所以重要数据不能存储在 cookie\n5. 由于第三方 Cookie 的滥用，所以很多老司机在浏览网页时会禁用 Cookie，所以我们不得不测试用户是否支持 Cookie，这也是很麻烦的一件事。\n\n### 操作\n\n#### 基本操作\n\n```JavaScript\n//通过 key=value 形式增加  同名视作更新\n// expires= 过期时间\n// domain= cookie 所属的域（默认为当前域）：\n// path = cookie 所属的路径（默认值是当前页面的路径）：\n// secure 设置web页面只有在HTTPS安全连接时，才可以发送Cookie。\n// HttpOnly 它使JavaScript 脚本无法获得Cookie\ndocument.cookie = \"logcookie=3qjj; expires=Wed, 13-Mar-2019 12:08:53 GMT; Max-Age=31536000; path=/;domain=fafa.com;secure; HttpOnly;\"\n```\n\n#### 读取具有特定名称的 Cookie\n\n```JavaScript\nexport function getCookie(name) {\n  var arr,\n    reg = new RegExp('(^| )' + name + '=([^;]*)(;|$)')\n  if ((arr = document.cookie.match(reg))) return unescape(arr[2])\n  else return null\n}\n```\n\n#### 删除具有特定名称的 Cookie\n\n```JavaScript\nexport function delCookie(name) {\n  var exp = new Date()\n  exp.setTime(exp.getTime() - 1)\n  var cval = getCookie(name)\n  if (cval != null)\n    document.cookie = name + '=' + cval + ';expires=' + exp.toGMTString()\n}\n```\n\n### SameSite 属性\n\n- **Strict** 最为严格。如果 SameSite 的值是 Strict, 那么浏览器会完全禁止第三方 Cookie。\n- **Lax** 相对宽松一点。在跨站点的情况下，从第三方站点的链接打开和从第三方站点提交 Get  \n  方式的表单这两种方式都会携带 Cookie。但如果在第三方站点中使用 Post 方法，或者通  \n  过 img、iframe 等标签加载的 URL,这些场景都不会携带 Cookie。\n- 而如果使用 **None** 的话，在任何情况下都会发送 Cookie 数据。\n\n[session 和 Token 鉴权](./JWT.md)\n\n## web 存储\n\n它所产生的主要原因主要出于以下两个原因：\n\n- 人们希望有一种在 cookie 之外存储回话数据的途径。\n- 人们希望有一种存储大量可以跨会话存在的数据的机制。\n\n### Local Storage\n\n- 同样只能存储字符串，但 LocalStorage 可以存储序列化以后的 JSON。\n- 提供了简单明了的 API\n- 相对更加安全，不参与服务器通信\n- 可储存的数据量更大 ，可以保存 5MB 的信息。\n- 持久化存储\n\n#### 基本语法\n\n```JavaScript\n// 使用方法存储数据\nlocalStorage.setItem('name', 'Srtian')\n// 使用属性存储数据\nlocalStorage.say = 'Hello world'\n// 使用方法读取数据\nconst name = localStorage.getItem('name')\n// 使用属性读取数据\nconst say = localStorage.say\n// 删除数据\nlocalStorage.removeItem('name')\n```\n\n### Session Strorage\n\n仅在当前网页会话下有效，关闭页面或浏览器后就会被清除。\n\n其他基本同上\n\n注：兼容性 ie8 以上\n\n## IndexedDB\n\n为了存储更大量的结构化数据，诞生了 IndexedDB\n\n### 使用\n\n```JavaScript\nconst request = indexedDB.open('myDatabase', 1)\n\nrequest.addEventListener('success', (e) =\u003e {\n  console.log('连接数据库成功')\n})\n\nrequest.addEventListener('error', (e) =\u003e {\n  console.log('连接数据库失败')\n})\n```\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%99%E5%95%86%E6%9C%AA%E6%9D%A5":{"title":"浙商未来","content":"\n# 浙商未来\n\n## 一面\n\n1. 了解 react 的渲染原理吗\n2. 脚手架的约定式路由，怎么实现的\n3. MsgChannel\n\n## 沟通的问题\n\n1. 讲话讲的很快，别人话还没说完，就接上去了\n2. Okok，好的好的，没有气场\n3. 说话的停顿采用饿.. 这种。\n4. 不要表达出你有众多选择，夸夸别人\n5. 先说：不好意思，刚刚耳机没佩戴好，\n6. 语气重。说清楚，不要表现的很卑微\n7. 没有很好的理解到别人的意思，会讲一些别的东西\n8. 多夸夸别人，感谢和感恩，向小叔学习\n9. 多想想说出去的话，可能会造成一个什么样的误会\n\n贴花的寄语的时候，说贴吧贴吧反正没人看\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%AA%E6%BD%AE%E4%B9%8B%E5%B7%85%E4%B8%8A%E5%86%8C":{"title":"《 浪潮之巅（上册） 》","content":"\n# 《 浪潮之巅（上册） 》\n\n# 元数据\n\n\u003e [!abstract] 浪潮之巅（上册）\n\u003e - ![ 浪潮之巅（上册）|200](https://weread-1258476243.file.myqcloud.com/outpic/600/3000003600.jpg)\n\u003e - 书名： 浪潮之巅（上册）\n\u003e - 作者： Wu Jun\n\u003e - 简介： 《浪潮之巅(第2版)(上册)》不是一本科技产业发展历史集，而是在这个数字时代，一本IT人非读不可，而非IT人也应该阅读的作品。一个企业的发展与崛起，绝非只是空有领导强人即可达成。任何的决策、同期的商业环境，都在都影响着企业的兴衰。《浪潮之巅》不只是一本历史书，除了讲述科技顶尖企业的发展规律，对于华尔街如何左右科技公司，以及金融风暴对科技产业的冲击，也多有着墨。此外，《浪潮之巅》也着力讲述很多尚在普及或将要发生的，比如微博和云计算，以及对下一代互联网科技产业浪潮的判断和预测。因为在极度商业化的今天，科技的进步和商机是分不开的。  \n诚如作者所言：“人的商业知识和眼光不是天生的，需要不断地、有心地学习。经过多年的学习、思考和实践，我认定这样一个规律，就是：科技的发展不是均匀的，而是以浪潮的形式出现。每一个人都应该看清楚浪潮，赶上浪潮，如此，便不枉此生。”  \n点击链接进入下册 ： 浪潮之巅(第2版)(下册)  \n点击链接进入套装 ：浪潮之巅(套装上下册)\n\u003e - 出版时间\n\u003e - ISBN： 9787115301208\n\u003e - 分类：\n\u003e - 出版社：\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n看完实体书，特地来给个五星好评。 ^16142247-79ftafC19  \n⏱ 2019-06-19 22:19:53\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%B7%E5%9B%A0%E9%87%8C%E5%B8%8C%E9%B2%81%E9%81%93%E5%A4%AB%E8%B5%AB%E5%85%B9":{"title":"海因里希·鲁道夫·赫兹","content":"\n# 海因里希·鲁道夫·赫兹\n\n海因里希·鲁道夫·赫兹（德语：Heinrich Rudolf Hertz，1857 年 2 月 22 日－1894 年 1 月 1 日），德国物理学家，于 1887 年首先用实验证实了电磁波的存在，并于 1888 年发表了论文。他对电磁学有很大的贡献，故频率的国际单位制单位赫兹以他的名字命名。\n\n## 赫兹的装置\n\n赫兹的装置是很简单的：它的主要部分是一个电火花发生器，有两个大铜球作为电容，并通过铜棒连接到两个相隔很近的小铜球上。导线从两个小球上伸展出去，缠绕在一个大感应线圈的两端，然后又连接到一个梅丁格电池上，将这套古怪的装置连成了一个整体。  \n![https://res.weread.qq.com/wrepub/epub_25622039_6](https://res.weread.qq.com/wrepub/epub_25622039_6)\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B5%B7%E6%B2%B9%E5%8F%91%E5%B1%95":{"title":"海油发展","content":"\n# 海油发展\n\n## 雪球分析\n\n[海油发展：六氟磷酸锂+电解液+风电+天然气](https://xueqiu.com/9731823581/197547242)  \n即金牛能源目前就有 300 吨六氟磷酸锂和 5000 吨电解液产能！扩建项目达产后将总共年产电解液 20000 吨，六氟磷酸锂 1500 吨，新型电解质 200 吨！  \n自 2020 年 6 月以来，六氟磷酸锂的价格强势上涨，从最低不足 7 万元/吨增至近 40 万元/吨。 利润 6 亿\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B6%88%E9%99%A4%E9%94%99%E8%AF%AF%E7%9A%84%E5%85%B3%E8%81%94":{"title":"消除错误的关联","content":"\n# 消除错误的关联\n\n为了了解这一原则的工作原理，我们设想一下：向大量观察者展示一些装有硬币的玻璃罐，让他们估计一下每一个罐里硬币的数量。詹姆斯·索罗维基（James Surowiecki）在他最为畅销的著作《群体的智慧》（The Wisdomof Crowds）一书中解释道，一个人单独完成这个任务的效果并不理想，但一群人共同作出判断时准确率就很高。有些人高估了硬币的数量，另一些人低估了它，但对所有判断进行平均估算得出的平均值就会趋近于准确值。这种机制很容易理解：每个人都观察着同一个玻璃罐，他们的判断都基于一个共同的基础。另一方面，每个人犯的错误都与其他人的错误无关，（在没有系统性偏见的情况下）这些错误的平均值趋近于零。然而，只有在每个人的观察相互独立、每个人所犯错误之间不相关联的情况下，降低错误率的奇迹才能出现。如果观察者持有相同偏见，就算将他们的判断汇总起来也难以降低错误率。允许不同观察者之间相互影响会减少样本量，进而影响小组估值的准确率。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B7%84%E5%8D%9A":{"title":"淄博","content":"\n# 淄博\n\n## 淄博美食\n\n### 淄博烧烤\n\n淄博烧烤是有点与众不同的特色。\n\n吃淄博烧烤，桌上必须有一个双层小碳炉。烤至七八成熟的烤串上桌后，由食客放至碳炉上，复烤至各自喜欢的火候。即便和友人边吃边聊，也不用担心烤串变凉，还能保持最佳风味。\n\n烤串的放置也有讲究，五花肉等带肥的肉必须放在上层，这样上层烤出来的油，还能继续浸润下层的串，谱写出美味双重奏。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B7%98%E5%AE%9D%E5%A4%A9%E7%8C%AB%E5%BA%97%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%90%E8%90%A5%E7%9A%84%E7%BD%91%E5%BA%97%E4%BB%8E0%E5%88%B0%E5%8D%83%E4%B8%87%E5%AE%9E%E6%93%8D%E6%89%8B%E5%86%8C":{"title":"《 淘宝天猫店是如何运营的：网店从0到千万实操手册 》","content":"\n# 《 淘宝天猫店是如何运营的：网店从0到千万实操手册 》\n\n# 元数据\n\n\u003e [!abstract] 淘宝天猫店是如何运营的：网店从0到千万实操手册\n\u003e - ![ 淘宝天猫店是如何运营的：网店从0到千万实操手册|200](https://weread-1258476243.file.myqcloud.com/weread/cover/43/YueWen_859634/t7_YueWen_859634.jpg)\n\u003e - 书名： 淘宝天猫店是如何运营的：网店从0到千万实操手册\n\u003e - 作者： 贾真\n\u003e - 简介： 现在网上能看到的电商经验，大多是碎片化知识，零散不成体，其实很难系统地给卖家提供帮助。本书按照进入淘宝创业的时间线，对从开始犹豫现在做晚不晚到决定做，从选择行业、产品到进货、拍照上架，从产品细节运营优化、搜索到付费推广等，从招聘员工、分工到绩效考核、电商财务、品牌分销等，都进行了详细的介绍。\n\u003e - 出版时间 2017-05-01 00:00:00\n\u003e - ISBN： 9787121313769\n\u003e - 分类： 经济理财-商业\n\u003e - 出版社： 电子工业出版社\n\n# 高亮划线\n\n## 多开几家淘宝天猫店？错\n\n- 📌 在淘品牌的发展当中，旗舰店只做展示和标杆，帮助品牌分销商成长才是核心，也是淘宝希望你发展的方向。问题问题1：将品牌分销的发展思路和流程梳理出来。答案：__________问题2：如何提高自己 ^859634-17-3085\n    - ⏱ 2018-04-23 17:33:17\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6ZqTVjfde  \n⏱ 2018-05-15 20:26:04\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B7%98%E5%AE%9D%E5%BA%97%E9%93%BA":{"title":"淘宝店铺","content":"\n# 淘宝店铺\n\n- 店铺起名\n- 宝贝详情\n- 营销策略\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E6%90%9E%E5%AE%9AReact":{"title":"深入浅出搞定React","content":"\n\u003e 如果做完这个笔记，还需要回头看原文，那么讲毫无意义。\n\n这是修言在拉钩的一门课程\n\n# 深入浅出搞定React\n\n## 基础知识\n\n### JSX\n\n- JSX 的本质是什么，它和 JS 之间到底是什么关系？\n- 为什么要用 JSX？不用会有什么后果？\n- JSX 背后的功能模块是什么，这个功能模块都做了哪些事情？\n\nFacebook 公司给 JSX 的定位是 JavaScript 的“扩展”，他在js编译后，会变成React.createElement，这个编译过程使用的就是 ` Babel `\n\nJSX 语法糖允许前端开发者使用我们最为熟悉的类 HTML 标签语法来创建虚拟 DOM，在降低学习成本的同时，也提升了研发效率与研发体验。\n\n![Drawing 3.png](https://s0.lgstatic.com/i/image/M00/5C/69/Ciqc1F-BeuGAepNsAACqreYXrj0410.png)\n\n**在实际的面试场景下，许多候选人由于缺乏对源码的了解，谈及 createElement 时总会倾向于去夸大它的“工作量”**。但其实，相信你也已经发现了，createElement 中并没有十分复杂的涉及算法或真实 DOM 的逻辑，它的**每一个步骤几乎都是在格式化数据**。\n\n可以联想到字节码和机器码之间的转换\n\n![Drawing 7.png](https://s0.lgstatic.com/i/image/M00/5C/74/CgqCHl-Bex6AM5rhAACJMrix5bk913.png)\n\nReactElement 就是我们常说的虚拟DOM, 他和真实DOM之间还有个 **ReactDOM**.render()\n\n## [[React 生命周期]]\n\n## React 数据通信\n\n所谓**单向数据流**，指的就是当前组件的 state 以 props 的形式流动时，只能流向组件树中比自己层级更低的组件。\n\n- 父 - 子 props\n- 子 - 父 传递方法\n- 兄弟组件 通过连接同一个属性值 进行并且传递方法\n- 跨层级 事件中心 发布中心\n\n### Context\n\n```javascript\n\nconst AppContext = React.createContext()\nconst { Provider, Consumer } = AppContext\n\n//Provider\n\n\u003cProvider value={title: \"this.state.title, content: this.state.content}\u003e\"\n\u003cTitle /\u003e\n\u003cContent /\u003e\n\u003c/Provider\u003e\n\n  \n\n//Consumer\n\n\u003cConsumer\u003e\n{value =\u003e \u003cdiv\u003e{value.title}\u003c/div\u003e}\n\u003c/Consumer\u003e\n\n```\n\n### 过时的Context\n\n- **代码不够优雅**\n- 如果组件提供的一个Context发生了变化，而中间父组件的 shouldComponentUpdate 返回 false，**那么使用到该值的后代组件不会进行更新**。使用了 Context 的组件则完全失控，所以基本上没有办法能够可靠的更新 Context。[这篇博客文章](https://medium.com/@mweststrate/how-to-safely-use-react-context-b7e343eff076)很好地解释了为何会出现此类问题，以及你该如何规避它。 ——React 官方\n\n### Redux\n\n## Hooks\n\nReact-Hooks 自 **React 16.8 以来**才真正被推而广之\n\n### 函数组件与类组件\n\n函数组件与类组件的对比：无关“优劣”，只谈“不同”\n\n- 类组件需要继承 class，函数组件不需要；\n- 类组件可以访问生命周期方法，函数组件不能；\n- 类组件中可以获取到实例化后的 this，并基于这个 this 做各种各样的事情，而函数组件不可以；\n- 类组件中可以定义并维护 state（状态），而函数组件不可以；\n- ……\n\n### 类组件\n\nReact 类组件内部预置了相当多的“现成的东西”等着你去调度/定制，state 和生命周期就是这些“现成东西”中的典型。要想得到这些东西，难度也不大，你只需要轻轻地**继承**一个 React.Component 即可。\n\n**但是 多就是好吗**\n\n他增加了我们的学习成本，这时就显得类组件太重了。\n\n### 函数组件\n\n函数组件肉眼可见的特质自然包括轻量、灵活、易于组织和维护、较低的学习成本等。这些要素毫无疑问是重要的，它们也确实驱动着 React 团队做出改变。但是除此之外，还有一个非常容易被大家忽视、也极少有人能真正理解到的知识点，我在这里要着重讲一下。这个知识点缘起于 React 作者 Dan 早期特意为类组件和函数组件写过的[一篇非常棒的对比文章](https://overreacted.io/how-are-function-components-different-from-classes/)，这篇文章很长，但是通篇都在论证这一句话：\n\n\u003e **函数组件会捕获 render 内部的状态，这是两类组件最大的不同。**\n\n**函数组件更加契合 React 框架的设计理念**。\n\n\u003e UI = render(data)\n\n### 为什么需要 React-Hooks”\n\n1. #### 告别难以理解的 Class：把握 Class 的两大“痛点”\n\n**this 和生命周期**两个痛点\n\n2. #### Hooks 如何实现更好的逻辑拆分\n\n***\\*我们可以有专门管理订阅的函数组件、专门处理 DOM 的函数组件、专门获取数据的函数组件等。Hooks 能够帮助我们\\**实现业务逻辑的聚合，避免复杂的组件和冗余的代码**。\n\n3. #### 状态复用：Hooks 将复杂的问题变简单\n\n### 使用原则\n\n使用原则，原则的内容如下：\n\n1. 只在 React 函数中调用 Hook；\n2. 不要在循环、条件或嵌套函数中调用 Hook。\n\n### 原理\n\n**从源码调用流程看原理：Hooks 的正常运作，在底层依赖于顺序链表**\n\n```javascript\nfunction mountWorkInProgressHook() {\n\n// 注意，单个 hook 是以对象的形式存在的\n\nvar hook = {\nmemoizedState: null,\nbaseState: null,\nbaseQueue: null,\nqueue: null,\nnext: null\n};\n\n  \n\nif (workInProgressHook === null) {\n// 这行代码每个 React 版本不太一样，但做的都是同一件事：将 hook 作为链表的头节点处理\nfirstWorkInProgressHook = workInProgressHook = hook;\n} else {\n// 若链表不为空，则将 hook 追加到链表尾部\nworkInProgressHook = workInProgressHook.next = hook;\n}\n\n// 返回当前的 hook\nreturn workInProgressHook;\n}\n\n```\n\n到这里可以看出，**hook 相关的所有信息收敛在一个 hook 对象里，而 hook 对象之间以单向链表的形式相互串联**。\n\n## 虚拟DOM\n\n### 发展\n\n1. 原生 JS 支配下的“人肉 DOM” 时期\n2. 解放生产力的先导阶段：jQuery 时期\n\n对DOM API进行封装\n\n3. 民智初启：早期模板引擎方案\n\n它更新 DOM 的方式是将已经渲染出 DOM 整体注销后再整体重渲染，并且不存在更新缓冲这一说。所以有性能上的问题\n\n4. 全自动:虚拟DOM\n\n**虚拟 DOM 的优越之处在于，它能够在提供更爽、更高效的研发模式（也就是函数式的 UI 编程方式）的同时，仍然保持一个还不错的性能**。\n\n误区：虚拟DOM性能上具有优势，**虚拟 DOM 的劣势主要在于 JS 计算的耗时，而 DOM 操作的能耗和 JS 计算的能耗根本不在一个量级**。但是在实际使用中，频繁的setState这种修改少量信息的情况下，虚拟DOM具有性能上的优势。\n\n### 价值\n\n虚拟 DOM 解决的关键问题有以下两个。\n\n1. 研发体验/研发效率的问题\n2. 跨平台的问题\n\n### 栈调和\n\n**Diff 确实是调和过程中最具代表性的一环**，但是 **`调和 !== Diff`**\n\n## setState 是同步还是异步的\n\n结论：**并不是 setTimeout 改变了 setState，而是 setTimeout 帮助 setState “逃脱”了 React 对它的管控。只要是在 React 管控下的 setState，一定是异步的**\n\n### 主流程：\n\n![3.png](https://s0.lgstatic.com/i/image2/M01/04/81/Cip5yF_yswuAWzDfAAEc1lISh-Q211.png)\n\n### 锁结构\n\n```javascript\n\nreduce = () =\u003e {\n\n// 进来先锁上\n\nisBatchingUpdates = true\nsetTimeout(() =\u003e {\n\nconsole.log('reduce setState前的count', this.state.count)\nthis.setState({\ncount: this.state.count - 1\n});\n\nconsole.log('reduce setState后的count', this.state.count)\n\n},0);\n\n// 执行完函数再放开\n\nisBatchingUpdates = false\n\n}\n\n```\n\n咱们开头锁上的那个 isBatchingUpdates，对 setTimeout 内部的执行逻辑完全没有约束力。因为 isBatchingUpdates 是在同步代码中变化的，而 setTimeout 的逻辑是异步执行的。当 this.setState 调用真正发生的时候，isBatchingUpdates 早已经被重置为了 false，这就使得当前场景下的 setState 具备了立刻发起同步更新的能力。所以咱们前面说的没错——**setState 并不是具备同步这种特性，只是在特定的情境下，它会从 React 的异步管控中“逃脱”掉**。\n\n## Fiber\n\nReact 团队在用户体验方面最为要紧的一个追求。 **快速响应**\n\n**实现增量渲染的目的，是为了实现任务的可中断、可恢复，并给不同的任务赋予不同的优先级，最终达成更加顺滑的用户体验**\n\nReact 16 前，**Reconciler(找不同)** =\u003e **Renderer(渲染不同)** ，从 Reconciler 到 Renderer 这个过程是严格同步的。\n\nReact 16以后，增加了一层 Scheduler（调度器），首先，**每个更新任务都会被赋予一个优先级**。当更新任务抵达调度器时，高优先级的更新任务（记为 A）会更快地被调度进 Reconciler 层；此时若有新的更新任务（记为 B）抵达调度器，调度器会检查它的优先级，若发现 B 的优先级高于当前任务 A，那么当前处于 Reconciler 层的 A 任务就会被**中断**，调度器会将 B 任务推入 Reconciler 层。当 B 任务完成渲染后，新一轮的调度开始，之前被中断的 **A 任务将会被重新推入 Reconciler 层，继续它的渲染之旅，这便是所谓“可恢复”**。\n\n###\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B7%B7%E5%89%AA":{"title":"参考链接","content":"\n# 参考链接\n\n[如何 1 天自动生产 10000 个爆款书单视频](https://shimo.im/docs/wV3VVKbeB2UeDX3y/read)\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B8%90%E8%BF%9B%E5%BC%8F%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0":{"title":"渐进式总结笔记","content":"\n# 渐进式总结笔记\n\n[玩转 Obsidian 05：如何进行阅读及摘要 - 少数派](https://sspai.com/post/68492)  \nchrome-extension://ijllcpnolfcooahcekpamkbidhejabll/unreader/main.html\n\n# 知识管理的三个阶段\n\n## 阶段 1：以收集为目的的「知识管理」\n\n这一时期「知识管理」对于我来说最大的的困难不再是「如何捕捉并记录内容」，甚至也不是「将内容从一个平台迁移到另一个平台」，而是：**知识如何随着时间流失而不会发生「信息熵」的减少。**\n\n\u003e 信息是个很抽象的概念。人们常常说信息很多，或者信息较少，但却很难说清楚信息到底有多少。比如一本五十万字的中文书到底有多少信息量。直到 1948 年，香农提出了「信息熵」的概念，才解决了对信息的量化度量问题。信息熵这个词是 C.E.Shannon（香农）从热力学中借用过来的。热力学中的热熵是表示分子状态混乱程度的物理量。香农用信息熵的概念来描述信源的不确定度。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172905.png)\n\n## 阶段 2：以整理为目的的「知识管理」\n\n当时知识管理主流的有两种思路：\n\n- [[文件夹管理法]]\n- [[标签管理法]]\n\n## 阶段 3：以「知识循环」为目的的「知识管理」\n\n我认为「知识管理」的最终目的是「掌握知识」，那么怎样才算掌握知识？现实生活中的经验告诉我们有一种判断方法即「能否用自己的话描它」，当你能描述一段知识并且写下来甚至发表出来，代表你已经掌握了这段知识。\n\n\u003e 知识循环指的是以「写作」为唯一目的的「知识管理」方式，在「写作」的过程中经历阅读/记录/整理和输出\n\n为什么要把知识「交给未来的自己」？我认为最大的原因就是：**随着时间的积累，很可能已经忘了当时对这篇文章的理解以及收藏它的初衷**。\n\n# 设计「渐进式总结笔记」\n\n在介绍之前先了解一下设计「渐进式总结」的三个重点。\n\n#### 重点 1：具备销售思维\n\n换句话说，一段知识如果想让未来的自己享用，那就一定做好「包装」，做到可以「打动」未来的自己，即，** 千方百计地吸引未来的自己对这个商品（一篇笔记）感兴趣 **。\n\n#### 重点 2：原子化笔记\n\n即我们管理笔记不应该被标签或文件夹限制住（存放在哪里），更应该关注笔记内容本身。笔记应该具备「原子性」，每个原子有自己的特性，并可以随时组成更强大的元素或分子化合物。\n\n#### 重点 3：设计高度浓缩的摘要笔记\n\n设计留给未来的笔记，要求我们制作「高度浓缩的笔记」，这意味着笔记要同时满足「可发现性」和「可理解性」。\n\n**可发现性：**笔记具备「可发现性」，指的是笔记的内容要**小巧、简单、易于消化**。\n\n**可理解性：**即笔记要有足够的细节，来源、例子和引用，都要在笔记中有线索，不能有所遗漏。\n\n「可发现性和可理解性」要同时满足最大的困难是：**因为我们不可能在「==不舍弃文章中大部分观点的情况下==」而进行总结；就像如果不剪辑掉大部分镜头，就无法制作视频精华片段一样。**\n\n[[卡片笔记法]]\n\n# 在 Obsidian 中实践\n\n#### 第一层：原文摘要\n\n在第一层我就会对一些稍微重要的信息进行「加粗处理」（用一对 `**`包裹着内容），这会让我在未来「回看笔记」时快速理解第一层信息\n\n#### 第二层：重点摘要\n\n一般我会在完成「第一层：原文摘要」后马上就整理「第二层：重点摘要」，虽然我会遵循「不同的时间段完成不同层级」的规则，但是在阅读或整理笔记的当下，如果觉得有些内容需要重点标注，就会第一时间将「第一层」内容拷贝到「第二层」进行「重点标注」，同时如果有必要我也会添加自己的「注释」，方便进行辅助理解。\n\n#### 第三层：常青笔记\n\n常青笔记，也称为[[永久笔记]]。如果当前笔记的阅读让我产生了新的灵感，就像 TIAGO FORTE 说的那样，站在「原始素材」的基础上写一篇文章，然后通过「双向链接」将笔记添加到「第三层：常青笔记」中。\n\n#### 第四层：总结\n\n第四层的方式为「在笔记的顶端用自己的话进行总结」，这里的重点是一定要「用自己的话」进行描述，总结的内容是对第二层和第三层进行概括。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%B9%BF%E5%A9%86":{"title":"湿婆","content":"\n湿婆虽然名字里有一个婆字，但他是男性。而且他是印度教的三大主神之一，与[[梵天]]、[[毗湿奴]]平列。和一神教，或者佛教的神所不同的是，湿婆是有完整家庭的，他的配偶是雪山神女帕尔瓦蒂，他们有三个孩子，分别是智慧之神象头神和天庭的护法室建陀这两个儿子，女儿是无忧妙。湿婆主管宇宙的毁灭和再生。在印度教中，讲究轮回，因此毁灭和创造是相互转化的。\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%BB%A1%E6%84%8F%E5%BA%A6":{"title":"实例","content":"\n![对婚姻生活的满意度](https://res.weread.qq.com/wrepub/epub_573975_44)\n\n# 实例\n\n## 最近的快乐程度\n\n在前一个月有多少次约会的学生在回答他们“最近的快乐程度”时，就会将约会当做他们生活中唯一重要的因\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%BB%B4%E6%BB%B4":{"title":"滴滴","content":"\n# 滴滴\n\n## 自动驾驶\n\n持续的监管高压，以及 50 多亿元的亏损让滴滴倍感压力，如今的滴滴迫切需要找到出行之外的“第二条生命线”，自动驾驶就是那根“救命稻草”。\n\n去年 4 月，滴滴推出自动驾驶硬件平台“滴滴双子星”，主要用于滴滴新一代自动驾驶车队。7 个月后，滴滴又与车企[[比亚迪]]合作推出全球首款定制网约车 D1，这款专门为“共享出行而生”的车型已在长沙试运营。  \n!![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220517151054.png)\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E6%BC%94%E7%BB%8E%E6%8E%A8%E7%90%86":{"title":"书单","content":"\n# 书单\n\n- 欧文·M·柯匹等《逻辑学导论》\n- 陈为蓬《逻辑学概论》（清华 MOOC 系列，小破站有资源）\n- 熊明辉《逻辑学导论》\n- 格雷厄姆·普里斯特《牛津通识读本：简明逻辑学》\n- 鞠实儿《论逻辑的文化相对性》\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80":{"title":"瀑布流布局","content":"\n整个瀑布流组件的构建大体需要分成几部分\n\n1. 通过 props 传递关键数据\n    - data：数据源\n    - nodeKey：唯一标识\n    - column：渲染的列数\n    - columnSpacing：列间距\n    - rowSpacing：行间距\n    - picturePreReading：是否需要图片预渲染\n2. 瀑布流渲染机制：通过 absolute 配合 relative 完成布局，布局逻辑为：每个 item 应该横向排列，第二行的item 顺序连接到当前最短的列中。  \n3. 通过作用域插槽 将每个 item 中涉及到的关键数据，传递到 item 视图中。\n\n### 计算每列宽度\n\n计算大体方法就是，拿到容器宽度(不包括margin,padding,border)，\n\n```js\nconst useContainerWidth = () =\u003e {\n\nconst { paddingLeft, paddingRight } = getComputedStyle(\ncontainerRef.value,\nnull\n);\n\n// 容器左边距\ncontainerLeft.value = parseFloat(paddingLeft);\n\n// 容器宽度\ncontainerWidth.value =\n containerRef.value.offsetWidth -\n parseFloat(paddingLeft) -\n parseFloat(paddingRight);\n};\n```\n\n并且获取容器中每个item元素的总间距。\n\n```js\n// 列间距总大小 (column - 1) * columnSpacing\nconst columnSpacingTotal = computed(() =\u003e {\nreturn (props.column - 1) * props.columnSpacing\n})\n```\n\n然后用当前容器减去总间距，再除以列数。\n\n```js\nconst useColumnWidth = () =\u003e {\n// 获取容器宽度\nuseContainerWidth()\n// 获取列宽\ncolumnWidth.value =\n  (containerWidth.value - columnSpacingTotal.value) / props.column\n}\n```\n\n### 获取每个元素的高度\n\n图片是否定义了高度，如果定义高度，可以直接计算出每个item的高度\n\n```js\nconst useItemHeight = () =\u003e {\n\n// 初始化item高度列表\nlet itemsHeight = []\n// 获取 item 元素\nconst itemElements = […document.getElementsByClassName('hm-waterfall-item')]\n\n// 获取item高度\nitemElements.forEach((itemEl) =\u003e {\n    itemsHeight.push(itemEl.offsetHeight)\n})\n\n// 渲染位置\nuseItemLocation()\n\n}\n```\n\n如果未定义高度，我们需要在图片加载完成后，才能计算高度。\n\n- 获取item元素\n- 获取itm元素中图片路径\n\n```js\n/**\n* 获取所有item中img元素\n*/\n\nexport function getImgElements(itemElements) {\nconst imgElements = []\nitemElements.forEach((el) =\u003e {\n    imgElements.push(…el.getElementsByTagName('img'))\n})\n\nreturn imgElements\n}\n\n  \n\n/**\n* 获取所有图片路径\n*/\n\nexport function getAllImgSrc(imgElements) {\n\nconst allImgSrc = []\nimgElements.forEach((item) =\u003e {\n    allImgSrc.push(item.getAttribute('src'))\n})\n\nreturn allImgSrc\n}\n```\n\n- 通过image对象的load事件来判断图片是否加载完毕，然后计算高度。\n\n```js\nexport function allImgComplete(allImgSrc) {\n\n// 存放所有图片加载的promise对象\n\nconst promises = []\n\n// 循环allImgSrc\n\nallImgSrc.forEach((imgSrc, index) =\u003e {\npromises.push(\nnew Promise((resolve) =\u003e {\n    const imgObj = new Image()\n    imgObj.src = imgSrc\n    imgObj.onload = () =\u003e {\n    resolve({imgSrc,index})\n      }\n        })\n        )\n        })\nreturn Promise.all(promises)\n}\n```\n\n```js\nconst waitImgComplete = () =\u003e {\n\n// 初始化item高度列表\nitemsHeight = []\n\n// 获取 item 元素\nconst itemElements = […document.getElementsByClassName('hm-waterfall-item')]\n\n// 获取所有元素的 img 标签\nconst imgElements = getImgElements(itemElements)\n\n// 获取所有 img 图片路径\nconst allImgSrc = getAllImgSrc(imgElements)\n\n// 计算图片预加载，然后计算高度\nallImgComplete(allImgSrc).then(() =\u003e {\n  itemElements.forEach((itemEl) =\u003e {\n  itemsHeight.push(itemEl.offsetHeight)\n})\n})\n\n// 渲染位置\n\nuseItemLocation()\n\n}\n```\n\n### 计算每个元素的偏移量\n\n**都是通过获取列最小高度基础上计算的一些值。**\n\n需要先将每列高度初始化为0，使用该对象作为容器，key为列下标，值为列高度。\n\n```js\n// 容器的总高度\nconst containerHeight = ref(0)\n// 记录每列高度的容器。key：所在列  val：列高\nconst columnHeightObj = ref({})\n/**\n * 构建记录各列的高度的对象。初始化都为0\n */\nconst useColumnHeightObj = () =\u003e {\n  columnHeightObj.value = {}\n  for (let i = 0; i \u003c props.column; i++) {\n    columnHeightObj.value[i] = 0\n  }\n}\n```\n\n获取left偏移量时，我们需要拿到最小高度列。\n\n```js\n/**\n * 获取最小高度\n */\n\nexport function getMinHeight(columnHeightObj) {\n  const columnHeightValue = Object.values(columnHeightObj)\n  return Math.min(…columnHeightValue)\n}\n\n/**\n * 获取最小高度的column\n */\n\nexport function getMinHeightColumn(columnHeightObj) {\n  // 获取最小高度\n  const minHeight = getMinHeight(columnHeightObj)\n  const columns = Object.keys(columnHeightObj)\n  const minHeightColumn = columns.find((col) =\u003e {\n    return columnHeightObj[col] === minHeight\n  })\n  return minHeightColumn\n}\n```\n\n获取最小高度列后，直接乘以列宽和加上间距就行\n\n```js\n/**\n * 计算当前元素的left偏移量\n */\nconst getItemLeft = () =\u003e {\n  // 获取最小高度的列\n  const column = getMinHeightColumn(columnHeightObj.value)\n  // 计算left\n  return (\n    (columnWidth.value + props.columnSpacing) * column + containerLeft.value\n  )\n}\n```\n\ntop偏移量的计算，我们可以直接拿到最小高度列高就行\n\n```js\n/**\n * 计算当前元素的top偏移量\n */\nconst getItemTop = () =\u003e {\n  // 获取列最小高度\n  const minHeight = getMinHeight(columnHeightObj.value)\n  return minHeight\n}\n```\n\n**需要注意的是，我们在完成每次元素偏移量赋值的时候，都需要将最小高度列重新计算高度。**\n\n```js\n/**\n * 重新计算最小高度列高度\n */\nconst increasingHeight = (index) =\u003e {\n  // 获取最小高度的列\n  const column = getMinHeightColumn(columnHeightObj.value)\n  // 该列高度重新计算\n  columnHeightObj.value[column] =\n    columnHeightObj.value[column] + itemsHeight[index] + props.rowSpacing\n}\n```\n\n最后将最大高度列高度赋值给容器高度即可。\n\n```js\n// 渲染位置 \nconst useItemLocation = () =\u003e {   props.data.forEach((item, index) =\u003e {     \n// 避免重复计算     \nif (item._style) return    \n// 拿到最小高度，计算_style中的left， top     item._style = {}     item._style.left = getItemLeft()     item._style.top = getItemTop()     // 每次设置完偏移量时，都需要更改最短列的高度。     increasingHeight(index)   })   // 当所有item设置好偏移量时，将容器高度设置为列最高的高度   containerHeight.value = getMaxHeight(columnHeightObj.value) }`\n```\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%83%A7%E6%8E%89%E6%95%B0%E5%AD%A6%E4%B9%A6%E9%87%8D%E6%96%B0%E5%8F%91%E6%98%8E%E6%95%B0%E5%AD%A6":{"title":"《 烧掉数学书：重新发明数学 》","content":"\n# 《 烧掉数学书：重新发明数学 》\n\n# 元数据\n\n\u003e [!abstract] 烧掉数学书：重新发明数学\n\u003e - ![ 烧掉数学书：重新发明数学|200](https://weread-1258476243.file.myqcloud.com/weread/cover/62/YueWen_39888734/t7_YueWen_39888734.jpg)\n\u003e - 书名： 烧掉数学书：重新发明数学\n\u003e - 作者： 杰森·威尔克斯\n\u003e - 简介： 《烧掉数学书》是一本全新概念的数学科普。这本书的一大特点是抛开传统晦涩的数学符号和讲述方式，另起炉灶，从零开始，用年轻人易于接受的语言阐释高深的数学知识和概念。这本书打破了数学教育界认为在讲授微积分之前必须花大量时间和精力学习微积分的严格化基础的惯例，从理解微积分本身的用途和方法着手，反过来再提出微积分基础严格化的问题，从而顺理成章地引出极限和逼近等概念。这种方法更符合人们的学习和认知规律，让人能自然而然地接受和理解这些抽象的概念和技巧的源流和必要性，从而为深入的学习打下好的基础。\n\u003e - 出版时间 2020-10-20 00:00:00\n\u003e - ISBN： 9787571004071\n\u003e - 分类： 科学技术-自然科学\n\u003e - 出版社： 湖南科学技术出版社\n\n# 高亮划线\n\n## 前言\n\n- 📌 因此如果你有一个弯曲的问题，只需想象不断放大直到看上去像直的，在比较容易的微观层面解决问题，然后再缩小回去。你就把问题解决了。 ^39888734-3-2439-2502\n    - ⏱ 2022-02-09 10:21:19\n\n## 致专业读者\n\n- 📌 我要强调，“方程”和“公式”这些唬人的字眼只不过是“句子”的另一套说辞：我会尽量澄清，所有的数学符号都只不过是我们可以用口语表述的事物的缩写： ^39888734-4-3944-4015\n    - ⏱ 2022-02-09 10:28:48\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%87%83%E6%B0%94%E7%83%AD%E6%B0%B4%E5%99%A8":{"title":"燃气热水器","content":"\n# 燃气热水器\n\n拆解结论:线上 5499 和线下 2899 的林内热水器 完全一样\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%88%86%E6%AC%BE%E5%B0%8F%E7%BA%A2%E4%B9%A6%E4%BB%8E%E9%9B%B6%E5%88%B0%E7%99%BE%E4%B8%87%E7%B2%89%E4%B8%9D%E7%9A%84%E7%8E%A9%E8%B5%9A%E7%AD%96%E7%95%A5":{"title":"《爆款小红书：从零到百万粉丝的玩赚策略》","content":"\n# 《爆款小红书：从零到百万粉丝的玩赚策略》\n\n#input\n\n## Meatdata\n\n- author： [[吕白]]\n- link：[得到APP - 知识就是力量，知识就在得到](https://www.dedao.cn/ebook/reader?id=gO8xJGVarB2qEQoplXvY14JRbVdnz0zgnMWjPmyDANKge8O65LG7Mk9xZYk69Zry)\n- tag：\n- date: [[2022-06-16]]\n- Notes:\n\n## 读前准备\n\n1. 有什么可复制的方法\n2. 最重要的是什么\n3. 能找到针对性的领域吗\n\n## 总结\n\n### 书中提到的 UP主\n\n1. @活力少女阿珍\n2. 裤子说香水\n3. 暖男美食\n4. 聘爷数学课堂\n5. @烤箱外的守望者和@JeanHsiao\n6. @法拉学姐\n7. @vivi 维姨\n8. @阿媛学姐、小书卷儿、小吕行不行、云朵喜儿、乔书\n9. 云蔓创业说\n\n### 不要自我陶醉\n\n你知道你在刚刚的描述中，说了多少个‘我’吗？你做的这篇笔记就是在取悦你自己，全是从你的角度出发的，没有思考用户看到这篇笔记会有什么感觉，就只一味地沉浸在自己的世界里，完全是在自我陶醉。\n\n做小红书最重要的是明白利他的重要性，从用户角度出发来解决用户的需求，要给用户一种“看见即能用”的印象。那么如何做到不“自我陶醉 ”呢？\n\n第一，找到自我表达与用户需求之间的交集。  \n你可能想表达的事情有一百件，但大家只想听你说三件。这三件一定是你与用户之间有关联，并且是站在用户角度考虑、对用户有价值的。这样才能让用户产生共鸣。  \n第二，没人关心你的内容多完美，他们只关心自己的需求是否被满足。  \n小红书博主@老明读书，我们对比他的四篇笔记可以发现，《克服拖延症的有效办法》这篇点赞数高达 2.6 万，《了解然后战胜拖延症》这篇同样围绕“拖延症”来做选题，但点赞数只有 1000 多。这是什么原因呢？\n\n### 爆款都是重复的\n\n1. 按照“选题”、“最热“”、“图文”三个维度筛选，找出爆款的规律\n2. 打造出爆款首先要做的是拆解爆款、分析爆款，要先看过足够多的爆款内容。比如你是做美妆的，就去寻找小红书排名前十的美妆博主，拆解他们的优质作品；或者搜索某一单品的关键词，看一下和它相关的爆款内容。然后将爆款笔记进行汇总，从选题、标题、封面、内容、排版等方面分别拆解，寻找共性，寻找火爆原因，再融入你的笔记中。\n\n### 要非常 专一\n\n“做小红书，你要非常专一，选择一个细分领域，把它做到最好，成为这个领域的头部，这样你才有可能成为大 V。\n\n### 精准定位\n\n“定位三问法”：找到你的精准定位  \n第一，你被人夸过什么/哪些方面？  \n第二，别人是否愿意为夸你的点付费？  \n第三，你为什么东西付出最多\n\n1. 通过 [[职业性格测试理论]] 来寻找自己的精准定位\n2. 设计一个简单的付费小产品测试别人是否愿意为你 付费\n3. **你为什么东西付出最多？** 认真回忆你过往的成就：你曾经拿过哪些奖？你为了什么事花的时间最多（不管喜欢还是不喜欢），主动行动还是被动接受？通通列举出来，用笔在纸上写下来。接着，思考这些事情是否有交集。\n\n什么是“拉片”？分析对标博主的内容，0—10 秒讲什么？10 秒—1 分钟讲什么？1—3 分钟讲什么？结尾 10 秒又讲了什么？用了什么音效？用了什么音乐？镜头是近景、中景还是远景？  \n在分析了数十篇笔记，对视频形式做了非常细致的研究之后，她发现可以补充和模仿一些细节。结构由原来的总分总改为了起承转合，也添加了黄金开头、10 秒共鸣故事吸睛等形式，同时缩短了内容时长，从 6 分钟缩短到 3 分钟。在表现形式上又升级了进度条样式。\n\n**定位不准，粉丝质量不高，所以广告变现才不稳定。**\n\n### 先发散 后聚焦\n\n你要明白一个事实：有时候我们的感觉是错的，要敬畏数据，敬畏用户。通过具体、实际的数据，让小红书社群用户明确告诉你，哪些领域容易出爆款  \n“10-3-1聚焦法”？如何先发散再聚焦？  \n10：根据定位三问法，挖掘出你最擅长的3个领域。在这3个领域中，分别找10个爆款选题进行尝试，总共尝试30篇日更内容。  \n3：对比数据，分析哪个领域的选题的市场数据好。从这30篇笔记中筛选出最火的3篇，聚焦这3篇所属领域，深挖细分的关键词并尝试。  \n1：最后通过数据分析，确定最火的那 1 篇笔记的选题内容。不断挖掘细分关键词，聚焦这个领域选题，垂直创作这方面内容，不断模仿爆款做出爆款。\n\n### “号设化”运营\n\n1. 昵称。取昵称最重要的目的是让用户知道你是谁、你能做什么、你做的事情是否对他有帮助，让他更加清晰地认知你的价值，从而给他一个关注你的理由。  \n\t**爆款昵称=简单好写常见的昵称+内容细分领域**\n2. 头像。而关于头像的选用，我建议用本人真实的照片，这样能拉近与用户之间的距离，可信度也比较高。至于背景，建议以简单为主。可以选用自己的职业形象照，也可选用生活照、旅游照等。  \n\t除了“真实+好看”的头像风格，许多博主也会采用动漫形式和品牌标志形式。\n3. 主页也是可以体现你价值的地方，千万别浪费了，这是天然的广告位，可以再一次展示你的定位，给你带来潜在价值。Ps: 这里所说的广告位不是让你放微信号引流，放了会被官方打击的。  \n\t你可以审视你的定位，用一句话描述出来，再配上一张唯美且符合你人设的图片，可以是网络上的公版图也可以是优质的生活图，配上一句你的口号，这样能够再次告诉用户你能帮助他们什么。图片要切合自己的定位和调性。\n\t1. 少女壁纸 iOS\n\t2. 堆糖 iOS /Android\n\t3. 每日壁纸杂志 iOS/Android\n\t4. WalP iOS/Android\n\t5. Pexels iOS/网站\n\t6. 壁纸精选小程序  \n\t\t在制作主页图之前，有三个值得你不要忽视的细节问题：第一，小红书主页图尺寸长宽比为 5∶4；第二，图片上传到小红书主页后颜色会变暗；第三，下拉你的主页，图片会被放大\n4. 简介：一句话讲明你是做什么的. 获得用户关注的本质是，你刚好需要，我恰好专业。\n\t1. 我很专业：数据化描述+具体领域定位，还可通过添加 emoji 表情来分清层次，避免单调乏味。\n 2. 我很特别：高级文案+共情话术。高级文案能彰显你的个人品牌，适用于有一定影响力和特殊经历的人，通过差异化来显示自己的特别，轻松获得用户关注。\n3. 我很厉害：表达重点就在于“一句话概括一段经历”，把悬念抛给用户，继而吸引用户浏览和关注，适用于头部博主和具有超强经历和超高成就的人，起到标新立异的作用，快速体现博主的 IP 价值\n\n### 从零做出爆款笔记\n\n#### 标题\n\n第一，建立起属于你自己的爆款选题库。我要求团队根据定位建立爆款选题库，找到各个领域下的爆款笔记，记录热门标题、关键词、数据，再模仿爆款标题并优化标题。  \n第二，利用关键词找爆款选题，先模仿再超越。  \n第三，高赞评论是一把利器，加以利用可形成新的爆款选题。  \n第四，从对标博主的内容中找爆款选题。  \n从更大的角度讲，我们可以发现这些内容都是基于用户的情绪、状态、痛点来进行分享，那么我们就可以尝试更大的选题框架：情绪状态+解决指南、锦囊秘籍+书籍书单、热门思维+爆款关键词，源源不断地围绕这些题型进行输出。  \n第五，从站外其他平台寻找爆款选题。  \n**千瓜数据**、**群量**\n\n[[如何让你的标题更吸睛]]\n\n#### 图片：利用手机软件轻松搞定封面和内页图\n\n记住一个公式：爆款封面=拼图+花字。  \n第一步，使用“美图秀秀”的“拼图”功能。  \n将 9 张内页用美图秀秀的“拼图—模板”功能拼接起来，制造出“有价值、内容丰富”的视觉效果，让目标用户有点开笔记的欲望。拼接图除了 9 张，还有 6 张、4 张等形式。  \n第二步，使用 “图片美化”里的“文字”功能，给图片加上文字标题。  \n选用鲜艳醒目的颜色，重点内容可以用红色突出。字体尽量大，保证清晰、易识别，不要使用花哨的字体，封面文字的作用是传达内容信息，需要强调的重要文字可以将字体放大。  \n**“稿定设计**\n\n#### 内容：套用“开头+中间+结尾” 三段式模板，做出爆款内容\n\n开头：重复关键词，建立自己与内容的联系，多用强调词  \n中间：百度搜索你的笔记中的关键词，选取其中的内容（大概控制在 200～500 字）；一句过渡句+表情+段前用“·”隔开  \n结尾 ：号召点赞、收藏和互动，加关键词并@官方号，加上讨论度高的话题。\n\n### 掌握流量\n\n小红书的推荐模式是“中心化分发”。当你发布笔记后，平台会根据你设置的标签提取笔记中的高频词，给可能感兴趣的用户进行第一波流量推荐。根据这些用户的行为数据（点赞、收藏、评论或分享），平台算法会判断你的笔记是否受到推荐用户的喜欢。如果数据满足第一波推荐阈值，笔记会进入更大的流量池并扩大推荐，给予更多曝光的机会……\n\n#### 社交裂变推荐逻辑\n\n- ）点赞推荐。在小红书中，如果你的笔记内容被其他博主点赞，平台也会推荐给他的粉丝，来增加你笔记的曝光量。推荐结交同行业 博主\n- 过万收藏、分享推荐。你的小红书笔记收藏量过万之后，笔记会有特殊标识，且算法会帮你推荐到用户的“首页—发现”界面进行曝光。\n- 百万浏览推荐\n\n#### 发布时间\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220616145707.png)\n\n### 复盘\n\n### 变现\n\n#### 商业广告变现\n\n1. 交换物品变现。商家在推出新产品时有投放和宣传需求，他们会给小红书博主免费邮寄一套产品，小红书博主为其创作一篇宣传产品的笔记作为交换。\n2. 替换广告文案图片变现。替换文案和图片，是基于小红书可不断修改已发布笔记的功能，而衍生出的商业变现模式。具体可细分为替换文案类广告、替换图片类广告、替换图片和文案类广告。\n3. 品牌合作广告变现。品牌合作广告变现是小红书常见的变现形式之一，即商家付费给小红书博主，博主按照商家的要求创作一篇图文或视频笔记，宣传商家品牌或商品。一般为软性广告形式，既符合博主的定位，给用户提供价值，又可为商家宣传商品，达到共赢。这类变现方式的费用一般由粉丝量和笔记数据决定。博主粉丝量越大，广告费用报价越高。  \n\t![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220616150938.png)  \n**品牌方对接平台——蒲公英平台，需要自荐后耐心等待平台的推广邀请。**\n\n#### 带货变现：开店和开展商品合作，实现带货变现\n\n1. 开薯店带货变现.。专业号只要个人实名认证成功，就可以申请开薯店，无粉丝量要求，但后续还须交纳保证金，并将佣金与平台按一定比例分成。\n2. 商品合作带货变现。商品合作须认证为专业号，其申请条件是粉丝数超过 1000。  \n商品合作，即专业号可以在小红书直播、小清单中添加商品卡片进行带货，若用户通过商品卡片购买商品，专业号可获得相应的佣金收入。\n\n#### 私域引流变现：\n\n私域引流变现适合有自己 IP 和产品的博主，博主通过小红书产出内容（图文笔记、视频笔记、直播）涨粉，留资源钩子。在私信中回复自己的微信号进行引流，或者在简介中留微信号、微信公众号，在私域中通过 IP 打造，实现变现。\n\n#### 课程变现：把技能打造成课程，实现课程变现\n\n### 拆稿\n\n三遍拆解法。也就是说，详细拆解一条小红书爆款笔记，至少需要看三遍。  \n第一遍，纯用户视角观看笔记内容。  \n回想自己看到了什么，它是否一下子吸引了你的眼球？你能否提取出要点，建立大致框架？笔记有没有点题升华，有没有激发你点赞、转发的冲动？按照这个思路，我们看完第一遍，并把相关感受记录下来。\n\n第二遍，灵活运用平台算法，为爆款笔记打上标签。  \n从大的类别到小的类别，从一级到二级再到三级，不断细化。  \n比如：娱乐笔记的一级标签是娱乐，二级标签是电影剪辑，三级标签是周星驰、刘德华等；搞笑笔记的一级标签是搞笑，二级标签是搞笑配音，三级标签是方言配音等；知识笔记的一级标签是教育，二级标签是英语教学，三级标签是日常口语教学等。  \n为何需要拆解至第三级标签？意义在于它能让你对每个领域及其细致分支有更深的认识，便于分析出每一细分标签所对应的爆款笔记。  \n算法的分配机制就是把标签与内容进行连结，内容与标签越贴合，关键词重复频率越高，算法就越容易把精准的流量引到你身上。  \n第三遍，关注评论区，尤其注重Top10评论。  \n热门评论能够让用户与博主距离更亲近。我们也可以在热门评论中挖掘用户感兴趣的内容，整理到素材库中。  \n从笔记内容，到标签，然后再到评论区，三遍拆解法能够全方位帮你分析爆款笔记成为爆款的缘由。\n\n## 闪念\n\n- 我想做个人 IP，我想要分享读书，但是读书这个事对别人带来了什么价值呢？\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E7%88%AC%E5%8F%96%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E8%A7%86%E9%A2%91":{"title":"Charles","content":"\n# Charles\n\n找到类似这样的文件 (https://dtliving-bj.dingtalk.com/live_hp/db2c1980-2464-44eb-82f9-ce551a19ac4c/1.ts?auth_key=1657610967-0-0-8641c4af2920746fffb3f44fd5b693e5 )  \n然后快速播放一遍，得到所有的片段\n\n# M3U8-Downloader\n\n进行批量下载并合并\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%88%B1%E5%B0%94%E5%85%B0":{"title":"爱尔兰","content":"\n# 爱尔兰\n\n[[爱尔兰人]]\n","lastmodified":"2023-09-18T14:54:47.578454671Z","tags":null},"/%E7%89%9B%E9%A1%BF%E4%B8%96%E7%95%8C%E8%A7%82":{"title":"牛顿世界观","content":"\n# 牛顿世界观\n\n（1）地球围绕自身轴线旋转，大约每 24 小时旋转一周。  \n（2）地球和行星沿椭圆形轨道围绕太阳运转。  \n（3）宇宙中基本元素的种类略多于 100 种。  \n（4）物体表现出来的运动特征主要受外力影响（比如重力，这就是为什么石头会往下落）。（5）组成像行星和恒星这样的物体的基本元素与组成地球上物体的基本元素相同。（6）描述地球上物体运动行为的规律（比如，一个正在运动的物体趋向于保持运动状态）同样适用于行星和恒星这样的物体，等等。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%89%B9%E5%8F%98%E7%94%B5%E5%B7%A5":{"title":"特变电工","content":"\n# 特变电工\n\n![[Pasted image 20210916193832.png]]\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%89%B9%E5%BE%81%E5%AD%98%E5%9C%A8%E6%95%88%E5%BA%94":{"title":"特征存在效应","content":"\n# 特征存在效应\n\n这种现象是指，我们倾向于高估（在心理上）容易获得的信息的重要性，并使我们的思维向最近获得的事实倾斜，而不一定是最相关的事实。如果没有外力的帮助，我们可能只会考虑自己知道的东西，却考虑不到已经忘记的那些信息[20]，这样的信息有很多，只是我们大多都不记得了，也找不到了，而卡片盒可以不断地提醒我们早已遗忘的信息。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%89%B9%E9%AB%98%E5%8E%8B":{"title":"特高压","content":"\n# 特高压\n\n特高压  \n特高压线路还能提高中国对可再生能源的利用。这也是中国实现习近平主席到 2060 年实现[碳中和](https://www.sixthtone.com/news/1006222/chinas-pledge-to-be-carbon-neutral-by-2060%2C-explained)的承诺所必须的。远距离调度电力可以缓解风电和光伏发电的波动性特点，让特高压成为[抗击气候变化的关键](https://www.rechargenews.com/wind/us-climate-targets-unreachable-without-high-voltage-trunklines-ferc-chief/2-1-974814)。\n\n特高压。没有问题，越是缺电限电，越要发展特高压，无论是风电、光伏还是水电啥的，都要依赖特高压。特高压里弹性最大的就是那个绝缘子，\n\n##相关公司  \n[[四方股份]]  \n[[特变电工]]  \n[[大连电瓷]] 9.国电南瑞；  \n8.许继电气；  \n7.平高电气；  \n6.中国西电；  \n5.长高集团；  \n4.保变电气；  \n3.电科院；  \n2.特变电工；  \n1.四方股份\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F":{"title":"优缺点","content":"\n# 优缺点\n\n状态模式的优点如下。\n\n- 状态模式定义了状态与行为之间的关系，并将它们封装在一个类里。通过增加新的状态类，很容易增加新的状态和转换。\n- 避免 Context 无限膨胀，状态切换的逻辑被分布在状态类中，也去掉了 Context 中原本过多的条件分支。\n- 用对象代替字符串来记录当前状态，使得状态的切换更加一目了然。\n- Context 中的请求动作和状态类中封装的行为可以非常容易地独立变化而互不影响。\n\n# 与[[策略模式]]的区别\n\n策略模式和状态模式的相同点是，它们都有一个上下文、一些策略或者状态类，上下文把请求委托给这些类来执行。\n\n它们之间的区别是策略模式中的各个策略类之间是平等又平行的，它们之间没有任何联系，所以客户必须熟知这些策略类的作用，以便客户可以随时主动切换算法；而在状态模式中，状态和状态对应的行为是早已被封装好的，状态之间的切换也早被规定完成，“改变行为”这件事情发生在状态模式内部。对客户来说，并不需要了解这些细节。这正是状态模式的作用所在。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88":{"title":"状态管理方案","content":"\n# 状态管理方案\n\n那如果应用中存在多个共享对象，我们又该怎样管理这些对象呢？\n\n## 根据模块进行划分\n\n## 使用树状结构管理数据\n\n## 数据变更\n\n### 事件监听与触发；\n\n[[事件委托机制]]\n\n### 单向数据流\n\n[[Vuex]] / [[Redux]] / [[Flux]] 这些热门的状态管理工具库设计思想都基于单向数据流，它们采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。  \n在全局数据的使用变频繁之后，我们在定位问题的时候还会遇到不知道这个数据为何改变的情况，因为所有引用到这个全局数据的地方都可能对它进行改变。\n\n这种情况下，给数据的流动一个方向，则可以方便地跟踪数据的来源和去处\n\n### 响应式数据流。\n\n响应式数据流的设计基于响应式编程方式，响应式编程同样基于观察者模式，它是一种面向数据流和变化传播的声明式编程方式。在前端领域，常见的异步编程场景包括事件处理、用户输入、HTTP 响应等。\n\n对于这样的异步数据流，可以使用响应式编程的方式来进行设计，通过订阅某个数据流，可以对数据进行一系列流式处理，例如过滤、计算、转换、合流等，配合函数式编程可以实现很多优秀的场景。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B6%E8%AF%AD":{"title":"状语","content":"\n# 状语\n\n状语（adverbial，简称 adv.）是句子的一个重要修饰成分，是谓语里的另一个附加成分。从情况、时间、处所、方式、条件、对象、肯定、否定、范围和程度等方面对谓语中心词进行修饰、限制。在不同的语言中“状语”有不同的作用，中文状语是动词或形容词前面的连带成分，用来修饰、限制动词或形容词，表示动作的状态、方式、时间、处所或程度等；英语状语修饰动词、形容词、副词或整个句子；德语状语修饰动词、形容词、副词或整个句子。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B9%E5%A4%A7%E5%9B%BD":{"title":"犹大国","content":"\n这个犹大不是《圣经》中出卖耶稣的犹大，它就是犹太人的意思。其实在西方的语言中，犹太和犹大是一个词，只是犹大因为出卖耶稣名声不好，不适合作为一个民族的称呼，因此后来就被翻译为犹太。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B9%E5%A4%AA%E4%BA%BA":{"title":"犹太人","content":"\n# 犹太人\n\n犹太人不是来自哪一个国家或属于哪一种文化，而是来自许多的国家并属于不同的文化。\n\n尽管因寄居的国家不同而产生了文化上的断裂。甚至内部在宗教理论和实践上也存在着分歧，但是犹太人不仅供奉古代以色列的同一始祖，分享宗教信仰和历史传统的共同内核，而且作为少数种族，不管旅居何处，都曾有在不同程度上长期遭到异族敌视的悲惨经历。\n\n基督教在整个欧洲取代了多神信仰之后，**犹太人变为欧洲大陆唯一不信奉基督教的民族**，故所到之处皆成“局外人”。这就使犹太人在基督教狂热时期（比如[[十字军东征]]）或宗教大恐怖时期（比如中世纪不时发生毁坏整个地区的灾祸）处于自身难保的境地。\n\n## [[犹太人的历史]]\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8A%B9%E5%A4%AA%E4%BA%BA%E7%9A%84%E5%8E%86%E5%8F%B2":{"title":"犹太人的历史","content":"\n# 犹太人的历史\n\n## 圣经版本\n\n根据《圣经》的记载，犹太人的始祖是[[亚伯拉罕]]，他生活在公元前 2000 年左右。亚伯拉罕的妻子撒拉因为不能怀孕，就把自己的埃及女仆夏甲送给丈夫做妾，不久后夏甲便怀孕了。怀孕后，夏甲地位上升，对撒拉处处忤逆。撒拉心生愤怒，于是苛待夏甲，夏甲不得已逃走。\n\n在旷野，夏甲遇到天使指点，返回亚伯拉罕身边。夏甲回去后，对撒拉百般顺从，不久后便生下一个孩子，取名为以实玛利。以实玛利十四岁那一年，撒拉也生下了一个儿子叫以撒。在以撒断奶时，撒拉却发现以实玛利在戏笑以撒，心中不快。于是，撒拉就怂恿亚伯拉罕将夏甲母子赶走。\n\n亚伯拉罕虽心中不愿，但上帝却指示他去照做。于是次日清晨，他给夏甲母子水和一些干粮，打发他们离开。\n\n夏甲带着儿子以实玛利准备重回埃及，却走迷了路，而这时随身携带的水也喝尽了。夏甲只好让以实玛利在树下等待，自己去找水。这时天使又出现了，他指引着夏甲发现了一口水井，成功取到了水。\n\n以实玛利喝过那口井里的水后，变得十分强大。长大后的以实玛利善骑射，成为了阿拉伯人的祖先。\n\n亚伯拉罕的小儿子以撒一直生活在迦南，他后来娶妻生了一对孪生兄弟以扫和雅各。雅各，就是犹太人的祖先。雅各后来改名以色列，意思是“和神搏斗的人”，因为神为了训练他，曾经和他摔跤。而因为《圣经》的记载，雅各和神搏斗的时候伤了脚筋，所以犹太人后来在宰杀动物时，都要把脚筋挑出来丢弃。\n\n在《圣经》中，雅各后来有 12 个儿子，象征着后来犹太人的 12 个部落。在这 12 个儿子中，有一个叫约瑟的人深得神的喜爱。他的哥哥们嫉妒他，要害死他，但是后来几个哥哥们回心转意，饶他一命，把约瑟卖给了阿拉伯商人带到了埃及。以后，约瑟就生活在埃及，这一支犹太人便在此地繁衍。\n\n在埃及生活的犹太人受到当地人的迫害，后来，他们在首领摩西的带领下，离开了埃及，重返迦南，建立了自己的国家。这就是《圣经》旧约中非常著名的一段故事，《出埃及记》。\n\n在走出埃及的过程中，摩西把毫无组织的一群犹太人按照军事编制组织起来，制定了犹太民族的法律和管理方式，规定了著名的十条戒律，即摩西十诫。犹太教作为真正意义上的宗教，正是诞生于这一时期。\n\n## 考古版本\n\n首先，以色列的历史可能没有那么长。因为今天能够发现的、最早提到“以色列”的文字记载，是记录在麦伦普塔赫石碑上的。这块石碑又名以色列石碑，记录了公元前 1213 年到公元前 1203 年麦伦普塔赫法老的故事。\n\n从亚伯拉罕所在时期，也就是公元前 2000 年开始算，到麦伦普塔赫石碑，这中间有大概 800 年的时间。而如果一个民族在有文字的年代已经存在了 800 年，它不太可能在之前没有任何相关的文字记载。\n\n**此外，犹太教一开始并不是一神教，它正式成为一个一神宗教的最早记载，是在希腊化时期**（公元前 323 年-公元前 31 年）。\n\n比如，在公元前 1351 年-前 1334 年之间，埃及法老阿肯那顿进行了宗教改革，把埃及的多神教改成了一神教。但这位法老死后，宗教改革就失败了。根据一些学者的研究，摩西应该是那个时期的贵族甚至王室成员。他支持宗教改革，在改革失败后带领了一部分犹太人离开埃及，并且在这群犹太人中传播了一神教。\n\n另外，在古埃及的一些壁画中，人们也看到了古埃及人将亚洲人贬为奴隶并加以驱使的图像。根据研究发现，这些壁画的绘画时间，大致上与《圣经》上记载的事情相距不远。\n\n关于犹太民族的历史，比较可信的部分是他们回到迦南建国之后的经历，也就是从公元前 14 世纪开始，这基本上和《出埃及记》的时间一致。在迦南，犹太人从游牧民族转为农耕定居的民族，并开始逐步征服原本在这里生活的迦南人。\n\n公元前 11 世纪末，犹太人的首领，扫罗和大卫联合以色列各部落，建立常备军，抗击外来入侵者，后来大卫被推举为以色列国王。而后，大卫之子所罗门继承了王位，在耶路撒冷建造了所罗门圣殿。这段以色列的历史，通常被称为“第一圣殿时期”。在所罗门王执政的后期，他大兴土木，引起民怨，以色列由此分裂成北边的以色列国和南方的[[犹大国]]。\n\n以色列的第一圣殿时期并不长，它在内部得不到犹太人的支持，在外部还有亚述帝国这个强敌，很快被亚述帝国灭亡了。此后，南方的犹大国就取代了以色列，成为犹太人唯一的政权。\n\n后来，新巴比伦国王尼布甲尼撒二世，也就是建造了那个著名的[[巴比伦空中花园]]的君主，在公元前 586 年灭亡了犹大王国，犹太圣殿也被烧毁。至此，犹太历史上的“第一圣殿时期”结束。亡国之后，犹太民族失去了自己的国土和家园，而大批犹太精英作为俘虏被带到巴比伦，史称“[[巴比伦之囚]]虏”，第一圣殿时期结束。\n\n70年后，[[波斯帝国]]的居鲁士大帝灭亡了新巴比伦，犹太人被解放了。[[居鲁士大帝]]对犹太人采用了宽容的宗教政策，并且资助了犹太人回到耶路撒冷建造了第二座犹太教圣殿，从而开创了“第二圣殿时期”。\n\n**在波斯的居鲁士大帝统治时期，犹太人中，又出了两位伟大的先知——[[以斯拉]]和[[尼希米]]**\n\n这段时期前后持续了 500 年，直到公元 70 年，[[罗马帝国]]占领了西亚，犹太人因反抗罗马帝国暴政被镇压。当时，耶路撒冷被攻陷，犹太圣殿也被焚毁，仅留下西边一道围墙，那便是今天的哭墙。\n\n从第一圣殿时期结束开始，犹太民族几乎一直在迁徙。因为巴比伦之囚这件事，很多犹太人包括很多精英也被流放到巴比伦各地。在第二圣殿时期，也并非所有的犹太人都回到了耶路撒冷，他们迁徙到西亚各地，就在那里生活了下来。\n\n散布到各地的犹太人，主要是靠对于犹太教的信仰联系在一起的。这个民族有一个特点，就是难被其他文化同化。因此，他们经常受到当地人的排挤甚至迫害。但是在历史上，犹太文明和伊斯兰文明却算是相处融洽。\n\n从公元六世纪开始，伊斯兰教为犹太人的经济、社会和知识的发展创造了新的条件。穆罕默德的继承人，四大哈里发之一的欧麦尔·本·赫塔卜甚至允许犹太人在伊斯兰教的圣地——[[耶路撒冷]]，重新建立他们的家园，并且给予了他们已经丧失了五百年的权力和地位。因此，犹太人将欧麦尔·本·赫塔卜称为仁慈的统治者，“以色列的朋友”\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8C%8E%E8%B5%9D":{"title":"《 猎赝 》","content":"\n# 《 猎赝 》\n\n# 元数据\n\n\u003e [!abstract] 猎赝\n\u003e - ![ 猎赝|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/551/26160551/t7_26160551.jpg)\n\u003e - 书名： 猎赝\n\u003e - 作者： 柳下挥\n\u003e - 简介： 猎取的不仅仅是赝品，还有人心。  \n这是一个男女主角在知道彼此身份的情况下互飙演技的故事。  \n VIP群：9555-74517（同桌、猎赝、龙王，任一本书全订）\n\u003e - 出版时间\n\u003e - ISBN：\n\u003e - 分类： 男生小说-都市小说\n\u003e - 出版社：\n\n# 高亮划线\n\n## 我喜欢你，你呢？\n\n- 📌 ^26160551-115-1894\n    - ⏱ 2019-10-27 20:20:22\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8E%8B%E5%BE%B7%E5%8F%91-%E6%9C%AC3-p6":{"title":"基本资料","content":"\n# 基本资料\n\nXxx / 男/ 1995 / 本科 / 计算机科学与技术专业 / 3.5 年⼯作经验  \n⼿机 (微信)： xxxxx / Email： x'x'x@foxxmail.com  \n应聘职位：前端⼯程师\n\n# 个⼈概况\n\n- 熟练掌握 ES6 ，对于 JS 闭包、原型、作⽤域链闭包等知识有深⼊理解\n- 掌握 Vue 2.x 及相关⽣态，并知晓其原理\n- 对于 Vue 3.2 、 React 也有⼀定了解，有实际项⽬经验\n- 有微前端经验，了解微前端原理，包括⼦应⽤资源获取， JS 沙箱， CSS 样式隔离，基座与⼦应⽤数据通讯\n- 对技术抱有好奇⼼，习惯⽤技术解决问题。利⽤开源技术写了⼀个微信机器⼈⽤来查询基⾦情况，\n- 写了两个 Chrome 插件提⾼效率\n\n# 教育背景\n\n- 2014.09-2018.06 ，本科：安徽⼯程⼤学机电学院，计算机科学与技术\n\n# ⼯作经历\n\n## 易豹⽹络科技杭州分公司 ( 2020 年 7 ⽉ ~ ⾄今)\n\n- 承担重构宁波申报业务，⽤ Vue 2.6 + Element UI 重构前后端未分离的技术栈为 jQuery 、MiniUI 的⽼项⽬。各业务侧统⼀的⻛格和使⽤上的优化得到业务⽅的认可；同时极⼤提⾼开发效率。\n- 主动重构、优化公共指令，封装业务组件等\n  - 重构回⻋进⼊下⼀个输⼊框指令 (⼤型表单项⽬)，解决业务使⽤⻚⾯卡顿\n  - 优化拖拽指令，提升使⽤体验\n  - 提取封装各关区公⽤业务组件，随附单据等\n- 参与团队微前端⽅案选择并落地，为了解决系统使⽤时间⻓卡顿，以及拆分项⽬，时间各⻆度考虑，我们选择了使⽤ iframe 。我负责宁波关区的集成，包括路由拆分，采⽤ postMessage 与基座通讯等。\n- 积极参与新项⽬，主动接⼿其他⼩组同事的 React Hooks + umi + dva 数据中⼼项⽬，封装图表组件。不断扩宽⾃⼰技术边界。\n- 把基座应⽤( Vue2.6 ) 升级为 Vue 3.2 + Element Plus 并已上线。这是我独⾃升级，完成后推向前端开发团队。升级过程重我主要做了： Vuex (⽤户权限) 、 Vue-Router 、 Element、 layout (基座⻚⾯布局) 、EventBus (事件发布订阅) 、 initFrame (我们的通讯 plugin )\n- 积极参与团队内 Code Review ，技术分享等，我分享的包括\n  - 浏览器⼯作原理\n  - 回⻋指令优化\n  - Vue 升级踩坑要点\n  - 微前端原理以及各⽅案对⽐( iframe， MicroApp , webpack5 module Federation )\n\n## 拓尔思杭州分公司 (2019 年 6 ⽉ ~ 2020 年 7 ⽉)\n\n- 天⽬云 (⼤型稿件签发管理系统) , 此项⽬是基于 angularJS1.x + gulp 开发。迭代过程中，通过学习 gulp 配置，产出⼀个基于 gulp-cli 的静态⻚的打包⼯具。模版制作⼈员通过该⼯具，可以快速利⽤ HTML+JS+CSS 开发各种官⽹项⽬，提⾼⽣产⼒。\n- 负责可视化⼤屏项⽬中，⼤屏检测中⼼，综合态势，传播评测系统等⼤屏。沉淀各种公共组件，如：仪表盘， Echarts 混合图表等\n\n## 杭州摩玩科技有限公司 ( 2018 年 5 ⽉ ~ 2019 年 4 ⽉)\n\n公司只有我⼀个前端。独⽴负责了以下项⽬：\n\n- 基于 Vue 2 的 PC 端学习⽹站。功能是以课程的形式，视频和图⽚播放。基于 Vue 2 的公众号 h5 。功能主要是微信⽀付，课程售卖。\n- 微信⼩程序。功能主要是上传作业 (视频、图⽚)\n- ⽀付宝⼩程序。功能主要是玩具租赁\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8E%B0%E5%AE%9E%E4%B8%BB%E4%B9%89":{"title":"现实主义","content":"\n# 现实主义\n\n#卡片/术语卡\n\n## 简介\n\n：xxxxx\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%8F%A0%E7%A9%86%E6%9C%97%E7%8E%9B%E5%B3%B0":{"title":"珠穆朗玛峰","content":"\n# 珠穆朗玛峰\n\n[大疆 MAVIC 3 飞越珠穆朗玛峰的视频。世界最高点原来这么小，就是一道突起的棱线。\\_腾讯视频](https://v.qq.com/x/page/s3354ebhx2a.html)\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%90%86%E6%83%B3%E5%9B%BD":{"title":"《理想国》","content":"\n在《理想国》中，[[柏拉图]]借苏格拉底之口，阐述了当时各种政治制度的本质和特点，然后构造出了一个理想城邦的模型。在那个理想的城邦中，司法理论和制度都是完美的，国家的管理依靠德行，政治体制则是君主政体和贵族政体的混合体，同时还要兼顾到平民的利益。这样既公正，又自由。柏拉图的这个理论，通常被认为是近代代议制政府的理论基础。因此，《理想国》不仅是柏拉图的代表作，也是人类历史上最有影响力的哲学和政治理论著作之一\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E7%90%86%E6%9F%A5%E5%BE%B7%E8%B4%B9%E6%9B%BC":{"title":"理查德·费曼","content":"\n# 理查德·费曼\n\n#卡片/人物卡\n\n- 国籍：[[美国]]\n- 生平：1918 年 5 月 11 日－1988 年 2 月 15 日\n- 身份：理论物理学家\n- 简介：以对量子力学的路径积分表述、量子电动力学、过冷液氦的超流性以及粒子物理学中部分子模型的研究闻名于世。因对量子电动力学的贡献，费曼于 1965 年与朱利安·施温格及朝永振一郎共同获得诺贝尔物理学奖。\n- [[曼哈顿计划]] 的一员\n\n## 费曼技巧\n\n很多人问费曼是如何做到在这么多领域都能获得成就的，费曼分享了他的一个技巧：他说他会在心中记住十几个他很感兴趣的问题，即使这些问题他不会主动拿出来钻研，但当他每次看到一些新的发现，新的研究成果的时候，都会把这些研究发现去匹配他心中的那些问题，看这些新的发现能不能解决那些问题。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%91%9E%E5%88%A9%E7%94%B7%E7%88%B5%E4%B8%89%E4%B8%96":{"title":"瑞利男爵三世","content":"\n# 瑞利男爵三世\n\n瑞利原名约翰·威廉·斯特拉特（John William Strutt），尊称瑞利男爵三世（Third Baron Rayleigh），1842 年 11 月 12 日出生于英国埃塞克斯郡莫尔登（Malden）的朗弗德林园。他的父亲是第二世男爵约翰·詹姆斯·斯特拉特，母亲叫克拉腊·伊丽莎白·拉图哲，是理查德·维卡斯海军上校的小女儿。瑞利以严谨、广博、精深著称，并善于用简单的设备作实验而能获得十分精确的数据。  \n他是在 19 世纪末年达到经典物理学颠峰的少数学者之一，在众多学科中都有成果，其中尤以光学中的瑞利散射和瑞利判据、物性学中的气体密度测量几方面影响最为深远。\n\n## 提取氮气实验\n\n剑桥大学的化学教授[[瑞利男爵三世 |瑞利]],他使用两种方法来分离氮气 \u003e 一种是通过化学家们熟知的办法，用氨气来制氮；另一种是从普通空气中，尽量地除去氧、氢、水蒸气等别的气体，这样剩下的就应该是纯氮气了然而瑞利却苦恼地发现两者的重量并不一致，后者要比前者重了千分之二。  \n这个重量差可能是由于空气里混有了一种不易察觉的重气体而造成的。在两者的共同努力下，氩气（Ar）终于被发现了，并最终导致了整个惰性气体族的发现，成为了元素周期表存在的一个主要证据。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%9F%E7%89%A9%E6%B4%BB%E5%8A%9B%E8%AE%BA":{"title":"生物活力论","content":"\n# 生物活力论\n\n#卡片/术语卡\n\n## 简介\n\n活力论者的观点是，有生命的物质和无生命的物质是不同的，因此适用于无生命物体的规律（比如牛顿定律）并不一定也适用于有生命的物体。\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%9F%E8%B4%A2%E6%9C%89%E6%95%B0%E4%BA%8C%E5%8D%81%E9%97%AE-2022.02.21":{"title":"生财有数二十问-2022.02.21","content":"\n# 生财有数二十问-2022.02.21\n\n人生的 20 个关键问题\n\n1. 你的 MBTI/Gallup/DISC 测试结果分别是什么，从中你了解到自己有什么特质？\n2. 你想成为哪个方面的专家，如果宣传自己，写在海报上的 3 个身份标签是什么？\n3. 你最常输入的信息源有哪几个，为什么是这几个？\n4. 对你影响最大的 10 个人、10 本书、10 部电影是什么，分别有什么影响？\n5. 你的知识结构是什么，能在哪个细分主题上写 100 篇文章或写一本书？\n6. 你擅长哪几项具体的技能，使用技能时需要用到什么生产力工具？\n7. 你的收入来源有哪几个，分别收入多少，哪些是可持续收入？\n8. 你对外卖的产品或服务是什么，怎么定价，怎么持续获客？\n9. 你获得收入后如何分配，其中哪些是投资性消费，哪些是不必要的消费？\n10. 你目前有哪些需求，优先级排序是什么，最急需解决的问题是什么？\n11. 你如何分配每天的 24 小时，做哪些事情？\n12. 你在一年里做的频次最多以及花时间最多的是哪 10 件事，它们对你有什么价值？\n13. 你认识多少人，目前最常联系哪些人，如果列 150 人清单，是哪些人？\n14. 哪些人对你的收入有贡献，哪些人帮你策划、为你背书、给你推荐生意、直接付钱给你？\n15. 你不喜欢和哪些人打交道，不喜欢社交中的哪些行为？\n16. 你最欣赏父母哪几点，最不满意父母哪几点？\n17. 你在什么时候会发怒，在什么时候会失落，在什么时候感到焦虑？\n18. 你选择伴侣的标准有哪几个，优先级怎么排序？\n19. 你为失业、大病、养老、子女教育做了哪些准备？\n20. 如果写 20 条人生原则，指导自己做什么和不做什么，是哪些原则\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%9F%E8%B4%A2%E6%9C%89%E6%9C%AF%E4%BA%8C%E5%8D%81%E9%97%AE":{"title":"生财有术二十问","content":"\n# 生财有术二十问\n\n人生的 20 个关键问题\n\n1. 你的 MBTI/Gallup/DISC 测试结果分别是什么，从中你了解到自己有什么特质？\n2. 你想成为哪个方面的专家，如果宣传自己，写在海报上的 3 个身份标签是什么？\n3. 你最常输入的信息源有哪几个，为什么是这几个？\n4. 对你影响最大的 10 个人、10 本书、10 部电影是什么，分别有什么影响？\n5. 你的知识结构是什么，能在哪个细分主题上写 100 篇文章或写一本书？\n6. 你擅长哪几项具体的技能，使用技能时需要用到什么生产力工具？\n7. 你的收入来源有哪几个，分别收入多少，哪些是可持续收入？\n8. 你对外卖的产品或服务是什么，怎么定价，怎么持续获客？\n9. 你获得收入后如何分配，其中哪些是投资性消费，哪些是不必要的消费？\n10. 你目前有哪些需求，优先级排序是什么，最急需解决的问题是什么？\n11. 你如何分配每天的 24 小时，做哪些事情？\n12. 你在一年里做的频次最多以及花时间最多的是哪 10 件事，它们对你有什么价值？\n13. 你认识多少人，目前最常联系哪些人，如果列 150 人清单，是哪些人？\n14. 哪些人对你的收入有贡献，哪些人帮你策划、为你背书、给你推荐生意、直接付钱给你？\n15. 你不喜欢和哪些人打交道，不喜欢社交中的哪些行为？\n16. 你最欣赏父母哪几点，最不满意父母哪几点？\n17. 你在什么时候会发怒，在什么时候会失落，在什么时候感到焦虑？\n18. 你选择伴侣的标准有哪几个，优先级怎么排序？\n19. 你为失业、大病、养老、子女教育做了哪些准备？\n20. 如果写 20 条人生原则，指导自己做什么和不做什么，是哪些原则\n\n转自 v 先生\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%A8-JS-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA-MVC":{"title":"用 JS 实现一个 MVC","content":"\n用 JS 实现一个 MVC\n\n```JavaScript\n\n/* 1. App 出始化时渲染出如下的用户列表 2. 并实现点击每个用户他对应的 priority 就自增\n\u003cul id=\"userlist\"\u003e\n  \u003cli\u003eUser Name: Peter, User Number: 123， User Priority: 1\u003c/li\u003e\n  \u003cli\u003eUser Name: Glenn, User Number: 456, User Priority: 1\u003c/li\u003e\n  \u003cli\u003eUser Name: Lucy, User Number: 789，User Priority: 1\u003c/li\u003e\n\u003cul\u003e */\nconst users = [\n  { name: 'Peter', num: 123, priority: 1 },\n  { name: 'Glenn', num: 456, priority: 1 },\n  { name: 'Lucy', num: 789, priority: 1 }\n];\n\nclass UserModel {\n  constructor() {\n    this._data = users;\n  }\n  // todo\n  addPriority (index) {\n    this._data[index].priority++\n  }\n}\n\nclass UserView {\n  constructor() {\n    this.container = document.querySelector('#userlist');\n  }\n\n  render (users) {\n    // todo\n\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild)\n    }\n    users.forEach((user, index) =\u003e {\n      const li = document.createElement('li')\n      li.textContent = `User Name: ${user.name}, User Number: ${user.name}， User Priority: ${user.priority}`\n      li.id = index\n      this.container.append(li)\n    });\n  }\n  bindClick (handler) {\n    this.container.addEventListener('click', event =\u003e {\n      console.log(event.target.id)\n      if (event.target) {\n        handler(event.target)\n      }\n    })\n  }\n}\n\nclass UserController {\n  constructor(model, view) {\n    this.model = model;\n    this.view = view;\n    this.view.bindClick(this.bindEvent.bind(this))\n  }\n\n  init () {\n    // todo\n    this.view.render(this.model._data)\n  }\n\n  bindEvent (target) {\n    // todo\n    this.model.addPriority(target.id)\n    this.init()\n  }\n}\n\n\nconst app = new UserController(new UserModel(), new UserView())\napp.init();\n```\n\n[github 地址](https://github.com/chelseachen007/writeCode/tree/master/MVC)\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%B1-2021-%E5%B9%B4-12-%E6%9C%88%E4%B8%80%E5%AE%B6%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86%E5%B7%A5%E5%8E%82%E7%9A%84%E8%96%AA%E8%B5%84%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%A4%E5%8F%A5":{"title":"由 2021 年 12 月一家中国内陆工厂的薪资简单说两句","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [由 2021 年 12 月一家中国内陆工厂的薪资简单说两句](https://zhuanlan.zhihu.com/p/442111383)\n- tag：#\n- date: [[ 2022-01-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 国内动力电池龙头大厂在四川宜宾市三江新区的动力电池制造基地，在 12 月 3 日开放招聘蓝领工人，结果现场竟然来了超过 3000 名求职者，而且还有从云南，甘肃等地专程来应聘的，还有人坐了四五个小时的车来应聘，而由于对现场的火爆估计不足，导致现场招聘人力不够，因此采用排号的方式，\n- 同时招聘的最低级别 JG1 的底薪 2500 元，加上工作津贴 200 元，地区津贴 400 元，全勤奖 150 元，另外工龄奖满一年有 200 元，如果工作满 4 年则有 500 元。这样算下来一个工作满 1 年的员工，不加班的话收入在 3450 元，而工厂还有加班费的，平时加班 21.55 元 / 小时，周末 28.73 元 / 小时，法定假日 43.10 / 小时，这个取决于加班时间长短，现在动力电池产能火爆，应该 1000 元甚至更多的加班费是有的，就按照 1000 元加班费算吧，则一个 JG1 的产线员工一个月有 4450 元的收入。\n- 而在宜宾方圆 100 公里以内，其实还有房价只有 3000 多元的县城，如果某个工人是来自这个县城的，也可以选择就在县城买房，平时在宜宾的工厂上班，周末回家或者每两周回次家。虽然这样也很辛苦，但也比到沿海打工，一年才回一次家好太多了。\n- 总之我觉得，未来一二十年，中国内陆城市的发展将成为主题。\n- 我反正看公司，现在设计了几个主题，包括：“高科技国产化公司”“穷台公司”“三线建设公司”“新赛道公司” 四类。而今天我之所以关注这个新闻，是因为它完全符合 “三线建设” 这个主题，这是我个人的思路框架。而符合这四类框架的公司，不仅是对整个国家的发展和人民的福祉带来巨大好处的东西，而且是对公司的自身也有利的，这个以后再聊了。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%94%B5%E7%A3%81%E6%B3%A2":{"title":"电磁波","content":"\n# 电磁波\n\n电磁波 (Electromagnetic wave) 是由方向相同且互相垂直的电场与磁场在空间中衍生发射的振荡粒子波，是以波动的形式传播的电磁场，具有波粒二象性，其粒子形态称为光子，电磁波与光子不是非黑即白的关系，而是根据实际研究的不同，其性质所体现出的两个侧面  \n电磁波实际上分为电波和磁波，是二者的总称，但由于电场和磁场总是同时出现，同时消失，并相互转换，所以通常将二者合称为电磁波，有时可直接简称为电波。  \n电磁波实际上分为电波和磁波，是二者的总称，但由于电场和磁场总是同时出现，同时消失，并相互转换，所以通常将二者合称为电磁波，有时可直接简称为电波。  \n电磁辐射通常意义上指所有电磁辐射特性的电磁波，非电离辐射是指无线电波、微波、红外线、可见光、紫外线。而 X 射线及 γ 射线通常被认为是放射性的辐射。称作电离辐射 [2] 。  \n要特别注意，电磁波并非与传统的机械波一样发生了空间上的震动，而是传播路径上不同点电场与磁场属性的改变。\n","lastmodified":"2023-09-18T14:54:47.582454691Z","tags":null},"/%E7%99%BD%E5%A4%9C%E8%A1%8C":{"title":"《 白夜行 》","content":"\n# 《 白夜行 》\n\n# 元数据\n\n\u003e [!abstract] 白夜行\n\u003e - ![ 白夜行|200](https://weread-1258476243.file.myqcloud.com/weread/cover/1/yuewen_230107/t7_yuewen_2301071682244014.jpg)\n\u003e - 书名： 白夜行\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 1999年，东野圭吾41岁正值盛年，写作出道已14年，在笔力、技巧、体力和雄心上都炉火纯青，于是洋洋洒洒写出了这部鸿篇巨制《白夜行》。这种规模宏大的长篇作品在职业作家一生的创作中极为罕见，完成后基本都被视为生涯代表作。《白夜行》一经推出即成为东野圭吾的长篇小说代表作，被万千书迷视为东野圭吾作品中的无冕之·王，畅销至今。《白夜行》中文版发行量超600万册，和《嫌疑人X的献身》《恶意》《解忧杂货店》并称为东野圭吾四大杰作。\n\u003e - 出版时间 2017-07-21 00:00:00\n\u003e - ISBN： 9787544291163\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n## 1\n\n- 📌 一成要她多买几件，但她不能仗着他的好意占便宜。连这件裙子，她都为回家后该怎么向母亲解释而苦恼。因为前一天的美容院变身，已经让母亲大吃一惊了。“就说是在大学里的二手衣服拍卖会买的。”一成笑着建议，然后 ^230107-7-17709\n    - ⏱ 2017-04-02 09:24:54\n\n## 1\n\n- 📌 招牌。“既然要请，不会找好一点的地方啊？”进了电梯，朱美愤愤不平。“没办法，欧吉桑主办的嘛。”听到千都留的话，朱美一脸不耐烦地点头说道：“也对啦。”店门入口处装有自动式的和式格子门。还不到七点 ^230107-9-16248\n    - ⏱ 2017-04-02 10:45:45\n\n## 1\n\n- 📌 “怎么可能？”筱冢的笑容登时消失了，“她这么说的？”“不，是我根据她的样子感觉到的。”“光凭感觉来判断是很危险的。”“这我知道，所以并没有写在报告里。但我确信是如此。”高宫不是唐泽雪穗最爱的人 ^230107-13-9921\n    - ⏱ 2017-04-02 15:13:43\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6PqfT0FKD  \n⏱ 2017-04-02 19:58:59\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%99%BD%E8%AF%B4":{"title":"《 白说 》","content":"\n# 《 白说 》\n\n# 元数据\n\n\u003e [!abstract] 白说\n\u003e - ![ 白说|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/367/721367/t7_721367.jpg)\n\u003e - 书名： 白说\n\u003e - 作者： 白岩松\n\u003e - 简介： 《白说》是央视资深新闻人白岩松继《幸福了吗》《痛并快乐着》之后的全新作品，一部言语中的心灵之路。通过近年来于各个场合与公众的深入交流，以平等自由的态度，分享其世界观和价值观。时间跨度长达十五年，涵盖时政、教育、改革、音乐、阅读、人生等多个领域，温暖发声，理性执言。\n\u003e - 出版时间 2015-09-01 00:00:00\n\u003e - ISBN： 9787535481108\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 长江文艺出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6NrfzHeKl  \n⏱ 2017-01-11 23:13:45\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%99%BD%E9%87%91%E6%95%B0%E6%8D%AE":{"title":"《 白金数据 》","content":"\n# 《 白金数据 》\n\n# 元数据\n\n\u003e [!abstract] 白金数据\n\u003e - ![ 白金数据|200](https://weread-1258476243.file.myqcloud.com/weread/cover/28/YueWen_922265/t7_YueWen_922265.jpg)\n\u003e - 书名： 白金数据\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 凶手，竟然是我自己？！傍晚六点十二分，数学天才蓼科早树和哥哥被杀死在七层的房间里。整栋大楼的走廊、电梯都装有监控器，24小时有人查看，却没有发现任何可疑的人。七层只有蓼科兄妹二人。楼层的门禁，并未遭到破坏。现场留下的枪属于此前犯下数起案件的NF13。而蓼科早树身上的毛发却属于另一个人——我？！《嫌疑人X的献身》之后，推理天王东野圭吾的烧脑巨献。拥有值得反复思考的深度，远远超越“推理小说”范畴。从一个灵魂到另一个灵魂，是自我救赎，也是对人性的深层读写。\n\u003e\n\u003e - 出版时间 2018-01-01 00:00:00\n\u003e - ISBN： 9787559611567\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n人类不可能存在平等  \n ^16142247-6YurK7WaN  \n⏱ 2018-04-07 10:08:54\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%99%BE%E4%B8%87%E5%AF%8C%E7%BF%81%E5%BF%AB%E8%BD%A6%E9%81%93":{"title":"《 百万富翁快车道 》","content":"\n# 《 百万富翁快车道 》\n\n# 元数据\n\n\u003e [!abstract] 百万富翁快车道\n\u003e - ![ 百万富翁快车道|200](https://weread-1258476243.file.myqcloud.com/weread/cover/66/YueWen_34156605/t7_YueWen_34156605.jpg)\n\u003e - 书名： 百万富翁快车道\n\u003e - 作者： MJ·德马科\n\u003e - 简介： 《百万富翁快车道》破译了终生富足的密码，是解开致富快捷之路的密钥。 变更车道，找到你的爆炸性财富加速器，跳出财务平庸处境，脱离朝九晚五打工生活，缩短致富时间40年！ 大多数人都遵循以下三种财富路径： 人行道——月光族，今朝有酒今朝醉。人行道的终点是贫困。 慢车道——上班族，牺牲当下，投资未来（40~50年后）。慢车道的终点是普通人。 快车道——创业者，掌控自己，努力工作，专注于为客户带来价值。快车道有望在未来5~10年内变得富有。 你现在处于哪条道上？《百万富翁快车道》作者颠覆性地认为，投资复利并不是一个快速实现财务自由的好方法。本书通过很多故事并结合当前最热门的行业（如互联网、电商、自媒体等）描述了三种财富路径及其风险，同时提出你是否需要踏上快车道，并如何踏上财务自由之路——需要遵循哪些戒律、做出哪些决定、摆脱哪些错误思维、避免哪些风险、处理哪些问题等。 “用两天时间读读这本书，你的收获将比读两年商学院课程还要多，却只需花后者1%的费用。”\n\u003e - 出版时间 2017-05-01 00:00:00\n\u003e - ISBN： 9787508670614\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第5章 走得最多的路：人行道\n\n- 📌 你希冀政客和政府来改变社会系统，而不是专注于如何改变自己。 ^34156605-10-4351-4380\n    - ⏱ 2021-09-28 11:17:31\n\n## 第8章 幸运儿玩的游戏\n\n- 📌 首先，财富不是运气，而是不断提升概率的过程。其次，财富并不像彩票和赌场，它需要过程而非结果。最后，真正的财富只能靠自己。没有人会给你带路， ^34156605-13-4399-4468\n    - ⏱ 2021-09-30 09:53:28\n\n## 第24章 将你的挡风玻璃擦拭干净\n\n- 📌 想想抛硬币的游戏吧。不管你抛它多少次，下一次的结果总是随机的。过去抛出的结果，不会影响到它未来的结果。你的过去也是同样的道理。 ^34156605-29-10173-10236\n    - ⏱ 2021-10-11 17:36:39\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%99%BE%E5%BA%A6":{"title":"百度","content":"\n#公司\n\n# 百度\n\n## 萝卜快跑\n\n国内百度算得上在 Robotaxi 市场投入最多的企业。9 年 2700 万公里路测里程，百度萝卜快跑（取自 Robotaxi 的谐音）已在北京、上海、广州、深圳、重庆等城市开放载人出行服务，在北京、重庆、阳泉开展商业化收费出行服务。百度在 2021 年 Q4 财报中披露，四季度萝卜快跑订单量约 21.3 万单，环比增长近一倍。\n\n百度无人车不仅把 Robotaxi 的成本控制在了和出行平台相当甚至更低的范围，且实现了每一代车型能力比前一代提升十倍，成本却下降一半的“渐进式优化”。\n\n百度于 2021 年 6 月发布的第五代共享无人车 ApolloMoon，包括汽车和 L4 级别自动驾驶套件在内的整车成本仅为 48 万元，为行业内 L4 级别自动驾驶车型平均成本的三分之一。\n\n一个细节，国内超一半自动驾驶初创公司的 CEO 或主要负责人都出自百度系，如[[文远知行]]韩旭，[[小马智行]] 彭军，楼天城，[[中智行]]王劲，[[千挂科技]]廖若雪等，[[滴滴]]自动驾驶 CEO 张博也曾在百度任职。\n\n# 参考资料\n\n[李彦宏不能输的最后一战-虎嗅网](https://www.huxiu.com/article/576688.html)  \n[[李彦宏]]\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9B%96%E6%B4%9B%E6%99%AE%E4%BC%98%E5%8A%BF%E8%AF%84%E4%BC%B0%E6%A8%A1%E5%9E%8B":{"title":"盖洛普优势评估模型","content":"\n# 盖洛普优势评估模型\n\n盖洛普优势评估模型（又名克利夫顿优势评估模型）包括四大维度：执行力、影响力、关系建立与战略思维。在此基础上又详细分为 34 个才干主题。因而可以具体形象地描述个体的潜在优势与驱动来源，让测试者更具体全面且真实地认识自己。  \n网上对它有这样的评价：“盖洛普之所以会测试你的才干，是因为它是你最自然而然、反复出现的思维模式、感受或行为。正因如此，盖洛普优势测评在我眼里是一套具有高信效度、科学性的测评，它也与其他用于自我探索的工具有很大的不同。”  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220616102433.png)\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9C%8B%E8%A7%81":{"title":"《 看见 》","content":"\n# 《 看见 》\n\n# 元数据\n\n\u003e [!abstract] 看见\n\u003e - ![ 看见|200](https://weread-1258476243.file.myqcloud.com/weread/cover/94/YueWen_277781/t7_YueWen_277781.jpg)\n\u003e - 书名： 看见\n\u003e - 作者： 柴静\n\u003e - 简介： 柴静十年成长的个人告白，中国社会变迁的备忘。央视知性美女主持柴静首度出书，讲述十年央视生涯。从对新闻一无所知的新人，尝遍失败、迷茫、摔打的滋味，到如今成为央视最受欢迎的女记者和主持人，柴静从未停止反思和追问，柴静说：“你想如何报道一个国家，就要如何报道自己。” 《看见》告诉你柴静何以成为柴静，她经历过什么，思考着什么，又记下了什么。\n\u003e - 出版时间 2013-01-01 00:00:00\n\u003e - ISBN： 9787549529322\n\u003e - 分类： 文学-散文杂著\n\u003e - 出版社： 广西师范大学出版社\n\n# 高亮划线\n\n## 第一章 别当了主持人就不是人了\n\n- 📌 人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸福 ^277781-4-12708-12744\n    - ⏱ 2019-07-05 21:20:32\n\n## 第四章 是对峙，不是对抗\n\n- 📌 你还一直问，一直问，他就把拇指放在门上夹，夹了一下又一下……”惭愧。《红楼梦》里写贾宝玉讨厌“世事洞明皆学问，人情练达即文章”这句话，觉得市侩。我原来也是，一腔少年狂狷之气，讲什么人情世故？采访时万物由我驱使，自命正直里有一种冷酷。这根流血的手指要不是来自亲人一样的同事，我恐怕也不会在意，他对我一句责备没有，也正因为这个，我隐隐有个感觉，为了一个目的——哪怕是一个正义的目的，就像车轮一样狠狠辗过人的心，也是另一种戾气。节目播后，收到一箱荔枝，由深圳寄来，我发短信谢那位黑瘦警官。他回：“我一直尊敬‘新闻调查’，其实很多人心里都明白，只是不太说话。不要客气，一点心意，你们受之无愧。”二〇〇六年，一家杂志采访我，封面照片看得我吓一跳——怎么变这样了我？穿一件男式咖啡色衬衫，卷着袖子，叉着胳膊，面无表情看着镜头。 ^277781-7-16176\n    - ⏱ 2019-07-09 12:22:30\n\n## 第八章 我只是讨厌屈服\n\n- 📌 能独立地表达自己的观点，却不傲慢，对政治表示服从，却不卑躬屈膝。能积极地参与国家的政策，看到弱者知道同情，看到邪恶知道愤怒，我认为他才算是一个真正的公民。 ^277781-11-16232-16309\n    - ⏱ 2019-10-07 11:06:31\n\n## 第十章 真相常流失于涕泪交加中\n\n- 📌 对痛苦的思考才是财富。 ^277781-13-2724-2735\n    - ⏱ 2019-10-07 11:29:45\n\n# 读书笔记\n\n## 第五章 我们终将浑然难分，像水溶于水中\n\n### 划线评论\n\n- 📌 因为我们的性文化里，把生育当作性的目的，把无知当纯洁，把愚昧当德行，把偏见当原则 ^16142247-7bpj7InOn\n    - 💭 真实\n    - ⏱ 2019-09-15 22:00:26\n   \n\n## 第十章 真相常流失于涕泪交加中\n\n### 划线评论\n\n- 📌 这期节目让我不敢轻易再对任何事物直接发表评论 ^16142247-7bqTJxPOQ\n    - 💭 前段时间中国历史研究院成立，然后不断进行辟谣让我也明白了现在的信息洪流里只掺杂着少许真实，对信息存疑并勤于百度，无论是对于历史还是其他。\n    - ⏱ 2019-09-16 23:06:06\n   \n\n## 第十三章 事实就是如此\n\n### 划线评论\n\n- 📌 美国传教士亚瑟·史密斯写过一本书叫《中国人的性格》 ^16142247-7c2RqBVyy\n    - 💭 在书与书之间找到联系也是读书的乐趣\n    - ⏱ 2019-10-11 22:04:23\n   \n\n# 本书评论\n\n## 书评 No.1\n\n多看看这个世界，多点自己的判断 ^16142247-7cg1mWpOP  \n⏱ 2019-10-20 13:42:53\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%A5%E8%A1%8C%E5%90%88%E4%B8%80%E7%8E%8B%E9%98%B3%E6%98%8E":{"title":"《 知行合一王阳明 》","content":"\n# 《 知行合一王阳明 》\n\n# 元数据\n\n\u003e [!abstract] 知行合一王阳明\n\u003e - ![ 知行合一王阳明|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/509/413509/t7_413509.jpg)\n\u003e - 书名： 知行合一王阳明\n\u003e - 作者： 度阴山\n\u003e - 简介： 在蛮荒的龙场，王阳明悟出了“圣人之道，吾性自足”，即人人皆有良知。而在血腥的沙场和险恶的朝堂，让龙场悟道实际发挥作用的，是“知行合一”，即遵循内心的良知，便能达到宁静于内、无敌于外的境界。如果心学是圣贤功夫，那么知行合一则是俗世智慧。知行合一并非得自顿悟，而是在磨难中不断反思、修练，最终砥砺出的生命境界。在经历了当众廷杖的奇耻、下狱待死的恐惧；流放南蛮的绝望、瘟疫肆虐的危险；荒山野岭的孤寂、无人问津的落寞，直至悟道的狂喜、得道的平静后，王阳明不但求得了内心的安宁，而且逐渐通过“知行合一”拥有了足以改变世界的力量。\n\u003e\n\u003e - 出版时间 2014-07-01 00:00:00\n\u003e - ISBN： 9787550230002\n\u003e - 分类： 哲学宗教-东方哲学\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n## 心学诞生的前夜\n\n- 📌 一种思想被确定为国家意识形态后，就成了不言而喻的真理 ^413509-1-5829-5855\n    - ⏱ 2021-07-13 10:42:23\n\n## 转捩点\n\n- 📌 正如他创建心学后所说的，佛教是逃兵的避难所。佛教徒所以出家，就是想逃避君臣、父子、兄弟、夫妻、朋友这五伦中他们本应该尽的责任和义务。 ^413509-3-17780-17846\n    - ⏱ 2021-07-13 11:21:45\n\n## 新朋友和新敌人\n\n- 📌 王阳明说：“宇宙中最真的孝，就是不让父母担心。知道了这个，你就知道怎么去孝顺父母了。” ^413509-3-39885-39928\n    - ⏱ 2021-07-13 14:23:49\n- 📌 王阳明给出了四点：第一，立志。就是要打定主意，下定做圣贤的决心；第二，勤学。做圣贤必须勤奋，努力学习知识和提升品德；第三，改过。有错就要改，绝不姑息；第四，责善。也就是在朋友之间要以责备的方式劝善。 ^413509-3-40255-40354\n    - ⏱ 2021-07-13 14:26:35\n- 📌 王阳明从“知行”的角度来说明他和朱熹、陆九渊的不同。他说，朱熹是通过经书得到天理，然后去实行；陆九渊是通过静坐得到天理，然后去实行。二人虽然在得到天理的方式上不同，可都认为“知行”是有先后次序的。而我却认为，知与行是合一的。知是行的开始，行是知的成果，二者是一回事。 ^413509-3-42062-42197\n    - ⏱ 2021-07-13 14:33:44\n\n## 朱陆异同\n\n- 📌 古人云：‘攻我短者是吾师’，作为学生，怎能连老师都不热爱呢 ^413509-3-51423-51452\n    - ⏱ 2021-07-13 14:48:40\n\n## 贵人王琼\n\n- 📌 王阳明说：“怎么能不想听，怎么能不想看？除非是死灰槁木、耳聋眼瞎之人。虽然听见、看见了，只要心不去跟随它也就行了。”“只要心不去跟随它”就是不动心。正是这“不动心”的心灵正能量，才让王阳明创建了光芒万丈的盖世武功。 ^413509-3-60579-60692\n    - ⏱ 2021-07-13 16:24:26\n\n## 金龙霸王池仲容\n\n- 📌 中国老百姓不被逼上绝路是不会去反抗的，把他们逼到“革命”的大路上，需要很长很长的时间。 ^413509-14-19325-19368\n    - ⏱ 2021-07-13 17:06:12\n- 📌 所有官员都相信，这个“很长很长”的时间是没有尽头的。即使真的到了尽头那天，他们已被调出这块是非之地，或者早就抱着财宝回家养老去了。正如池仲容造反多年之后所说的，我现在杀的贪官都不是我真正的仇人，我真正的仇人不知在哪里。 ^413509-14-19374-19483\n    - ⏱ 2021-07-13 17:07:09\n\n## 费心为哪般\n\n- 📌 可他并未愤怒，诋毁来得越强烈，越需要冷静。愤怒能让自己阵脚大乱，良知不能发挥力量。 ^413509-23-42122-42163\n    - ⏱ 2021-07-14 10:25:19\n\n## 致良知\n\n- 📌 一件坏事到眼前，良知明明告诉你不要去做，可无数人还是违背了良知的教导。这就是王阳明为什么说“致良知”看似简易，其实艰难的原因：知行不一。 ^413509-23-51795-51863\n    - ⏱ 2021-07-14 11:19:28\n\n## 不许来京\n\n- 📌 这可能是心学的一个缺陷：绝不要先以恶意去推测别人，否则自己就先恶了，一旦如此，就是丧失良知的表现。那么，不要先以恶意去推测别人，该如何防止别人的恶意（以欺骗为例）呢？ ^413509-23-63304-63387\n    - ⏱ 2021-07-14 13:55:56\n\n## 走在成圣的路上\n\n- 📌 “四句教”全文如下：“无善无恶心之体，有善有恶意之动；知善知恶是良知，为善去恶是格物。 ^413509-35-12676-12719\n    - ⏱ 2021-07-15 10:19:29\n\n## 第6章 心学对我们有什么用——强大内心的终极武器\n\n- 📌 为什么王阳明要不厌其烦和矢志不移地倡导“人人都是圣人”的观点，他到底想告诉我们一个什么样的真理呢？这个真理其实就是人人平等。王阳明是想告诉我们，良知可致圣贤，无所不能。所以人人都是平等的，任何人都没有资格充当别人的上帝，任何人也就不可能有资格控制别人。在这个世界上，只有一个人才有权力控制和支配你，那就是你自己；只有一个人能主导你的人生，那也只能是你自己。 ^413509-43-1719-1903\n    - ⏱ 2021-07-15 20:34:48\n\n# 读书笔记\n\n## 做自己的主人\n\n### 划线评论\n\n- 📌 这四周都是竹子，竹子具备君子的四个特征，中空而静，通而\u000c有间，这是君子之德；外节而实，一年四季枝叶颜色不改，这是君子之操；随着天气而出而隐而明，适应性强，这是君子“适应时势”的变通；挺然而立，不屈不挠，这是君子之容，所以我给它起名为“君子亭” ^16142247-7rLooUyg0\n    - 💭 这是格竹子格出来的吗[笑哭]\n    - ⏱ 2021-07-13 14:05:00\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%A5%E8%A7%89%E8%A1%A8%E5%BE%81%E8%AE%BA":{"title":"知觉表征论","content":"\n# 知觉表征论\n\n[[知觉表征论]]，是一个关于感觉的概括性理论，涉及我们所有的感官，包括视觉、听觉、味觉等。  \n这些推论中最重要的一个是，这个观点意味着我们每个人从某种意义上来说与这个世界都是隔绝的。更具体地说，**我们没有办法确定自身感官所提供的表征是否准确**。\n\n## “如果知觉表征论是正确的，为什么我们无法确定自身感官所提供的表征是否准确”\n\n### 评估表征的准确性\n\n假设萨拉想要评估她关于苹果的视觉表征是否一致，要达到这个目的，她需要把苹果的视觉表征与真正的苹果进行对比。但是，萨拉没有办法这么做。**萨拉不能把苹果的视觉表征与真正的苹果进行对比的原因是她无法从自己的意识中走出来。**\n\n### 《全面回忆》情境\n\n《全面回忆》是一部科幻电影。电影的时代背景设定在未来的 24 世纪末，在这个时代，如果一个人想去旅行却负担不起旅费，那么他有一个更便宜的选择，那就是把旅行的体验植入自己的大脑中。也就是说，有公司专门经营这种虚拟旅行。你只要交钱，这个公司就会把一个机器连到你身上，你可以选择一段旅行，然后关于这段旅行完全现实的体验就会直接植入你的大脑中。这些体验来自于特别真实的虚拟现实，让人们无法把它们与现实事物区分开来。\n\n总之，尽管我们都认为自己的体验来自于“正常”的现实，但我们并不能确定这些体验不是来自于某种《全面回忆》情境植入我们大脑中的现实。简言之，我们无法确定现实真正的样子。\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%A5%E8%AF%86%E5%8D%A1%E7%89%87":{"title":"主题","content":"\n# 主题\n\n这条笔记是关于什么的？\n\n# 信息\n\n这条笔记讲述了什么内容？\n\n# 思考\n\n这些信息告诉我们什么结论？  \n我是如何看待他的\n\n# 行动、反馈\n\n我可以针对他做什么\n\n# 钩子\n\n我可能用在什么场景？\n\n# 出处\n\n它的出处是哪里\n\n# 时间\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%A5%E8%AF%86%E5%A4%A7%E6%89%AB%E9%99%A4":{"title":"知识大扫除","content":"\n# 知识大扫除\n\nEvergreen notes | Write about what you read to internalize texts deeply | How to process reading annotations into evergreen notes | Evergreen notes should be densely linked 用来记录生活中的 `读书记录`,`生活方式`\n\n## 数据库\n\n### **知识库**\n\n加工好的 Note，即思考/方法/概念卡片会进入知识库。这个知识库我放在 Obsidian 。\n\n### **阅读清单**\n\n日常生活中，当我看到任何值得一读的文章、又没有空细读时，我就一键分享到 Notion 里面，等有空时再集中精读、做笔记。  \n当我有整段时间时，我就打开阅读清单的「待读」视图，一篇篇文章读下去；\n\n- 读完一篇文章，如果觉得很好，就标上「重要」，否则就标「待读」；\n- 如果文章有引用和参考的价值，就标上「研究」，然后写一段简单的摘要，方便我纵览；\n- 从文章中获取到的知识点和想法，再回到前面知识管理里面，做成知识卡片，放入 Inbox、Note 里面。\n\n### **工具资源库**\n\n这个数据库用来存放各种各样的软件和工具，\n\n### **人际库**\n\n暂时不需要\n\n### TODO\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F":{"title":"","content":"==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==\n\n\n# Text Elements\n日常生活 ^UyLgLi07\n\n零碎想法 ^SRndE59G\n\n待读文章 ^py2i40zc\n\n%%\n# Drawing\n```json\n{\n\t\"type\": \"excalidraw\",\n\t\"version\": 2,\n\t\"source\": \"https://excalidraw.com\",\n\t\"elements\": [\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 37,\n\t\t\t\"versionNonce\": 938070609,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"bEXmmEKAb8HOUo8GEEUFq\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -249.9191287800611,\n\t\t\t\"y\": -252.63715940445303,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 131.05859375,\n\t\t\t\"height\": 88.2421875,\n\t\t\t\"seed\": 1016838225,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"sharp\",\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"UyLgLi07\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1689298566130,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 46,\n\t\t\t\"versionNonce\": 1322661055,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"UyLgLi07\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -244.9191287800611,\n\t\t\t\"y\": -221.01606565445303,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 121.05859375,\n\t\t\t\"height\": 25,\n\t\t\t\"seed\": 1033339953,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"sharp\",\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1689298581118,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20.009684917355372,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"日常生活\",\n\t\t\t\"rawText\": \"日常生活\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"bEXmmEKAb8HOUo8GEEUFq\",\n\t\t\t\"originalText\": \"日常生活\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 174,\n\t\t\t\"versionNonce\": 1233382111,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"3HZEs0pbuoAYTkbmFicN_\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -64.73828125,\n\t\t\t\"y\": -271.5300480769232,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 153.15234375,\n\t\t\t\"height\": 101.30078125,\n\t\t\t\"seed\": 1047835999,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"oW16xQGa\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1689298612660,\n\t\t\t\"link\": \"\",\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 161,\n\t\t\t\"versionNonce\": 1898706577,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"oW16xQGa\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -59.73828125,\n\t\t\t\"y\": -233.8796574519232,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 143.15234375,\n\t\t\t\"height\": 26,\n\t\t\t\"seed\": 330691871,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1689298612660,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20.042636335388686,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"阅读学习\",\n\t\t\t\"rawText\": \"阅读学习\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"3HZEs0pbuoAYTkbmFicN_\",\n\t\t\t\"originalText\": \"阅读学习\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 34,\n\t\t\t\"versionNonce\": 1327772177,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"MJDpUNqYifz-vXymrajV4\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 137.1796875,\n\t\t\t\"y\": -255.4296875,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 144,\n\t\t\t\"height\": 84.40234375,\n\t\t\t\"seed\": 1960899263,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"SRndE59G\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1689298566130,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 39,\n\t\t\t\"versionNonce\": 483345631,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"SRndE59G\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 142.1796875,\n\t\t\t\"y\": -225.728515625,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 134,\n\t\t\t\"height\": 25,\n\t\t\t\"seed\": 2082439327,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1689298581119,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"零碎想法\",\n\t\t\t\"rawText\": \"零碎想法\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"MJDpUNqYifz-vXymrajV4\",\n\t\t\t\"originalText\": \"零碎想法\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 48,\n\t\t\t\"versionNonce\": 953534449,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"srZqJ13tO9DN0TLggLJSK\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 355.8118368760656,\n\t\t\t\"y\": -266.8490167564388,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 189.04755493650453,\n\t\t\t\"height\": 93.52426885393277,\n\t\t\t\"seed\": 1374016255,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"py2i40zc\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1689298566130,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 37,\n\t\t\t\"versionNonce\": 1314602129,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"py2i40zc\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 360.8118368760656,\n\t\t\t\"y\": -232.58688232947242,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 179.04755493650453,\n\t\t\t\"height\": 25,\n\t\t\t\"seed\": 1886746513,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"round\",\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1689298581119,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20.005313400726763,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"待读文章\",\n\t\t\t\"rawText\": \"待读文章\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"srZqJ13tO9DN0TLggLJSK\",\n\t\t\t\"originalText\": \"待读文章\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 86,\n\t\t\t\"versionNonce\": 330119889,\n\t\t\t\"isDeleted\": true,\n\t\t\t\"id\": \"mq18OGJz\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -80.97638290682238,\n\t\t\t\"y\": -115.29995909937332,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 141,\n\t\t\t\"height\": 29,\n\t\t\t\"seed\": 13969,\n\t\t\t\"groupIds\": [],\n\t\t\t\"strokeSharpness\": \"sharp\",\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1689298609813,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"📍[[知识管理]]\",\n\t\t\t\"rawText\": \"[[知识管理]]\",\n\t\t\t\"baseline\": 21,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"📍[[知识管理]]\"\n\t\t}\n\t],\n\t\"appState\": {\n\t\t\"theme\": \"dark\",\n\t\t\"viewBackgroundColor\": \"#ffffff\",\n\t\t\"currentItemStrokeColor\": \"#000000\",\n\t\t\"currentItemBackgroundColor\": \"transparent\",\n\t\t\"currentItemFillStyle\": \"hachure\",\n\t\t\"currentItemStrokeWidth\": 1,\n\t\t\"currentItemStrokeStyle\": \"dashed\",\n\t\t\"currentItemRoughness\": 1,\n\t\t\"currentItemOpacity\": 100,\n\t\t\"currentItemFontFamily\": 1,\n\t\t\"currentItemFontSize\": 20,\n\t\t\"currentItemTextAlign\": \"left\",\n\t\t\"currentItemStrokeSharpness\": \"round\",\n\t\t\"currentItemStartArrowhead\": null,\n\t\t\"currentItemEndArrowhead\": \"arrow\",\n\t\t\"currentItemLinearStrokeSharpness\": \"round\",\n\t\t\"gridSize\": null,\n\t\t\"colorPalette\": {}\n\t},\n\t\"files\": {}\n}\n```\n%%","lastmodified":"2023-09-18T14:54:44.046437065Z","tags":null},"/%E7%9F%A9%E9%98%B5":{"title":"矩阵","content":"\n\n## 参考资料\n- [Site Unreachable](https://thepalindrome.org/p/matrices-and-graphs)","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%9F%AD%E9%93%BE":{"title":"短链","content":"\n由 协议 + 域名 + path 组合，最后 path 的部分才是关键，看起来是一个由 6 个字符组成的字符串，并且字符的范围是大小写字母+数字。\n\n## 怎么获得 path\n\n### 通过哈希算法\n\n  通过[[哈希算法]] 可以获得一个随机性较强的随机字符串\n\n### 通过自增 ID\n\n1. 做一个 ID 自增器，多台服务器就自增 比如 10，但是这种有迹可循，爬虫可以顺序依次请求得到\n2. 基于[[雪花算法]]，\n\n### 进一步缩短\n\n如果我们得到『1536389934』这个序号的话，可以通过 62 进制进一步缩短成类似 1FYxco 这种  \n[[为什么用 62 进制而不是 64 进制]]\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A1%85%E8%B0%B7%E6%9D%A5%E4%BF%A1":{"title":"硅谷来信","content":"\n# 硅谷来信\n\n## 每日观点提炼\n\n观念知识： 不需要经验验证  \n理性推理：两个最基本的方法，归纳和演绎。 但是都不可靠\n\n休谟却说，我们其实很难判断真正的因果关系是什么，我们经常只是给两件在时间和空间上挨得很近，一前一后发生的事情套上了因果关系。  \n比如，进入了秋冬季节，小张穿着短袖出门跑步，结果回来感冒了，过去会认为，着凉是感冒的原因，感冒是着凉的结果。这种因果关系对不对呢？今天的医学研究告诉我们，**冷空气本身并不会让我们感冒，感冒真正的原因是空气中的病原体**\n\n**很多时候，理性主义无法告诉我们那个正确的答案是什么，但它能够告诉我们什么是错误的，因为它们不合乎逻辑，不合理。**\n\n### 法律体系英国和美国没有民法典、刑法典这样的大法典，甚至在很多领域都缺乏全国性的法律。\n\n判例法：法律没有禁止，就默认是可以做的。如果将来发现问题，再通过一个新的判例纠偏就好。  \n大陆法实行起来对法官的要求非常高，它的每一条法律就像是科学上的一个定律，怎么解释、怎么应用，依赖于使用者的水平。  \n普通法系： 陪审团们的经验判断有罪还是无罪，由法官来具体量刑\n\n### 博弈论\n\n零和游戏，赢者通吃游戏  \n非零和游戏。有双赢、双输、一输一赢，好多可能性\n\n**人生不止一次考试，一个人走出校门后做的每一件事，都可以看作是一次考试，这些考试没有考官和分数，只有你自己和你自己行为的后果。**\n\n### 海盗游戏\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172735.png)\n\n### 1Q84\n\n先驱原型 1984年成立的邪教奥姆真理教  \n为什么会诞生这样的邪教组织，最主要的原因是物质生活需求得到满足之后，人们在精神上却缺少寄托和希望。\n\n### 固执\n\n很多人不更新自己的知识，使用已经过时了的常识，也会体现出固执。  \n一个人错把自己的经历当成是经验，也会显得固执。这也是为什么很多老人显得很固执，他们觉得自己是经验丰富，可是在年轻人看来，那些只是经历，根本算不上是经验。\n\n### 楔形文字\n\n破解者：英国人罗林森  \n贝希斯敦铭文。在这篇铭文中，包含了三种不同的古文字：古波斯语、古埃兰语和古巴比伦语。  \n罗塞塔石碑，也是刻着三种古文字。但贝希斯敦铭文与罗塞塔石碑不同的是，贝希斯敦铭文中的三种古文字没有一种是大家认识的\n\n解决难题，首先要寻找锚点  \n一些专有名词在上下文中也是不会改变语义的，比如人名等，以它作为锚点把握住，文章的主题思想，然后通过翻阅史料进行扩展和合理推测  \n其次，要有同理心，多想想别人是如何想的，就知道自己该从什么方向入手了。\n\n### 李希霍芬\n\n19世纪的德国旅行家、地理和地质学家李希霍芬。\n\n- 丝绸之路的提出\n- 高岭土的命名\n- 青岛的选址和修建\n- 近代西方人客观了解中国的途径\n\n**你如果对《马可波罗游记》有所了解，就会知道这本书中有许多虚构和夸张的成分。**  \n欧洲 顶尖大学 **柏林洪堡大学**\n\n高岭土：这其实是一种很少见的情况，**通常世界上对矿石是以成分命名的，铜矿就是铜矿，铁矿就是铁矿，而瓷土矿则以一个中国地名命名**；从此，瓷土就永远地和中国联系起来了。今天，美国探明的瓷土储量其实比中国更多，但人们依然要用中国的地名来称呼这种矿物。\n\n**祁连山，欧洲人把它叫做“李希霍芬山”**\n\n代表作《中国：我的旅行与研究》。这套鸿篇巨著包括地图集在内，有整整七大本。这一套严谨的学术专著，让西方人对中国有了全面客观的认识。\n\n1. 一个人如果有明确的目标,真心实意做一件适合自己的事,坚持做下去,比起完全依赖外界资源来驱动自己,结果会大  \n   不相同。\n2. 人未必需要在刚从学校毕业的时候,就把目标定在尽快有房有车上,应该考虑去做一些对自己和世界都更有意义的事\n\n### 本·耶胡达\n\n**他复活了古希伯来语，让这种语言成为了全世界犹太人的通用语言。**\n\n号召世界各地的犹太人回来建设巴勒斯坦，没有得到回应\n\n1. 习惯了当地的生活，不愿意迁徙\n2. 语言障碍，没有自己的语言  \n从语言学的角度来讲,古希伯来语有一个先天的不足,就是只有辅音字母,没有元音字母。而现代希伯来语  \n则让四个希伯来字母承担了元音字母的功能,更有助于口语化\n\n### 比克曼会议\n\n它非常低调，规格极小，绝大多数人都不知晓这个会议，  \n比克曼讨论会，也叫梅西控制论会议。**它最大的特点是，很难得地将世界上最聪明的头脑聚集到了一起。这样的历史时刻极为罕见，一旦出现就将影响历史的发展，并且成为一段传奇。**\n\n这样一个通过不断问问题得到答案的实验后来被称为香农实验。\n\n在这个实验的过程中，当我们知道了前几个字符后，越往后问，需要问的问题数量就越少。香农解释说，这是因为在语言中有信息的冗余，也就是说，前面的信息在一定程度上包含了后面的信息。当然，**最后你所问问题的总数，不可能小于某一个特定的值，这个值就是语言内在的“熵”（entropy），或者叫“信息熵”。**\n\n### 张好好诗\n\n杜牧\n\n**晋韵，指以王羲之、王献之二王行草书为代表的晋代行草书法风格，讲究自然流畅，结体舒朗，布局精妙，看起来很随意，实则很讲究。**  \n杜牧 《赠别》\n\n\u003e 娉娉袅袅十三余，  \n\u003e 豆蔻梢头二月初。  \n\u003e 春风十里扬州路，  \n\u003e 卷上珠帘总不如  \n宋代姜夔写下的《扬州慢》 用春风十里代指 扬州\n\n**什么是文艺，文艺，就是能够拨动我们心里最脆弱的那根弦，不只是让我们欣赏作品的精美，也让我们与作者产生共鸣，思绪万千。**\n\n三希堂,是乾隆帝的书房。关于“三希”的意思有两种解释,  \n“三希”即“士希贤,贤希圣,圣希天”,士人希望成为贤人,贤人希望成为圣人,圣人希望成为知天之人。  \n另一种是,“希”通“稀”,指乾隆收藏的王羲之的《快雪时晴帖》、王献之的《中秋帖》和王珣的《伯远帖》。\n\n### 答疑07\n\n经验、经验主义、归纳、归纳法和数学归纳法：虽然它们之间有相关性，但是它们讲的不是同一件事情；也不能从字面出发，认为一个概念就包含另一个。\n\n- 日常说的经验，是指人们通过生活的经历或者实践所获得的知识或技能\n- 经验主义的经验，讲的是知识的获得离不开感官的经验。\n- 和经验主义对立的是理性主义，它认为知识的获取可以离开感官的经验。这两种方法论都不排除我们在实践中获取知识、总结经验。\n- 归纳法本身是理性主义的方法论，因为使用它的人相信能够从经验中归纳出一般性的理论。但是数学领域例外，数学归纳法是从无限个重复性的情况总结规律，因此它得到的结论是没有例外的。\n\n《大宪章》 不是宪法\n\n### 是否适合创业\n\n**如果盘点一下今天世界上前100的富豪，你会发现他们大多是白手起家的，即便是盖茨、扎克伯格这些家境较好的人，他们创业也是从风险投资那里拿钱，而不是老爸给钱。**  \n可以讲，能够养活大家，是创业的资格，也是最能让投资人放心的能力。\n\n上世纪末中国一大半成功的企业家和创业者都是销售出身，因为他们能够挣到钱养活员工。比如董明珠  \n互联网时代，很多创业成功的人变成了工程师出身\n\n**我经常和创业者讲，你要么能够自己掏钱养活团队，要么有本事挣钱养活团队，然后才有机会培养团队，才能依靠团队赚钱，回过头来养活自己。**\n\n一个人是否适合创业：  \n首先，是否能够将自己压榨到极致，而且任何岗位出了空缺自己都能顶上。  \n其次，是否有能力养活一个团队。  \n最后是非常基本的一点，就是做人是否诚信。如果做不到这三点，创业基本上很难成功。\n\n### 奈飞\n\n奈飞公司创始人、CEO哈斯廷斯（Reed Hastings） 《不拘一格》\n\n90年代末，奈飞的收费模式分为两种，一种是每部电影2.99美元，另一种是9.99美元包月。但是还有一条规则，就是你手中同时只能保留两盘录像。算上快递时间，时间紧，其实一个月也就是看3 4部\n\n但是同类中的录像带租赁龙头**百视达**却干不过奈飞  \n虽然奈飞最初是从录像带租赁业务起家，但它却和谷歌、Facebook这样的互联网公司在风格上高度一致。\n\n1. **自下向上的驱动模式，**\n2. **给予员工足够高的工资，以示尊重，**而不是给员工压绩效，再按照绩效发奖金。那样的话大家就会自然地倾向于追求短期目标。\n3. **在时间上给予员工足够高的灵活性。**\n4. **项目组之间、上下级之间、部门与部分之间，是松耦合的关系。**也就是说即便它们之间存在隶属关系，但更多的是合作关系。\n5. **只招能力最强的员工，也只保留这样的员工。**\n\n奈飞抓住的两个契机\n\n1. 美国的经济有一个有趣的现象，每当到了经济危机时，电影业的生意就特别好。奈飞利用08年金融危机这次机会，将邮寄DVD的业务转成在线观看。\n2. 拼内容。它开始筹划自己拍摄优秀的影视作品。\n\n#### 奈飞经验\n\n1. 先要有互联网公司的基因，才能做好互联网的事情。如果看到别人把产品和服务搬到互联网上，自己就照猫画虎地去做，这样做很少能够成功。至于互联网的基因是什么样，可以参考我在上面讲到的自下而上驱动、尊重员工等五条特征。\n2. 和巨无霸竞争，需要走差异化的道路。\n3. 要善于确立自己独一无二的优势，然后将它作为杠杆，把优势扩大化。\n\n### 垃圾食品\n\n没有垃圾食品，只有垃圾吃法。  \n带壳的水产品。胆固醇含量高。  \n糖（碳水化合物）、脂肪和蛋白质这三大营养成分本身都是好东西。我的一位内分泌科的医生朋友，天天给糖尿病人看病，却从不说糖的坏话，用他的话讲，一切都看你怎么吃了。导致肥胖或者其他疾病的是营养过剩和不平衡，而不是营养本身。\n\n人们对健康食品的另一个误解是，纯天然的就是健康的，有防腐剂就不健康。防腐剂原本不是坏东西，人类使用它们已经有好几千年了，比如用盐腌肉，盐的主要作用就是防腐。因为害怕防腐剂，很多人一听到深加工食品就敬而远之。**其实，如果没有防腐措施，人类会多吃很多变质、发霉的食品，那才是真正对身体有害的。**\n\n**不仅判断“垃圾食品”要视饮食习惯而定，一件物品是否是垃圾，也要看它们对生活到底有没有益处。**\n\n### 美国联邦大法官金斯伯格\n\n”三权”指的是:立法、行政、司法,三权分立又叫“横向的分权制衡”。\n\n- 立法权:国会享有立法权,但总统享有否决国会立法的权力(但如果参众两院超过2/3人同意,总统否决也没用,也一样  \n  通过),对立法权构成有效制约;司法机关通过司法审查,也对立法权形成制约。这里就是吴老师今天讲的马伯里诉麦迪逊  \n  案的例子:司法机关有权决定国会通过的法律是否违宪,如果违宪,有权宣布它无效。\n- 行政权:总统掌握行政权,但国会有弹劾总统的权力,最高法院也有权宣布总统的命令违宪。\n- 司法权:法官的任命,必须经过总统提名和国会批准,这是事前制约。如果法官滥用权力胡乱判案,国会也可以对法官进行弹劾,这是事后制约。  \n所以,看到这互相之间的牵制,不管是角度还是力量都是均衡的。这也是很了不起的,光有想法不行,如何设计好,将其化为现实才是更重要的。\n\n### 被碰瓷了怎么办\n\n当你在大街上被狗咬了一口，可能会很痛，甚至可能会有得狂犬病的风险，你气愤的心情可以理解，但这时该做的第一件事就是止血，然后去打疫苗。如果你趴到地上一口把狗给咬死，那才是大新闻呢！你现在功成名就，无论是官方还是民间对你都赞誉有加。你和碰瓷的人有什么好争的呢？\n\n维护利益和维护正义冲突吗？正义是最强者的权益。正当的统治者的利益和大众的利益并不矛盾。  \n弱势方应该要用于抗争\n\n因此，当我们维护自己利益的时候，不需要觉得因为涉及到了利益就不好意思，维护利益和维护正义并不矛盾。如果你是正当的一方，那么你维护自己的利益，其实就是在维护正义\n\n### 以色列\n\n以色列的国土面积只有两万平方公里左右，比北京略大，人口九百万人，不到北京的一半。以色列的四周都是和它不太友好的国家，它的安全问题是一个大问题。  \n在我看来，以色列比美国的芝加哥、巴尔的摩甚至是旧金山安全多了。  \n犹太男孩在成长到13岁时，都要在安息日举行一个隆重的受戒仪式，也被称为成人礼。  \n今天犹太人虽然遍布全世界，但核心人口不到1500万，即使把标准放到最宽，也只有2300万左右。这些犹太人绝大部分生活在以色列和美国，这两个国家的核心犹太人人口加起来超过1100万；  \n但是无论在哪个国家，犹太人即使人数很少，也很难被当地人同化。这是犹太人用宗教戒律严格要求自己的结果。  \n如果你明白自己要成为什么样的人，知道自己20年后想过什么样的生活，该怎么选也就清楚了。遇到这种情况，不妨想想犹太人是怎么过的。**人在自己并不喜欢的环境中，要能够把持住自己，当然这也需要一个人有笃定的信仰或信念才能做到。**  \n**犹太人的做人方式：既有笃定的信仰，同时又能做到身段柔和。**\n\n### 耶路撒冷\n\n耶路撒冷旧城的历史可以溯源到3000年前的大卫王时代，当时这里是犹太国的首都。公元前960年左右，大卫王的儿子所罗门王在耶路撒冷建造了著名的所罗门神殿，此后的四个世纪也被称为第一圣殿时期。耶路撒冷自然就成为了犹太人的圣地  \n上帝在人间的住所--圣殿 就建在耶路撒冷  \n耶稣的受难地和葬身地 在耶路撒冷  \n默罕默德(伊斯兰教)的升天之地 在耶路撒冷\n\n犹太教、基督教 和 伊斯兰教其实是一脉相承的，当上帝在三教中的叫法不同，犹太教里称之“雅卫”,基督教称之“耶和华”,伊斯兰教称之“安拉或真主”。\n\n西蒙蒙蒂菲奥里的《耶路撒冷三千年》\n\n**穆斯林：伊斯兰教信仰者的通称。**阿拉伯语音译，意为“顺从者”“实现和平的人”。教义学家称“顺主顺圣的人”，即口诵“清真言”的人。\n\n在中国有回、维吾尔、哈萨克、乌孜别克、柯尔克孜、塔吉克、塔塔尔、东乡、撒拉、保安等 10 个少数民族相当一部分群众信仰伊斯兰教。在我国，信仰伊斯兰教的人统称“中国穆斯林”。\n\n### 耶稣\n\n传说中耶稣的出生地在伯利恒，就在今天的巴勒斯坦境内。从耶路撒冷出发到伯利恒也就大约半个多小时的车程。  \n根据《圣经》的记载，这颗星在伯利恒上空出现了几个月，白天也能看见，如果是这样的话，超新星的概率比较大。  \n阿瑟·克拉克 《 星 》\n\n耶稣与十二门徒的传教  \n传说在处刑的那一天，耶稣背上十字架，游街示众，前往刑场各各他山。耶稣走过的那条路被称为苦路，在今天的耶路撒冷旧城中就有朝拜苦路的活动。苦路的前一段在圣殿山的区域内，起点在今天耶路撒冷的奥玛莉亚中学附近，终点就是圣墓教堂里面，大约一公里长。\n\n### 死海和马萨达要塞\n\n死海在希伯来语中被称为“盐海”，**一般海水的含盐量在3%左右，而死海表层水中盐的含量大约是30%，**底层湖水的盐含量完全饱和，温度也是恒定的。死海湖底全是盐结晶，脚踩上去会非常疼。\n\n马萨达要塞修建在死海旁边一座平顶山的顶上。那座平顶山四周都是悬崖，东边高约450米，西边的悬崖也有100米高，在那个时代是很难攻上去的。把避难所修在那里，大希律大概觉得很安全，不过在死海边上，有一个大问题就是怎么解决饮水的问题。\n\n工程师们设计了一个非常精妙的雨水收集系统，在城堡里和城堡周围用石头和水泥修了很多沟渠，将雨水收集到一个容量达五千吨的地下水库中。大希律在城堡里修建了豪华的皇宫，坚固的防御设施，以及存储粮食和酒的储藏室，当时的粮食储备可以维持几年。\n\n公元66年 。罗马攻破耶路撒冷，犹太人退守马萨达要塞。  \n在堡垒被攻破的前一个晚上，马萨达堡垒里的犹太人聚在一起开会，选择是为自由而死，还是当奴隶。最后他们选择了集体自杀。因为犹太人的教义不允许自杀，他们就抽签选出了十个士兵将其他人杀死，最后留下来的一名士兵烧毁建筑然后自尽，最大限度地减少违反教义。第二天罗马人攻破要塞，看到的是一地的尸体和焚毁的建筑。你可以想象这样的情景是何等的惨烈。  \n被称为“永不陷落的马萨达精神”  \n到了19世纪，犹太人开始觉醒，他们发起了被称为“锡安运动”的犹太复国运动。锡安是指耶路撒冷古城外的锡安山，它也是犹太国的代名词，犹太人有时也被称为锡安之子。\n\n为什么叫以色列国?《圣经》中亚伯拉罕的孙子“雅各”,他出生时是抓着双胞胎哥哥的脚跟出来,所以被称为“雅各”,就是“抓”的意思。他眼馋他的双胞胎哥哥的长子名分,就发生了很多纠葛,然后他就逃亡在外。有一次,在雅博渡口,半夜岀现了神的使者,来跟他摔跤,一直到天亮。那个使者说:你的名不要再叫“雅各”,要叫“以色列”;因为你与神与人较力,都得了胜,\n\n世界上很多优秀的人都是犹太人,像爱因斯坦、扎克伯格、毕加索、基辛格还有今年刚去世的金斯伯格。一般名字以burg结尾的,多半是犹太人。\n\n### 巴勒斯坦\n\n阿拉伯国家  \n巴勒斯坦的难民营实际上是一排排像车库似的简易房，街上也还算干净，并没有太多闲逛的人。  \n巴勒斯坦直到今天还没有一个真正意义上的政府，他们虽然有自己的总统，有财政部、教育部等部委，但基本上都是光杆司令的空架子。巴勒斯坦也没有自己的货币，使用的是以色列和约旦的货币。甚至连护照也不是真正意义上的护照，更像是旅行证件而非身份证件；而且根据巴以签订的《奥斯陆协议》，护照的发行还受到以色列的制约。在经济上，巴勒斯坦除了农业和少量的手工业外，主要收入来源是就是旅游业了  \n除了瑞典和冰岛，大部分美欧国家都还没有承认巴勒斯坦是一个独立的国家。  \n巴勒斯坦人对以色列人的态度其实很矛盾。一方面他们对以色列人抱有敌意，另一方面又要在一定程度上依靠对方解决吃饭问题\n\n### 约旦\n\n约旦的经济在很大程度上依赖于旅游业，占了整个国家GDP的14%。而在旅游业中，古城佩特拉做了很大一部分工作。  \n佩特拉位于约旦首都安曼南250公里处。这座古城始建于公元前6世纪，但主体建筑很可能是埃及托勒密王朝时期，即公元前3世纪到前2世纪修建的，因为那些建筑同时具有希腊化时期的风格和古埃及的特点。作为当时中东到欧洲和埃及陆路交通的要塞，这座古城一直到罗马人统治时期都非常繁荣，直到红海的海上运输取代了陆地运输。  \n佩特拉古城的核心是宏伟的卡兹尼神殿，这是世界新七大奇迹之一，整栋建筑是在一块砂岩中凿出来的。从外界进入古城要经过一条狭长的彩色岩石的峡谷，那里的岩石呈褐色、红色、橘色、黄色、紫色、淡蓝和绿色等多种颜色。各种颜色的岩层扭曲成螺旋形和波浪形的彩色曲线，是世界上最漂亮的峡谷之一\n\n**中东地区也许是当今世界上火药味最浓的地区。如果你只靠媒体和阅读书籍来了解那里，可能会觉得看不到任何希望。但是我在那里亲身体验了一段时间，觉得即便是有着世仇的民族，依然有和解的可能性**\n\n### 八维度法\n\n### 美洲\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172801.png)\n\n### 汉密尔顿\n\n**如果有机会，《汉密尔顿》是你一生中应该听一次的音乐剧。**\n\n它将美国从**1776年独立战争到1800年大选这20多年的恢弘历史**，以艺术的方式表现出来，而且讲述得深入透彻。它的音乐令人振奋，唱词优美，如同散文诗一般。  \n华盛顿引导的独立战争\n\n国父之一的詹姆斯·麦迪逊和汉密尔顿 开始呼吁建立 合众国  \n托马斯·杰斐逊 起草了 《独立宣言》\n\n为了制约汉密尔顿和联邦党，在1792年，杰斐逊和麦迪逊成立了民主共和党，这就是今天美国民主党的前身。  \n为什么说1800年大选是一场革命呢，因为从那一次大选开始，美国总统才真正代表了广大民众。杰斐逊在历史上也被称为人民的总统。\n\n### 科学试错\n\n获得经验的速度越快，我们的进步也就越快。  \n为了最有效地获得经验，一个明确的途径就是，我们要从盲目试错，上升到科学试错。\n\n### 核冬天\n\n苏联天文学家卡尔达肖夫提出了一种衡量文明水平的指数，依据就是这个文明所能够利用的能源总量的量级。他给出的划分标准是，如果一个文明能够驾驭它所在的行星上所有可用的能量，就达到了第一型文明的标准。第二型文明的标准则是能够驾驭所在恒星系恒星的能量。  \n山火导致了大量的灰尘，把太阳挡住了  \n为什么挡住太阳光会对气候影响那么大？因为相比人类自己能够产生的能量，太阳输送给地球的能量实在是太大了，一点浮动就会产生很大的影响。  \n如果没有经济发展，空谈环保，其实是保护不了环境的。而不配套的环保，还可能得不偿失。  \n在做事之前要系统地考虑问题，否则简单地解决一个问题，可能会为将来带来更多更大的问题。\n\n眼镜蛇效应』来自殖民时期印度的逸闻:英国政府计划要減少眼镜蛇的数量,因而颁布法令说每打死一条眼镜蛇都可以  \n领取赏金。然而印度人为了赏金反而开始养殖眼镜蛇。当英国政府意识到这种情况而取消赏金后,养殖蛇的人把蛇都放  \n了;放岀去的蛇继而大量繁殖,结果眼镜蛇族群数量反而上升\n\n### 智库\n\n“智库”或者说政策研究机构。智库的工作在防范政策失误方面起到了很大的作用。  \n通往地狱之路，通常是由善意铺成的。--- 哈耶克  \n在古代，理性无法预料没有发生过的事情。  \n近现代，一种新的机制在一定程度上缓解了这一问题，这就是创办独立的智库和研究机构，尽可能地研究和推演列举那些尚未发生的事情。这样一来，当那些预想不到的事情真的发生的时候，不至于完全没有应对措施\n\n保守型智库 ---斯坦福大学的胡佛研究所  \n[[《政治化的困境： 美国保守主义智库的兴起》]] -- 王海明老师\n\n不在其位，也谋其政。\n\n智库给的建议不一定正确，更重要的是你需要一个不一样的视角来看待同一个问题。\n\n### 我们应该承担多少风险\n\n香港过去的启德机场，位置在香港市区，周围是高密度的城市建筑，被公认是世界上最危险的几个机场之一。  \n对可能发生的事情有了充分的了解，我们就可以针对性地去降低风险，一个有效的办法就是安排B计划。  \n**有些事情我们无法判断是不是“不存在的风险”，还有些事情，我们从未遇见过，也无法判断对自己是好事还是坏事**  \n一个人要承担的风险不要超过正常浮动的三倍。 -- 比如美国股市浮动范围大概17%，那么你的风险承受能力就要达到50% ，也就是即使损失一半，也还要可以生存  \n池子越大，越能抵消随机性带来的误差，也就是说当你置身于一个很大的池子的时候，你就能承担更大的风险。 --- 这个有点像我爸的兄弟会。一般10个人足以\n\n### 和自己和解\n\n比如当我们在学业、事业和爱情上遭受挫折时，当我们不幸失去了亲人时，当我们不得不和生活了多年的配偶离婚时……人生的这些坎要怎么迈过去？每次看到这样的问题，我的心里总想到一句话：同自己和解。  \n首先，接受自己的情绪  \n其次，要理清楚自己的情绪。  \n“说出来”就是一个梳理自己内心的过程，经过这番梳理，自己头脑中也会清醒很多。与自己和解，其实就是自己接受自己的情绪，自己引导自己把情绪抒发出来，慢慢地自己的负面情绪就理清楚了。  \n第三，要能够发现和承认自己阴暗的一面。  \n坚信世间除了生死无大难，没有迈不过去的坎\n\n### 学会道歉\n\n对于道歉者\n\n- 第一，承认错误、道歉，然后承担相应的责任，这本身就是一种美德，对个人是如此，对于一个机构、一个国家也是如此。一个人具有这样的美德，才有可能赢得别人的尊重。\n- 第二，道歉也是让自己走出阴影最好的办法。\n- 第三，对于一个担任管理工作的人，或者说作为一个机构，犯下错误之后承认错误并道歉，这是重新凝聚团队精神所必需的。\n\n**道歉有两个基本要求，第一个是诚恳，第二个是及时。**\n\n### 真正让人吸取教训的是行动\n\n借钱这件事。  \n有人可能会说，算了，吸取教训，以后记住借钱给人一定要小心。**其实这是远远不够的，因为很少有人只靠“记住”就能真正吸取教训。只有采取了行动，付出更多的心思去补救这件事，才能真正做到吸取教训。**  \n**所以我会建议你采取行动去找他要回这笔钱。能真的把这笔钱要回来当然好，即使要不回来，经过这样一个艰辛的过程，你也会从这件事中真正得到教训和成长。**  \n我们通常认为霸凌者是心眼不好或者品德不好，其实按照心理学家的说法，这样的人很多是有心理和人格缺陷的，他们无法感知到对方的感受，一切以自我为中心。他在赖账的时候，没有考虑对方是否需要钱，对方心里是什么感受，只想着自己的需要，这就是为什么他们居然还觉得自己挺有道理，还要和债主发火\n\n### 对巧合要警惕\n\n汝窑，宋代五大名瓷之一。汝瓷位居宋代“汝、官、哥、钧、定”五大名窑之首，  \n汝瓷造型古朴大方，以名贵[玛瑙](https://baike.baidu.com/item/玛瑙/262428)为[釉](https://baike.baidu.com/item/釉/94852)，色泽独特，有“玛瑙为釉古相传”的赞誉。\n\n### [[时间管理]]\n\n- **时间管理，首先是要做减法**\n\n\u003e  你想过什么样的生活，就保留相应的东西，放弃那些和你心目中的生活无关的东西，因为你实际上不需要它们。\n\u003e\n\u003e ​ ---《断舍离》\n\n- **通过止损反败为胜**\n\n**总结一下这种止损的关键，就是及时停止掉那些在规定时间无法完成的事情。**  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172823.png)\n\n- **永远准备好B计划**\n- **不是利用碎片时间，而是减少碎片时间**\n\n### 数据资产\n\n数据要成为资产，必须得到关键技术的支持，让它获得能够作为资产而发挥作用的基本属性  \n比特币是一项了不起的加密成就，它能在数字世界中创造出不可复制的内容，这具有巨大的价值。\n\n### 布匿战争\n\n农业社会和商业社会之间的战斗，最终罗马获得了胜利  \n三次布匿战争，仿佛是汉尼拔一家对战罗马，一次失败后就交出军队，并割地赔款。\n\n### 全民民主的弊端\n\n其实 用一个 乌合之众就可以概括  \n雅典 和 斯巴达的战役可以说大部分时间都处于优势，但是民众毫无理性的处置掉了大战归来的8位将军导致两年后的战役彻底的失败了。\n\n### 南极之旅\n\n**去南极一般需要提前 18-12 个月定船票，因为南极各个岛屿每天允许登岸的人数有限制。**有的岛每天人数的限制只有 50 人左右，即使限制较松的岛，最多也就允许每天 100 多人登岛。因此，把每个岛能够接纳的人数加起来，每年只能满足 4 万人左右造访南极。\n\n最好带上专业的摄影设备，因为你能从南极带走的仅有的两样东西就是照片和记忆。而记忆会随着时间淡忘，  \n不过最要强调的是，当我亲身到了南极之后体会到，真正最需要的还是自己的一双眼睛。不要因为照相，错过了亲身体验的机会。\n\n第三个特别需要注意的是要带好晕船药。  \n耳贴晕船药 \u003e 口服晕船药\n\n乌斯怀亚被称为世界的尽头，无论你是从哪里出发，要来到乌斯怀亚都要飞越相当远的距离。  \n如果你只是为了看企鹅，到乌斯怀亚附近（的企鹅岛和灯塔岛）也能看到。此外，离乌斯怀亚不远处的火地岛国家公园也非常漂亮，可以看到终年不化的雪山，冰川削出来的峭壁和湍流瀑布。\n\n**德雷克海峡是南美洲沿岸暖流和南极洲方向来的寒冷洋流的交汇处，又处在南纬60度左右的盛行西风（又叫“咆哮西风带”）上，因此这里的洋流特别强，水流量是亚马孙河的600倍。这条洋流环绕整个南极洲，被称为西风漂流或南极环流，是全球最强劲的一支洋流。**\n\n我们过海峡时运气特别好，全程基本上属于风平浪静，但即使如此，海浪也有2-3米高，给人的感觉极为难受。**要知道，在普通海域，大部分邮轮遇到的海浪高度不会超过1米。**运气不好就10米+了。\n\n**据说晃得厉害的时候，会感觉自己被扔在洗衣机里转**\n\n南极公约，主要是一些环境保护的规定，这些规定是为了保证游客的旅行活动不会破坏南极的生态环境，同时游客也不会从南极带回可能破坏外部环境的物种。\n\n乘客们在签署了公约后，主要要做到两件事，**第一是要防止和南极之间任何可能的物种交换，第二是要保护当地的环境和生物**\n\n- 带上行李和衣服，做吸尘处理，食物残渣也不能带上岸\n- 每天乘冲锋舟之前，要换上邮轮公司提供的雨靴，雨靴要做消毒处理。每天从岛上回到邮轮之前，也要刷掉雨靴上的泥土，再做一遍消毒处理。\n- 不能从南极带走任何东西。很多人想带一块石头回去，或者带走一瓶水，这都是不可以的。**我们唯一能带走的就是相机里的照片和头脑里的回忆。**\n- 遇到企鹅，必须远离企鹅五米以上，如果遇到海豹，则要远离十五米以上。不能踩踏企鹅的“道路”。\n\n#### 小企鹅\n\n通常一对企鹅每年只能下一到两个蛋。\n\n**企鹅爸爸们在孵蛋时常常是排成一排，这样背可以挡住风。在最寒冷的时候，大群的企鹅爸爸们还会紧紧地挤成一大片，背朝外面的寒风。企鹅爸爸会把蛋放在脚蹼上，企鹅肚子下面有一块耷拉下来的皮，可以护住蛋，这样能够保证在外界温度降到零下70摄氏度的情况下，蛋的温度仍然能维持在37摄氏度左右。企鹅爸爸们要这样站在风中不吃不喝60天（帝企鹅孵蛋时间可能长达65天），直到小企鹅孵出来为止。在这个过程中，企鹅爸爸的体重要下降45%。看到这个过程，我真的特别特别感动，想到动物的父爱，觉得人类在这一点上似乎还不如动物。**\n\n古尔丹岛（Gourdin Island），那是南极半岛尖端外海处最大的岛屿，是百万年前一次火山喷发形成的。\n\n他讲，**地球上条件最恶劣的地方，比如南极，它的环境对于人类来说也比火星上强一万倍。因此大家与其想着给地球找一个备份，还不如好好保护我们的地球。**\n\n如果遇到水面上几公里连成一片的厚冰层，无论是什么船拿它都没有办法。遇到这种情况，最好的决定就是绕道而行，而不是逞能破冰，因为可能前面的冰好不容易破掉一些，后面又冻上了，船就会进退不得。\n\n### [[信息传]]\n\n**很多人问我为什么要上大学，要学习理论，因为理论的指引可以让人的成功从偶然事件变成大概率事件。**\n\n### 纳米材料\n\n衣服保暖需要两个基本条件：一个是防风，防止冷风吹进来；另一个是防辐射，防止人体的红外辐射把自己产生的热量散出去。此外，衣物要穿着舒服，还需要透气性好。\n\n纳米材料防水的原理又是什么呢？一般的纤维遇到小水珠时，根据毛细运动的原理，水分子可以渗透到纤维的另一侧，发生透水现象。而纳米纤维构成“布料”具有疏水性，会让小水珠聚集到一起，变成“大”水珠，这时由于水珠表面张力的作用，水分子就不能顺利脱离水珠渗透到另一侧，也就防止了渗水。另\n\n**新产业就是现有产业+新技术**\n\n### 碳中和\n\n**什么是碳中和？这里的“碳”指的是二氧化碳，碳中和简单地讲就是，人类活动产生的二氧化碳的数量，和因为人类活动而减少的二氧化碳数量达到平衡**\n\n二氧化碳和玄武岩会发生化学反应，生产一种类似于碳粉末的矿物质，这样就可以把二氧化碳捕捉起来或者说消除掉。这种化学反应自然界本身就在进行，以前大家认为这个过程需要上千年才能完成，十几年前科学家们发现，采用一些特殊的办法可以在8-12年内就完成这个过程。这类捕获和隔离二氧化碳的技术，统称为CCS。\n\n未来可能的新型电池，崔教授提到了一种用氧气和锂作为正负极的电池，这是理论上能够达到最高能量密度的元素配对了，理论上可以将电池的能量密度提高5-15倍左右，这种电池也被称为锂空气电池。\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E7%A3%90%E5%86%B2-5%E5%B9%B4-p7":{"title":"原图","content":"\n## 个人优势\n\n- 淘系 5 人前端团队 tl，核心技术编码，负责创新业务落地\n- 前端，可以全栈 python/java/node，擅长业务和技术架构\n- 2019 至今负责躺平工作台小组\n- 2018 阿里未来酒店住 app 项目技术总 pm，基于淘宝前端研发基础能力，搭建整体研发基础设施\n- 2016-2017 维护手淘基础交易链路。了解淘系前后端技术体系与研发基础设施\n\n## 工作经历\n\n### 淘宝（中国）软件有限公司\n\n2016.07-至今 前端开发  \n内容\n\n1. 团队规划设计与管理，负责团队成长，提名晋升 2 人\n2. 躺平工作台横向业务支持，带来业务增量价值\n3. 核心技术架构设计与实施\n4. 移动端技术架构设计及性能优化\n\n### 普华永道信息技术 (上海）有限公司\n\n2014.02-2016.07  \nAdvance Technology 其他技术职位  \n内容\n\n1. 大数据分析与可视化产品研发\n2. 前端技术架构设计\n\n### 上海嘉扬信息系统有限公司\n\n2012.07-2014.01  \n实施部 实施顾问  \n内容  \nHR/财务/供应量行业 ERP 及 BPM 系统实施\n\n## 项目经历\n\n### 躺平工作台\n\n前端负责人 2019.05-至今\n\n#### 内容\n\n躺平是淘宝面向家具家装行业新赛道的端到端解决方案，在业务上分为躺平直营、躺平智造、躺平设计、躺平好货四大板块，我负责各业务中门店、服务商、工厂等角色使用的工作台部分，以及出于业务关键节点的设计编辑器技术架构升级。\n\n##### 难点挑战:\n\n- 出于创新业务特点，业务进展过程需求多变、上线频率快，研发资源紧缺常态化。\n- 编辑器与三方公司合作，技术架构与研发流程老旧(单仓库 300 万行代码，50 人团队共同维护)\n\n##### 解决方案：\n\n设计 ATOM 微前端技术架构体系，包含微前端框架、研发管理后台、研发工具套件、物料搭建体系\n\n- 串联集团研发体系底层能力，提升研发效率，赋予技术与业务高灵活度，可配置化研发\n- 标准化团队研发链路，协同产品、设计与后端团队标准化，提升团队内物料流通率、功能模块复用率\n\n#### 业绩\n\n1. 编辑器发布频次较改造前提升 297%\n2. 沉淀业务配置后台，常态化配置开发工作量从 2 周下降至 1 天\n3. 提前一年完成 SaaS 底层能力建设，21 年 SaaS 商业化需求提前上线，定制需求投入减少 70%\n4. 支持 4 大业务板块，20+业务工作台项目，管理子应用 190+\n5. 沉淀业界创新 ATOM 微前端技术体系，跨团队分享交流多次，系列文章选录内网技术博客头条\n\n### 未来酒店 APP\n\n技术总 PM 2018.01-2019.03\n\n#### 内容\n\n未来酒店业务面向消费者独立 APP，包含预定、checkln、餐饮、客房服务等功能, 整休头 hvbrid 技术如构端负界层业价全部中 H5 字成为 APP 技术一号位，负责总体技术架构与业务功能，包含客户端、前端、服务端技术落地。\n\n##### 难点挑战:\n\n- Native 级性能要求\n- 业务链路复杂，到店 checkln 业务涉及 APP、Checkln 机器、员工手持端、总控端、云端系统联动，研发阶段联调需要 10 人团队协同，线上问题排查平均 3 小时起\n\n##### 解决方案：\n\n- 结合手淘经验，结合预置包、缓存包方案实现加载性能优化\n- 设计全链路排查方案，拓展服务端排查链路基础能力，打通前端、客户端、服务端排查链路\n\n#### 业绩\n\n1. 全链路可视化排查，平均线上问题定位时间从 3 小时降低到 5 分钟内，关键日志直接透出\n2. APP 验收阶段所有性能指标基于 Native 应用验收标准通过\n3. 所有功能离线状态可交互\n4. 申请技术专利：全域定位与门锁方案\n5. 业务创新：与公安配合，实现远程未到店办理 Checkln\n\n## 教育经历\n\n上海大学-本科-信息管理与信息系统-2008-2012\n\n# 原图\n\n[https://geekplux.com/atom.xml](https://geekplux.com/atom.xml)\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89":{"title":"社会主义","content":"\n# 社会主义\n\n# 与资本主义差别\n\n在[[晶体管的发展]]中可以看出，有时候集中力量办大事可能会造成错过技术的升级，导致技术从此跟不上别人的步伐。\n\n以及后续，想要再调头换向的时候就会出现**半公开的科研造假和徒劳无益的“杂技式科研”** 这种欺上瞒下的，和[[大跃进]]类似的行为\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A6%80%E8%B5%8B%E6%95%88%E5%BA%94":{"title":"实例","content":"\n禀赋效应或厌恶剥夺(英语：Endowment effect)，形容当一个人拥有某项物品或资产的时候，他对该物品或资产的价值评估要大于没有拥有这项物品或资产的时候。\n\n# 实例\n\n## R 教授的酒\n\nR 教授（现在已被证实是理查德·罗塞特，他后来成为芝加哥大学商学院的院长）对标准经济理论深信不疑，还对葡萄酒难以割舍。泰勒发现 R 教授非常不愿意卖掉自己收藏的葡萄酒，即使对方出价高达 100 美元（当时可是 1975 年）一瓶也不行。R 教授也会从拍卖会上买葡萄酒，但无论质量如何，他出价从不会高过 35 美元一瓶。若价格在 35 美元～ 100 美元，他就既不买也不卖。这个巨大的价格差在经济理论上看是相互矛盾的，人们希望这位教授能在这个价格区间为某瓶酒定一个值。如果在他看来某瓶酒值 50 美元，那么只要出价超过 50 美元，他就应该会卖掉它；如果这瓶酒本来不是他的，那么他也应该愿意花 50 美元买下它。这个可以接受的卖价和可以接受的买价应该相同，但事实上，最低卖价（100 美元）比最高买价（35 美元）高出很多，拥有这件物品似乎会提升它的价值。\n\n## 已售罄的演唱会门票\n\n假设你手里有一张票已售罄的演唱会门票，这是一个著名乐队的演唱会。这张票你是以 200 美元的价格买下的，而你又是个狂热的粉丝，即便是以 500 美元买下这张票，你也愿意。后来你从互联网上看到有更有钱或更狂热的粉丝愿意花 3000 美元买下门票。你现在手里有票，你愿意卖吗？如果像票已售罄的各种重大活动中的大多数观众一样，你就不会卖。你的最低卖价也要在 3000 美元之上，而你的最高买价只是 500 美元。\n\n# 去除禀赋效应\n\n经验丰富的商人显然已经学会了正确提问，即“与可以得到的其他东西相比，那个杯子真的是我特别想‘得到’的吗”。经济学家会问这个问题，有了这个问题，禀赋效应就不复存在了，因为得到的快乐和放弃的痛苦之间的不对称性没有关联。\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A6%85%E4%B8%8E%E6%91%A9%E6%89%98%E8%BD%A6%E7%BB%B4%E4%BF%AE%E8%89%BA%E6%9C%AF":{"title":"《 禅与摩托车维修艺术 》","content":"\n# 《 禅与摩托车维修艺术 》\n\n# 元数据\n\n\u003e [!abstract] 禅与摩托车维修艺术\n\u003e - ![ 禅与摩托车维修艺术|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/356/33810356/t7_33810356.jpg)\n\u003e - 书名： 禅与摩托车维修艺术\n\u003e - 作者： 罗伯特·M.波西格\n\u003e - 简介： 作为一部自传体小说，斐德洛的故事，其实正是本书作者罗伯特·M. 波西格的人生。在《柏拉图对话集》中，斐德洛是一个爱好哲学的普通雅典青年。而在本书中，斐德洛重返人间。他曾经是学哲学的学生，同时也是教修辞学的教师，但是由于哲学理念与文化的世界观冲突，他终于因精神崩溃而住院。出院后，他希望从狭窄而受限的自我解脱，于是开始了一场骑着摩托车横跨美国大陆的万里长旅，一路经过复杂经验与反省思考，终于暂时恢复了灵性的完整与清静。这一回归自己的过程，是通过不断寻求“良质”，即东方哲学里的禅思，并用摩托车维修之道对其进行阐释而实现的。这便是《禅与摩托车维修艺术》一名的由来。与此同时，书中还批评了西方世界的二分法或二元论，如人文与科技、精神与物质、神秘主义与机械论、艺术与工业、心灵与机械、东方与西方等相对意识。\n\u003e - 出版时间 2018-09-01 00:00:00\n\u003e - ISBN： 9787229131548\n\u003e - 分类： 文学-外国文学\n\u003e - 出版社： 重庆出版社\n\n# 高亮划线\n\n## 1\n\n- 📌 我拍了拍克里斯的膝盖，指给他看。“什么事？”他大声嚷道。“有一只黑鹂！”他嘟囔了句什么，我没听见，就大声喊回去：“你说什么？”他一把掀开我头盔的后半部，喊道：“我已经看过好多只了，老爸。”“噢！”我大声回应，然后点点头，的确，十一岁大的孩子对红翅黑鹂是不会有什么感觉的。要对这事儿有感觉，需要上点儿年纪，对我而言，这感觉里面掺杂着许多他不曾有过的回忆。很久以前，那些寒风瑟瑟的早晨，沼泽中的水草都已枯黄，水烛在冷风的吹拂中摇曳，我们穿着高筒靴站在沼泽里，等待日出，等待猎鸭时刻的到来，而四周踩过的烂泥正散发出一股刺鼻的气味。冬天的时候，沼泽结冰了，我踩在冰上，身边是枯萎的水烛，在我面前除了蒙蒙的天空，只剩下一片死寂和酷寒，这时候不会有黑鹂的踪迹。然而现在是七月，它们都回来了，处处显得生机勃勃，沼泽里面是一片唧唧的虫鸣和小鸟啁啾的欢闹之声，不知有多少生命正在我们周围呈现着盎然的生机，生生不息，代代相传。 ^33810356-7-1057\n    - ⏱ 2021-05-29 19:01:54\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A6%85%E8%AE%A9%E5%88%B6":{"title":"禅让制","content":"\n# 禅让制\n\n## 罗马\n\n罗马的集权制度在管理辽阔的疆域的时候，对皇帝的要求很高，所以他们一般会选定一个继承人，并将其收为养子。这种养子继承制在大约两百年的时间里保证了罗马帝国的繁荣，特别是在五贤帝时代。\n\n在那个时期，从[[涅尔瓦]]到[[奥勒留]]五位皇帝都是以养子到方式先后相继。这五位皇帝谦虚仁爱，体恤臣民，创造了罗马帝国在[[屋大维]]之后的盛世。此后，奥勒留破坏了这种养子继承制，传位给了他自己的儿子康茂德，后者并没有能力管理国家，而且残忍无道，直接造成了罗马帝国由盛转衰\n\n罗马的两百年说明禅让制度是有一定优越性的，但是也无法抗住一些人的私欲。\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E6%8E%A2%E6%A1%88%E5%85%A8%E9%9B%86":{"title":"《 福尔摩斯探案全集 》","content":"\n# 《 福尔摩斯探案全集 》\n\n# 元数据\n\n\u003e [!abstract] 福尔摩斯探案全集\n\u003e - ![ 福尔摩斯探案全集|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/127/805127/t7_805127.jpg)\n\u003e - 书名： 福尔摩斯探案全集\n\u003e - 作者： 柯南·道尔\n\u003e - 简介： 《福尔摩斯探案全集》结构严谨，环环紧扣，故事情节惊险离奇，险象环生，被推理迷们称为推理小说中的《圣经》，是每一个推理迷必备的案头书籍。福尔摩斯清瘦的高个子，身披大氅，嘴衔烟斗，鹰钩鼻，目光锐利，打遍天下无敌手，他早已成为人们心目中神探的代名词。在与罪恶与魔鬼的较量中，他冷静果敢、抽丝剥茧，一步步驱散笼罩在各类案件上的阴云。其经典形象和曲折离奇的故事情节伴随了一代又一代人的成长，吸引和折服了无数的“福迷”。\n\u003e - 出版时间 2014-01-01 00:00:00\n\u003e - ISBN： 9787517102779\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 中国言实出版社\n\n# 高亮划线\n\n## 福尔摩斯探案全集 第一辑\n\n- 📌 了解这件事比要我解释我如何了解到的要难得多。当别人让你证明二加二等于四，你会觉得难度较大，尽管你很肯定这个结果是正确的。 ^805127-3-16486-16546\n    - ⏱ 2020-09-23 22:13:42\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A7%81%E6%9C%89%E5%8C%96%E9%83%A8%E7%BD%B2-AI":{"title":"私有化部署 AI","content":"\n# 私有化部署 AI\n\n比较适合家用机子部署的模型：ChatGLM-6B\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A7%81%E9%92%A5%E7%AE%A1%E7%90%86":{"title":"私钥管理","content":"\n# 私钥管理\n\n私钥的管理意味着巨大的责任。如果丢失了私钥，将无法访问你在以太坊上的资产和合约。没有人可以帮助你重新获得访问权：你的资产将永久性地处在锁定状态。下面是一些有用的技巧，帮助你更好地履行私钥管理这个重大的责任：·\n\n- 不要随意用自己的方式来保障安全，要使用久经考验的标准方法。·\n- 账户越重要（例如，受控资产的价值越高，或智能合约越重要），越应采取更高的安全措施。·\n- 空气隔离设备（不通过任何方式与互联网连接）能够提供最高级别的安全保障，但并非所有账户都需要达到这一级别。·\n- 切勿以简单形式存储你的私钥，尤其是以数字化方式存储。幸运的是，今天的大多数用户界面甚至不会让你看到原始私钥。·\n- 私钥可以以加密形式存储，作为数字“密钥库”文件。加密后，它们需要密码才能解锁。当系统提示你选择密码时，请将其设置为强（即长且随机），备份密码，不要共享密码。如果你没有密码管理器，请将其记下并存放在安全且保密的地方。如果要访问你的账户，你需要同时拥有密钥库文件和密码。\n- 不要把密码保存在数字文档、数字照片、截屏、在线网盘、加密的 PDF 等。不要临时拼凑一些安全解决方案。使用密码管理器或者纸和笔。·\n- 当提示你备份以助记词显示的私钥时，使用纸和笔把它们记下来。不要把这个任务置之脑后，因为你一定会忘记。万一你计算机系统中的所有数据都丢失了，或者你把密码弄丢了，这张小纸条就会派上用处。然而，这也可能为攻击者提供可乘之机，进而窃取私钥。所以，千万不要以数字信息的形式存储私钥，建议把这张小纸条锁在抽屉或保险箱里。·\n- 在进行大笔的数字资产转账之前（特别是转到新地址），首先做一笔小金额的测试转账（例如不到一美元），并且等待收据以确认交易成功。\n- · 创建新账户时，首先只向新地址发送一笔小额的测试交易。收到测试交易后，尝试从该账户再次发回。创建账户可能会出错的原因有很多，如果出现问题，最好是通过这样的小额交易来发现问题。如果测试正常工作，那说明一切都没问题。·\n- 公共区块浏览器是一种独立查看交易是否已被网络接受的简单方法。但是，这种便利性会对你的隐私产生负面影响，因为你把地址透露给了区块浏览器，这可能导致你被追踪到。\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A7%8B%E5%8F%B6%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%AF%BB%E6%87%82%E4%B8%80%E6%9C%AC%E4%B9%A6":{"title":"《 秋叶：如何高效读懂一本书 》","content":"\n# 《 秋叶：如何高效读懂一本书 》\n\n# 元数据\n\n\u003e [!abstract] 秋叶：如何高效读懂一本书\n\u003e - ![ 秋叶：如何高效读懂一本书|200](https://weread-1258476243.file.myqcloud.com/weread/cover/45/YueWen_696495/t7_YueWen_696495.jpg)\n\u003e - 书名： 秋叶：如何高效读懂一本书\n\u003e - 作者： 秋叶\n\u003e - 简介： 每个人的时间都是有限的，大部分人能分配给读书的时间就更有限。对很多人来说，读书又是学习、提升最容易的方法之一。可是，你会读书吗？哪有那么多时间读书？如何选到适合自己的书？如何从书中快速获取需要的信息？如何从书中学习分析问题的方法，用起来？如何通过读书，建立自己思考问题的框架？如何写出高质量的读书笔记？如何高效分享书中的知识与技能？有关阅读的诸多难题，秋叶老师一一靠谱回答，同时分享高效读书的方法，让你活读好书、爱上读书。\n\u003e\n\u003e - 出版时间 2015-07-01 00:00:00\n\u003e - ISBN： 9787550248014\n\u003e - 分类： 个人成长-认知思维\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n## 上篇 知行合一\n\n- 📌 不要总是在救火，而是要搞明白为什么会起火； ^696495-4-28806-28827\n    - ⏱ 2017-02-03 09:09:40\n- 📌 矩阵。[插图][插图]欢迎你用波士顿矩阵思考你的工作技能、你的产品、你的公司业务，并用到你的市场经营汇报PPT中。4.组合矩阵分析法当你得兼顾多个项目计划时，是否会感到疲于奔命？这时你需要一套分析工具。 ^696495-4-35239\n    - ⏱ 2017-02-03 09:24:30\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A7%91%E5%AD%A6":{"title":"科学","content":"\n## 科学的定义\n\n第一，我们能够称之为科学的知识体系需要是完整的，成体系的，内部逻辑自洽的  \n第二，科学研究的方法必须是基于对客观事物的观察，进行理性的合乎逻辑的推理和判断，不能是主观的想象和猜想。\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A7%A6%E5%A7%8B%E7%9A%87%E4%BC%A0":{"title":"《 秦始皇传 》","content":"\n# 《 秦始皇传 》\n\n# 元数据\n\n\u003e [!abstract] 秦始皇传\n\u003e - ![ 秦始皇传|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/763/783763/t7_783763.jpg)\n\u003e - 书名： 秦始皇传\n\u003e - 作者： 石静\n\u003e - 简介： 对于嬴政的一生，后人又是如何评价，此时躺在皇陵的嬴政已经一无所知了。而只有本书的作者还以曲折的文笔演绎着他的一生，与他有关的谜一般的一切！\n\u003e\n\u003e - 出版时间 2013-04-01 00:00:00\n\u003e - ISBN： 9787551803717\n\u003e - 分类： 人物传记-军政领袖\n\u003e - 出版社： 三秦出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6VKSQv2Bo  \n⏱ 2017-12-16 22:48:43\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A8%80%E7%BC%BA%E9%99%B7%E9%98%B1":{"title":"稀缺陷阱","content":"\n# 稀缺陷阱\n\n在这种情况下，**我们眼里只有当下具体的琐碎细节，它会把你的注意力全部占据，这种只见树木不见森林做事方式，会导致你越忙碌，价值越低，最后你会陷入琐碎的汪洋里，困在永恒的当下……**\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A8%8E%E6%94%B6%E6%94%B9%E9%9D%A9":{"title":"税收改革","content":"\n# 税收改革\n\n## 93 年分税制改革的背后\n\n为了改革顺利推行，中央最终做了妥协，决定在全国范围内用 1993 年做基年。这个决定立刻引发了第四季度的收税狂潮，根据项怀诚和刘克崮的回忆：（项怀诚）实际上，9 月份以后确实出现了这些情况。在那一年，拖欠了多年的欠税，都收上来了。一些地方党政领导亲自出马，贷款交税，造成了 1993 年后 4 个月财政收入大幅度增加。（刘克崮）……分别比上年同期增长 60%、90%、110%和 150%，带动全年地方税收增长了 50%～ 60%\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A8%BB%E5%9F%8E%E4%BA%9A%E4%B8%81":{"title":"稻城亚丁","content":"\n海拔 4111 米的稻城亚丁机场\n\n拥有国内最好的雪山风景\n\n含氧量 60%，身体在地狱，眼睛在天堂\n\n三座雪山\n\n牛奶海， 还有五色海等 30 多个海\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%A9%B7%E6%9F%A5%E7%90%86%E5%AE%9D%E5%85%B8%E6%9F%A5%E7%90%86%E8%8A%92%E6%A0%BC%E6%99%BA%E6%85%A7%E7%AE%B4%E8%A8%80%E5%BD%95%E5%85%A8%E6%96%B0%E5%A2%9E%E8%AE%A2%E6%9C%AC":{"title":"《 穷查理宝典：查理·芒格智慧箴言录（全新增订本） 》","content":"\n# 《 穷查理宝典：查理·芒格智慧箴言录（全新增订本） 》\n\n# 元数据\n\n\u003e [!abstract] 穷查理宝典：查理·芒格智慧箴言录（全新增订本）\n\u003e - ![ 穷查理宝典：查理·芒格智慧箴言录（全新增订本）|200](https://weread-1258476243.file.myqcloud.com/weread/cover/48/YueWen_837932/t7_YueWen_837932.jpg)\n\u003e - 书名： 穷查理宝典：查理·芒格智慧箴言录（全新增订本）\n\u003e - 作者： 彼得·考夫曼\n\u003e - 简介： 他是巴菲特的导师与人生合伙人，他是当今最伟大的投资思想家，他是伯克希尔·哈撒韦51年间19.2%年复合增长率的奇迹缔造者。理解商业社会和投资本质，必读这本书！本书全面收录了查理·芒格的个人传记与投资哲学，以及过去20年来芒格主要的公开演讲和媒体访谈，是每一个投资者不可不读的必备工具书。查理·芒格在商业社会取得了巨大的成功，他的独特思维方式，他对商业伦理的“洁癖”，他对终身学习的强调，可以给我们每一个普通人带来启迪。\n\u003e - 出版时间 2021-07-01 00:00:00\n\u003e - ISBN： 9787521730401\n\u003e - 分类： 个人成长-励志成长\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 中文版序言 书中自有黄金屋\n\n- 📌 我只想知道将来我会死在什么地方，这样我就不去那儿了。 ^837932-7-5910-5936\n    - ⏱ 2021-03-12 19:18:26\n\n## 第一章\n\n- 📌 “我这辈子遇到的聪明人（来自各行各业的聪明人）没有不每天阅读的——没有，一个都没有。沃伦读书之多，我读书之多，可能会让你感到吃惊。我的孩子们都笑话我。他们觉得我是一本长了两条腿的书。” ^837932-12-2709-2801\n    - ⏱ 2021-03-12 19:35:57\n\n## 芒格、托尔斯\u0026奥尔森律师事务所\n\n- 📌 德摩斯梯尼（注：古希腊伟大的演说家）就说过：“一个人想要什么，就会相信什么。” ^837932-20-13162-13201\n    - ⏱ 2021-04-09 11:20:19\n\n## 沃伦和瑞克谈“船长查理”\n\n- 📌 的主任。罗杰·费舍尔是一个谈判和冲突解决专家，他和威廉·尤里合著的《谈判力》（Getting to Yes）是经典的双赢谈判技巧教材。[插图]例如，软科学界逐渐发现，如果几个来自不同学科的教授合作研究，或者一个教授曾经取得几个学科的学位，那么做出的研究成果会更好。但是另外一种做法的效果通常是最好的，那就是补充法，或者“拿来主义”法，这种方法鼓励各个学科无论看中其他学科什么知识，只管拿过来用。这种方法能够取得最好的效果，也许是因为它避开了扎根在传统中的学术争论，以及在单一学科中固步自封引起的蠢行——而这正是我们现在致力于改正的。不管怎么说，只要多多实行“拿来主义”，许多软科学学科就能减少“铁锤人倾向”引起的错误。例如，在我们的同学罗杰·费舍尔的领导下，许多法学院将其他学科的成果应用到谈判研究中去。 ^837932-22-9053\n    - ⏱ 2021-07-02 15:41:12\n\n## 第二章 芒格的生活、学习和决策方法\n\n- 📌 凡事往简单处想，往认真处行。 ^837932-15-446-460\n    - ⏱ 2021-08-02 10:21:57\n\n## 芒格进行商业分析和评估的“多元思维模型”\n\n- 📌 投资等于出去赌马。我们要寻找一匹获胜几率是两分之一、赔率是一赔三的马。你要寻找的是标错赔率的赌局。这就是投资的本质 ^837932-15-12141-12198\n    - ⏱ 2021-04-02 19:23:46\n\n## 投资原则检查清单\n\n- 📌 ●直面你的大问题，别把它们藏起来 ^837932-15-31436-31452\n    - ⏱ 2021-04-02 19:58:32\n\n## 第三讲 论基本的、普世的智慧（修正稿）\n\n- 📌 因此，除了要利用来自不同学科的多元思维模型之外，我还想补充的是，你们应该警惕严重的意识形态偏见。 ^837932-20-12212-12260\n    - ⏱ 2021-04-09 11:19:36\n- 📌 大多数教授用一个假定来解决这个问题：“如果我不能用实验来证明它，它就是不存在的。”然而，他们的假定明显是愚蠢的。如果有些东西非常重要，但由于道德约束，你们无法完美而准确地证明它，那么你们也不应该把它当作是不存在的。你们必须尽力而为，利用现有的证据去证明它。 ^837932-20-17198-17326\n    - ⏱ 2021-04-09 11:32:54\n- 📌 所以与其创立一种有漏洞的制度，还不如就不要赔偿了——就让生活艰辛一些。 ^837932-20-22539-22574\n    - ⏱ 2021-04-09 11:39:18\n- 📌 查理认为现有的工伤赔偿制度有漏洞，而人类的心理又决定了，只要有利可图而且不受惩罚，人们就会进行诈骗。正如他指出的：“如果你想要改变行为，那么就必须改变动机。” ^837932-20-22951-23030\n    - ⏱ 2021-04-09 11:39:58\n- 📌 《聪明的投资者》仍是最好的投资书籍。 ^837932-20-34341-34359\n    - ⏱ 2021-04-09 13:54:31\n\n## 最新的普世智慧：查理答问录\n\n- 📌 ·别兜售你自己不会购买的东西。·别为你不尊敬和钦佩的人工作。·只跟你喜欢的人同事。 ^837932-19-57729-57832\n    - ⏱ 2021-04-09 10:59:37\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.590454731Z","tags":null},"/%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86":{"title":"《 第一性原理 》","content":"\n# 《 第一性原理 》\n\n# 元数据\n\n\u003e [!abstract] 第一性原理\n\u003e - ![ 第一性原理|200](https://weread-1258476243.file.myqcloud.com/weread/cover/82/YueWen_35449548/t7_YueWen_35449548.jpg)\n\u003e - 书名： 第一性原理\n\u003e - 作者： 李善友\n\u003e - 简介： 什么是第一性原理？亚里士多德说：“任何一个系统都有自己的第一性原理，它是一个根基性命题或假设，不能被缺省，也不能被违反。”第一性原理，好比树木的根基，没有人会看到繁茂枝干下的树根，但它决定了树的一切。本书将“第一性原理”的思想引入创新与商业领域，用8个思维模型和实践方法，帮助企业与个人厘清问题的本质，直达本源。我们常问，未来十年什么会变化？这个问题很重要，但更重要的问题可能是，未来十年什么不变？如果能找到不变的，把所有的资源和精力，毫无保留地投入在不变的事物上，其力量不可同日而语。让我们用第一性原理重新认识世界。探索内在的力量，创造非凡的人生。\n\u003e - 出版时间 2021-01-01 00:00:00\n\u003e - ISBN： 9787115542649\n\u003e - 分类： 哲学宗教-西方哲学\n\u003e - 出版社： 人民邮电出版社\n\n# 高亮划线\n\n## 只能证伪，不能证明\n\n- 📌 8世纪，苏格兰哲学家大卫·休谟（David Hume）在《人类理解研究》[2]一书中提到了归纳问题，该归纳问题又被称为“休谟问题”。他认为“我们不能以先验的知识证明未来就会和过去一致，因为（在逻辑上）可以思考而出的明显事实是，世界早已不是一致的了”。简单来说，休谟提出的就是所谓的“归纳法谬误”，其实是在强调未来的世界未必与过去或者现在的世界相同，所以在过去或现在有效的规律在未来却不一定依旧成立，即把一定时空边界之内的小概率事件，推而广之为整类事物超时空所共有的规律。其实，人类所犯的很多错误都是源于把边界之内的规律不恰当地推到了边界之外。 ^35449548-7-474-776\n    - ⏱ 2022-03-30 13:55:23\n\n## 不是系统之内，而是系统之外\n\n- 📌 第一性原理在商业领域有什么作用？答案是找到那个“一”。在战略选择时，第一性原理的思维方式通常更加简洁有力，不在细枝末节上用功，找到那个“一”，注入所有的力量，比如亚马逊的“一”是“客户”，乔布斯的“一”是“产品”，用“一”统领其他要素，驱动企业增长飞轮，撬动战略杠杆 ^35449548-14-1415-1548\n    - ⏱ 2022-03-30 16:52:51\n\n## 一切学问都是证明系统\n\n- 📌 欧几里得对人类科学发展的贡献不仅在于建立几何学，更重要的是他首创了一种演绎法思维方式：从为数不多的公理出发，推导出所有定理和命题，从而构建了整个平面几何体系。这种基于演绎法的公理化思维方式，才是欧几里得留给后世的巨大财富，是人类思维的神迹。 ^35449548-18-3921-4041\n    - ⏱ 2022-03-30 17:02:43\n\n## 从《几何原本》到公理化思维\n\n- 📌 从公理化思维的角度来看，真正的“知音”不是观点相同，而是思考方式（逻辑）相同的人 ^35449548-19-2103-2143\n    - ⏱ 2022-03-30 17:06:17\n\n## 成为创新企业家\n\n- 📌 吉安-卡洛·罗塔在推荐序中将数学家分为两类——解题家与理论家。解题家解决的是一个已经被认为无望解决的问题，本质上是保守主义者，对新理论总是充满怀疑；理论家最荣耀的时刻则是发现一个新的理论，它不能解决任何老问题，却使它们变得无关紧要。 ^35449548-27-648-764\n    - ⏱ 2022-03-30 18:16:31\n\n## 刷新文化\n\n- 📌 固化型思维的公司总在逃避风险，却又期待创新的出现。而成长型思维则会把关注点从到底做错了什么，转变到我们从中学到了什么。”固化型思维与成长型思维相比，一个是看结果，一个是看过程。 ^35449548-32-1991-2079\n    - ⏱ 2022-03-30 18:32:21\n\n## 查理·芒格的多元思维模型\n\n- 📌 实际上，在每个学科中，真正的大道理可能只占全部内容的5%，但它却代表着95%的重要性。那么，这些大道理在哪里呢？芒格认为，所谓的大道理，其实就是每个学科的基础思维，而在我们的学习过程中，与思维相关的内容通常是大学一二年级的主要课程 ^35449548-37-1601-1742\n    - ⏱ 2022-03-30 18:40:51\n- 📌 芒格也列举了一些他认为的重要学科的重要理论，比如有数学的复利模型、物理学的临界质量模型、生物学的现代综合进化论、化学的自我催化模型，以及工程学的备份模型等。芒格认为，掌握100个模型就差不多可以拥有通识智慧了，而其中非常重要的不超过10个。 ^35449548-37-1900-2020\n    - ⏱ 2022-03-30 18:41:09\n\n## 第一创新的力量\n\n- 📌 这篇文章让我耳目一新，我非常喜欢且赞同厄本在文中援引马斯克的一段话：“我认为普通人的思维方式被传统和过去的经验束缚太多了。人们几乎不从第一性原理的基础上思考任何问题。他们会说‘我们会这么做，因为我们过去都是这么做的’，或者‘没人这么做，所以这么做肯定不对’。 ^35449548-40-855-984\n    - ⏱ 2022-03-31 10:02:01\n\n## 真理符合论\n\n- 📌 从生物学的角度来说，“如果人的眼睛就是光谱仪，耳朵就是振频仪，从而要求人体的整个神经系统包括中枢系统，必须相应地变构为一个远比现代最先进的互联网和超大型计算机还要敏捷高效的信息处理系统，那么，即便把人体代谢所产生的全部能量都调动出来，也无法应付上列能量需求的万分之一。”这是王东岳老师在《物演通论》一书中写下的一段话。因为自然万物运动和结构总是采取某种最简便、最经济的方式，这就是所谓的“最小作用力原理”，从这个角度讲，“人类的感知系统，不是为‘求真’设定的，而是为‘求存’设定的。” ^35449548-53-3240-3482\n    - ⏱ 2022-03-31 10:29:33\n\n## 所有人相信的真\n\n- 📌 这种隐含假设的影响下，我们经常会以群体认知评判一个人的对错，如果我的信念与集体不一样，一定是我错了；如果你的信念与集体不一样，一定是你错了。难道媒体不如你、专家不如你、领导不如你？不合群的人注定错误，这就是从众效应下追求个性的原罪。 ^35449548-55-1517-1633\n    - ⏱ 2022-03-31 10:32:01\n\n## 主体性认同\n\n- 📌 我们可以回想一下我们自身以及身边其他人在争吵中的反应，原本只是一个小小的摩擦或矛盾，但在争吵的过程中，这些摩擦或矛盾会逐渐上升到人格与尊严的高度。当我们感受到尊严受到侵害时，实际上就是“我”的存在受到了威胁。我相信很多人都发现过一个诡异的现象，在争吵的过程中，我们会不由自主地从为了某个事件或问题而争吵，变成为了争吵而争吵。而且，即便我们发现了这种争吵的无效性，大多数人依然无法及时停止。这背后就是并不存在的“我”一直在推动着我们，为了自身的存在性而争斗。这不是道理之争，而是尊严之争。 ^35449548-61-2332-2575\n    - ⏱ 2022-03-31 10:41:32\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%AC%AC%E8%B0%B7%E5%B8%83%E6%8B%89%E8%B5%AB":{"title":"第谷·布拉赫","content":"\n# 第谷·布拉赫\n\n#卡片/人物卡\n\n- 国籍：\n- 生平: 1546—1601\n- 身份：天文学家\n- 简介：第谷的天文学观察结果在开普勒体系的发展过程中发挥了非常关键的作用，\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%AD%92%E7%81%AF%E6%80%8E%E4%B9%88%E9%80%89":{"title":"筒灯怎么选","content":"\n## 迷瞪\n\n工装显色指数要求 90以上  \n光衰的周期要求更长\n\n### 如何分辨\n\n- 外观做工\n- 照度\n- 光效比\n- 光斑\n- 防眩光\n- 显色指数\n- 散热\n- 蓝光值\n- 频闪\n\n光斑差别影响不大  \n无主灯还是推荐高标组选择\n\n### 普通灯光\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513190438.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513191546.png)\n\n#### 显色指数\n\n### 高标组\n![20230513190515.png](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513190515.png)\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513190515.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513191800.png)\n\n#### 显色指数\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230513191307.png)\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%AE%80%E6%82%A6":{"title":"简悦","content":"\n# 简悦\n\n## 常用快捷键\n\n- option+ A，加入稍后读\n- option + B ，打开稍后读\n- aa 进入聚焦模式\n- ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230705195141.png)\n\n# 参考资料\n\n[社区](https://github.com/kenshin/simpread/discussions)  \n[[索引]基于简悦服务功能的各种新奇玩法（包括：API，导出服务，与双链笔记联动等） · Discussion #2085 · Kenshin/simpread · GitHub](https://github.com/Kenshin/simpread/discussions/2085)  \n[使用简悦导出含有永久链接与双向链接的 Markdown 并自动保存在 Obsidian 库 · Discussion #2513 · Kenshin/simpread · GitHub](https://github.com/Kenshin/simpread/discussions/2513)\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%AE%A1%E7%8A%B6%E8%A7%86%E8%A7%89":{"title":"管状视觉","content":"\n# 管状视觉\n\n当人类在进入危险或焦躁状态时，由于肾上腺素的分泌，视觉、听觉能力都会有显著的提高，**以便视线收窄便于聚焦对手，全部集中于当下目标，这种机制，会让我们的大脑把目标之外的所有东西全部过滤掉，眼里边只有当下。**\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B1%BB%E6%AF%94%E6%8E%A8%E7%90%86":{"title":"类比推理","content":"\n# 类比推理\n\n# 书单\n\n- 侯世达/桑德尔《表象与本质：类比、思考之源与思维之火》\n- 乔治·莱考夫马克·约翰逊《我们赖以生存的隐喻》\n- 黄新华等《逻辑、语言与认知》\n- 王寅《认知语言学》\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B1%BB%E7%BB%84%E4%BB%B6":{"title":"类组件","content":"\n# 类组件\n\n## React 16.3 生命周期\n\n- getDerivedStateFromProps\n- componentWillMount （ 已被标记弃用）\n- getSnapshotBeforeUpdate （新增）  \n  这个生命周期的设计初衷，是为了“与 componentDidUpdate 一起，涵盖过时的 componentWillUpdate 的所有用例”（引用自 React 官网）。\n- componentDidMount\n- componentWillReceiveProps （已被标记弃用）\n- getDerivedStateFromProps\n- shouldComponentUpdate\n- componentWillUpdate （已被标记弃用，与后来的异步渲染不兼容）\n- componentDidUpdate\n- componentWillUnmount  \n  ![1.png](https://s0.lgstatic.com/i/image/M00/5E/31/Ciqc1F-GZbGAGNcBAAE775qohj8453.png)\n\n#### 为什么要去除掉 componentWillUpdate\n\n因为 react 15 是同步进行渲染，同步渲染的递归栈是非常深的，而且不能打断，这样就很容易一直占据着主线程，直到递归结束释放主线程**。在这个过程中，浏览器没有办法处理任何渲染之外的事情，会进入一种无法处理用户交互**的状态。因此若渲染时间稍微长一点，页面就会面临卡顿甚至卡死的风险。\n\n在 [[React 更新策略]] 机制下，**render 阶段是允许暂停、终止和重启的**。当一个任务执行到一半被打断后，下一次渲染线程抢回主动权时，这个任务被重启的形式是“重复执行一遍整个任务”而非“接着上次执行到的那行代码往下走”。**这就导致 render 阶段的生命周期都是有可能被重复执行的**。\n\n我们再来看看 React 16 打算废弃的是哪些生命周期：\n\n- componentWillMount；\n- componentWillUpdate；\n- componentWillReceiveProps。\n\n这些生命周期的共性，**就是它们都处于 render 阶段，都可能重复被执行**，而且由于这些 API 常年被滥用，它们在重复执行的过程中都存在着不可小觑的风险。\n\n[React 团队给出的这篇文章](https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.htmlÏ) 就帮助大家规避“误操作”来说是绰绰有余的。\n\n## 缺点\n\n- this 的模糊性；\n- 业务逻辑散落在生命周期中；\n- React 的组件代码缺乏标准的拆分方式。\n- 在类中难以做编译优化，React 团队一直在做前端编译层的优化工作，比如常数折叠（constant folding）、内联展开（inline expansion）及死码删除（Dead code elimination）等。\n- React 类组件内部预置了相当多的“现成的东西”等着你去调度/定制，state 和生命周期就是这些“现成东西”中的典型。要想得到这些东西，难度也不大，你只需要轻轻地**继承**一个 React.Component 即可。**但是多就是好吗**他增加了我们的学习成本，这时就显得类组件太重了。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B1%BB%E7%BB%84%E4%BB%B6%E5%92%8C%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB":{"title":"类组件和函数组件的区别","content":"\n# 类组件和函数组件的区别\n\n类组件与函数组件本质上代表了两种不同的设计思想与心智模式。\n\n- 类组件的根基是 OOP（面向对象编程），所以它有继承、有属性、有内部状态的管理。\n- 函数组件的根基是 FP，也就是函数式编程。它属于“结构化编程”的一种，与数学函数思想类似。也就是假定输入与输出存在某种特定的映射关系，那么输入一定的情况下，输出必然是确定的。\n\n相较于类组件，函数组件更纯粹、简单、易测试。这是它们本质上最大的不同。\n\n类组件需要考虑到 this 有一定的模糊性，而在函数组件闭包中，它捕获的值永远是确定且安全的。\n\n## 设计模式上的区别\n\n在设计模式上，因为类本身的原因，类组件是可以实现继承的，而函数组件缺少继承的能力。\n\n当然在 React 中也是不推荐继承已有的组件的，因为继承的灵活性更差，细节屏蔽过多，所以有这样一个铁律，组合优于继承。\n\n##\n\n作为组件而言，类组件与函数组件在使用与呈现上没有任何不同，性能上在现代浏览器中也不会有明显差异。\n\n它们在开发时的心智模型上却存在巨大的差异。类组件是基于面向对象编程的，它主打的是继承、生命周期等核心概念；而函数组件内核是函数式编程，主打的是 immutable、没有副作用、引用透明等特点。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B2%BE%E7%BB%86%E5%8C%96%E8%BF%90%E8%90%A5":{"title":"精细化运营","content":"\n# 精细化运营\n\n1、新用户加到我，发资料包让用户知道花爷是谁，花爷在做什么。  \n2、我们定期会做公开直播课，花爷请想看直播的小伙伴加小助手。  \n3、小助手拉用户进直播群。  \n4、直播群里引导看直播。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B2%BE%E9%80%9A%E4%BB%A5%E5%A4%AA%E5%9D%8A":{"title":"《精通以太坊》","content":"\n# 《精通以太坊》\n\n#input\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2022-05-30]]\n- Notes:\n\n## 读前准备\n\n1. 区块链是怎么运行的？\n2. 区块链有哪些优势\n3. 区块链有哪些劣势\n4. 能运用到哪些地方\n5. 开发区块链需要学习什么？\n6. 解释一下几个词 [[区块链]]、[[以太坊]]、[[智能合约]]\n\n## 总结\n\n## 闪念\n\n### 去中心化\n\n底层建立在数学之上，是严谨的数学  \n优点：\n\n1. 降低人与人之间的信任成本  \n[[PoW（Proof of Work）]] ：这种支付方式并不存在中心化监管，是一种去中心化支付方式，底层是数学，是严谨的算法，在这些之上是独特的经济模型，激励着这个网络的发展。通过消耗大量算力，促进比特币的价值发展。\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E7%B2%BE%E9%80%9A%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%BC%80%E5%8F%91%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%92%8C%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8":{"title":"《 精通以太坊：开发智能合约和去中心化应用 》","content":"\n# 《 精通以太坊：开发智能合约和去中心化应用 》\n\n# 元数据\n\n\u003e [!abstract] 精通以太坊：开发智能合约和去中心化应用\n\u003e - ![ 精通以太坊：开发智能合约和去中心化应用|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/265/25315265/t7_25315265.jpg)\n\u003e - 书名： 精通以太坊：开发智能合约和去中心化应用\n\u003e - 作者： 安德烈亚斯·M.安东波罗斯\n\u003e - 简介： 以太坊打开了通向去中心化计算的大门，这个平台使你能够运行去中心化的应用程序（DApps）和智能合约，这些应用程序没有中心故障点或控制点，与支付网络集成，并在开放的区块链上运行。通过这本实用指南，AndreasM.Antonopoulos和GavinWood向读者提供了在以太坊和其他基于虚拟机的区块链上构建智能合约和DApps所需的一切信息。本书既可以作为一本技术参考手册，也可供读者全面地了解以太坊。前两章主要是一个入门级的介绍，适合新手用户，这些章节中的示例可以由具有一定技术技能的读者完成。这两章将使你对以太坊基础知识有一个很好的掌握，并教会你使用以太坊的基本工具。第三章及以后的内容主要面向程序员，包括许多技术主题和编程示例。\n\u003e - 出版时间 2019-04-01 00:00:00\n\u003e - ISBN： 9787111624929\n\u003e - 分类： 经济理财-商业\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 推荐序一\n\n- 📌 谈到区块链技术，一般人首先想到的就是比特币。但是不得不说，比特币无论是在创新的广度还是深度上都和以太坊有差距。 ^25315265-5-615-670\n    - ⏱ 2022-05-30 15:29:35\n\n## 推荐序二\n\n- 📌 区块链充满魔力，它给我们所在的网络世界带来了非常特别的改变，其本质是——通过数学降低人类的信任成本。 ^25315265-6-430-480\n    - ⏱ 2022-05-31 14:15:07\n- 📌 以太坊借鉴了PoW这种共识机制，并有自己在共识机制上的独特发展路线，其中很大的原因在于以太坊本身的定位——在其网络基础上可以快速构建应用，我们称之为去中心化应用（DApp）。DApp的核心是智能合约，而智能合约运行在一个叫作EVM的虚拟机上。 ^25315265-6-772-893\n    - ⏱ 2022-05-31 14:18:17\n\n## 第1章 什么是以太坊？\n\n- 📌 从计算机科学的角度来看，以太坊是一个具备确定性但实际上却没有边际的状态机。它有两个特点：具有一个全球范围可访问的单体状态；还有一个执行状态更改的虚拟机。从更加实际的角度来看，以太坊是一个开源的、全球去中心化的计算基础架构，可以执行称为智能合约的程序。它使用区块链同步和保存系统状态，借助以太币这种数字货币来计量并控制程序执行的资源开销。 ^25315265-11-585-839\n    - ⏱ 2022-05-31 14:37:38\n- 📌 以太坊跟其他公共区块链有很多共同点：一个连接参与各方的点对点网络、一个用于同步状态的拜占庭容错共识算法（工作量证明）、使用数字签名和哈希等密码学原理、一种数字货币（以太币）。 ^25315265-11-1090-1177\n    - ⏱ 2022-05-31 14:37:58\n- 📌 以太坊的主要目的不是成为数字货币的支付网络。虽然以太币本身对于以太坊的构成和运营是不可或缺的，但以太币的主要目的是作为一种效用货币来支付使用以太坊这个“世界计算机”所产生的花费。与具有非常有限的脚本语言的比特币不同，以太坊被设计为通用可编程区块链，它的虚拟机能够执行任意和无限复杂的代码。比特币的脚本语言被故意限制为对简单的支付条件的真/假判断，以太坊的语言是图灵完备的，这意味着以太坊可以直接用作通用目的的计算机。 ^25315265-11-1278-1600\n    - ⏱ 2022-05-31 14:38:48\n- 📌 以太坊的创始人都认为区块链不应该针对某个特定的目的，而是通过实现可编程性来支持更广泛的应用类型。这个想法就是，使用类似以太坊这样的通用目的区块链技术，开发者不必构建点对点网络、区块链、共识算法等基础设施，就可以开发自己的应用。以太坊平台的目的是把这些细节抽象化，提供一个确定性的、安全的编程环境，用于去中心化的区块链应用程序。 ^25315265-11-4910-5101\n    - ⏱ 2022-05-31 14:50:12\n- 📌 以太坊是图灵完备的事实意味着任何复杂程序都可以由以太坊计算。但这种灵活性带来了一些棘手的安全和资源管理问题。陷入死循环的打印机可以关闭并再次打开，但是这对于公共区块链却是不可能的。 ^25315265-11-13705-13795\n    - ⏱ 2022-05-31 15:03:32\n- 📌 以太坊开发文化的特点是快速创新、快速变革，敢于进行前瞻性实验，即使牺牲后向兼容性也在所不惜。 ^25315265-11-16794-16840\n    - ⏱ 2022-05-31 15:17:36\n- 📌 对于开发者而言，这意味着你需要保持一定的灵活度，当底层的假设改变时，准备好重新构建基础架构。以太坊开发者所面对的最大挑战是，把自己的代码部署到不可变的系统上，还是部署到不断发展和演化的平台上，这是一对固有的矛盾。 ^25315265-11-16870-16976\n    - ⏱ 2022-05-31 15:18:33\n- 📌 区块链的学习曲线非常陡峭，因为这个领域聚集了众多不同的知识：编程、信息安全、密码学、经济学、分布式系统、点对点网络，等等。以太坊让这条学习曲线变得不那么陡峭，你可以很快上手。 ^25315265-11-17540-17627\n    - ⏱ 2022-05-31 15:19:27\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%B3%BB%E7%BB%BC%E8%A7%A3%E9%87%8A":{"title":"系综解释","content":"\n# 系综解释\n\n有一种功利而实用主义的看法，是把量子论看作一种纯统计的理论：它无法对单个系统作出任何预测，它所推导出的一切结果，都是一个统计上的概念！也就是说，在量子论看来，我们的世界中不存在什么“单个”（individual）的事件，每一个预测，都只能是平均式的，针对“整个集合”，或者叫作“系综”（ensemble）的，这也就是“**系综解释**”（the ensemble interpretation）一词的来源。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BA%A2%E5%AE%9D%E4%B9%A6%E7%AC%AC%E5%9B%9B%E7%89%88":{"title":"红宝书第四版","content":"\n# 红宝书第四版\n\n## 数组\n\n- array.keys()\n- array.values()\n- array.entries()\n- array.fill(0)\n- array.copyWithin() // 批量复制\n- slice()\n- concat()\n- splice()\n- every()\n- filter()\n- find()\n- findIndex()\n- forEach()\n- indexOf()\n- join()\n- lastIndexOf()\n- length\n- map()\n- reduce()\n- reduceRight()\n- reverse()\n- some()\n- sort()\n- toLocaleString()\n- toString()\n\n## Map\n\n### api\n\n- get\n- set\n- has\n- size\n- delete\n\n### object 和 map\n\n- 内存大小\n\n给定固定大小的内存，Map 大约可以比 Object 多存储 50%的键/值对。\n\n- 插入性能\n\nMap 稍快\n\n- 查找速度\n\nObject 稍快\n\n- 删除性能\n\nobject 的 delete 一直值得诟病，所以 map 完胜\n\n## WeakMap\n\n弱映射中的键只能是 Object 或者继承自 Object 的类型，尝试使用非对象设置键会抛出 TypeError。值的类型没有限制。\n\n### 弱键\n\nWeakMap 中“weak”表示弱映射的键是“弱弱地拿着”的。意思就是，这些键不属于正式的引用， 不会阻止垃圾回收。但要注意的是，弱映射中值的引用可不是“弱弱地拿着”的。**只要键存在，键/值 对就会存在于映射中**，并被当作对值的引用，因此就不会被当作垃圾回收。\n\n可以用来创建一些 **私有变量**\n\n## Set\n\n添加元素 set.add()\n\n其他都和 map，weakmap 类似\n\n## 迭代器与生成器\n\n**迭代器模式**（特别是在 ECMAScript 这个语境下）描述了一个方案，即可以把有些结构称为“可迭代对象”（iterable），因为它们实现了正式的 Iterable 接口，而且可以通过迭代器 `Iterator`消费\n\n很多内置类型都实现了 Iterable 接口：\n\n- 字符串\n- 数组\n- 映射\n- 集合\n- arguments 对象\n- NodeList 等 DOM 集合类型\n\n```JavaScript\n// 这两种类型没有实现迭代器工厂函数\nconsole.log(num[Symbol.iterator]); // undefined\nconsole.log(obj[Symbol.iterator]); // undefined\n```\n\n### 自定义迭代器\n\n```JavaScript\nclass Counter {\n  constructor(limit) {\n    this.limit = limit;\n  }\n\n  [Symbol.iterator]() {\n    let count = 1,\n        limit = this.limit;\n    return {\n      next() {\n        if (count \u003c= limit) {\n          return { done: false, value: count++ };\n        } else {\n          return { done: true };\n        }\n      },\n      return() {\n        console.log('Exiting early');\n        return { done: true };\n      }\n    };\n  }\n}\n```\n\n### generator\n\ngenerator 就是一个实现了 Iterator 接口的函数，因此具有 next 方法\n\n#### yield 中断执行\n\nyield 关键字可以让生成器停止和开始执行，也是生成器最有用的地方。\n\n#### 使用 yield 实现输入和输出\n\n除了可以作为函数的中间返回语句使用，yield 关键字还可以作为函数的中间参数使用。上一次让 生成器函数暂停的 yield 关键字会接收到传给 next()方法的第一个值。\n\n#### throw\n\n## 对象\n\n### 属性的类型\n\n- [[Configurable]]：表示属性是否可以通过 delete 删除并重新定义，是否可以修改它的特性，以及是否可以把它改为访问器属性。默认为 true，\n- [[Enumerable]]：表示属性是否可以通过 for-in 循环返回。默认为 true，\n- [[Writable]]：表示属性的值是否可以被修改。默认为 true，\n- [[Value]]：包含属性实际的值。这就是前面提到的那个读取和写入属性值的位置。这个特性 的默认值为 undefined。\n\n### API\n\n- Object.getOwnPropertyDescriptors() ：会在每个自有属性上调用 Object.getOwnPropertyDescriptor()并在一个新对象中返回它们\n- Object.assign()：将每个源对象中可枚举（Object.propertyIsEnumerable()返回 true） 和自有（Object.hasOwnProperty()返回 true）属性复制到目标对象。对每个符合条件的属性，这个方法会使用源对象上的[[Get]]取得属性的值，然后使用目标 对象上的[[Set]]设置属性的值。\n- Object.is() 正确的 -0,0，+0 和 NaN 判断\n\n### 创建对象\n\n#### 工厂模式\n\n```JavaScript\nfunction createPerson(name, age, job) {\n let o = new Object();\n o.name = name;\n o.age = age;\n o.job = job;\n o.sayName = function() {\n console.log(this.name);\n };\n return o;\n}\nlet person1 = createPerson(\"Nicholas\", 29, \"Software Engineer\");\nlet person2 = createPerson(\"Greg\", 27, \"Doctor\");\n```\n\n#### 构造函数模式\n\n```JavaScript\nfunction Person(name, age, job){\n this.name = name;\n this.age = age;\n this.job = job;\n this.sayName = function() {\n console.log(this.name);\n };\n}\nlet person1 = new Person(\"Nicholas\", 29, \"Software Engineer\");\n```\n\nPerson()构造函数代替了 createPerson()工厂函数。\n\n但是有以下区别：\n\n- 没有显性创造对象\n- 属性和方法直接赋值给了 this。\n- 没有 return。\n\nnew 的操作过程：\n\n- (1)在内存中创建一个新对象。\n- (2) 这个新对象内部的[[Prototype]]特性被赋值为构造函数的 prototype 属性。\n- (3) 构造函数内部的 this 被赋值为这个新对象（即 this 指向新对象）。\n- (4) 执行构造函数内部的代码（给新对象添加属性）。\n- (5) 如果构造函数返回非空对象，则返回该对象；否则，返回刚创建的新对象。\n\n缺点：每一个构造函数 都会重新创造一个 sayName 方法，\n\n#### 原型模式\n\n```JavaScript\nfunction Person () { }\n  Person.prototype.name = \"Nicholas\"\n  Person.prototype.age = 29\n  Person.prototype.job = \"Software Engineer\"\n  Person.prototype.sayName = function () {\n  console.log(this.name);\n};\n```\n\n缺点：虽然原型模式将方法公用了，但是同时也将属性共用，这会导致属性混乱，\n\n#### 组合继承\n\n**组合继承**（有时候也叫伪经典继承）综合了原型链和盗用构造函数，将两者的优点集中了起来。基 本的思路是使用原型链继承原型上的属性和方法，而通过盗用构造函数继承实例属性。\n\n```JavaScript\nfunction SuperType(name){\n this.name = name;\n this.colors = [\"red\", \"blue\", \"green\"];\n}\nSuperType.prototype.sayName = function() {\n console.log(this.name);\n};\nfunction SubType(name, age){\n // 继承属性\n SuperType.call(this, name);  // 第二次调用\n this.age = age;\n}\n// 继承方法\nSubType.prototype = new SuperType(); // 第一次调用\nSubType.prototype.sayAge = function() {\n console.log(this.age);\n};\nlet instance1 = new SubType(\"Nicholas\", 29);\ninstance1.colors.push(\"black\");\nconsole.log(instance1.colors); // \"red,blue,green,black\"\ninstance1.sayName(); // \"Nicholas\";\ninstance1.sayAge(); // 29\n\nlet instance2 = new SubType(\"Greg\", 27);\nconsole.log(instance2.colors); // \"red,blue,green\"\ninstance2.sayName(); // \"Greg\";\ninstance2.sayAge(); // 27\n```\n\n#### 原型式继承\n\n```JavaScript\nfunction object(o) {\n function F() {}\n F.prototype = o;\n return new F();\n}\n```\n\n原型式继承非常适合不需要单独创建构造函数，但仍然需要在对象间共享信息的场合。但要记住， 属性中包含的引用值始终会在相关对象间共享，跟使用原型模式是一样的。\n\n#### 寄生式继承\n\n```JavaScript\nfunction createAnother(original){\n let clone = object(original); // 通过调用函数创建一个新对象\n clone.sayHi = function() { // 以某种方式增强这个对象\n console.log(\"hi\");\n };\n return clone; // 返回这个对象\n}\n```\n\n寄生式继承同样适合主要关注对象，而不在乎类型和构造函数的场景。object()函数不是寄生式 继承所必需的，任何返回新对象的函数都可以在这里使用\n\n#### 寄生式组合继承\n\n组合继承其实也存在效率问题。最主要的效率问题就是父类构造函数始终会被调用两次：一次在是 创建子类原型时调用，另一次是在子类构造函数中调用。\n\n```JavaScript\nfunction inheritPrototype(subType, superType) {\n let prototype = object(superType.prototype); // 创建对象\n prototype.constructor = subType; // 增强对象\n subType.prototype = prototype; // 赋值对象\n}\n```\n\n使用\n\n```JavaScript\nfunction SuperType(name) {\n this.name = name;\n this.colors = [\"red\", \"blue\", \"green\"];\n}\nSuperType.prototype.sayName = function() {\n console.log(this.name);\n};\nfunction SubType(name, age) {\n SuperType.call(this, name);\n this.age = age;\n}\ninheritPrototype(SubType, SuperType);\nSubType.prototype.sayAge = function() {\n console.log(this.age);\n};\n```\n\n#### 类构造函数\n\nconstructor 关键字用于在类定义块内部创建类的构造函数。方法名 constructor 会告诉解释器 在使用 new 操作符创建类的新实例时，应该调用这个函数。构造函数的定义不是必需的，不定义构造函数相当于将构造函数定义为空函数。\n\n## Proxy\n\n#### 可撤销\n\nrevocable()\n\n#### 反射 API\n\n对象的方法 对应的反射 API 方法在 Reflect 都有相应的实现\n\n#### 数据绑定与可观察对象\n\n通过代理可以把运行时中原本不相关的部分联系到一起。这样就可以实现各种模式，从而让不同的 代码互操作。 比如，可以将被代理的类绑定到一个全局实例集合，让所有创建的实例都被添加到这个集合中：\n\n```JavaScript\nconst userList = [];\nclass User {\n constructor(name) {\n this.name_ = name;\n }\n}\nconst proxy = new Proxy(User, {\n construct() {\n const newUser = Reflect.construct(...arguments);\n userList.push(newUser);\n return newUser;\n }\n});\nnew proxy('John');\nnew proxy('Jacob');\nnew proxy('Jingleheimerschmidt');\nconsole.log(userList); // [User {}, User {}, User{}]\n```\n\n#### 用途\n\n代理的应用场景是不可限量的。开发者使用它可以创建出各种编码模式，比如（但远远不限于）跟 踪属性访问、隐藏属性、阻止修改或删除属性、函数参数验证、构造函数参数验证、数据绑定，以及可 观察对象。\n\n## 函数\n\n**函数实际上是对象。**每个函数都是 Function 类型的实例，而 Function 也有属性和方法，跟其他引用类型一样。\n\n### 箭头函数\n\n箭头函数虽然语法简洁，但也有很多场合不适用。箭头函数不能使用 arguments、super 和 new.target，也不能用作构造函数。此外，箭头函数也没有 prototype 属性。\n\n### 函数声明和函数表达式\n\n**在执行代码时，JavaScript 引擎会先执行一遍扫描， 把发现的函数声明提升到源代码树的顶部。因此即使函数定义出现在调用它们的代码之后，引擎也会把函数声明提升到顶部。**\n\n### 函数内部\n\n在 ECMAScript 5 中，函数内部存在两个特殊的对象：arguments 和 this。ECMAScript 6 又新增 了 new.target 属性。\n\n#### arguments\n\n它是一个类数组对象，包含调用函数时传入的所有参数。\n\n虽然主要用于包含函数参数，但 arguments 对象其实还有一个 **callee** 属性，是一个指向 arguments 对象所在函数的指针。\n\n#### this\n\n在标准函数中，this 引用的是把函数当成方法调用的上下文对象。\n\nthis 到底引用哪个对象必须到 **函数被调用时才能确定**。因此这个值在代码执行的过程中可能会变。\n\n#### new.target\n\nECMAScript 6 新增了检测函数是否使用 new 关键字调用的 new.target 属性。如果函数是正常调用的，则 new.target 的值是 **undefined**；如果是使用 new 关键字调用的，则 new.target 将引用被调用的 **构造函数**。\n\n### 函数属性与方法\n\n- length :保存函数定义的命名参数个数\n- prototype:保存引用类型所有实例 方法的地方\n  - apply: 改变 this 指向的方法, 只接受两个参数\n  - call : 改变 this 指向的方法, 可以接受无限多的参数\n  - bind:创建一个新的函数实例， 其 this 值会被绑定到传给 bind()的对象\n\n### 尾调用优化\n\n如果函数的逻辑允许基于尾调用将其销毁，则引擎就会无论调用多少次嵌套函数，都只维护一个栈帧。\n\n条件如下：\n\n- 代码在严格模式下执行；\n- 外部函数的返回值是对尾调用函数的调用；\n- 尾调用函数返回后不需要执行额外的逻辑；\n- 尾调用函数不是引用外部函数作用域中自由变量的闭包\n\n#### 举个栗子\n\n优化前：\n\n```JavaScript\nfunction fib(n) {\n if (n \u003c 2) {\n return n;\n }\n return fib(n - 1) + fib(n - 2);\n}\n```\n\n优化后:\n\n```JavaScript\n// 基础框架\nfunction fib(n) {\n return fibImpl(0, 1, n);\n}\n// 执行递归\nfunction fibImpl(a, b, n) {\n if (n === 0) {\n return a;\n }\n return fibImpl(b, a + b, n - 1);\n}\n```\n\n### 闭包\n\n闭包指的是那些**引用了另一个函数作用域中变量**的函数，通常是在嵌套函数中实现的\n\n正常情况下，函数内部的代码在访问变量时，就会使用给定的名称从作用域链中查找变量。函数执行完毕后，局部活动对象会被销毁，内存中就只剩下全局作用域。不过，闭包就不一样了。因为函数还保存着外部作用域链中的变量的引用，它就不能直接销毁，将它的活动对象仍然会保留在内存中，直到函数销毁。\n\n#### this 对象\n\n```JavaScript\nwindow.identity = 'The Window';\nlet object = {\n  identity: 'My Object',\n  getIdentityFunc () {\n    return function () {\n      return this.identity;\n    };\n  }\n};\nconsole.log(object.getIdentityFunc()()); // 'The Window'\n```\n\n因为 object.getIdentityFunc() 执行返回了 一个匿名函数 ，而当这个匿名函数执行时，他的 this 才生成，也就是这里的 window\n\n## Promise\n\n### Promises/A+规范\n\n为弥合现有实现之间的差异，2012 年 Promises/A+组织分叉（fork） 了 CommonJS 的 Promises/A 建议，并以相同的名字制定了 Promises/A+规范。这个规范最终成为了 ECMAScript 6 规范实现的范本。\n\n### promise 状态机\n\n- pending\n- resolved\n- rejected\n\n重要的是，Promise 的状态是私有的，不能直接通过 JavaScript 检测到。这主要是为了避免根据读取到 的期约状态，以同步方式处理 Promise 对象。另外，Promise 的状态也不能被外部 JavaScript 代码修改。这与不 能读取该状态的原因是一样的：Promise 故意将异步行为封装起来，从而隔离外部的同步代码。\n\n因为 Promise 的状态只能改变一次，所以这里的超时拒绝逻辑中可以放心地设置让 Promise 处于待定状态的 最长时间。如果执行器中的代码在超时之前已经解决或拒绝，那么超时回调再尝试拒绝也会静默失败。\n\n### 同步/异步执行的二元性\n\n```JavaScript\ntry {\n throw new Error('foo');\n} catch(e) {\n console.log(e); // Error: foo\n}\ntry {\n Promise.reject(new Error('bar'));\n} catch(e) {\n console.log(e);\n}\n// Uncaught (in promise) Error: bar\n```\n\n这里的同步代码之所以没有捕获期约抛出的错误，是因为它没有通过异步模式捕获错误。从这 里就可以看出 Promise 真正的异步特性：它们是**同步对象**（在同步执行模式中使用），但也是**异步执行模式 的媒介**。\n\n在前面的例子中，拒绝 Promise 的错误并没有抛到执行同步代码的线程里，而是通过浏览器异步消息队列来处理的。因此，try/catch 块并不能捕获该错误。**代码一旦开始以异步模式执行，则唯一与之交互 的方式就是使用异步结构——更具体地说，就是 Promise 的方法。**\n\n### 拒绝 Promise 与拒绝错误处理\n\n拒绝 Promise 类似于 throw()表达式，因为它们都代表一种程序状态，即需要中断或者特殊处理。在 Promise 的执行函数或处理程序中抛出错误会导致拒绝，对应的错误对象会成为拒绝的理由。因此以下这些 Promise 都会以一个错误对象为由被拒绝：\n\n```JavaScript\nlet p1 = new Promise((resolve, reject) =\u003e reject(Error('foo')));\nlet p2 = new Promise((resolve, reject) =\u003e { throw Error('foo'); });\nlet p3 = Promise.resolve().then(() =\u003e { throw Error('foo'); });\nlet p4 = Promise.reject(Error('foo'));\nsetTimeout(console.log, 0, p1); // Promise \u003crejected\u003e: Error: foo\n```\n\n**在 Promise 中抛出错误时，因为错误实际上是从消息队列中异步抛出的，所以并不会阻止运行时继续执行同步指令：**\n\n```JavaScript\nPromise.reject(Error('foo'));\nconsole.log('bar');\n// bar\n// Uncaught (in promise) Error: foo\n```\n\n**onRejected 处理程序的任务应该是在捕获异步错误之后返回一个解决的 Promise。**\n\n```JavaScript\nnew Promise((resolve, reject) =\u003e {\n console.log('begin asynchronous execution');\n reject(Error('bar'));\n}).catch((e) =\u003e {\n console.log('caught error', e);\n}).then(() =\u003e {\n console.log('continue asynchronous execution');\n});\n// begin asynchronous execution\n// caught error Error: bar\n// continue asynchronous execution\n```\n\n### Promise 取消\n\n```JavaScript\nclass CancelToken {\n  constructor(cancelFn) {\n    this.promise = new Promise((resolve, reject) =\u003e {\n      cancelFn(() =\u003e {\n        setTimeout(console.log, 0, \"delay cancelled\");\n        resolve();\n      });\n    });\n  }\n}\nconst startButton = document.querySelector('#start');\nconst cancelButton = document.querySelector('#cancel');\nfunction cancellableDelayedResolve (delay) {\n  setTimeout(console.log, 0, \"set delay\");\n  return new Promise((resolve, reject) =\u003e {\n    const id = setTimeout((() =\u003e {\n      setTimeout(console.log, 0, \"delayed resolve\");\n      resolve();\n    }), delay);\n    const cancelToken = new CancelToken((cancelCallback) =\u003e\n      cancelButton.addEventListener(\"click\", cancelCallback));\n    cancelToken.promise.then(() =\u003e clearTimeout(id));\n  });\n}\nstartButton.addEventListener(\"click\", () =\u003e cancellableDelayedResolve(1000));\n```\n\n### Promise 进度通知\n\n```JavaScript\nclass TrackablePromise extends Promise {\n  constructor(executor) {\n    const notifyHandlers = [];\n    super((resolve, reject) =\u003e {\n      return executor(resolve, reject, (status) =\u003e {\n        notifyHandlers.map((handler) =\u003e handler(status));\n      });\n    });\n    this.notifyHandlers = notifyHandlers;\n  }\n  notify (notifyHandler) {\n    this.notifyHandlers.push(notifyHandler);\n    return this;\n  }\n}\nlet p = new TrackablePromise((resolve, reject, notify) =\u003e {\n  function countdown (x) {\n    if (x \u003e 0) {\n      notify(`${20 * x}% remaining`);\n      setTimeout(() =\u003e countdown(x - 1), 1000);\n    } else {\n      resolve();\n    }\n  }\n  countdown(5);\n});\np.notify((x) =\u003e setTimeout(console.log, 0, 'progress:', x));\np.then(() =\u003e setTimeout(console.log, 0, 'completed'));\n```\n\n## [[async、await]]\n## BOM\n\nBOM 的核心是 window 对象，表示浏览器的实例。window 对象在浏览器中有两重身份，一个是 ECMAScript 中的 Global 对象，另一个就是浏览器窗口的 JavaScript 接口。这意味着网页中定义的所有 对象、变量和函数都以 window 作为其 Global 对象，都可以访问其上定义的 parseInt()等全局方法\n\n### Window 对象\n\n#### 窗口关系\n\ntop 对象始终指向最上层（最外层）窗口，即浏览器窗口本身。而 parent 对象则始终指向当前窗 口的父窗口。如果当前窗口是最上层窗口，则 parent 等于 top（都等于 window）。\n\n#### 像素比\n\nwindow.devicePixelRatio 实际上与每英寸像素数（DPI，dots per inch）是对应的。DPI 表示单 位像素密度，而 window.devicePixelRatio 表示物理像素与逻辑像素之间的缩放系数。\n\n#### 窗口大小\n\n所有现代浏览器都支持 4 个属性： innerWidth、innerHeight、outerWidth 和 outerHeight。\n\nouterWidth 和 outerHeight 返回浏览器窗口自身的大小\n\ninnerWidth 和 innerHeight 返回浏览器窗口中页面视口的大小（不包含浏览器边框和工具栏）。\n\ndocument.documentElement.clientWidth 和 document.documentElement.clientHeight 返回页面视口的宽度和高度。\n\n因为桌面浏览器的差异，所以需要先确定用户是不是在使用移动设备，然后再决定使用哪个属性。\n\n#### 视口位置\n\n度量文档相对于视口滚动距离的属性有两对，返回相等的值：window.pageXoffset/window. scrollX 和 window.pageYoffset/window.scrollY。\n\n可以使用 scroll()、scrollTo()和 scrollBy()方法滚动页面。这 3 个方法都接收表示相对视口距 离的 x 和 y 坐标，这两个参数在前两个方法中表示要滚动到的坐标，在最后一个方法中表示滚动的距离。\n\n#### 定时器\n\nJavaScript 在浏览器中是**单线程执行**的，但允许使用定时器指定在某个时间之后或每隔一段时间就 执行相应的代码。setTimeout()用于指定在一定时间后执行某些代码，而 setInterval()用于指定 每隔一段时间执行某些代码。\n\nsetIntervale()在实践中很少会在生产环境下使用，**因为一个任务结束和下一个任务开始之间的时间间隔是无法保证的**，有些循环定时任务可能会因此而被跳过。\n\n### location 对象\n\nlocation 是最有用的 BOM 对象之一，提供了当前窗口中加载文档的信息，以及通常的导航功能。\n\n| 属 性             | 值                                                        | 说 明                                                        |\n| ----------------- | --------------------------------------------------------- | ------------------------------------------------------------ |\n| location.hash \"   | \"#contents\"                                               | URL 散列值（井号后跟零或多个字符），如果没有则 为空字符串    |\n| location.host     | \"www.wrox.com:80\"                                         | 服务器名及端口号                                             |\n| location.hostname | \"www.wrox.com\"                                            | 服务器名                                                     |\n| location.href     | \"http://www.wrox.com:80/WileyCDA/ ?q=javascript#contents\" | 当前加载页面的完整 URL。location 的 toString()方法返回这个值 |\n| location.pathname | \"/WileyCDA/\"                                              | \"/WileyCDA/\" URL 中的路径和（或）文件名                      |\n| location.port     | \"80\"                                                      | \"80\" 请求的端口。如果 URL 中没有端口，则返回空字符串         |\n| location.protocol | \"http:\"                                                   | \"http:\" 页面使用的协议。通常是\"http:\"或\"https:\"              |\n| location.search   | \"?q=javascript\"                                           | \"?q=javascript\" URL 的查询字符串。这个字符串以问号开头       |\n| location.username | \"foouser\"                                                 | \"foouser\" 域名前指定的用户名                                 |\n| location.password | \"barpassword\"                                             | \"barpassword\" 域名前指定的密码                               |\n| location.origin   | \"http://www.wrox.com\"                                     | \"http://www.wrox.com\" URL 的源地址。只读                     |\n\n### navigator 对象\n\n属性和方法太多就不列了，navigator 对象的属性通常用于确定浏览器的类型。\n\n#### 检测插件\n\n```JavaScript\n// 插件检测，IE10 及更低版本无效\nlet hasPlugin = function (name) {\n  name = name.toLowerCase();\n  for (let plugin of window.navigator.plugins) {\n    if (plugin.name.toLowerCase().indexOf(name) \u003e -1) {\n      return true;\n    }\n  }\n  return false;\n}\n// 检测 Flash\nalert(hasPlugin(\"Flash\"));\n// 检测 QuickTime\nalert(hasPlugin(\"QuickTime\"));\n```\n\n### screen 对象\n\n这个对象中保存的纯粹是客户端能力信息，也就是浏览器窗口外面的客户端显示器的信息，比如像素宽度和像素高度。\n\n### history 对象\n\nhistory 对象表示当前窗口首次使用以来用户的导航历史记录。因为 history 是 window 的属性， 所以每个 window 都有自己的 history 对象。出于安全考虑，这个对象不会暴露用户访问过的 URL， 但可以通过它在不知道实际 URL 的情况下前进和后退。\n\n```JavaScript\n// 后退一页\nhistory.go(-1);\n// 前进一页\nhistory.go(1);\n// 导航到最近的 wrox.com 页面\nhistory.go(\"wrox.com\");\n// 后退一页\nhistory.back();\n// 前进一页\nhistory.forward();\n```\n\n## 客户端检测\n\n### 浏览器检测\n\n想要知道自己代码运行在什么浏览器上，大部分开发者会分析 window.navigator.userAgent 返回的字符串值。所有浏览器都会提供这个值，如果相信这些返回值并基于给定的一组浏览器检测这个 字符串，最终会得到关于浏览器和操作系统的比较精确的结果。\n\n1. 伪造用户代理\n\n   有些浏览器提供伪私有的**defineGetter**方法， 利用它可以篡改用户代理字符串：\n\n2. 分析浏览器\n\n   - 浏览器\n   - 浏览器版本\n   - 浏览器渲染引擎\n   - 设备类型（桌面/移动）\n   - 设备生产商\n   - 设备型号\n   - 操作系统\n   - 操作系统版本\n\n   第三方用户代理解析程序：Bowser 、 UAParser.js 、 Platform.js 、 CURRENT-DEVICE 、Google Closure、 Mootools\n\n### 网络检测\n\n```JavaScript\nconst connectionStateChange = () =\u003e console.log(navigator.onLine);\nwindow.addEventListener('online', connectionStateChange);\nwindow.addEventListener('offline', connectionStateChange);\n```\n\n**NetworkInformation** API : 可以通过 navigator.connection 属性使用。 这个 API 提供了一些只读属性，并为连接属性变化事件处理程序定义了一个事件对象。\n\n### 电池检测\n\nnavigator.getBattery()方法会返回一个 Promise 实例，解决为一个 BatteryManager 对象。\n\n### 硬件检测\n\n浏览器检测硬件的能力相当有限\n\n1. **处理器核心数**\n\n   navigator.hardwareConcurrency 属性返回浏览器支持的逻辑处理器核心数量，包含表示核心数的一个整数值（如果核心数无法确定，这个值就是 1）。关键在于，这个值表示浏览器可以并行执行的 最大工作线程数量，不一定是实际的 CPU 核心数。\n\n2. **设备内存大小**\n\n   navigator.deviceMemory 属性返回设备大致的系统内存大小，包含单位为 GB 的浮点数（舍入 为最接近的 2 的幂：512MB 返回 0.5，4GB 返回 4）。\n\n3. **最大触点数**\n\n   navigator.maxTouchPoints 属性返回触摸屏支持的最大关联触点数量，包含一个整数值。\n\n## DOM\n\n### 操纵节点\n\n**appendChild**() 和 **insertBefore**() 在插入节点时不会删除任何已有节点。\n\n相对地， **replaceChild**()方法接收两个参数：要插入的节点和要替换的节点。要替换的节点会被返回并从文档 树中完全移除，要插入的节点会取而代之。\n\n**cloneNode**()方法接收一个布尔值参数，表示是否深复制。在传入 true 参数时，会进行深复制， 即复制节点及其整个子 DOM 树。如果传入 false，则只会复制调用该方法的节点。\n\n### DocumentFragment 类型\n\n在所有节点类型中，DocumentFragment 类型是唯一一个在标记中没有对应表示的类型。DOM 将 文档片段定义为“轻量级”文档，能够包含和操作节点，却没有完整文档那样额外的消耗\n\n假设想给一个元素添加 3 个列表项。如果分 3 次给这个元素添加列表项，浏览器就要重新渲染 3 次页面，以反映新添加的内容。为避免多次渲染，下面的代码示例使用文档片段创建了所有列表项， 然后一次性将它们添加到了：\n\n```JavaScript\nlet fragment = document.createDocumentFragment();\nlet ul = document.getElementById(\"myList\");\nfor (let i = 0; i \u003c 3; ++i) {\n let li = document.createElement(\"li\");\n li.appendChild(document.createTextNode(`Item ${i + 1}`));\n fragment.appendChild(li);\n}\nul.appendChild(fragment);\n```\n\n### 动态脚本\n\n```JavaScript\nfunction loadScript(url) {\n let script = document.createElement(\"script\");\n script.src = url;\n document.body.appendChild(script);\n}\n```\n\n### 动态 css\n\n```JavaScript\nfunction loadStyles(url){\n let link = document.createElement(\"link\");\n link.rel = \"stylesheet\";\n link.type = \"text/css\";\n link.href = url;\n let head = document.getElementsByTagName(\"head\")[0];\n head.appendChild(link);\n}\n```\n\n### MutationObserver 接口\n\n在 DOM 被修改时异步执行回调。使 用 MutationObserver 可以观察整个文档、DOM 树的一部分，或某个元素.\n\n每个回调都会收到一个 MutationRecord 实例的数组。MutationRecord 实例包含的信息包括发 生了什么变化，以及 DOM 的哪一部分受到了影响。\n\n#### 基本使用：\n\n```JavaScript\nlet observer = new MutationObserver(\n (mutationRecords) =\u003e console.log(mutationRecords));\n```\n\n#### observe()方法\n\n新创建的 MutationObserver 实例不会关联 DOM 的任何部分。要把这个 observer 与 DOM 关 联起来，需要使用 observe()方法。这个方法接收两个必需的参数：要观察其变化的 DOM 节点，以及 一个 MutationObserverInit 对象。\n\n```JavaScript\nobserver.observe(document.body, { attributes: true });\ndocument.body.className = 'foo';\nconsole.log('Changed body class');\n```\n\n#### disconnect()方法\n\n默认情况下，只要被观察的元素不被垃圾回收，MutationObserver 的回调就会响应 DOM 变化事 件，从而被执行。要提前终止执行回调，可以调用 disconnect()方法。下面的例子演示了同步调用 disconnect()之后，不仅会停止此后变化事件的回调，也会抛弃已经加入任务队列要异步执行的回调：\n\n#### 复用 MutationObserver\n\n多次调用 observe()方法，可以复用一个 MutationObserver 对象观察多个不同的目标节点。此 时，MutationRecord 的 target 属性可以标识发生变化事件的目标节点。下面的示例演示了这个过程：\n\n```JavaScript\nlet observer = new MutationObserver(\n (mutationRecords) =\u003e console.log(mutationRecords.map((x) =\u003e\nx.target)));\n// 向页面主体添加两个子节点\nlet childA = document.createElement('div'),\n childB = document.createElement('span');\ndocument.body.appendChild(childA);\ndocument.body.appendChild(childB);\n// 观察两个子节点\nobserver.observe(childA, { attributes: true });\nobserver.observe(childB, { attributes: true });\n// 修改两个子节点的属性\nchildA.setAttribute('foo', 'bar');\nchildB.setAttribute('foo', 'bar');\n```\n\n#### 性能、内存与垃圾回收\n\n- MutationObserver 的引用\n\nMutationObserver 实例与目标节点之间的引用关系是非对称的。MutationObserver 拥有对要观察的目标节点的弱引用。**因为是弱引用，所以不会妨碍垃圾回收程序回收目标节点**。\n\n然而，**目标节点却拥有对 MutationObserver 的强引用**。如果目标节点从 DOM 中被移除，随后 被垃圾回收，则关联的 MutationObserver 也会被垃圾回收。\n\n- MutationRecord 的引用\n\n记录队列中的每个 MutationRecord 实例至少包含对已有 DOM 节点的一个引用。如果变化是 childList 类型，则会包含多个节点的引用。记录队列和回调处理的默认行为是耗尽这个队列，处理 每个 MutationRecord，然后让它们超出作用域并被垃圾回收。\n\n### DOM2\n\n// TODO: 东西太多 下次用到再看\n\n### DOM3\n\n## 事件\n\n### 事件冒泡\n\nIE 事件流被称为事件冒泡，这是因为事件被定义为从最具体的元素（文档树中最深的节点）开始触 发，然后向上传播至没有那么具体的元素（文档）。\n\n### 事件捕获\n\nNetscape Communicator 团队提出了另一种名为事件捕获的事件流。事件捕获的意思是最不具体的节 点应该最先收到事件，而最具体的节点应该最后收到事件。事件捕获实际上是为了在事件到达最终目标 前拦截事件。\n\n### DOM 事件流\n\nDOM2 Events 规范规定事件流分为 3 个阶段：**事件捕获**、**到达目标**和**事件冒泡**。事件捕获最先发生， 为提前拦截事件提供了可能。然后，实际的目标元素接收到事件。最后一个阶段是冒泡，最迟要在这个阶段响应事件。\n\n### DOM2 事件处理程序\n\nDOM2 Events 为事件处理程序的赋值和移除定义了两个方法：**addEventListener**()和 **removeEventListener**()。这两个方法暴露在所有 DOM 节点上，它们接收 3 个参数：**事件名**、**事件处理函数**和一个布尔值，true 表示在捕**获阶段调用事件处理程序**，false（默认值）表示在**冒泡阶段调用事件处理程序**。\n\n### 事件类型\n\n- **用户界面事件（UIEvent）**：涉及与 BOM 交互的通用浏览器事件。\n- **焦点事件（FocusEvent）**：在元素获得和失去焦点时触发。\n- **鼠标事件（MouseEvent）**：使用鼠标在页面上执行某些操作时触发。\n- **滚轮事件（WheelEvent）**：使用鼠标滚轮（或类似设备）时触发。\n- **输入事件（InputEvent）**：向文档中输入文本时触发。\n- **键盘事件（KeyboardEvent）**：使用键盘在页面上执行某些操作时触发\n- **合成事件（CompositionEvent）**：在使用某种 IME（Input Method Editor，输入法编辑器）输入 字符时触发。\n\n### 事件委托\n\n“过多事件处理程序”的解决方案是使用事件委托。事件委托**利用事件冒泡**，可以只使用一个事件处理程序来管理一种类型的事件。\n\n## 动画与 Canvas 图形\n\n###[[requestAnimationFrame]]\n### Canvas\n\n//TODO： 二次阅读时总结后再写\n\n### WebGL\n\n## JavaScript API\n\n### Streams API\n\n- **可读流**：可以通过某个公共接口读取数据块的流。数据在内部从底层源进入流，然后由消费者 （consumer）进行处理。\n- **可写流**：可以通过某个公共接口写入数据块的流。生产者（producer）将数据写入流，数据在内 部传入底层数据槽（sink）。\n- **转换流**：由两种流组成，可写流用于接收数据（可写端），可读流用于输出数据（可读端）。这 两个流之间是转换程序（transformer），可以根据需要检查和修改流内容。\n\n各大浏览器支持度不一，Chrome 最新版已经支持，node 尚未支持。\n\n#### 可读流\n\n```JavaScript\n    // 每 1000 毫秒生成一个递增的整数\n    for (let i = 0; i \u003c 5; ++i) {\n        yield await new Promise((resolve) =\u003e setTimeout(resolve, 1000, i));\n    }\n}\nconst readableStream = new ReadableStream({\n    async start (controller) {\n        for await (let chunk of ints()) {\n            // 将值传入控制器\n            controller.enqueue(chunk);\n        }\n        controller.close();\n    }\n});\nconsole.log(readableStream.locked); // false\nconst readableStreamDefaultReader = readableStream.getReader();\nconsole.log(readableStream.locked); // true\n// 消费者\n(async function () {\n    while (true) {\n        const { done, value } = await readableStreamDefaultReader.read();\n        if (done) {\n            break;\n        } else {\n            console.log(value);\n        }\n    }\n})();\n```\n\n#### 可写流\n\n```JavaScript\nasync function* ints () {\n    // 每 1000 毫秒生成一个递增的整数\n    for (let i = 0; i \u003c 5; ++i) {\n        yield await new Promise((resolve) =\u003e setTimeout(resolve, 1000, i));\n    }\n}\nconst writableStream = new WritableStream({\n    write (value) {\n        console.log(value);\n    }\n});\nconsole.log(writableStream.locked); // false\nconst writableStreamDefaultWriter = writableStream.getWriter();\nconsole.log(writableStream.locked); // true\n// 生产者\n(async function () {\n    for await (let chunk of ints()) {\n        await writableStreamDefaultWriter.ready;\n        writableStreamDefaultWriter.write(chunk);\n    }\n    writableStreamDefaultWriter.close();\n})();\n```\n\n#### 转换流\n\n转换流用于组合可读流和可写流。数据块在两个流之间的转换是通过 **transform()**方法完成的。\n\n```JavaScript\nasync function* ints () {\n    // 每 1000 毫秒生成一个递增的整数\n    for (let i = 0; i \u003c 5; ++i) {\n        yield await new Promise((resolve) =\u003e setTimeout(resolve, 1000, i));\n    }\n}\nconst { writable, readable } = new TransformStream({\n    transform (chunk, controller) {\n        controller.enqueue(chunk * 2);\n    }\n});\nconst readableStreamDefaultReader = readable.getReader();\nconst writableStreamDefaultWriter = writable.getWriter();\n// 消费者\n(async function () {\n    while (true) {\n        const { done, value } = await readableStreamDefaultReader.read();\n        if (done) {\n            break;\n        } else {\n            console.log(value);\n        }\n    }\n})();\n// 生产者\n(async function () {\n    for await (let chunk of ints()) {\n        await writableStreamDefaultWriter.ready;\n        writableStreamDefaultWriter.write(chunk);\n    }\n    writableStreamDefaultWriter.close();\n})();\n```\n\n#### 通过管道连接流\n\n流可以通过管道连接成一串。最常见的用例是使用 pipeThrough()方法把 ReadableStream 接入 TransformStream。从内部看，ReadableStream 先把自己的值传给 TransformStream 内部的 WritableStream，然后执行转换，接着转换后的值又在新的 ReadableStream 上出现。\n\n```JavaScript\nasync function* ints () {\n    // 每 1000 毫秒生成一个递增的整数\n    for (let i = 0; i \u003c 5; ++i) {\n        yield await new Promise((resolve) =\u003e setTimeout(resolve, 1000, i));\n    }\n}\nconst integerStream = new ReadableStream({\n    async start (controller) {\n        for await (let chunk of ints()) {\n            controller.enqueue(chunk);\n        }\n        controller.close();\n    }\n});\nconst doublingStream = new TransformStream({\n    transform (chunk, controller) {\n        controller.enqueue(chunk * 2);\n    }\n});\n// 通过管道连接流\nconst pipedStream = integerStream.pipeThrough(doublingStream);\n// 从连接流的输出获得读取器\nconst pipedStreamDefaultReader = pipedStream.getReader();\n// 消费者\n(async function () {\n    while (true) {\n        const { done, value } = await pipedStreamDefaultReader.read();\n        if (done) {\n            break;\n        } else {\n            console.log(value);\n        }\n    }\n})();\n```\n\n### Performance Timeline API\n\nPerformance Timeline API 使用一套用于度量客户端延迟的工具扩展了 Performance 接口。性能度 量将会采用计算结束与开始时间差的形式。\n\n浏览器会自动记录各种 PerformanceEntry 对象，而使用 performance.mark()也可以记录自定 义的 PerformanceEntry 对象。在一个执行上下文中被记录的所有性能条目可以通过 **performance.getEntries()**获取\n\n1. **User Timing API**\n\nUser Timing API 用于记录和分析自定义性能条目。\n\n```JavaScript\nperformance.mark('foo');\nfor (let i = 0; i \u003c 1E6; ++i) {}\nperformance.mark('bar');\n// 获取最新的标记\nconst [endMark, startMark] = performance.getEntriesByType('mark');\n\n//自定义名字，和mark区间\nperformance.measure('baz', 'foo', 'bar');\nconst [differenceMark] = performance.getEntriesByType('measure');\n```\n\n2. **Navigation Timing API**\n\nNavigation Timing API 提供了高精度时间戳，用于度量当前页面加载速度。浏览器会在导航事件发生时自动记录 PerformanceNavigationTiming 条目。这个对象会捕获大量时间戳，**用于描述页面是何时以及如何加载的。**\n\n比如 load 的时间差：\n\n```JavaScript\nconst [performanceNavigationTimingEntry] = performance.getEntriesByType('navigation');\nconsole.log(performanceNavigationTimingEntry.loadEventEnd -performanceNavigationTimingEntry.loadEventStart);\n```\n\n3. **Resource Timing API**\n\nResource Timing API 提供了高精度时间戳，用于度量当前页面加载时**请求资源的速度**。浏览器会在加载资源时自动记录 PerformanceResourceTiming。这个对象会捕获大量时间戳，**用于描述资源加载的速度**。\n\n```JavaScript\nconst performanceResourceTimingEntry = performance.getEntriesByType('resource')[0];\nconsole.log(performanceResourceTimingEntry.responseEnd - performanceResourceTimingEntry.requestStart);\n```\n\n### Web 组件\n\n这里所说的 Web 组件指的是一套用于增强 DOM 行为的工具，包括影子 DOM、自定义 元素和 HTML 模板。这一套浏览器 API 特别混乱。\n\n- 并没有统一的“Web Components”规范：每个 Web 组件都在一个不同的规范中定义。\n- 有些 Web 组件如影子 DOM 和自定义元素，已经出现了向后不兼容的版本问题。\n- 浏览器实现极其不一致\n\n由于存在这些问题，因此使用 Web 组件通常需要引入一个 Web 组件库，比如 Polymer。这种库可以 作为腻子脚本，模拟浏览器中缺失的 Web 组件\n\n#### HTML 模板\n\n#### 影子 DOM\n\n#### 自定义元素\n\n### Web Cryptography API\n\n#### 生成随机数\n\n我们平时常用的 math.random() 是以**伪随机数生成器 PRNG**生成的。所谓“伪”指的是生成值的过程不是真的随机。 PRNG 生成的值只是模拟了随机的特性。浏览器的 PRNG 并未使用真正的随机源，只是对一个内部状态 应用了固定的算法。每次调用 Math.random()，这个内部状态都会被一个算法修改，而结果会被转换 为一个新的随机值。例如，V8 引擎使用了一个名为 xorshift128+的算法来执行这种修改。\n\n由于算法本身是固定的，其输入只是之前的状态，因此随机数顺序也是确定的。xorshift128+使用 128 位内部状态，而算法的设计让任何初始状态在重复自身之前都会产生 2128–1 个伪随机值。这种循环 被称为**置换循环**（permutation cycle），而这个循环的长度被称为一个**周期**（period）。很明显，如果攻击 者知道 PRNG 的内部状态，就可以预测后续生成的伪随机值。如果开发者无意中使用 PRNG 生成了私有 密钥用于加密，则攻击者就可以利用 PRNG 的这个特性算出私有密钥。\n\n伪随机数生成器主要用于快速计算出看起来随机的值。不过并不适合用于加密计算。为解决这个问题，密码学安全伪随机数生成器（CSPRNG，Cryptographically Secure PseudoRandom Number Generator） 额外增加了一个熵作为输入，例如测试硬件时间或其他无法预计行为的系统特性。这样一来，计算速度 明显比常规 PRNG 慢很多，但 CSPRNG 生成的值就很难预测，可以用于加密了。\n\n#### 使用\n\n```JavaScript\nconst array = new Uint8Array(1);\nfor (let i=0; i\u003c5; ++i) {\n console.log(crypto.getRandomValues(array));\n}\n// Uint8Array [41]\n// Uint8Array [250]\n// Uint8Array [51]\n// Uint8Array [129]\n// Uint8Array [35]\n```\n\n### 小结\n\n除了定义新标签，HTML5 还定义了一些 JavaScript API。这些 API 可以为开发者提供更便捷的 Web 接口，暴露堪比桌面应用的能力。本章主要介绍了以下 API。\n\n- Atomics API 用于保护代码在多线程内存访问模式下不发生资源争用。\n- postMessage() API 支持从不同源跨文档发送消息，同时保证安全和遵循同源策略。\n- Encoding API 用于实现字符串与缓冲区之间的无缝转换（越来越常见的操作）。\n- File API 提供了发送、接收和读取大型二进制对象的可靠工具。\n- 媒体元素`\u003caudio\u003e`和`\u003cvideo\u003e`拥有自己的 API，用于操作音频和视频。并不是每个浏览器都会支  \n  持所有媒体格式，使用 canPlayType()方法可以检测浏览器支持情况。\n- 拖放 API 支持方便地将元素标识为可拖动，并在操作系统完成放置时给出回应。可以利用它创  \n  建自定义可拖动元素和放置目标。\n- Notifications API 提供了一种浏览器中立的方式，以此向用户展示消通知弹层。\n- Streams API 支持以全新的方式读取、写入和处理数据。\n- Timing API 提供了一组度量数据进出浏览器时间的可靠工具。\n- Web Components API 为元素重用和封装技术向前迈进提供了有力支撑。\n- Web Cryptography API 让生成随机数、加密和签名消息成为一类特性。\n\n## 错误处理和调试\n\n### try/catch\n\n如果 try 块中有代码发生错误，代码会立即退出执行，并跳到 catch 块中。catch 块此时接收到 一个对象，该对象包含发生错误的相关信息。与其他语言不同，即使在 catch 块中不使用错误对象， 也必须为它定义名称。错误对象中暴露的实际信息因浏览器而异，但至少包含保存错误消息的 message 属性。\n\n#### finally\n\n```JavaScript\nfunction testFinally(){\n try {\n return 2;\n } catch (error){\n return 1;\n } finally {\n return 0;\n }\n}\n```\n\n看起来该函数应该返回 2， 因为它在 try 块中，不会导致错误。但是，finally 块的存在导致 try 块中的 return 语句被忽略。\n\n#### 错误类型\n\n- **Error** 是基类型，其他错误类型继承该类型.浏览器很少会抛出 Error 类型的错误，该类型主要用于开 发者抛出自定义错误。\n- **InternalError** 类型的错误会在底层 JavaScript 引擎抛出异常时由浏览器抛出。例如，递归过多导 致了栈溢出。这个类型并不是代码中通常要处理的错误，如果真发生了这种错误，很可能代码哪里弄错 了或者有危险了。\n- **EvalError** 类型的错误会在使用 eval()函数发生异常时抛出。\n- **RangeError** 错误会在数值越界时抛出。例如，定义数组时如果设置了并不支持的长度，\n- **ReferenceError** 会在找不到对象时发生。（这就是著名的\"object expected\"浏览器错误的原 因。）这种错误经常是由访问不存在的变量而导致的\n- **SyntaxError** 经常在给 eval()传入的字符串包含 JavaScript 语法错误时发生\n- **TypeError **在 JavaScript 中很常见，主要发生在变量不是预期类型，或者访问不存在的方法时。很 多原因可能导致这种错误，尤其是在使用类型特定的操作而变量类型不对时。\n- **URIError** 只会在使用 encodeURI()或 decodeURI()但传入了格式错误的 URI 时发生。这个错误恐怕是 JavaScript 中难得一见的错误了，因为上面这两个函数非常稳健\n\n#### try/catch 的用法\n\n**try/catch 语句最好用在自己无法控制的错误上**。如果你明确知道自己的代码会发生某种错误，那么就不适合使用 try/catch 语句。例如，如果给 函数传入字符串而不是数值时就会失败，就应该检查该函数的参数类型并采取相应的操作。这种情况下， 没有必要使用 try/catch 语句。\n\n### 抛出错误\n\n与 try/catch 语句对应的一个机制是 throw 操作符，用于在任何时候抛出自定义错误。throw 操 作符必须有一个值，但值的类型不限。\n\n使用 throw 操作符时，代码立即停止执行，除非 try/catch 语句捕获了抛出的值。\n\n可以通过内置的错误类型来模拟浏览器错误。每种错误类型的构造函数都只接收一个参数，就是错误消息。\n\n```JavaScript\nthrow new Error(\"Something bad happened.\");\n// or\nthrow new SyntaxError(\"I don't like your syntax.\");\n```\n\n或者通过继承 error 自定义一个错误,需要提供 name 属性和 message 属性\n\n```JavaScript\nclass CustomError extends Error {\n constructor(message) {\n super(message);\n this.name = \"CustomError\";\n this.message = message;\n }\n```\n\n#### 何时抛出\n\n一个常见的问题是何时抛出错误，何时使用 try/catch 捕获错误。一般来说，错误要在应用程序 架构的底层抛出，在这个层面上，人们对正在进行的流程知之甚少，因此无法真正地处理错误。\n\n至于抛出错误与捕获错误的区别，可以这样想：应该只在确切知道接下来该做什么的时候捕获错误。捕获错误的目的是阻止浏览器以其默认方式响应；抛出错误的目的是为错误提供有关其发生原因的 说明。\n\n### error 事件\n\n**任何没有被 try/catch 语句处理的错误都会在 window 对象上触发 error 事件**。\n\n```JavaScript\nwindow.onerror = (message, url, line) =\u003e {\n// 错误消息、发生错误的 URL 和行号\n console.log(message);\n// 可以返回 false 来阻止浏览器默认报告错误的行为，\n return false;\n};\n```\n\n### 识别错误\n\n错误处理非常重要的部分是首先识别错误可能会在代码中的什么地方发生。因为 JavaScript 是松散 类型的，不会验证函数参数，**所以很多错误只有在代码真正运行起来时才会出现**。通常，需要注意 3 类错误：\n\n- 类型转换错误\n- 数据类型错误\n- 通信错误\n\n上面这几种错误会在特定情况下，在没有对值进行充分检测时发生。\n\n#### 静态代码分析器\n\n静态代码分析器要求使用类型、函数签名及其他指令来注解 JavaScript，以此描述程序如何在基本 可执行代码之外运行。分析器会比较注解和 JavaScript 代码的各个部分，对在实际运行时可能出现的潜 在不兼容问题给出提醒。\n\n常用：JSHint、JSLint、Google Closure 和 TypeScript.\n\n#### 类型转换错误\n\n类型转换错误的主要原因是使用了会自动改变某个值的数据类型的操作符或语言构造。使用了 == 或 ！=、以及在 if、for 或 while 等流控制语句中使用非布尔值\n\n#### 数据类型错误\n\n因为 JavaScript 是松散类型的，所以变量和函数参数都不能保证会使用正确的数据类型。开发者需 要自己检查数据类型，确保不会发生错误。\n\n一般来说，原始类型的值应该使用 typeof 检测，而对象值应该使用 instanceof 检测。根据函数 的用法，不一定要检查每个参数的数据类型，但对外的任何 API 都应该做类型检查以保证正确执行。\n\n#### 通信错误\n\n## JSON\n\nJSON 语法支持表示 3 种类型的值。\n\n- 简单值：字符串、数值、布尔值和 null 可以在 JSON 中出现，就像在 JavaScript 中一样。特殊 值 **undefined 不可以**。\n- 对象：第一种复杂数据类型，对象表示有序键/值对。每个值可以是简单值，也可以是复杂类型。\n- 数组：第二种复杂数据类型，数组表示可以通过数值索引访问的值的有序列表。数组的值可以 是任意类型，包括简单值、对象，甚至其他数组。\n\n### JSON 对象\n\nJSON 对象有两个方法：stringify()和 parse()。在简单的情况下，这两个方法分别可以将 JavaScript 序列化为 JSON 字符串，以及将 JSON 解析为原生 JavaScript 值。\n\n实际上，**JSON.stringify()**方法除了要序列化的对象，还可以接收两个参数。这两个参数可以用 于指定其他序列化 JavaScript 对象的方式。**第一个参数是过滤器，可以是数组或函数；第二个参数是用于缩进结果 JSON 字符串的选项。单独或组合使用这些参数可以更好地控制 JSON 序列化。**\n\n有时候，对象需要在 JSON.stringify()之上自定义 JSON 序列化。此时，可以在要序列化的对象 中添加 **toJSON()**方法，序列化时会基于这个方法返回适当的 JSON 表示。\n\n**JSON.parse()**方法也可以接收一个额外的参数，这个函数会针对每个键/值对都调用一次。为区别 于传给 JSON.stringify()的起过滤作用的替代函数（replacer），这个函数被称为还原函数（reviver）。 实际上它们的格式完全一样，即还原函数也接收两个参数，属性名（key）和属性值（value），另外也 需要返回值。\n\n## 网络请求与远程资源\n\n### XHR ( XMLHttpRequest ) 对象\n\n看了下 会用就行了\n\n### 进度事件\n\nProgress Events 是 W3C 的工作草案，定义了客户端  服务器端通信。这些事件最初只针对 XHR，现 在也推广到了其他类似的 API。有以下 6 个进度相关的事件。\n\n- loadstart：在接收到响应的第一个字节时触发。\n- progress：在接收响应期间反复触发。\n- error：在请求出错时触发。\n- abort：在调用 abort()终止连接时触发。\n- load：在成功接收完响应时触发。\n- loadend：在通信完成时，且在 error、abort 或 load 之后触发。\n\n每次请求都会首先触发 loadstart 事件，之后是一个或多个 progress 事件，接着是 error、abort 或 load 中的一个，最后以 loadend 事件结束。\n\n#### load 事件\n\nonload 事件处理程序会收到一个 event 对象，其 target 属性设置为 XHR 实例，在这个实例上 可以访问所有 XHR 对象属性和方法。\n\n#### progress 事件\n\nMozilla 在 XHR 对象上另一个创新是 progress 事件，在浏览器接收数据期间，这个事件会反复触 发。每次触发时，onprogress 事件处理程序都会收到 event 对象，其 target 属性是 XHR 对象，且 包含 3 个额外属性：**lengthComputable**、**position** 和 **totalSize**。其中\n\n- lengthComputable 是 一个布尔值，表示进度信息是否可用；\n- position 是接收到的字节数；\n- totalSize 是响应的 ContentLength 头部定义的总字节数\n\n### 跨源资源共享\n\n跨源资源共享（CORS，Cross-Origin Resource Sharing）定义了浏览器与服务器如何实现跨源通信。 CORS 背后的基本思路就是使用自定义的 HTTP 头部允许浏览器和服务器相互了解，以确实请求或响应 应该成功还是失败。\n\n对于简单的请求，比如 **GET 或 POST 请求，没有自定义头部，而且请求体是 text/plain 类型**， 这样的请求在发送时会有一个额外的头部叫 Origin。Origin 头部包含发送请求的页面的源（协议、 域名和端口），以便服务器确定是否为其提供响应。\n\n如果服务器决定响应请求，那么应该发送 Access-Control-Allow-Origin 头部.\n\n#### 预检请求\n\nCORS 通过一种叫预检请求（preflighted request）的服务器验证机制，允许使用自定义头部、除 GET 和 POST 之外的方法，以及不同请求体内容类型。在要发送涉及上述某种高级选项的请求时，会先向服务器发送一个“预检”请求。这个请求使用 OPTIONS 方法发送并包含以下头部。\n\n- **Origin**：与简单请求相同。\n- **Access-Control-Request-Method**：请求希望使用的方法。\n- **Access-Control-Request-Headers**：（可选）要使用的逗号分隔的自定义头部列表\n\n在这个请求发送后，服务器可以确定是否允许这种类型的请求。服务器会通过在响应中发送如下头部与浏览器沟通这些信息。\n\n- Access-Control-Allow-Origin：与简单请求相同。\n- Access-Control-Allow-Methods：允许的方法（逗号分隔的列表）。\n- Access-Control-Allow-Headers：服务器允许的头部（逗号分隔的列表）。\n- Access-Control-Max-Age：缓存预检请求的秒数。\n\n预检请求返回后，结果会按响应指定的时间缓存一段时间。换句话说，**只有第一次发送这种类型的 请求时才会多发送一次额外的 HTTP 请求。**\n\n#### 凭据请求\n\n**默认情况下，跨源请求不提供凭据（cookie、HTTP 认证和客户端 SSL 证书）。可以通过将 withCredentials 属性设置为 true 来表明请求会发送凭据。**\n\n#### 图片探测\n\n图片探测是利用`\u003cimg\u003e`标签实现跨域通信的最早的一种技术。任何页面都可以跨域加载图片而不 必担心限制，因此这也是在线广告跟踪的主要方式。可以动态创建图片，然后通过它们的 onload 和 onerror 事件处理程序得知何时收到响应\n\n图片探测频繁用于跟踪用户在页面上的点击操作或动态显示广告。当然，图片探测的缺点是**只能发送 GET 请求**和**无法获取服务器响应的内容**。这也是只能利用图片探测实现浏览器与服务器单向通信的 原因。\n\n#### JSONP\n\nJSONP 调用是通过动态创建`\u003cscript\u003e`元素并为 src 属性指定跨域 URL 实现的。此时的`\u003cscript\u003e`与`\u003cimg\u003e`元素类似，能够不受限制地从其他域加载资源。因为 JSONP 是有效的 JavaScript，所以 JSONP 响应在被加载完成之后会立即执行。\n\nJSONP 由于其简单易用，在开发者中非常流行。相比于图片探测，使用 JSONP 可以直接访问响应， **实现浏览器与服务器的双向通信**。不过 JSONP 也有一些缺点。\n\n首先，JSONP 是从不同的域拉取可执行代码。如果这个域并不可信，则可能在响应中加入恶意内容。 此时除了完全删除 JSONP 没有其他办法。在使用不受控的 Web 服务时，一定要保证是可以信任的。\n\n第二个缺点是不好确定 JSONP 请求是否失败。虽然 HTML5 规定了`\u003cscript\u003e`元素的 onerror 事件处理程序，但还没有被任何浏览器实现。为此，开发者经常使用计时器来决定是否放弃等待响应。这种  \n方式并不准确，毕竟不同用户的网络连接速度和带宽是不一样的。\n\n### fetch 请求\n\nFetch API 本身是使用 JavaScript 请求资源的优秀工具，同时这个 API 也能够应用在服务线程 （service worker）中，提供拦截、重定向和修改通过 fetch()生成的请求接口。\n\n- 发送 JSON 数据\n\n  ```JavaScript\n  fetch('/send-me-json', {\n   method: 'POST', // 发送请求体时必须使用一种 HTTP 方法\n   body: payload,\n   headers: jsonHeaders\n  })\n  ```\n\n- 发送跨源请求\n- 加载 Blob 文件\n\n  ```JavaScript\n  fetch('my-image.png').then((response) =\u003e response.blob())\n  ```\n\n- 中断请求\n\n  ```JavaScript\n  包含错误的拒绝。\n  let abortController = new AbortController();\n  fetch('wikipedia.zip', { signal: abortController.signal })\n   .catch(() =\u003e console.log('aborted!');\n  // 10 毫秒后中断请求\n  setTimeout(() =\u003e abortController.abort(), 10);\n  ```\n\n#### Headers 对象\n\nHeaders 与 Map 类型都有 get()、set()、has()和 delete() 等实例方法\n\nHeaders 并不是与 Map 处处都一样。在初始化 Headers 对象时，也可以使用键/值对形式的对象， 而 Map 则不可以\n\n#### Request 对象\n\n#### Response 对象\n\n### Beacon API\n\n为了把尽量多的页面信息传到服务器，很多分析工具需要**在页面生命周期中尽量晚的时候向服务器 发送遥测或分析数据**。因此，理想的情况下是通过浏览器的 unload 事件发送网络请求。这个事件表示 用户要离开当前页面，不会再生成别的有用信息了。\n\nunload 事件触发时，分析工具要停止收集信息并把收集到的数据发给服务器。这时候有一个问题， 因为 unload 事件对浏览器意味着没有理由再发送任何结果未知的网络请求（因为页面都要被销毁了）。 例如，在 unload 事件处理程序中创建的任何异步请求都会被浏览器取消。为此，异步 XMLHttpRequest 或 fetch()不适合这个任务。分析工具可以使用同步 XMLHttpRequest 强制发送请求，但这样做会导 致用户体验问题。浏览器会因为要等待 unload 事件处理程序完成而延迟导航到下一个页面。\n\n为解决这个问题，W3C 引入了补充性的 Beacon API。这个 API 给 navigator 对象增加了一个 sendBeacon()方法。这个简单的方法接收一个 URL 和一个数据有效载荷参数，并会发送一个 POST 请求。可选的数据有效载荷参数有 ArrayBufferView、Blob、DOMString、FormData 实例。如果请求成功进入了最终要发送的任务队列，则这个方法返回 true，否则返回 false。\n\n```JavaScript\n// 发送 POST 请求\n// URL: 'https://example.com/analytics-reporting-url'\n// 请求负载：'{foo: \"bar\"}'\nnavigator.sendBeacon('https://example.com/analytics-reporting-url', '{foo: \"bar\"}');\n```\n\n这个方法虽然看起来只不过是 POST 请求的一个语法糖，但它有几个重要的特性。\n\n- sendBeacon()并不是只能在页面生命周期末尾使用，而是任何时候都可以使用。\n- 调用 sendBeacon()后，浏览器会把请求添加到一个内部的请求队列。浏览器会主动地发送队 列中的请求。\n- 浏览器保证在原始页面已经关闭的情况下也会发送请求。\n- 状态码、超时和其他网络原因造成的失败完全是不透明的，不能通过编程方式处理。\n- 信标（beacon）请求会携带调用 sendBeacon()时所有相关的 cookie。\n\n### Web Socket\n\nWeb Socket 使用了**自定义协议**，所以 URL 方案（scheme）稍有变化：不能再使用 http://或 https://， 而要使用 ws://和 wss://。前者是不安全的连接，后者是安全连接。在指定 Web Socket URL 时，必须包含 URL 方案，因为将来有可能再支持其他方案。\n\n```JavaScript\nlet socket = new WebSocket(\"ws://www.example.com/server.php\");\nlet stringData = \"Hello world!\";\nlet arrayBufferData = Uint8Array.from(['f', 'o', 'o']);\nlet blobData = new Blob(['f', 'o', 'o']);\n//发送和接收数据\nsocket.send(stringData);\nsocket.send(arrayBufferData.buffer);\nsocket.send(blobData);\n\nsocket.onmessage = function(event) {\n let data = event.data;\n // 对数据执行某些操作\n};\n//在连接成功建立时触发。\nsocket.onopen = function() {\n alert(\"Connection established.\");\n};\n//在发生错误时触发。连接无法存续。\nsocket.onerror = function() {\n alert(\"Connection error.\");\n};\n//在连接关闭时触发。\n//只有 close 事件的 event 对象上有额外信息。这个对象上有 3 个额外属性：\n// wasClean、code 和 reason。\n//其中，wasClean 是一个布尔值，表示连接是否干净地关闭；code 是一个来自服务器的数值状态码；reason 是一个字符串，包含服务器发来的消息。\nsocket.onclose = function(event) {\n  console.log(`as clean? ${event.wasClean} Code=${event.code} Reason=${event.reason}`);\n};\n```\n\n## 客户端存储\n\n### cookie\n\ncookie 是与特定域绑定的。设置 cookie 后，它会与请求一起发送到创建它的域。这个限制能保证 cookie 中存储的信息只对被认可的接收者开放，不被其他域访问。\n\n因为 cookie 存储在客户端机器上，所以为保证它不会被恶意利用，浏览器会施加限制。同时，cookie 也不会占用太多磁盘空间\n\n- 不超过 300 个 cookie；\n- 每个 cookie 不超过 4096 字节；\n- 每个域不超过 20 个 cookie；\n- 每个域不超过 81 920 字节。\n\n#### 使用\n\n```JavaScript\n//secure :只能在ssl链接上发送\n//domain : cookie 有效的域。发送到这个域的所有请求都会包含对应的 cookie\n//path   :请求 URL 中包含这个路径才会把 cookie 发送到服务器。\nSet-Cookie: name=value; expires=Mon, 22-Jan-07 07:10:24 GMT; domain=.wrox.com; secure\n```\n\n#### JS 中使用 Cookie\n\n所有名和值都是 URL 编码的，因此必须使用 decodeURIComponent()解码。\n\n```JavaScript\nclass CookieUtil {\n static get(name) {\n let cookieName = `${encodeURIComponent(name)}=`,\n cookieStart = document.cookie.indexOf(cookieName),\n cookieValue = null;\n if (cookieStart \u003e -1){\n let cookieEnd = document.cookie.indexOf(\";\", cookieStart);\n if (cookieEnd == -1){\n cookieEnd = document.cookie.length;\n }\n cookieValue = decodeURIComponent(document.cookie.substring(cookieStart\n + cookieName.length, cookieEnd));\n }\n return cookieValue;\n }\n static set(name, value, expires, path, domain, secure) {\n let cookieText =\n `${encodeURIComponent(name)}=${encodeURIComponent(value)}`\n if (expires instanceof Date) {\n cookieText += `; expires=${expires.toGMTString()}`;\n }\n if (path) {\n cookieText += `; path=${path}`;\n }\n if (domain) {\n cookieText += `; domain=${domain}`;\n }\n if (secure) {\n cookieText += \"; secure\";\n }\n document.cookie = cookieText;\n }\n static unset(name, path, domain, secure) {\n CookieUtil.set(name, \"\", new Date(0), path, domain, secure);\n }\n};\n```\n\n#### 子 Cookie\n\n子 cookie 的格式类似于查询字符串。这些值可以存储为单个 cookie，而不用单独存储为自己的名/值对。结果就是网站或 Web 应用程序能够在单域 cookie 数限制下存储更多的结构化数据。\n\n```JavaScript\nname=name1=value1\u0026name2=value2\u0026name3=value3\u0026name4=value4\u0026name5=value5\n```\n\n#### 注意事项\n\n还有一种叫作 **HTTP-only** 的 cookie。HTTP-only 可以在浏览器设置，也可以在服务器设置，但只能 在服务器上读取，这是因为 JavaScript 无法取得这种 cookie 的值\n\n### sessionStorage\n\nsessionStorage 对象只存储会话数据，这意味着数据只会存储到浏览器关闭。这跟浏览器关闭时 会消失的会话 cookie 类似。存储在 sessionStorage 中的数据不受页面刷新影响，可以在浏览器崩溃 并重启后恢复。（取决于浏览器，Firefox 和 WebKit 支持，IE 不支持。）\n\n### localStorage\n\n在修订的 HTML5 规范里，localStorage 对象取代了 globalStorage，作为在客户端持久存储 数据的机制。要访问同一个 localStorage 对象，**页面必须来自同一个域（子域不可以）、在相同的端口上使用相同的协议。**\n\n两种存储方法的区别在于，存储在 localStorage 中的数据会保留到通过 JavaScript 删除或者用户 清除浏览器缓存。localStorage 数据不受页面刷新影响，也不会因关闭窗口、标签页或重新启动浏览 器而丢失。\n\n### indexDB\n\nIndexedDB 背后的思想是创造一套 API，方便 JavaScript 对象的 存储和获取，同时也支持查询和搜索。\n\nIndexedDB 的设计几乎完全是异步的。为此，大多数操作以请求的形式执行，这些请求会异步执行， 产生成功的结果或错误。\n\n## 模块\n\n将代码拆分成独立的块，然后再把这些块连接起来可以通过模块模式来实现。这种模式背后的思想 很简单：把**逻辑分块，各自封装，相互独立，每个块自行决定对外暴露什么**，同时自行决定引入执行哪些外部代码。\n\n### 凑合的模块系统-IIFE\n\n```JavaScript\n// 为了暴露公共 API，模块 IIFE 会返回一个对象，其属性就是模块命名空间中的公共成员：\nvar Foo = (function() {\n return {\n bar: 'baz',\n baz: function() {\n console.log(this.bar);\n }\n };\n})();\nconsole.log(Foo.bar); // 'baz'\nFoo.baz(); // 'baz'\n```\n\n### ES6 之前的模块系统\n\n在 ES6 原生支持模块之前，使用模块的 JavaScript 代码本质上是希望使用默认没有的语言特性。因 此，必须按照符合某种规范的模块语法来编写代码，另外还需要单独的模块工具把这些模块语法与 JavaScript 运行时连接起来。这里的模块语法和连接方式有不同的表现形式**，通常需要在浏览器中额外 加载库或者在构建时完成预处理。**\n\n#### CommonJS\n\nCommonJS 规范概述了同步声明依赖的模块定义。这个规范主要用于在服务器端实现模块化代码组织，但也可用于定义在浏览器中使用的模块依赖。CommonJS 模块语法不能在浏览器中直接运行。\n\n**在 CommonJS 中，模块加载是模块系统执行的同步操作。**\n\n```JavaScript\n//定义\nvar moduleB = require('./moduleB');\nmodule.exports = {\n stuff: moduleB.doStuff();\n};\n\n//使用\nconsole.log('moduleA');\nrequire('./moduleA'); // \"moduleA\"\n```\n\n**无论一个模块在 require()中被引用多少次，模块永远是单例。在下面的例子中，moduleA 只会 被打印一次。这是因为无论请求多少次，moduleA 只会被加载一次。**\n\n```JavaScript\nconsole.log('moduleA');\nvar a1 = require('./moduleA');\nvar a2 = require('./moduleA');\nconsole.log(a1 === a2); // true\n```\n\n模块第一次加载后会被缓存，后续加载会取得缓存的模块\n\nmodule.exports 对象非常灵活，有多种使用方式。\n\n```JavaScript\n//单值\nmodule.exports = 'foo';\n// 多值\nmodule.exports = {\n a: 'A',\n b: 'B'\n};\n// 等同\nmodule.exports.a = 'A';\nmodule.exports.b = 'B';\n\n\n```\n\n#### AMD\n\nAMD 模块实现的核心是用**函数包装模块定义**。这样可以防止声明全局变量，并允许加载器库控制何时加载模块。包装函数也便于模块代码的移植，因为包装函数内部的所有模块代码使用的都是原生 JavaScript 结构。包装模块的函数是全局 define 的参数，它是由 AMD 加载器库的实现定义的\n\n```JavaScript\n// ID 为'moduleA'的模块定义。moduleA 依赖 moduleB，\n// moduleB 会异步加载\ndefine('moduleA', ['moduleB'], function(moduleB) {\n return {\n stuff: moduleB.doStuff();\n };\n});\n```\n\n#### UMD\n\n为了**统一** CommonJS 和 AMD 生态系统，通用模块定义（UMD，Universal Module Definition）规范应运而生。UMD 可用于创建这两个系统都可以使用的模块代码。本质上，UMD 定义的模块会在启动时 **检测要使用哪个模块系统**，然后进行适当配置，并把所有逻辑包装在一个立即调用的函数表达式（IIFE） 中。虽然这种组合并不完美，但在很多场景下足以实现两个生态的共存。\n\n```JavaScript\n(function (root, factory) {\n if (typeof define === 'function' \u0026\u0026 define.amd) {\n // AMD。注册为匿名模块\n define(['moduleB'], factory);\n } else if (typeof module === 'object' \u0026\u0026 module.exports) {\n // Node。不支持严格 CommonJS\n // 但可以在 Node 这样支持 module.exports 的\n // 类 CommonJS 环境下使用\n module.exports = factory(require(' moduleB '));\n } else {\n // 浏览器全局上下文（root 是 window）\n root.returnExports = factory(root. moduleB);\n }\n}(this, function (moduleB) {\n // 以某种方式使用 moduleB\n // 将返回值作为模块的导出\n // 这个例子返回了一个对象\n // 但是模块也可以返回函数作为导出值\n return {};\n}));\n```\n\n### ES6 模块\n\nES6 最大的一个改进就是引入了模块规范。这个规范全方位简化了之前出现的模块加载器，原生浏览器支持意味着加载器及其他预处理都不再必要。从很多方面看，ES6 模块系统是集 AMD 和 CommonJS 之大成者。\n\nECMAScript 6 模块是作为一整块 JavaScript 代码而存在的。带有 type=\"module\"属性的`\u003cscript\u003e`标签会告诉浏览器相关代码应该作为模块执行，而不是作为传统的脚本执行。\n\n与传统脚本不同，所有模块都会像`\u003cscript defer\u003e`加载的脚本一样按顺序执行。解析到`\u003cscript type=\"module\"\u003e`标签后会立即下载模块文件，但执行会延迟到文档解析完成。\n\n#### 模块行为\n\nECMAScript 6 模块借用了 CommonJS 和 AMD 的很多优秀特性。下面简单列举一些。\n\n- 模块代码只在加载后执行。\n- 模块只能加载一次。\n- 模块是单例。\n- 模块可以定义公共接口，其他模块可以基于这个公共接口观察和交互。\n- 模块可以请求加载其他模块。\n- 支持循环依赖。 ES6 模块系统也增加了一些新行为。\n- ES6 模块默认在严格模式下执行。\n- ES6 模块不共享全局命名空间。\n- 模块顶级 this 的值是 undefined（常规脚本中是 window）。\n- 模块中的 var 声明不会添加到 window 对象。\n- ES6 模块是异步加载和执行的。\n\n#### 导出\n\n```JavaScript\n// 默认导出 只能一个\nexport default foo\n// 等同于\nexport { foo as default };\n// 导出多个\nexport { foo, bar as myBar, baz };\n```\n\n#### 导入\n\nimport 语句被提升到模块顶部。因此，与 export 关键字类似，import 语句与使用导入值的语句 的相对位置并不重要。不过，还是**推荐**把导入语句**放在模块顶部**。\n\n导入对模块而言是只读的，实际上相当于 const 声明的变量。在使用\\*执行批量导入时，赋值给别名的命名导出就好像使用 `Object.freeze()`冻结过一样。直接修改导出的值是不可能的，但**可以修改导出对象的属性**。同样，也不能给导出的集合添加或删除导出的属性。要修改导出的值，必须使用有内部变量和属性访问权限的导出方法。\n\n#### 工作者模块\n\n```JavaScript\n// 下面是两种类型的 Worker 的实例化行为：\n// 第二个参数默认为{ type: 'classic' }\nconst scriptWorker = new Worker('scriptWorker.js');\nconst moduleWorker = new Worker('moduleWorker.js', { type: 'module' })\n```\n\n#### 兼容性\n\n```JavaScript\n// 支持模块的浏览器会执行这段脚本\n// 不支持模块的浏览器不会执行这段脚本\n\u003cscript type=\"module\" src=\"module.js\"\u003e\u003c/script\u003e\n// 支持模块的浏览器不会执行这段脚本\n// 不支持模块的浏览器会执行这段脚本\n\u003cscript nomodule src=\"script.js\"\u003e\u003c/script\u003e\n```\n\n## Web Worker\n\n### 简介\n\nJavaScript 环境实际上是运行在托管操作系统中的虚拟环境。在浏览器中每打开一个页面，就会分 配一个它自己的环境。这样，每个页面都有自己的内存、事件循环、DOM，等等。每个页面就相当于一个**沙盒**，不会干扰其他页面。对于浏览器来说，同时管理多个环境是非常简单的，因为所有这些环境都是**并行执行**的。\n\n#### WorkerGlobalScope\n\n在网页上，window 对象可以向运行在其中的脚本暴露各种全局变量。在工作者线程内部，没有 window 的概念。这里的全局对象是 WorkerGlobalScope 的实例，通过 self 关键字暴露出来。\n\n### 使用\n\n```JavaScript\n// emptyWorker.js\n// 空的 JS 工作者线程文件\n\n// main.js\nconsole.log(location.href); // \"https://example.com/\"\nconst worker = new Worker(location.href + 'emptyWorker.js');\nconsole.log(worker); // Worker {}\n```\n\n#### 安全限制\n\n工作者线程的脚本文件**只能从与父页面相同的源加载**。从其他源加载工作者线程的脚本文件会导致错误!\n\n## 最佳实践\n\n说代码“可维护”就意味着它具备如下特点。\n\n- **容易理解**：无须求助原始开发者，任何人一看代码就知道它是干什么的，以及它是怎么实现的。\n- **符合常识**：代码中的一切都显得顺理成章，无论操作有多么复杂。\n- **容易适配**：即使数据发生变化也不用完全重写。\n- **容易扩展**：代码架构经过认真设计，支持未来扩展核心功能。\n- **容易调试**：出问题时，代码可以给出明确的信息，通过它能直接定位问题。\n\n### 编码规范\n\n#### 可读性\n\n- 使用合适的代码缩进\n- 写注释\n  - **函数和方法：**每个函数和方法都应该有注释来描述其用途，以及完成任务所用的算法。\n  - **大型代码块。**多行代码但用于完成单一任务的，应该在前面给出注释，把要完成的任务写清楚。\n  - **复杂的算法**: 如果使用了独特的方法解决问题，要通过注释解释明白。\n  - **使用黑科技。**由于浏览器之间的差异，JavaScript 代码中通常包含一些黑科技。\n\n#### 变量和函数命名\n\n- **变量名应该是名词**，例如 car 或 person。\n- **函数名应该以动词开始**，例如 getName()。**返回布尔值的函数通常以 is 开头**，比如 isEnabled()。\n- **变量、函数和方法应该以小写字母开头，使用驼峰大小写（camelCase）形式**，如 getName()和 isPerson。**类名应该首字母大写**，如 Person、RequestFactory。**常量值应该全部大写并以 下划线相接**，比如 REQUEST_TIMEOUT\n- 名称要尽量用描述性和直观的词汇\n\n#### 使用常量\n\n关键在于把数据从使用它们的逻辑中分离出来。可以使用以下标准检查哪些数据需要提取。\n\n- **重复出现的值**：任何使用超过一次的值都应该提取到常量中，这样可以消除一个值改了而另一 个值没改造成的错误。这里也包括 CSS 的类名。\n- **用户界面字符串**：任何会显示给用户的字符串都应该提取出来，以方便实现国际化。\n- **URL**：Web 应用程序中资源的地址经常会发生变化，因此建议把所有 URL 集中放在一个地方管理。\n- **任何可能变化的值**：任何时候，只要在代码中使用字面值，就问问自己这个值将来是否可能会变。如果答案是“是”，那么就应该把它提取到常量中\n\n### 性能\n\n#### 作用域意识\n\n- 避免全局查找\n\n  **只要函数中有引用超过两次的全局对象，就应该把这个对象保存为一个局部变量。**\n\n- 不使用 with 语句\n\n#### 选择正确的方法\n\n1. 避免不必要的属性查找\n\n    **使用变量和数组相比访问对象属性效率更高**，访问对象属性的算法复杂度是 O(n)。访问对象的每个属性都比访问变量或数组花费的时间长，因为查找属性名要搜索原型链。简单来说，查找的属性越多， 执行时间就越长。\n\n```JavaScript\nlet query = window.location.href.substring(window.location.href.indexOf(\"?\"));\n//只要使用某个 object 属性超过一次，就应该将其保存在局部变量中。第一次仍然要用 O(n)的复杂度去访问这个属性，但后续每次访问就都是 O(1)，\nlet url = window.location.href;\nlet query = url.substring(url.indexOf(\"?\"));\n```\n\n2. 优化循环\n\n   - **简化终止条件。**\n   - **简化循环体。**\n   - **使用后测试循环。**最常见的循环就是 for 和 while 循环，这两种循环都属于先测试循环。do-while 就是后测试循环，避免了对终止条件初始评估 ，因此应该会更快。\n\n3. 展开循环\n\n   达夫设备实现，**展开循环对于大型数据集可以节省很多时间，但对于小型数据集来说，则可能不值得。因为实现同 样的任务需要多写很多代码，所以如果处理的数据量不大，那么显然没有必要。**\n\n4. 其他\n\n   - **原生方法很快**，应该尽可能使用原生方法，而不是使用 JavaScript 写的方法。\n   - **switch 语句很快。**\n   - **位操作很快。**\n\n#### DOM 优化\n\n1. **实时更新最小化**\n\n   **访问 DOM 时，只要访问的部分是显示页面的一部分，就是在执行实时更新操作。**之所以称其为实时更新，是因为涉及立即（实时）更新页面的显示，让用户看到。每次这样的更新，无论是插入一个字符还是删除页面上的一节内容，都会导致性能损失。这是因为浏览器需要为此重新计算数千项指标，之后才能执行更新。实时更新的次数越多，执行代码所需的时间也越长。反之，实时更新的次数越少，代码执行就越快\n\n   - 从页面中移除列表，执行更新，然后再把列表插回页面中相同的位置。**不可取，因为每次更新时页面都会闪烁。**\n   - 使用文档片段构建 DOM 结构，然后一次性将它添加到 list 元素。这个办法可以减少实时更新，也可以避免页面闪烁。\n\n     ```JavaScript\n     let list = document.getElementById(\"myList\"),\n       fragment = document.createDocumentFragment(),\n       item;\n     for (let i = 0; i \u003c 10; i++) {\n       item = document.createElement(\"li\");\n       fragment.appendChild(item);\n       item.appendChild(document.createTextNode(\"Item \" + i));\n     }\n     list.appendChild(fragment);\n     ```\n\n2) **使用 innerHTML**\n\n在页面中创建新 DOM 节点的方式有两种：使用 DOM 方法如 **createElement()**和 **appendChild()**， 以及使用 **innerHTML**。\n\n3. **使用事件委托**\n\n### 部署\n\n## ES2019\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BA%A6%E7%BF%B0%E5%86%85%E6%96%AF%E5%BC%80%E6%99%AE%E5%8B%92":{"title":"约翰内斯·开普勒","content":"\n# 约翰内斯·开普勒\n\n#卡片/人物卡\n\n- 国籍：德国\n- 生平：1571 年 12 月 27 日－1630 年 11 月 15 日\n- 身份：天文学家、数学家\n- 简介：  \n  开普勒是十七世纪科学革命的关键人物。他最为人知的成就为[[开普勒定律]]，这是尔后天文学家根据他的著作《新天文学》、《世界的和谐》、《哥白尼天文学概要（英语：Epitome Astronomiae Copernicanae）》萃取而成的三条定律。这些杰作对艾萨克·牛顿影响极大，启发牛顿后来得出牛顿万有引力定律。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BA%B3%E7%93%A6%E5%B0%94%E5%AE%9D%E5%85%B8":{"title":"《 纳瓦尔宝典 》","content":"\n# 《 纳瓦尔宝典 》\n\n# 元数据\n\n\u003e [!abstract] 纳瓦尔宝典\n\u003e - ![ 纳瓦尔宝典|200](https://weread-1258476243.file.myqcloud.com/weread/cover/89/YueWen_44026191/t7_YueWen_44026191.jpg)\n\u003e - 书名： 纳瓦尔宝典\n\u003e - 作者： 埃里克·乔根森\n\u003e - 简介： 致富不是靠运气，幸福也不是从天而降的。积累财富和幸福生活是我们可以学习的技能。这本书收集整理了硅谷投资人纳瓦尔在过去十年里通过推特、播客和采访等方式分享的人生智慧，向读者分享了纳瓦尔关于财富积累和幸福人生的原则与方法。纳瓦尔不仅告诉读者怎样致富，他还告诉读者怎样看待人生，怎样获得幸福。他对财富、人生的思考将帮助你走自己独特的道路，过上更富有、更幸福的生活。\n\u003e - 出版时间 2022-05-01 00:00:00\n\u003e - ISBN： 9787521741124\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 第一章 积累财富\n\n- 📌 赚钱不是一件想做就能做的事情，而是一门需要学习的技能。 ^44026191-12-473-500\n    - ⏱ 2022-06-13 15:05:33\n- 📌 退休就是不再为了想象中的明天而牺牲今天。当你能活在当下，内心充盈地度过每一天时，你就达到了退休的状态。 ^44026191-21-1429-1480\n    - ⏱ 2022-06-13 16:30:29\n\n## 第二章 增强判断力\n\n- 📌 我对智慧的定义是“知道个人行为的长期后果”，用于解决外部问题的智慧其实就是判断力。或者说，智慧和判断力是高度关联的：一个智慧而富有判断力的人，首先要知道个人行为的长期后果，然后做出正确的决策并付诸行动。[78] ^44026191-25-973-1098\n    - ⏱ 2022-06-13 16:41:07\n- 📌 事实上，留出空闲时间非常重要。如果每一天都被各种会议占满，都是忙忙碌碌的，你就无法进行思考。 ^44026191-26-2789-2835\n    - ⏱ 2022-06-13 16:55:37\n- 📌 传统美德对我们的决策具有很大的启发意义：要选择从长期来看让我们受益最大的做法，而不是只顾眼前得失。 ^44026191-28-415-464\n    - ⏱ 2022-06-13 16:57:34\n- 📌 自由的表现之一就是可以心口如一，表达自己的真实想法。诚实和自由高度统一，相辅相成。理论物理学家理查德·费曼有句名言：“不要欺骗自己，你自己才是最容易被欺骗的人。” ^44026191-28-950-1031\n    - ⏱ 2022-06-13 16:58:00\n- 📌 如果要提出批评意见，不要批评某个人，可以批评工作方法，或者批评某一类行为。如果要表扬，那就找到一个榜样，表扬这个特定的人。这样有助于维护你身边人的自尊心和身份感，获得他们的支持，让他们为你所用，而不是与你作对。 ^44026191-28-1438-1543\n    - ⏱ 2022-06-13 16:59:15\n- 📌 是的。决策就是一切。事实上，一个决策正确率为80%的人比正确率为70%的人在市场上的价值和获得的回报要高出数百倍。 ^44026191-28-1911-1968\n    - ⏱ 2022-06-13 16:59:52\n- 📌 我遇到过很多人，他们貌似博览群书、知识渊博，但实际上没什么智慧。原因在于，他们虽然读了很多书，却是以错误的顺序读了错误的内容。在开始阅读之旅时，他们读的东西没有什么实质性内容，也不包含什么真理，这些内容构成了他们世界观的基础。然后，当新事物出现时，他们会根据已经建立起来的基础对新想法加以评判，他们的评判自然也没什么见地。所以，打好阅读的基础非常关键。 ^44026191-30-4861-5037\n    - ⏱ 2022-06-13 17:07:52\n\n## 第三章 学习幸福\n\n- 📌 我觉得人类最常犯的一个错误就是，认为自己会因外部环境变化而获得幸福。 ^44026191-37-425-459\n    - ⏱ 2022-06-13 17:33:40\n- 📌 获得幸福最重要的诀窍之一就是，认识到这是一种你可以锻炼的技能，是一个你可以做出的选择。 ^44026191-40-3225-3268\n    - ⏱ 2022-06-13 17:38:56\n- 📌 所谓接受，就是无论结果如何，都可以泰然处之；就是保持心态平衡，大脑专注；就是退一步海阔天空；就是观大势，顾全局，谋长远 ^44026191-41-1099-1158\n    - ⏱ 2022-06-13 17:41:46\n- 📌 比如，开会要迟到了，这件事对我有什么好处吗？好处就是我可以放松一下，看鸟观云。而且，我也可以少花一些时间在那个无聊的会议上。任何事情都有积极的一面。就算找不到积极的意义，你也可以这样想：“宇宙现在要给我上一课了，我要认真听讲，好好学习。” ^44026191-41-1553-1701\n    - ⏱ 2022-06-13 17:42:08\n\n## 第四章 自我救赎\n\n- 📌 在“做自己”这件事情上，没有人能与你竞争。你永远不会像我一样擅长做我自己，我也永远不会像你一样擅长做你自己。当然，做人要虚心聆听，博采众长，但不要盲目模仿。模仿他人纯属徒劳。相反，每个人都有独一无二的资质技能、专业知识、能力才干、个人欲望，这些是世界上其他人所没有的，是先天基因和后天经验共同作用的结果。 ^44026191-43-938-1090\n    - ⏱ 2022-06-13 17:48:32\n- 📌 到底要不要做，就要看这件事是不是你优先考虑的事项。如果一件事是你的首要任务，你就会去做。生活就是这样。如果你有10个或15个不同的优先事项，都不分主次地被丢到同一个筐里，那就等于没有优先级，最终你一件事都做不成。 ^44026191-44-4159-4265\n    - ⏱ 2022-06-13 17:59:49\n- 📌 我的体能教练耶日·格雷戈雷克是个非常聪明的人。他总是说：“选择简单模式，人生会越来越困难；选择困难模式，人生会越来越简单。” ^44026191-44-5588-5650\n    - ⏱ 2022-06-13 18:02:56\n- 📌 对我而言，科学就是对真理的研究。科学是唯一真正的学科，因为科学做出的预测是可证伪的。科学具有改变世界的力量。应用科学变成技术，技术把我们和动物区分开来，让我们拥有手机、房子、汽车、暖气和电力。 ^44026191-47-1396-1492\n    - ⏱ 2022-06-14 10:39:45\n\n## 第五章 哲学\n\n- 📌 如果把人类或植物等任何一种生物或人类文明视为一个系统，这些系统就是在局部熵减。人类在局部熵减，因为我们有行动力。而在人类局部熵减的同时，整个地球在整体熵增，直到宇宙归于热寂。 ^44026191-50-1971-2087\n    - ⏱ 2022-06-14 11:15:22\n- 📌 另一个基本的价值观是，我不赞成任何短期思维或短期交易。如果生意伙伴在跟他人的合作中一味追求短期利益，我就不想跟他们合作了。生活中所有的回报，无论是财富、人际关系、爱情、健康、活动，还是习惯，都来自复利。我只想选择值得一辈子深交的伙伴和能获得长期回报的事情。 ^44026191-51-850-978\n    - ⏱ 2022-06-14 11:17:28\n- 📌 另一个价值观是，我赞同平级关系，不接受等级关系。我不想高于任何人，也不想低于任何人。如果我和别人不能像平级那样对待彼此，我就不想和他们交往了。 ^44026191-51-1007-1078\n    - ⏱ 2022-06-14 11:17:42\n- 📌 还有一个价值观，现在我觉得愤怒是毫无意义的。年轻的时候我认为愤怒是好事，是男子汉气概的象征，但现在，我喜欢佛教的说法：“执怒就像握了一把要丢向他人的热煤炭，被烫伤的人反而是你。” ^44026191-51-1107-1196\n    - ⏱ 2022-06-14 11:17:07\n- 📌 智慧是一种知道个人行为的长期后果的思维能力。[11]如果仅仅通过语言就可以传授智慧，我们今天就不需要努力了。 ^44026191-52-1708-1871\n    - ⏱ 2022-06-14 11:21:08\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BA%BF%E4%B8%8A%E9%83%A8%E7%BD%B2React%E6%96%87%E4%BB%B6":{"title":"线上部署 React 文件","content":"\n# 线上部署 React 文件\n\n在安装以前，我们最好先更新一下系统，并安装可能用到的基础包。通过 sudo 命令来安装这些系统包：\n\n```\nsudo apt-get update\nsudo apt-get install vim openssl build-essential libssl-dev wget curl git\n```\n\n还是之前安装 npm 时候的原因，为了保证更快、更稳定的安装速度，我们也可以采用 cnpm 来替代 npm 下载包信息：\n\n安装 nvm\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\nnvm install v15.5.1\nnode -v\n```\n\n```js\nnpm --registry=https://registry.npm.taobao.org install -g cnpm\ncnpm -v\n4.2.0\n```\n\ncnpm 有 15 分钟的同步周期，有时候会遇到你需要的模块 cnpm 上不是最新的，怎么办呢？可以通过 sync 命令来同步，同步以后，就可以用 cnpm 安装了。\n\n```js\ncnpm sync koa\n```\n\n好了，Node.js 安装完了，我们再顺手把一些常用的全局工具包安装一下吧：\n\n```js\nnpm install pm2 -g\n```\n\n至此 Node.js 的环境就安装好了，下一节我们就来安装数据库的环境。\n\n## Nginx\n\n```\nsudo vi  /etc/nginx/conf.d/imooc-com-4321.conf\n```\n\n```\n# 通过 upstream 我们可以设定一个简单的负载均衡策略，以应对将来可能的升级\n# 首先定义一个 server 集群 gougou，里面可以加多个 server，每个 server 对应的值可以用域名，也可以直接用 IP，但我们通常不会用 IP 来访问，而是通过域名:\nupstream imooc {\n    server 127.0.0.1:4321;\n}\nserver {\n    listen 80;\n    server_name deploy-static.iblack7.com;\n    # Gzip Compression\n    gzip on;\n    gzip_comp_level 6;\n    gzip_vary on;\n    gzip_min_length  1000;\n    gzip_proxied any;\n    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n    gzip_buffers 16 8k;\n\n    location / {\n        # remote_addr 代表客户端的 IP\n        proxy_set_header X-Real-IP $remote_addr;\n        # proxy_add_x_forwarded_for 获取真实的 IP\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # http_host 表示请求的 host 头\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        # proxy_pass 指令实现代理。把域名代理到集群名上面\n        proxy_pass http://imooc;\n        proxy_redirect off;\n    }\n}\n```\n\n保存后，通过 sudo nginx -t 来验证配置是否正确，有没有语法错误，然后我们把 Nginx 的服务重启一下。\n\n```\nsudo service nginx restart\n```\n\n再把 URL 中的端口号去掉，我们访问下：\n\n```\nhttp://deploy-static.iblack7.com\n```\n\n当里个当，我们大功告成！\n\n/www/user-circle/production/current/dist;\n\n查看 nginx 进程\n\n```\nps -ef |grep nginx\n```\n\nnetstat -ntpl\n\nsudo vi  /etc/nginx/conf.d/user-circle-8080.conf\n\n```yaml\napps:\n\n- script: app.js\n\nname: UserCircle\n\nenv:\n\nCOMMON_VARIABLE: true\n\nenv_production:\n\nNODE_ENV: production\n\ndeploy:\n\nproduction:\n\nuser: root\n\nhost:\n\n- 47.102.255.84\n\nport: '7822'\n\nref: origin/master\n\nrepo: git@gitee.com:chelsechen/user-circle.git\n\npath: /www/user-circle/production\n\nssh_options: StrictHostKeyChecking=no\n\npre-deploy: git fetch --all\n\npost-deploy: 'cnpm install \u0026\u0026 cnpm run build\u0026\u0026pm2 startOrRestart ecosystem.yaml --env production'\n\nenv:\n\nNODE_ENV: production\n```\n\nssh -p 7822 root@47.102.255.84\n\npm2 deploy ecosystem.yaml production\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F":{"title":"组合模式","content":"\n# 组合模式\n\n在程序设计中，也有一些和“事物是由相似的子事物构成”类似的思想。组合模式就是用小的子对象来构建更大的对象，而这些小的子对象本身也许是由更小的“孙对象”构成的\n\n几点要点:\n\n1. 组合模式不是父子关系\n2. 对叶对象操作的一致性.组合模式除了要求组合对象和叶对象拥有相同的接口之外，还有一个必要条件，就是对一组叶对象的操作必须具有一致性。\n3. 双向映射关系。发放过节费的通知步骤是从公司到各个部门，再到各个小组，最后到每个员工的邮箱里。这本身是一个组合模式的好例子，但要考虑的一种情况是，也许某些员工属于多个组织架构。比如某位架构师既隶属于开发组，又隶属于架构组，对象之间的关系并不是严格意义上的层次结构，在这种情况下，是不适合使用组合模式的，该架构师很可能会收到两份过节费。\n4. 用职责链模式提高组合模式性能。  \n   在组合模式中，如果树的结构比较复杂，节点数量很多，在遍历树的过程中，性能方面也许表现得不够理想。有时候我们确实可以借助一些技巧，在实际操作中避免遍历整棵树，有一种现成的方案是借助职责链模式。职责链模式一般需要我们手动去设置链条，但在组合模式中，父对象和子对象之间实际上形成了天然的职责链。让请求顺着链条从父对象往子对象传递，或者是反过来从子对象往父对象传递，直到遇到可以处理该请求的对象为止，这也是职责链模式的经典运用场景之一。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7":{"title":"终端工具","content":"\n# 终端工具\n\n## iTerm2\n\niTerm2 是一个集美观与功能性为一体的老牌终端工具，即使是默认配置也已经很好的满足了我们的需求。\n\n当我们在工作或个人使用中需要连接到多台开发机时，可以通过 `Command+O` 或通过右键 Dock 栏 iTerm2 图标选择对应 Profile 打开服务器，同时也可以通过内置快捷键 `Command+D` 与 `Command+Shift+D` 来水平或垂直拆分终端，便于多服务器同时操作，无需不断切换窗口。\n\n推荐配合[Oh My Zsh](https://ohmyz.sh/#install)+[Starship](https://starship.rs/zh-cn/guide/) 使用，\n\n## ohmZsh\n\n扩展一些功能\n\n## Starship\n\n美化 Shell 提示\n\n## Alacritty\n\nAlacritty 也是一款使用 Rust 编写的跨平台终端工具，提供了一些基础默认配置，并通过 `~/.config/alacritty/alacritty.yml` 文件进行各项自定义配置，可以点击[这里](https://github.com/pseudoyu/dotfiles/tree/master/alacritty)访问我的完整配置。\n\nAlacritty 本身不提供窗口拆分、Session 管理等功能，所以我们需要集成 [tmux](https://github.com/tmux/tmux/wiki) 这一强大的跨平台窗口管理工具。\n\n# 参考文章\n\n- [Warp，iTerm2 还是 Alacritty？我的终端折腾小记 · Pseudoyu](https://www.pseudoyu.com/zh/2022/07/10/my_config_and_beautify_solution_of_macos_terminal/)\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%8F%E5%85%B8%E8%AE%A1%E7%AE%97%E6%9C%BA":{"title":"经典计算机","content":"\n# 经典计算机\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%93%E6%9E%84%E6%80%A7%E6%94%B9%E9%9D%A9":{"title":"《 结构性改革 》","content":"\n# 《 结构性改革 》\n\n# 元数据\n\n\u003e [!abstract] 结构性改革\n\u003e - ![ 结构性改革|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/49/33362049/t7_33362049.jpg)\n\u003e - 书名： 结构性改革\n\u003e - 作者： 黄奇帆\n\u003e - 简介： 恰逢百年未有之大变局，经济转型发展、中美贸易摩擦、新冠疫情暴发等问题交相叠加，无不考验着我国面对复杂问题的智慧和勇气，供给侧结构性改革的重要性与紧迫性空前凸显。这本书从基础性、结构性、机制性、制度性等多个维度，深入剖析我国供给侧关键矛盾并对症下药。 全书一共七章。第 一章详解如何紧抓供给侧结构性改革主线；第二章聚焦去杠杆与金融风险防范；第三章解读新时代下我国资本市场高质量发展之路；第四章讲述“数字化”如何重塑经济社会生态；第五章对房地产长效调控机制开出药方，并预判今后十年房地产行业六大趋势；第六章着眼于国有企业资本运作与地方政府营商环境改善；第七章阐释新局面、新特征下，我国对国际形势与中美关系的应对之道，深入剖析“双循环”新格局。\n\u003e - 出版时间 2020-08-01 00:00:00\n\u003e - ISBN： 9787521718645\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 深化土地要素市场化改革应把握好五个方面\n\n- 📌 若干年后回望，2020年必将是开启中国第三轮土地管理制度改革的新元年，我国必将迎来一个如农村土地承包制和城市土地批租制改革那样波澜壮阔的伟大时期！ ^33362049-9-596-669\n    - ⏱ 2021-07-20 16:38:43\n- 📌 可以看出，我们国家不再追求城市平均化，有意扶持中心城市和城市群的发展。此次审批权下放的8个试点省市，与我国京津冀、长三角、粤港澳、成渝地区双城经济圈等大城市群密切相关 ^33362049-9-4833-4916\n    - ⏱ 2021-07-20 16:46:59\n\n## 推动公共卫生防疫领域供给侧全面改革\n\n- 📌 为此，政府财政应该把原有投向基础设施的钱，转移一部分到公共卫生等公共设施领域里面来，提高公共卫生领域的供给质量，用这一政府消费促进中国经济的可持续、高质量发展。 ^33362049-12-1918-1998\n    - ⏱ 2021-07-20 17:55:58\n\n## 金融的本质\n\n- 📌 金融的本质，就是三句话：一是为有钱人理财，为缺钱人融资；二是金融企业的核心要义就在于信用、杠杆、风险三个环节，要把握好三个环节和度；三是一切金融活动的目的是要为实体经济服务。这三个本质特征，不管是哪个层面的金融从业者，都应时刻谨记于心。 ^33362049-15-389-507\n    - ⏱ 2021-07-21 09:44:56\n\n## 去杠杆尤需提高股权融资比例\n\n- 📌 狠抓“三去一降一补”，帮企业去过剩产能、去库存、去杠杆，促使企业增加利润、降低成本，有效地降低具体企业的债务 ^33362049-18-2213-2267\n    - ⏱ 2021-07-21 11:13:23\n\n## “数字化”背景下经济社会发展的新特征、新趋势\n\n- 📌 但是应当认识到无现金社会在面对战争、天灾时毫无可靠性，庞大的社会电子支付体系会瞬间崩溃，总之要三思而后行。 ^33362049-27-23553-23606\n    - ⏱ 2021-07-22 10:48:26\n\n## 未来数字货币发展展望\n\n- 📌 。因此可以认为，未来法定数字货币可以锚定数字化时代的核心生产资料——数据、计算设备、技术人员等组成的综合体。可以将上述一揽子的数字化生产资料整合形成一个数字化指数。将数字货币锚定这个指数，通过测度全球或国家的数字化指数，来确定数字货币的发放量。 ^33362049-28-8848-8970\n    - ⏱ 2021-07-22 11:13:58\n\n## 5G背景下金融科技的特征和发展路径\n\n- 📌 这是一个巨大的蓝海，今后的高价值公司很有可能主要产生于产业互联网系统。 ^33362049-29-1000-1035\n    - ⏱ 2021-07-22 11:15:55\n- 📌 体服务，因此可以大大提高金融服务的效率和效益；供应链金融3.0版是数字金融模式，利用大数据、物联网、人工智能、区块链等技术在整个供应链中获取每个产业链上企业的动态、每时每刻的数字信用。此时，供应链生态圈将相互打通，交易完全透明可信，资金流动清晰可见，在这个阶段的供应链金融将是智能化的、数字化的、效率极高的，大大提高了融资便利性与风控水平。 ^33362049-29-6576-6746\n    - ⏱ 2021-07-22 11:31:11\n\n## 房地产开发企业要摒弃的八种运行方式\n\n- 📌 一类是前期打着商业地产、工业地产、养老地产、旅游地产、医疗保健地产、智慧城市地产等旗号搞开发。一方面，因为这些开发带有公共服务的职能，希望通过这些概念说服政府，以低地价供地；另一方面，开发商想通过这些广告概念吸引老百姓，更好地销售自己的楼盘产品。 ^33362049-34-3794-3917\n    - ⏱ 2021-07-22 15:33:24\n\n## 房地产业未来趋势、运营方式和政府管控方式\n\n- 📌 展望未来，在房地产供求关系方面，我国已经进入了“局部供不应求，总体供过于求”的阶段，房地产建筑总量出现过剩的现象。“供不应求”的时代结束了，推动房价上升的基本面动力已经严重不足。 ^33362049-35-6294-6383\n    - ⏱ 2021-07-22 16:28:25\n\n## 应对中美贸易摩擦，中国要打好五张牌\n\n- 📌 会关闭，只会越开越大。近一段时期乃至下一个阶段，中国对外开放有五个方面的重点任务。第一，进一步降低关税、扩大进口。第二，开拓全新的开放领域，全方位、宽领域、多渠道地引进外资。无论是教育、卫生、文化领域，金融、保险、证券领域，还是各种服务贸易领域，都要让外资充分进入。第三，不断改善中国的营商环境，让营商环境国际化、法治化、公开化。中央经济工作会议指出，中国下一轮开放的重点要由商品和要素流动型开放向规则等制度型开放转变。那么，何为制度、规则？营商环境的国际化、法治化和公开化都属于制度、规则的构建。第四，不断建设对外开放的新高地。具体而言，内陆地区原本不够开放的城市，要力争建设成内陆开放高地；沿海地区本来就是开放高地的城市，包括上海、深圳，要在原有的开放基础上再创更新、更高的高地。对外开放要在高度、深度、广度上都有全面突破。第五，更好地参与WTO改革以及双边和区域性的FTA谈判，推进并融入全球化之中。 ^33362049-43-23719-24122\n    - ⏱ 2021-07-23 15:29:14\n\n# 读书笔记\n\n## 推动智慧城市建设的五个平衡与五个关键\n\n### 划线评论\n\n- 📌 刘易斯拐点 ^16142247-7rZ4XB40X\n    - 💭 刘易斯拐点（英语：Lewis turning point）是指经济发展中的一种状态，经济剩余导致乡村劳动力减少。这种现象通常由于劳动力短缺引起，并导致农业和非熟练工人的工资上涨直到再次达到劳动力剩余的状态。该术语由经济学家威廉·阿瑟·刘易斯提出，故名刘易斯拐点。在刘易斯拐点发生后，经济发展需要平衡的政策。[1] Piazza认为，一个快速发展的经济体到达刘易斯拐点后，会导致金融动荡和增长前景的持续下降。[2]\n\n通常情况下，到达刘易斯拐点会导致工资增加和有利于劳动力的功能分配。[1] 然而在一些情况下，如1870年至1920年间的日本，由于农业生产率的快速提高，产生了劳动力的过剩，抑制了实际工资的上涨。[1]  \n    - ⏱ 2021-07-22 14:01:33\n\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7s0JsxDLT  \n⏱ 2021-07-23 16:06:35\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%93%E6%9E%84%E6%B4%9E":{"title":"结构洞","content":"\n# 结构洞\n\n指两个互不关联的关系网中，起到关联作用的点。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%99%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E6%9E%81%E7%AE%80%E9%87%91%E8%9E%8D%E8%AF%BE":{"title":"《 给年轻人的极简金融课 》","content":"\n# 《 给年轻人的极简金融课 》\n\n# 元数据\n\n\u003e [!abstract] 给年轻人的极简金融课\n\u003e - ![ 给年轻人的极简金融课|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/497/25623497/t7_25623497.jpg)\n\u003e - 书名： 给年轻人的极简金融课\n\u003e - 作者： 童哲\n\u003e - 简介： 这是一本“人人都能懂，懂了就能用”的经济金融科普书。30岁前，要不要借钱消费？该不该给自己买一份保险？租房的钱，该不该用来买房还贷？iPhone那么贵，到底值不值得买？买一瓶可乐，社会财富会增加多少？打工或者创业，到底该怎么选？什么样的人在社会中能多赚钱？通货膨胀一定不好吗？金融危机是如何产生的？所有问题背后都有金融逻辑。现代社会，除了要懂点经济学，每个人还要有金融思维，明白经济社会的运转规律，快速做出最优决策，做一个生活中的“明白人”。《给年轻人的极简金融课》通过28个生动的日常生活场景，深入浅出地解释了社会如何变富、企业如何参与社会运行、个人如何投资等问题，读者可以在获得知识的同时，立即将其应用到自己的生活中。惊喜也许就在一瞬间！在这本精彩的经济金融科普书里，你将跟随万门大学校长童哲一起，每5分钟get1个知识点，洞悉日常生活现象背后的金融逻辑，即学即用。只需2.5小时，你就可以了解金融的逻辑，在人生的关键时刻，做出最优决策。\n\u003e - 出版时间 2019-06-01 00:00:00\n\u003e - ISBN： 9787521703702\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 中信出版社\n\n# 高亮划线\n\n## 瑞典的公平和中国香港的效率，我们应选哪个\n\n- 📌 民主党注重对公平的追求，强调每个人都应该享有社会财富的获得权，因此当民主党上台时，政策就偏向于增加税收，加大对贫困人群的补助。共和党注重对效率的考虑，强调每个人应该通过自己的奋斗获得财富，因此当共和党上台时，政策就偏向减税，因为共和党的基本逻辑是通过刺激每个人的奋斗精神，让整个社会的财富总量增加。 ^25623497-8-861-1010\n    - ⏱ 2021-07-23 17:19:03\n\n## 通货膨胀一定不好吗\n\n- 📌 这便给了美元一个巨大的好处：美元变成了世界货币。本国政府印发本国货币，实际上是对本国人民征税，该税被称为“铸币税” ^25623497-20-3967-4024\n    - ⏱ 2021-07-26 14:47:26\n\n## 只有黄金才是硬通货\n\n- 📌 布雷顿森林体系的核心内容是，各国的货币和美元挂钩，美元和黄金挂钩。当时，国际确立了35美元可以换购一盎司黄金的官方标准。即其他国家可以随时拿美元向美国政府要求兑换黄金。 ^25623497-22-1285-1369\n    - ⏱ 2021-07-26 14:56:55\n\n## 打工或者创业，到底该怎么选\n\n- 📌 从心理学的角度来看，人们在决定是否去做某一件事情的时候，不仅仅会看这件事情对自己是否有好处，有多大的好处，同时也会看自己是否已经在这件事情上有所投入。如果一个人为了某件事情已经支付了一定的成本，不管是时间成本还是金钱成本，支付的成本越多，他就越不愿意放弃。但如果将这些沉没成本纳入考虑范围内，就会让抉择变得异常艰难，同时也会因为沉没成本的加入，而导致最后决策的失误。 ^25623497-26-1314-1497\n    - ⏱ 2021-07-26 15:15:13\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7s5jZyIN7  \n⏱ 2021-07-26 16:31:05\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%B4%E5%B0%94%E7%BA%B3%E6%B5%B7%E6%A3%AE%E5%A0%A1":{"title":"维尔纳·海森堡","content":"\n# 维尔纳·海森堡\n\n维尔纳·海森堡（1901 年 12 月 5 日－1976 年 2 月 1 日），德国物理学家，量子力学创始人之一，“哥本哈根学派”代表性人物。1933 年，海森堡因为“创立量子力学以及由此导致的氢的同素异形体的发现”而获得 1932 年度的诺贝尔物理学奖。他对物理学的主要贡献是给出了量子力学的矩阵形式（矩阵力学），提出了“不确定性原理”（又称“海森堡不确定性原理”）和 S 矩阵理论等。他的《量子论的物理学原理》是量子力学领域的一部经典著作。\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BB%BF%E8%93%9D%E9%97%AE%E9%A2%98":{"title":"绿蓝问题","content":"\n# 绿蓝问题\n\n#卡片/术语卡\n\n## 简介\n\n假定在某一确定时刻 t 以前所见到的绿宝石都是绿色的, 那么, 按照这一标准, 在时刻 t, 我们已往关于绿宝石所作的观察都确证“所有绿宝石都是绿色的”这一假说。然而, 同样的观察也能确证所有绿宝石都是“绿蓝的“这一假说。这里出现的新谓词“绿蓝的”被定义为: t 时刻以前是绿色的, 而 t 时刻以后是蓝色的。这样, 前述观察证据似乎同样确证了两个不一致的预见:“所有在时刻 t 以后考察的绿宝石将是绿色的”和“所有在时刻 t 以后考察的绿宝石将是蓝色的”, 这就说明: 从同样的观察出发所作出的推断 (预见) 可以是相互矛盾的, 古德曼认为, 只有当一个陈述是有规律性的意义时, 才能从它确立的事例出发获得确证, 而“所有绿宝石都是绿蓝色的”这-推断显然不具有规律性的意义\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.594454751Z","tags":null},"/%E7%BC%96%E7%A8%8B%E9%A2%98":{"title":"编程题","content":"\n# 编程题\n\n## [[实现交通灯的逻辑]]\n\n## [[设计一个LazyMan 类]]\n\n## [[实现一个批量请求函数]]\n\n## 实现 36 进制加法，不得直接使用 parselnt 转化十进制进行计算，如‘1b'+'0a'=57\n\n## 实现 sortByDept()函数，被依赖最深的元素，输出到最前\n\n```JavaScript\nsortByDept([\n    {name:'a',requires:['b','c']},\n    {name:'b',requires:['c']},\n    {name:'b',requires:['']},\n])\n// 输出：\n[\n  {name:'c',requires:['']},\n  {name:'b',requires:['c']},\n  {name:'a',requires:['b','c']},\n]\n```\n\n## [[Promise 题目]]\n\n## [[用 JS 实现一个 MVC]]\n\n## 字符串的规则解析：\n\n例子：a(b)\u003c2\u003ec 输出：abbc，a(b(c)\u003c3\u003ede)\u003c2\u003ef 输出 abcccdebcccdef；()代表重复内容，\u003c\u003e代表重复的次数\n\n```JavaScript\n\n```\n\n## [[实现一个函数将对象结构转成在树形结构]]\n\n## 实现一个函数将小驼峰转化成大驼峰\n\n## 实现超大整数相加\n\n```JavaScript\nfunction bigNumAdd (num1, num2) {\n    let res = '', carry = 0\n    num1 = `${num1}`.split('')\n    num2 = `${num2}`.split('')\n    while (num1.length || num2.length || carry) {\n        carry = ~~num1.pop() + ~~num2.pop()\n        res = (carry % 10) + res\n        carry = carry \u003e 9\n    }\n    return res\n}\n```\n\n## 将如下对象输出成指定数组\n\n```JavaScript\nvar obj = {\n    a: {\n        b: {\n            c: { f: \"aa\" }\n        },\n        d: {\n            e: { g: \"bb\" },\n            h: { i: \"cc\" }\n        },\n        j: {\n            k: \"dd\"\n        }\n    }\n}\n//预期结果 [f,g,i,c,e,h,k,b,d,j,a]\n```\n\n解：用层序遍历的思想\n\n```JavaScript\nfunction Format (obj) {\n    if (!obj) return []\n    let res = []\n    let queue = [obj]\n    while (queue.length) {\n        let arr = []\n        let length = queue.length\n        for (let i = 0; i \u003c length; i++) {\n            let curr = queue.shift()\n            for (let s in curr) {\n                if (typeof curr === 'object') {\n                    queue.push(curr[s])\n                    arr.push(s)\n                }\n            }\n        }\n        res = [...arr, ...res]\n    }\n    return res\n}\n```\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BC%AA%E5%8B%92%E8%8E%B1%E8%80%B6%E9%94%99%E8%A7%89":{"title":"缪勒莱耶错觉","content":"\n# 缪勒莱耶错觉\n\n缪勒莱耶错觉是指前提为两条长度相等的线段，假如一条线段两端加上向外的两条斜线，另一条线段两端加上向内的两条斜线，则前者要显得比后者长得多。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211221110742.png)\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E8%A1%A1%E9%87%8F%E6%A0%87%E5%87%86":{"title":"网站性能衡量标准","content":"\n# 网站性能衡量标准\n\n准确衡量网站的性能 根据 Google 在 web.dev 上公布的数据，他们认为以用户为中心的性能指标，应该能回答以下四个问题 ：\n\n\u003e web.dev 是 Google Developer 提供的开发者社区，里面主要提到了一下列出的诸多类型的数据 指标。\n\n1. 是否发生？ 导航是否成功启动？服务器是否有响应？\n2. 是否有用？ 是否已渲染可以与用户互动的足够内容？\n3. 是否可用？ 用户可以与页面交互，还是页面仍在忙于加载？\n4. 是否令人愉快？ 交互是否顺畅而自然，没有滞后和卡顿\n\n#### 是否发生\n\n当用户访问一个网站的时候，关心的第一个问题永远是“是否发生”——浏览器是否成功地把我的请求发送出去，而服务器是否已经知道并开始处理我的请求。\n\n- **[[TTFB]] (Time to First Byte) 首字节到达的时间点。**\n- **[[FP]] (First Paint) 首次绘制**，标记浏览器渲染任何在视觉上不同于导航前屏幕内容的时间点。\n- **[[FCP]] First Contentful Paint 首次内容绘制**，\n\n这是一副 FCP 和 LCP 之间的示例图  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230825101355.png)\n\n#### 是否有用\n\n当用户确定自己的请求发生了后，就会开始关心第二个问题：“是否有用？” 例如，用户在使用天气应用，在确定页面有反应了后，就开始关心，什么时候能展现有用的内容，从而 得知今天的天气。\n\n**[[LCP]] Largest Contentful Paint 最大内容绘制时间**，计算从页面开始加载到用户与页面发生交互（点击，滚动）这段时间内，最大元素绘制的时间，该时间会随着页面渲染变化而变化，因为页面中的最大元素在渲染过程中可能会发生改 变。\n\n**SI Speed Index 速度指标**，填充页面内容的速度，取开始加载到最后完成渲染，每一时刻页面未完成度的积分。\n\n#### 是否可用\n\n在用户得到了有用的信息后，用户就会基于得到的信息作出反应，这就是页面“是否可用？”例如看到了 新闻后，想要评论。TTI、FID、TBT 就是回答这些问题的指标。\n\n- ** [[TTI]] (Time to Interactive)**\n- **TBT Total Blocking Time 总共阻塞时间**，计算的是从 FCP 到 TTI 之间，主线程阻塞的总时间。阻塞时间是指单次任务占用主线程超过 50 ms 的部分。\n- **[[FID]] (First Input Delay) 首次输入延迟**，指用户首次输入到页面响应的时间。我们都知道第一印象的重要性，网站亦是如此。首次输入延迟会成为用户对网站很重要的第一印象，决定用户有可能成为忠实用户或者弃之而去。值得注意的是，FID 仅关注用户离散的操作，如点击，轻击，按键等，其他交互如滚动和缩放，并不是 FID 关注的，因为通常浏览器会用一个单独的线程来处理它们。\n\n#### 是否令人愉快\n\n使用是否流畅，有没有发生预料外的视觉偏移。\n\n- **CLS (Cumulative Layout Shift) 累计布局偏移**。测量在页面的整个生命周期中发生的每个意外的样式移动所造成的布局偏移分数的总和测试视觉稳定性上的体验，有多少内容发生了意外的偏移。\n\n#### 其他数据\n\n- 静态资源及 API 请求成功率。通常是通过 window. Performance. GetEntries ( ) 来获取相关信息\n- Page Load，页面完全加载时间。通常通过记录 window.performance.timing 中的loadEventStart 与 fetchStart 的时间差来完成。\n- 在性能监控中有一个概念叫 TP（Top Percentile），比如 TP50、TP90、TP99 和 TP999 等指标，指高于 50%、90%、99% 等百分线的情况。\n\n## 数据测量\n\n[[Performance]]\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BD%91%E9%A1%B5%E6%8D%A2%E8%82%A4":{"title":"主题色","content":"\n# 主题色\n\n开始在 全局设置好主题色变量，\n\n```less\n:root {\n      --theme_font: #fff;\n      --theme_bg: #f00;\n    }\n```\n\n点击切换按钮后切换变量\n\n```js\ndocument.styleSheets[0].cssRules[0].style.setProperty(\"--theme_font\", \"#000\")\n```\n\n# 定制布局\n\n- Reslove. Extension\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BD%97%E4%BC%AF%E7%89%B9%E8%83%A1%E5%85%8B":{"title":"罗伯特·胡克","content":"\n# 罗伯特·胡克\n\n罗伯特·胡克 FRS（英语：Robert Hooke，又译为虎克，1635 年 7 月 18 日－1703 年 3 月 3 日），英国博物学家、发明家。  \n胡克是一位伟大的科学家。\n\n- 他曾帮助[[波义耳]]发现波义耳定律，\n- 用自己的显微镜发现了植物的细胞，《显微术》更是 17 世纪最伟大的著作之一。\n- 他是杰出的建筑设计师和规划师，亲自主持了 1666 年伦敦大火后的城市重建工作，如今伦敦城中的许多著名古迹，都是从他手中留下的。\n- 在地质学方面，胡克的工作（尤其是对化石的观测）影响了这个学科整整 30 年。他发明和制造的仪器（如显微镜、空气唧筒、发条摆钟、轮形气压表等）在当时无与伦比。\n- 他所发现的弹性定律是力学最重要的定律之一。在那个时代，\n\n胡克在力学和光学方面是仅次于牛顿的伟大科学家，可是他似乎永远生活在牛顿的阴影里。\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BD%97%E9%A9%AC":{"title":"罗马的历法","content":"\n# 罗马的历法\n\n## 早期历法\n\n他们会把一年划分为十个月，每个月三十到三十一天，这样一年是三百天左右。每八天为一周，每周休息一天，每年三十八周左右。由于采用这样的日历，罗马人的一年要比一个太阳年短了两个月。长期以来，罗马人都没有一月和二月，一年是从三月份开始的，每年结束的时间也不固定，过得糊里糊涂，这样的历法显然也无法指导农业生产。\n\n历法的命名也和罗马的宗教信仰有关：\n\n- 而三月在英语中是March，这个名字其实源自于战神马尔斯（Mars）的拉丁名称。\n- 四月是April，它对应的则是爱与美的女神阿佛洛狄忒（Aphrodite）的拉丁名字。阿佛洛狄忒也被看成是春天的女神。\n- 五月（May）则是女神玛丽亚（Maia）名字的变体，她是赫尔墨斯（Hermes）之母。\n\n   \u003e 赫尔墨斯是希腊神话中的主神之一，他主管旅行。而当初，[[爱马仕]]是靠做马鞍和上面的装饰品起家的。于是，这个工匠就选了爱马仕作为自己的品牌。\n\n- 六月（June），则是罗马神话里朱庇特（Jupiter）的妻子朱诺（Juno）名字的变体。实际上，朱庇特和朱诺对应的就是希腊神话里的主神宙斯（Zeus）和他的妻子赫拉（Hera）。朱诺是婚姻的保护神，所以古罗马人认为六月是结婚的最好月份。\n- 七月份开始的月份名称就没这么多传奇故事了。如今的九月September，十月October，十一月November 和十二月December，在拉丁语里的原意分别是第七、第八、第九和第十。  \n大约公元前713年，罗马王政时期的国王努玛·庞皮留斯终于意识到这样的日历问题太大。加了前面两个月\n- 一月January，源自于罗马门神（Januarius）的名字，它意味着开始。\n- 二月（February），则来自于牺牲净化之神的名字（Februarius）。罗马人祭祀和处死犯人都在这个月，因此二月份也被认为是不详的月份，它也特别短。\n\n## 儒诺历\n\n[[恺撒]]担任罗马执政官时，他觉得这样的历法太混乱了，于是再次进行了一次历法改革。  \n儒略，就是恺撒名字尤里乌斯（Julius）的另一种翻译。\n\n- 因为一月一日是罗马执政官上任的日子，所以当时的人们就将这一天设定为一年开始的日子\n- 元老院为了纪念凯撒，将七月的名字改成了他的名字。英文中，七月July对应的拉丁文就是尤里乌斯的一种写法。\n- 从十二月十七到二十四号的农神节，才是罗马最重要的节日。我们知道罗马人原先是农耕民族，因此他们非常重视祭拜农神，\n\n[[禅让制]]\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95":{"title":"《 置身事内：中国政府与经济发展 》","content":"\n# 《 置身事内：中国政府与经济发展 》\n\n# 元数据\n\n\u003e [!abstract] 置身事内：中国政府与经济发展\n\u003e - ![ 置身事内：中国政府与经济发展|200](https://weread-1258476243.file.myqcloud.com/weread/cover/52/YueWen_40055543/t7_YueWen_40055543.jpg)\n\u003e - 书名： 置身事内：中国政府与经济发展\n\u003e - 作者： 兰小欢\n\u003e - 简介： 本书是复旦大学经济学院副教授兰小欢多年教学与研究内容的凝练，将经济学原理与中国经济发展的实践有机融合，以地方政府投融资为主线，深入浅出地论述了中国经济的发展，广泛采纳各领域学者全新研究成果。全书分上下两篇。上篇解释微观机制，包括地方政府的基本事务、收支、土地融资和开发、投资和债务等；下篇解释这些微观行为与宏观现象的联系，包括城市化和工业化、房价、地区差异、债务风险、国内经济结构失衡、国际贸易冲突等。最后一章通过对中国政治经济体系的论述，作者简明地刻画了地方政府进行经济治理的基本方式，指出中国政府通过深度介入工业化和城市化的进程，在发展经济的同时逐步推动了市场机制的建立和完善。\n\u003e - 出版时间 2021-01-01 00:00:00\n\u003e - ISBN： 9787208171336\n\u003e - 分类： 经济理财-财经\n\u003e - 出版社： 上海人民出版社\n\n# 高亮划线\n\n## 献言\n\n- 📌 社会进程本是整体，密不可分。所谓经济，不过是研究者从这洪流中人工提炼出的部分事实。何谓经济，本身已然是种抽象，而之后大脑还须经过若干抽象，方能复刻现实。没有什么事是纯粹经济的，其他维度永远存在，且往往更为重要。——约瑟夫·熊彼特《经济发展理论》 ^40055543-4-534-697\n    - ⏱ 2022-02-14 16:14:33\n\n## 前言 从了解现状开始\n\n- 📌 在我国，政府不但影响“蛋糕”的分配，也参与“蛋糕”的生产，所以我们不可能脱离政府谈经济。必须深入了解这一政治经济机体如何运作，才可能对其进行判断。 ^40055543-5-662-735\n    - ⏱ 2022-02-14 16:15:41\n- 📌 本书注重描述现实，注重解释“是什么”和“为什么”。当不可避免涉及“怎么办”的时候，则注重解释当下正在实施的政策和改革。对读者来说，了解政府认为应该怎么办，比了解“我”认为应该怎么办，重要得多。 ^40055543-5-1121-1217\n    - ⏱ 2022-02-14 16:24:56\n\n## 第一节 政府治理的特点\n\n- 📌 简单说来，党负责重大决策和人事任免，政府负责执行，但二者在组织上紧密交织、人员上高度重叠，很难严格区分。 ^40055543-8-2247-2299\n    - ⏱ 2022-02-14 16:39:33\n- 📌 这种从上到下的部门垂直关系，被称为“条条”，而横向的以行政区划为界的政府，被称为“块块”。 ^40055543-8-2903-2948\n    - ⏱ 2022-02-14 16:40:38\n- 📌 通常情况下，“条条”关系是业务关系，“块块”关系才是领导关系，因为地方党委和政府可以决定人事任免。 ^40055543-8-3010-3059\n    - ⏱ 2022-02-14 16:41:12\n- 📌 尤其当没有清楚的先例和流程时，办事人员会在部门之间“踢皮球”，或者干脆推给上级，所以权力与决策会自然而然向上集中。制度设计的一大任务就是要避免把过多决策推给上级，减轻上级负担，提高决策效率，所以体制内简化决策流程的原则之一，就是尽量在能达成共识的最低层级上解决问题。 ^40055543-8-3222-3355\n    - ⏱ 2022-02-14 16:42:27\n- 📌 在任何体制下，权力运作都受到两种约束：做事的能力及做事的意愿。前者取决于掌握的资源，后者取决于各方的积极性和主动性 ^40055543-8-4141-4198\n    - ⏱ 2022-02-14 16:43:48\n\n## 第二节 外部性与规模经济\n\n- 📌 一方面，因为规模经济，覆盖的人越多越划算，政区越大越好；另一方面，受制于人们获取这些服务的代价和意愿，政区不能无限扩大 ^40055543-9-1178-1237\n    - ⏱ 2022-02-14 16:49:36\n- 📌 第一个重要因素是人口密度。我国幅员辽阔，但人口分布极不平衡。如果从黑龙江的瑷珲（今黑河市南）到云南的腾冲之间画一条直线，把国土面积一分为二，东边占了43%的面积却住了94%的人口，而西边占了57%的面积却只住了6%的人口。(11) ^40055543-9-2778-2960\n    - ⏱ 2022-02-14 16:51:50\n- 📌 第二个重要因素是地理条件。古代交通不便，山川河流也就成了行政管理的自然边界， ^40055543-9-3636-3674\n    - ⏱ 2022-02-14 16:55:18\n- 📌 第三个重要因素是语言文化差异。汉语的方言间有差异，汉语与少数民族语言也有差异。若语言不通，政务管理或公共服务可能就需要差异化，成本会因此增加，规模收益降低，从而影响行政区域划分 ^40055543-9-3927-4015\n    - ⏱ 2022-02-14 16:55:08\n- 📌 理解了这些因素，就能理解很多政策和改革。比如，随着经济活动和人口集聚，需要打破现有的行政边界，在更大范围内提供无缝对接的标准化公共服务，所以就有了各种都市圈的规划，有些甚至上升到了国家战略，比如长三角一体化、京津冀一体化、粤港澳大湾区等。再比如，地理阻隔不利沟通，但随着基础设施互联互通，行政区划也可以简化，比如撤县设区。此外，理解了方言和文化的多样性，也就理解了推广普通话和共同的文化历史教育对维护国家统一的重要性。 ^40055543-9-4458-4667\n    - ⏱ 2022-02-14 16:56:00\n- 📌 我国经济中有个现象：处在行政交界（尤其是省交界处）的地区，经济发展普遍比较落后。省级的陆路交界线共66条，总长度5.2万公里，按边界两侧各15公里计算，总面积约156万平方公里，占国土面积的六分之一。然而，在2012年592个国家扶贫开发工作重点县中，却有超过一半位于省交界处，贫困发生率远高于非边界县。(15)这一俗称“三不管地带”的现象，也可以用公共物品规模效应和边界的理论来解释。 ^40055543-9-5182-5487\n    - ⏱ 2022-02-14 16:57:44\n- 📌 这些因素在民国时期已存在，所以“三不管地带”才为革命时期的中国共产党提供了广阔空间。家喻户晓的革命圣地井冈山，就位于湖南、江西交界处的罗霄山脉之中。其他很多著名的革命根据地也在省界处，比如陕甘宁边区、晋察冀边区、鄂豫皖边区、湘鄂赣边区等。红军长征中非常重要的“四渡赤水”，就发生在川黔滇边界的赤水河地区。(17) ^40055543-9-5984-6207\n    - ⏱ 2022-02-14 16:59:08\n- 📌 。但省界处的问题依然没有完全解决。一些省份把水污染严重的企业集中到了本省边缘的下游区域，虽然本省的平均污染水平降低了，下游省份的污染却加重了。(19) ^40055543-9-6808-6950\n    - ⏱ 2022-02-14 17:00:04\n- 📌 区域性整合的基本单位是城市，但在城市内部，首先要整合城乡。在市管县体制下，随着城市化的发展，以工业和服务业为经济支柱的市区和以农业为主的县城之间，对公共服务需求的差别会越来越大。调和不同需求、利用好有限的公共资源，就成了一大难题。改革思路有二：一是加强县的独立性和自主性，弱化其与市区的联系。第二章将展开讨论这方面的改革，包括扩权强县、撤县设市、省直管县等。二是扩张城市，撤县设区。1983—2015年，共有92个地级市撤并了134个县或县级市。(20)比如北京市原来就8个区，现在是16个，后来的8个都是由县改区，如通州区（原通县）和房山区（原房山县）。上海现有16个市辖区，青浦、奉贤、松江、金山等区也是撤县设区改革的结果。 ^40055543-9-7517-7908\n    - ⏱ 2022-02-14 17:01:28\n\n## 第三节 复杂信息\n\n- 📌 但上级不可能掌握和处理所有信息，所以很多事务实际上由下级全权处理。即使上级想干预，常常也不得不依赖下级提供的信息。比如上级视察工作，都要听取下级汇报，内容是否可靠，上级不见得知道。如果上级没有独立的信息来源，就可能被下级牵着鼻子走。 ^40055543-10-729-845\n    - ⏱ 2022-02-14 17:06:23\n- 📌 唐朝以后，“官”基本都是科举出身的读书人，下派到地方任职几年，大多根本不熟悉地方事务，所以日常工作主要依靠当地的“吏”。这些生于斯长于斯的吏，实际权力大得很，是地方治理的支柱，不但不受官员调动的影响，甚至不受改朝换代的影响。 ^40055543-10-1890-2002\n    - ⏱ 2022-02-14 17:08:37\n- 📌 信息复杂性和权力分配是个普遍性的问题，不是中国特色。在各国政府中，资深技术官僚都有信息优势，在诸多事务上比频繁更换的领导实权更大。 ^40055543-10-2214-2279\n    - ⏱ 2022-02-14 17:09:25\n- 📌 。按照国务院2012年最新的《党政机关公文处理工作条例》（以下简称《条例》），公文共分15种，既有需要下级严格执行的“决定”和“命令”，也有可以相对灵活处理的“意见”和“通知”，还有信息含量较低的“函”和“纪要”等。 ^40055543-10-2899-3007\n    - ⏱ 2022-02-14 17:10:17\n- 📌 这种“层层加码”现象的背后，既有上级层层施压和摊派的因素，也有下级为争取表现而主动加压的因素。 ^40055543-10-3697-3744\n    - ⏱ 2022-02-14 17:11:12\n- 📌 相关机构，其下属的土地管理部门根本无力防范和惩处。2006年，中央建立国家土地督察制度，在国土资源部（现改为自然资源部）设立国家土地总督察（现改为国家自然资源总督察），并向地方派驻国家土地监督局（现改为国家自然资源督察局）。这一督察机制总体上遏制了土地违法现象。但中央派驻地方的督察局只有9个，在督察局所驻城市，对土地违法的震慑和查处效果比其他城市更强，这种明显的“驻地效应”折射出督察机制受当地信息制约之影响。(27) ^40055543-10-3976-4253\n    - ⏱ 2022-02-14 17:12:13\n- 📌 大学老师考核学生一般有两种方式：考试或写论文。若考卷都是标准化的选择题，那老师虽有出题的权力，但不能决定最后得分。但若考卷都是主观题，老师给分的自由度和权力就大一些。若是研究生毕业论文，不存在严格的客观判断标准，导师手中的权力就更大了，所以研究生称导师为“老板”，而不会称其他授课教师为“老板”。 ^40055543-10-4877-5025\n    - ⏱ 2022-02-14 17:14:36\n- 📌 但大多数事情都不可能如此简单清楚，千头万绪的政府工作尤其如此：一件事该不该做？要做到什么程度？怎么样算做得好？做好了算谁的功劳？做砸了由谁负责？这些问题往往没有清楚的标准。一旦说不清楚，谁说了算？所谓权力，实质就是在说不清楚的情况下由谁来拍板决策的问题。(29) ^40055543-10-5169-5367\n    - ⏱ 2022-02-14 17:16:58\n- 📌 如果这种说不清的情况很多，权力就一定会向个人集中，这也是各地区、各部门“一把手负责制”的根源之一，这种权力的自然集中可能会造成专权和腐败。 ^40055543-10-5377-5446\n    - ⏱ 2022-02-14 17:17:13\n- 📌 因为信息复杂，不可信的信息比比皆是，而权力和责任又高度个人化，所以体制内的规章制度无法完全取代个人信任。上级在提拔下级时，除考虑工作能力外，关键岗位上都要尽量安排信得过的人。 ^40055543-10-5481-5568\n    - ⏱ 2022-02-14 17:17:34\n\n## 第四节 激励相容\n\n- 📌 上级政府想做的事大概分两类，一类比较具体，规则和流程相对明确，成果也比较容易衡量和评价。另一类比较抽象和宽泛，比如经济增长和稳定就业，上级往往只有大致目标，需要下级发挥主动性和创造性调动资源去达成。对于这两类事务，事权划分是不同的。 ^40055543-11-553-669\n    - ⏱ 2022-02-14 17:18:09\n- 📌 激励相容原则要求给地方放权：不仅要让地方负责，也要与地方分享发展成果；不仅要能激励地方努力做好，还要能约束地方不要搞砸，也不要努力过头。做任何事都有代价，最优的结果是让效果和代价匹配，而不是不计代价地达成目标。若不加约束，地方政府要实现短期经济高速增长目标并不难，可以尽情挥霍手中的资源，大肆借债、寅吃卯粮来推高增长数字，但这种结果显然不是最优的 ^40055543-11-2634-2807\n    - ⏱ 2022-02-14 17:25:26\n- 📌 激励相容原则首先要求明确地方的权利和责任。我国事权划分的一大特点是“属地管理”：一个地区谁主管谁负责，以行政区划为权责边界。这跟苏联式计划经济从上到下、以中央部委为主调动资源的方式不同。 ^40055543-11-2843-2936\n    - ⏱ 2022-02-14 17:25:53\n- 📌 要逐步将社会治安、市政交通、农村公路、城乡社区事务等受益范围地域性强、信息较为复杂且主要与当地居民密切相关的基本公共服务确定为地方的财政事权……要逐步将义务教育、高等教育、科技研发、公共文化、基本养老保险、基本医疗和公共卫生、城乡居民基本医疗保险、就业、粮食安全、跨省（区、市）重大基础设施项目建设和环境保护与治理等体现中央战略意图、跨省（区、市）且具有地域管理信息优势的基本公共服务确定为中央与地方共同财政事权，并明确各承担主体的职责。 ^40055543-11-4651-4884\n    - ⏱ 2022-02-14 17:39:22\n\n## 第五节 招商引资\n\n- 📌 这里只要了解：地方政府是城市土地的所有者，为了招商引资发展经济，会把工业用地以非常优惠的价格转让给企业使用，并负责对土地进行一系列初期开发，比如“七通一平”（通电、通路、通暖、通气、给水、排水、通信，以及平整场地）。 ^40055543-12-752-860\n    - ⏱ 2022-02-14 17:42:49\n\n## 扩展阅读\n\n- 📌 我国实行分税制，按照中央和省的分税比例，企业所得税六成归中央，剩余部分由省、市、区县来分。企业所得税减免，一般都是减免企业所在地的地方留存部分。但对一些国家支持的行业，比如集成电路，企业的全部所得税都可以“三免三减半”。 ^40055543-14-7647-7757\n    - ⏱ 2022-02-14 17:51:15\n\n## 第二章 财税与政府行为\n\n- 📌 党的十八届三中全会通过了《中共中央关于全面深化改革若干重大问题的决定》，明确了财政的定位和功能：“财政是国家治理的基础和重要支柱，科学的财税体制是优化资源配置、维护市场统一、促进社会公平、实现国家长治久安的制度保障。” ^40055543-15-772-895\n    - ⏱ 2022-02-14 17:52:23\n- 📌 而事权必然要求相应的财力支持，否则事情就办不好。所以从花钱的角度看，“事权与财力匹配”或者说“事权与支出责任匹配”这个原则，争议不大。但从预算收入的角度看，地方政府是否也应该有与事权相适应的收钱的权力，让“事权与财权匹配”，这个问题争议就大了。 ^40055543-15-1402-1524\n    - ⏱ 2022-02-14 17:53:21\n\n## 第一节 分税制改革\n\n- 📌 财政承包制下，交完了中央的，剩下的都是地方自己的，因此地方有动力扩大税收来源，大力发展经济。(2)一种做法就是大力兴办乡镇企业。乡镇企业可以为地方政府贡献两类收入。第一是交给县政府的增值税（增值税改革前也叫产品税）。企业只要开工生产，不管盈利与否都得交增值税，规模越大缴税越多，所以县政府有很强的动力做大、做多乡镇企业 ^40055543-16-1572-1808\n    - ⏱ 2022-02-14 17:56:33\n- 📌 乡镇企业为地方政府贡献的第二类收入是上缴的利润，主要交给乡镇政府和村集体作为预算外收入。 ^40055543-16-1877-1921\n    - ⏱ 2022-02-14 17:57:02\n- 📌 财政包干造成了“两个比重”不断降低：中央财政预算收入占全国财政预算总收入的比重越来越低，而全国财政预算总收入占GDP的比重也越来越低（图2-2）。不仅中央变得越来越穷，财政整体也越来越穷。 ^40055543-16-2239-2333\n    - ⏱ 2022-02-14 17:57:43\n- 📌 这段故事我上课时经常讲，但很多学生不太理解为何谈判如此艰难：只要中央做了决策，地方不就只有照办的份儿吗？“00后”一代有这种观念，不难理解。一方面，经过分税制改革后多年的发展，今天的中央政府确实要比20世纪80年代末和90年代初更加强势；另一方面，公众所接触的信息和看到的现象，大都已经是博弈后的结果，而缺少社会阅历的学生容易把博弈结果错当成博弈过程。 ^40055543-16-5853-6029\n    - ⏱ 2022-02-15 09:06:53\n\n## 第二节 土地财政\n\n- 📌 另一方面，地方可以增加预算外收入，其中最重要的就是围绕土地出让和开发所产生的“土地财政”。 ^40055543-17-580-625\n    - ⏱ 2022-02-15 09:22:58\n- 📌 所以在分税制改革后的头些年，地方政府在财政支出上向招商引资倾斜（如基础设施建设、企业补贴等），而民生支出（教育、医疗、环保等）相对不足。(16) ^40055543-17-1682-1821\n    - ⏱ 2022-02-15 09:24:39\n- 📌 我国实行土地公有制，城市土地归国家所有，农村土地归集体所有。农地要转为建设用地，必须先经过征地变成国有土地，然后才可以用于发展工商业或建造住宅（2019年《中华人民共和国土地管理法》修正案通过，对此进行了改革，详见第三章），所以国有土地的价值远远高于农地。 ^40055543-17-2513-2641\n    - ⏱ 2022-02-15 09:26:54\n- 📌 1998年发生了两件大事，城市土地的真正价值才开始显现。第一是单位停止福利分房，逐步实行住房分配货币化，商品房和房地产时代的大幕拉开。1997—2002年，城镇住宅新开工面积年均增速为26%，五年增长了近4倍。第二是修订后的《中华人民共和国土地管理法》开始实施，基本上锁死了农村集体土地的非农建设通道，规定了农地要想转为建设用地，必须经过征地后变成国有土地，这也就确立了城市政府对土地建设的垄断权力。( ^40055543-17-3228-3496\n    - ⏱ 2022-02-15 09:28:25\n- 📌 一方面，各地都补贴工业用地，大力招商引资，推动了制造业迅猛发展；另一方面，随着工业化和城市化的发展，大量新增人口涌入经济发达地区，而这些地方的住宅用地供给却不足，房价自然飞涨，带动地价飞涨，土地拍卖的天价“地王”频出 ^40055543-17-5673-5781\n    - ⏱ 2022-02-15 09:40:39\n- 📌 虽说工业用地和商住用地都由地方政府垄断，但工业企业可以落地的地方很多，所以在招商引资竞争中地方政府很难抬高地价。商住用地则不同，主要服务本地居民，土地供应方的垄断力量更强，更容易抬高地价。 ^40055543-17-6416-6510\n    - ⏱ 2022-02-15 10:07:20\n\n## 第三节 纵向不平衡与横向不平衡\n\n- 📌 分税制改革之后，中央和省分成，省也要和市县分成。可因为上级权威高于下级，所以越往基层分到的钱往往越少，但分到的任务却越来越多，出现了“财权层层上收，事权层层下压”的局面。 ^40055543-18-784-869\n    - ⏱ 2022-02-15 10:10:10\n- 📌 农村税费改革降低了农民负担，但也让本就捉襟见肘的基层财政维持起来更加艰难，所以之后的改革就加大了上级的统筹和转移支付力度。 ^40055543-18-2142-2203\n    - ⏱ 2022-02-15 10:12:02\n- 📌 其一，是把农村基本公共服务开支纳入国家公共财政保障范围，由中央和地方政府共同负担。 ^40055543-18-2238-2279\n    - ⏱ 2022-02-15 10:12:13\n- 📌 其二，是在转移支付制度中加入激励机制，鼓励基层政府达成特定目标，并给予奖励。 ^40055543-18-2563-2601\n    - ⏱ 2022-02-15 10:12:22\n- 📌 专项转移支付约占转移支付总额的四成，一般以“做项目”的形式来分配资金，专款专用，可以约束下级把钱花在上级指定的地方，但在实际操作中，这种转移支付加大了地区间的不平等。(36)经济情况越好、财力越雄厚的地区，反而可能拿到更多的专项转移支付项目，原因有三。第一，上级分配项目时一般不会“撒胡椒面儿”，而是倾向于集中财力投资大项目，并且交给有能力和条件的地区来做，所谓“突出重点，择优支持”。第二，2015年之前，许多项目都要求地方政府提供配套资金，只有有能力配套的地方才有能力承接大项目，拿到更多转移支付。(37)第三，项目审批过程中人情关系在所难免。很多专项资金是由财政部先拨款给各部委后再层层下拨，所以就有了“跑部钱进”的现象，而经济发达地区往往与中央部委的关系也更好。(38) ^40055543-18-6226-6786\n    - ⏱ 2022-02-15 10:19:32\n\n## 结语\n\n- 📌 所以土地真正的力量还不在“土地财政”，而在以土地为抵押而撬动的银行信贷与其他各路资金。“土地财政”一旦嫁接了资本市场，加上了杠杆，就成了“土地金融”，能像滚雪球般越滚越大，推动经济飞速扩张，也造就了地方政府越滚越多的债务，引发了一系列宏观经济问题。 ^40055543-19-1016-1140\n    - ⏱ 2022-02-15 10:21:01\n\n## 第三章 政府投融资与债务\n\n## 第一节 城投公司与土地金融\n\n- 📌 法律规定，地方政府不能从银行贷款，2015年之前也不允许发行债券，所以政府要想借钱投资，需要成立专门的公司。(2)这类公司大都是国有独资企业，一般统称为“地方政府融资平台”。这个名称突出了其融资和负债功能，所以经济学家和财经媒体在谈及这些公司时，总是和地方债务联系在一起。但这些公司的正式名称可不是“融资平台”，而大都有“建设投资”或“投资开发”等字样，突出自身的投资功能，因此也常被统称为“城投公司”。 ^40055543-22-1130-1409\n    - ⏱ 2022-02-15 10:42:57\n\n## 第二节 地方政府债务\n\n- 📌 这种明显违规的操作容易查处，但更重要的是那些没有明显违规举债却把钱投资到了没效益的项目上的操作，这类行为难以确定和监管。 ^40055543-23-7296-7356\n    - ⏱ 2022-02-15 11:21:08\n\n## 第三节 招商引资中的地方官员\n\n- 📌 几年前，我参加中部某市的招商动员大会，有位招商业绩不错的干部分享心得：“要对招商机会有敏感度，要做一个执着的跟踪者，不能轻言放弃。要在招商中锻炼自己，做到‘铜头、铁嘴、顺风耳、橡皮腰、茶壶肚、兔子腿’。”铜头，是指敢闯、敢创造机会；铁嘴，是指能说会道，不怕磨破嘴皮；顺风耳和兔子腿，指消息灵通且行动敏捷；茶壶肚，指能喝酒、能社交。 ^40055543-24-436-601\n    - ⏱ 2022-02-15 11:21:58\n- 📌 要理解腐败和经济发展之间的关系，关键是要理解不同腐败类型的不同影响。腐败大概可以分为两类。第一类是“掠夺式”腐败，比如对私营企业敲诈勒索、向老百姓索贿、盗用挪用公款等，这类腐败对经济增长和产权保护极其有害。随着我国各项制度和法制建设的不断完善、各种监督技术的不断进步，这类腐败已大大减少。 ^40055543-24-6091-6235\n    - ⏱ 2022-02-15 11:28:52\n- 📌 第二类腐败是“官商勾连共同发财式”腐败。比如官员利用职权把项目批给关系户企业，而企业不仅要完成项目、为官员贡献政绩，也要在私下给官员很多好处。这类腐败发生在招商引资过程中，而相关投资和建设可以促进经济短期增长，所以腐败在一段时期内可以和经济增长并存。但从经济长期健康发展来看，这类腐败会带来四大恶果。其一，长期偏重投资导致经济结构扭曲，资本收入占比高而劳动收入占比低，老百姓收入和消费增长速度偏慢。第七章会讨论这种扭曲。其二，扭曲投资和信贷资源配置，把大量资金浪费在效益不高的关系户项目上，推升债务负担和风险。第六章会讨论这种风险。其三，权钱交易扩大了贫富差距。第五章会分析不平等对经济发展的影响。其四，地方上可能形成利益集团，不仅可能限制市场竞争，也可能破坏政治生态，出现大面积的“塌方式腐败”。党的十八大以来，中央数次强调党内决不允许搞团团伙伙、拉帮结派、利益输送，强调构建新型政商关系，针对的就是这种情况。 ^40055543-24-6528-6934\n    - ⏱ 2022-02-15 11:29:36\n\n## 第四章 工业化中的政府角色\n\n- 📌 经济学的数学模型和统计数据不是讲道理的唯一形式，也不一定是最优形式，具体的案例故事常常比抽象的道理更有力量，启发更大。(1) ^40055543-27-1293-1424\n    - ⏱ 2022-02-15 16:13:00\n\n## 第一节 京东方与政府投资\n\n- 📌 行政手段造成的扭曲往往只有行政力量才能破解，但这并不意味着政府就一定该帮助国内企业进入某个行业，关键还要看国内市场规模。在一个只有几百万人口的小国，政府若投资和补贴国内企业，这些企业无法利用国内市场的规模经济来降低成本，必须依赖出口，那政府的投入实际上是在补贴外国消费者。但在我国，使用液晶屏幕的很多终端产品比如电视和手机，其全球最大的消费市场就在国内，所以液晶显示产业的外溢性极强。若本国企业能以更低的价格生产（不一定非要有技术优势，能够拉低国际厂商的漫天要价也可以），政府就可以考虑扶持本国企业进入，这不仅能打破国际市场的扭曲和垄断，还可以降低国内下游产业的成本，促进其发展。(15) ^40055543-28-7431-7794\n    - ⏱ 2022-02-15 16:22:25\n- 📌 一旦行业集聚形成，企业自身的规模经济效应就会和行业整体的规模经济效应叠加，进一步降低运输和其他成本。 ^40055543-28-8617-8667\n    - ⏱ 2022-02-15 16:24:53\n- 📌 这就好比学生学习写论文，不自己动手研究、动手做、动手写，只靠阅读别人的东西，理解永远只能停留在表面，停留在知识消费的层次，不可能产出新知。就算全天下的论文和书籍都摆在面前，一个人也不会自动成为科学家。 ^40055543-28-9518-9618\n    - ⏱ 2022-02-15 16:27:36\n- 📌 强调自主创新不是提倡闭关锁国。当然没必要所有事情都亲力亲为，况且贸易开放也是学习的捷径，和独立自主并不矛盾。(20) ^40055543-28-9653-9780\n    - ⏱ 2022-02-15 16:28:06\n- 📌 新兴制造业在地理上的集聚效应很强，因为扎堆生产可以节约原材料和中间投入的运输成本，而且同行聚集在一起有利于知识和技术交流，外溢效应很强。因此产业集群一旦形成，自身引力会不断加强，很难被外力打破 ^40055543-28-11487-11583\n    - ⏱ 2022-02-15 16:29:43\n- 📌 但在产业发展早期，究竟在哪个城市形成产业集群，却有很多偶然因素。(27)大部分新兴制造业对自然条件要求不高，不会特别依赖先天自然资源，而且我国基础设施发达，物流成本低，所以一些内陆的中心城市虽然没有沿海城市便利，但条件也不是差很多。这些城市若能吸引一些行业龙头企业落户，就有可能带来一大片相关企业，在新兴产业的发展中占得一席之地，比如合肥的京东方和郑州的富士康等。 ^40055543-28-11584-11845\n    - ⏱ 2022-02-15 16:29:57\n\n## 第二节 光伏发展与政府补贴\n\n- 📌 从光伏产业的发展来看，政府的支持和补贴与企业成功不存在必然的因果关系。欧美日等先进国家不仅起步早、政府补贴早，而且企业占据技术、原料和设备优势，在和中国企业的竞争中还借助了“双反”等一系列贸易保护政策，但它们的企业最终衰落，纷纷退出市场。无论是补贴也好、贸易保护也罢，政策最多可以帮助企业降低一些财务风险和市场风险，但政府不能帮助企业克服最大的不确定性，即在不断变化的市场中发展出足够的能力和竞争优势。 ^40055543-29-6423-6624\n    - ⏱ 2022-02-15 16:39:41\n- 📌 像我国这样的大国，要应对的国际局势变幻比小国更加复杂，所以不断扩大和稳定国内市场，才是行业长期发展的基础。另一方面，若地方政府利用行政手段阻碍落后企业破产，就会阻碍优胜劣汰和效率提升，加剧产能过剩的负面影响。 ^40055543-29-7076-7180\n    - ⏱ 2022-02-15 16:44:26\n- 📌 市场经济的根本优势是可以不断试错，在竞争中优胜劣汰。(45)能保持竞争性的产业政策，与只扶持特定企业的政策相比，效果往往更好。(46) ^40055543-29-9199-9414\n    - ⏱ 2022-02-15 16:50:17\n- 📌 所以产业政策要有退出机制，若效率低的企业不能退出，“竞争性”就是一句空话。“退出机制”有两层含义。第一是政策本身要设计退出机制。比如光伏的“标杆电价”补贴，一直在降低，所有企业都非常清楚补贴会逐渐退出，平价上网时代终会来临，所以有动力不断提升效率和降低成本。第二是低效企业破产退出的渠道要顺畅。这不仅涉及产业政策，也涉及更深层次的要素配置市场化改革。如果作为市场主体和生产要素载体的企业退出渠道不畅，要素配置的市场化改革也就难以深化。然而“破产难”一直是我国经济的顽疾。一方面，债权银行不愿走破产程序，因为会暴露不良贷款，无法再掩盖风险；另一方面，地方政府也不愿企业（尤其是大企业）走破产程序，否则职工安置和民间借贷等一系列矛盾会公开化。在东南沿海等市场化程度较高的地区，破产程序相对更加规范。 ^40055543-29-10090-10437\n    - ⏱ 2022-02-15 16:55:29\n\n## 第三节 政府产业引导基金\n\n- 📌 出钱的人叫“有限合伙人”（limited partner，以下简称LP），管钱和投资的人叫“普通合伙人”（general partner，以下简称GP）。LP把钱交给GP投资和运作，同时付给GP两种费用：一种是基本管理费。一般是投资总额的2%，无论亏赚，每年都要交。另一种是绩效提成，行话叫“carry”。若投资赚了钱，GP要先偿还LP的本金和事先约定的基本收益（一般为8%），若还有多余利润，GP可从中提成，一般为20%。 ^40055543-30-1209-1421\n    - ⏱ 2022-02-15 16:58:16\n- 📌 与地方政府投资企业的传统方式相比，产业引导基金或投资基金有三个特点。第一，大多数引导基金不直接投资企业，而是做LP，把钱交给市场化的私募基金的GP去投资企业 ^40055543-30-3051-3129\n    - ⏱ 2022-02-15 17:00:35\n- 📌 这些政策出台前后，上海和深圳的交易所也做了很多改革，拓宽了上市渠道。2004年和2009年，中小企业板和创业板分别在深交所开板。2013年，新三板扩容全国。2019年，科创板在上交所开市，并试行注册制。国内上市渠道拓宽后，改变了过去股权投资机构“两头在外”（海外募资，海外上市、退出）的尴尬格局。 ^40055543-30-7247-7395\n    - ⏱ 2022-02-15 17:07:36\n- 📌 而“十三五”关于发展战新产业的规划也鼓励地方以产业链和创新协同发展为途径，发展特色产业集群，带动区域经济转型，形成创新经济集聚发展新格局。 ^40055543-30-8585-8654\n    - ⏱ 2022-02-15 17:09:19\n\n## 第一节 房价与居民债务\n\n- 📌 房地产常被称作“经济周期之母”，根源就在于其内在的供需矛盾：一方面，银行可以通过按揭创造几乎无限的新购买力；而另一方面，不可再生的城市土地供给却有限。这对矛盾常常会导致资产泡沫与破裂的周期循环，是金融和房地产不稳定的核心矛盾。而房地产不仅连接着银行，还连接着千家万户的财富和消费，因此影响很大。 ^40055543-35-5174-5321\n    - ⏱ 2022-02-15 17:47:02\n- 📌 我国房价和居民债务的上涨虽然也会引发很多问题，但不太可能突发美国式的房贷和金融危机。首先，我国住房按揭首付比例一般高达30%，而不像美国在金融危机前可以为零，所以银行风险小。除非房价暴跌幅度超过首付比例，否则居民不会违约按揭，损失掉自己的首付。 ^40055543-35-8704-8826\n    - ⏱ 2022-02-15 17:55:48\n- 📌 其次，住房按揭形成的信贷资产，没有被层层嵌套金融衍生品，在金融体系中来回翻滚，规模和风险被放大几十倍。 ^40055543-35-8936-8987\n    - ⏱ 2022-02-15 17:55:57\n- 📌 再次，由于资本账户管制，外国资金很少参与我国的住房市场。综上所述，像美国那样由房价下跌引发大量按揭违约，并触发衍生品连锁雪崩，再通过金融市场扩散至全球的危机，在我国不太可能会出现。 ^40055543-35-9138-9228\n    - ⏱ 2022-02-15 17:56:14\n\n## 第二节 不平衡与要素市场改革\n\n- 📌 若人口不能自由流动，被限制在农村或经济落后地区，那人与人之间的收入差距就会拉大，地区和城乡间的收入差距也会拉大。目前，我国人口流动依然受限，以地方政府投资为主推动的城市化和经济发展模式是重要因素之一。重土地轻人，民生支出不足，相关公共服务（教育、医疗、养老等）供给不足，不利于外来人口在城市中真正安家落户，不利于农村转移劳动力在城市中谋求更好的发展。地方政府长期倚重投资，还会导致收入分配偏向资本，降低劳动收入占比，对中低收入人群尤其不利。 ^40055543-36-925-1145\n    - ⏱ 2022-02-15 17:57:48\n- 📌 2017年，中央政府提出，“在租赁住房供需矛盾突出的超大和特大城市，开展集体建设用地上建设租赁住房试点”。(27)这是一个体制上的突破，意味着城市政府对城市住宅用地的垄断将被逐渐打破。2019年，第一批13个试点城市选定，既包括北、上、广等一线城市，也包括沈阳、南京、武汉、成都等二线城市。(28)同年，《土地管理法》修正案通过，首次在法律上确认了集体经营性建设用地使用权可以直接向市场中的用地者出让、出租或作价出资入股，不再需要先行征收为国有土地。农村集体经营性用地与城市国有建设用地从此拥有了同等权能，可以同等入市，同权同价，城市政府对土地供应的垄断被打破了。 ^40055543-36-5009-5451\n    - ⏱ 2022-02-15 18:08:32\n- 📌 户籍制度改革近两年开始加速。2019年，发改委提出：“城区常住人口100万—300万的Ⅱ型大城市要全面取消落户限制；城区常住人口300万—500万的Ⅰ型大城市要全面放开放宽落户条件，并全面取消重点群体落户限制。超大特大城市要调整完善积分落户政策，大幅增加落户规模、精简积分项目，确保社保缴纳年限和居住年限分数占主要比例。……允许租赁房屋的常住人口在城市公共户口落户。”(31) ^40055543-36-6352-6610\n    - ⏱ 2022-02-15 18:10:11\n- 📌 城市化的核心不应该是土地，应该是人。要实现地区间人均收入均衡、缩小贫富差距，关键也在人。 ^40055543-36-7072-7116\n    - ⏱ 2022-02-15 18:11:00\n- 📌 2020年4月发布的《中共中央　国务院关于构建更加完善的要素市场化配置体制机制的意见》（以下简称《意见》），全面阐述了包括土地、劳动力、资本、技术等生产要素的未来改革方向。针对土地，《意见》强调“建立健全城乡统一的建设用地市场……制定出台农村集体经营性建设用地入市指导意见”。针对劳动力，要求“深化户籍制度改革。推动超大、特大城市调整完善积分落户政策，探索推动在长三角、珠三角等城市群率先实现户籍准入年限同城化累计互认。放开放宽除个别超大城市外的城市落户限制，试行以经常居住地登记户口制度。建立城镇教育、就业创业、医疗卫生等基本公共服务与常住人口挂钩机制，推动公共资源按常住人口规模配置。”总的改革方向，就是让市场力量在各类要素分配中发挥更大作用，让资源更加自由流动，提高资源利用效率。 ^40055543-36-7248-7619\n    - ⏱ 2022-02-15 18:19:09\n\n## 第三节 经济发展与贫富差距\n\n- 📌 收入差距不可能完全消除，但社会也无法承受过大的差距所带来的剧烈冲突，因此必须把不平等控制在可容忍的范围之内。影响不平等容忍程度的因素有很多，其中最重要的是经济增速，因为经济增速下降首先冲击的是穷人收入。不妨想象正在排队的两队人，富人队伍前进得比穷人快，但穷人队伍也在不停前进，所以排队的穷人相对来说比较有耐心。但如果穷人的队伍完全静止不动，哪怕富人队伍的前进速度也减慢了，困在原地的穷人也会很快失去耐心而骚动起来。这种现象被称为“隧道效应”（tunnel effect），形容隧道中两条车道一动一静时，静的那条的焦虑和难耐。(40) ^40055543-37-3670-4006\n    - ⏱ 2022-02-15 18:31:47\n- 📌 经济学中有一条非常有名的“库兹涅茨曲线”，宣称收入不平等程度会随着经济增长先上升而后下降，呈现出“倒U形”模式。这条在20世纪50年代声名大噪的曲线，其实不过是一些欧美国家在“二战”前后那段特殊时期中的特例。一旦把时间拉长、样本扩大，数据中呈现的往往不是“倒U形”，而是贫富差距不断起起伏伏的“波浪形”。(43)造成这些起落的因素很多，既有内部的也有外部的，既有经济的也有政治的。并没有什么神秘的经济力量会自动降低收入不平等，“先富带动后富”也不会自然发生，而需要政策的干预。不断扩大的不平等会让社会付出沉重的代价，必须小心谨慎地对待。(44) ^40055543-37-5420-5842\n    - ⏱ 2022-02-15 18:34:07\n\n## 结语\n\n- 📌 我国的城市化大概可以分为三个阶段。第一阶段是1994年之前，乡镇企业崛起，农民离土不离乡，城市化速度不快。第二阶段是1994年分税制改革后，乡镇企业式微，农民工进城大潮形成。这个阶段的主要特征是土地的城市化速度远远快于人的城市化速度，土地撬动的资金支撑了大规模城市建设，但并没有为大多数城市新移民提供应有的公共服务。第三个阶段是党的十八大以后，随着一系列改革的陆续推行，城市化的重心开始逐步从“土地”向“人”转移。 ^40055543-38-424-631\n    - ⏱ 2022-02-15 18:40:21\n- 📌 所以城市化需要转型，以人为本，为人们提供必要的住房、教育、医疗等公共资源。 ^40055543-38-1071-1108\n    - ⏱ 2022-02-15 18:43:15\n\n## 第二节 债台为何高筑：欧美的教训\n\n- 📌 债务源于人性：总想尽早满足欲望，又对未来盲目乐观，借钱时总觉得将来能还上。但人性亘古不变，债务周期却有起有落，每一次起伏都由特定的外部因素推动，这些因素会引发乐观情绪、刺激人们借债，也会增加资金供给、为借债大开方便之门。 ^40055543-42-438-548\n    - ⏱ 2022-02-15 18:54:55\n- 📌 2018年，中美双边贸易逆差约4 000亿美元，也就是说美国需要从全世界借入4 000亿美元来为它从中国额外的进口买单，其中最主要的债主就是中国和其他东亚国家。 ^40055543-42-4167-4247\n    - ⏱ 2022-02-15 19:44:24\n\n## 第三节 中国的债务与风险\n\n- 📌 所以如果优良的抵押物（住房和土地）越来越多，或者有政府信用担保的企业越来越多，那银行就有动力不断扩大信贷规模。 ^40055543-43-7154-7209\n    - ⏱ 2022-02-16 10:27:00\n- 📌 银行是金融体系核心，规模大，杠杆高，又涉及千家万户的储蓄，牵一发动全身，所以受严格监管。若某房地产企业愿意用10%的利息借钱，银行想借，但我国严格限制银行给房企的贷款量，怎么办？银行可以卖给老百姓一个理财产品，利息5%，再把筹来的钱委托给信托公司，让信托公司把钱借给房企。在这笔“银信合作”业务中，发行的理财产品不算银行储蓄，委托给信托公司的投资不算银行贷款，所以这笔“表外业务”就绕开了对银行的监管，是一种“影子银行”业务。 ^40055543-43-7466-7679\n    - ⏱ 2022-02-16 10:27:48\n- 📌 此外，银行理财产品虽然表面上不在银行资产负债表中，银行既不保本也不保息，但老百姓认为银行要负责，而银行也确实为出问题的产品兜过底。这种刚性兑付的压力加大了银行和金融机构的风险。 ^40055543-43-8076-8164\n    - ⏱ 2022-02-16 10:29:10\n\n## 第四节 化解债务风险\n\n- 📌 我国目前的货币政策比较谨慎，国务院和央行都数次明确表态不搞“大水漫灌”，“不搞竞争性的零利率或量化宽松政策”。(41)主要原因可能有二：第一，政府不愿看到宽松的货币政策再次推高房价，“房住不炒”是个底线原则；第二，货币政策治标不治本，无法从根本上解决债务负担背后的经济增速放缓问题，因为这是结构性的问题，是地方政府推动经济发展的模式问题。 ^40055543-44-3395-3644\n    - ⏱ 2022-02-16 10:39:45\n\n## 第七章 国内国际失衡\n\n- 📌 这些巨大的成功背后，也隐藏着两重问题。第一是内部经济结构失衡：重生产、重投资，相对轻民生、轻消费，导致与巨大的产能相比，国内消费不足，而消化不了的产品只能对外输出。这就带来了第二个问题：国外需求的不稳定和贸易冲突。过去20年，世界制造业中我国的占比从5%上升到28%，对应的是“七国集团”占比从62%下降到37%，而所有其他国家占比几乎没有变化（图7-1）。这背后不仅是中国经济面貌翻天覆地的变化，也是发达国家经济结构的巨大变化。面对剧烈调整，出现贸易冲突甚至贸易战，一点也不奇怪。 ^40055543-47-1677-1918\n    - ⏱ 2022-02-16 10:58:38\n\n## 第一节 低消费与产能过剩\n\n- 📌 虽然房价上涨会增加有房者的财富，理论上可能刺激消费，降低储蓄，但大多数房主只有一套房，变现能力有限，消费水平主要还是受制于收入，房价上升的“财富效应”并不明显。所以整体上看，房价上升拉低了消费，提高了储蓄。(6) ^40055543-48-3060-3236\n    - ⏱ 2022-02-16 11:05:49\n- 📌 居民消费不足不仅是因为储蓄率高，能省，也是因为确实没钱。从21世纪初开始，在整个经济蛋糕的分配中，居民收入的份额就一直在下降，最多时下降了10个百分点，之后又反弹回来5个百分点（图7-3）。 ^40055543-48-3807-3902\n    - ⏱ 2022-02-16 11:06:46\n- 📌 针对居民收入占比过低的问题，党的十九大提出要“提高就业质量和人民收入水平”，并明确了如下原则：“破除妨碍劳动力、人才社会性流动的体制机制弊端，使人人都有通过辛勤劳动实现自身发展的机会。完善政府、工会、企业共同参与的协商协调机制，构建和谐劳动关系。坚持按劳分配原则，完善按要素分配的体制机制，促进收入分配更合理、更有序。鼓励勤劳守法致富，扩大中等收入群体，增加低收入者收入，调节过高收入，取缔非法收入。坚持在经济增长的同时实现居民收入同步增长、在劳动生产率提高的同时实现劳动报酬同步提高。拓宽居民劳动收入和财产性收入渠道。履行好政府再分配调节职能，加快推进基本公共服务均等化，缩小收入分配差距。” ^40055543-48-7380-7726\n    - ⏱ 2022-02-16 11:12:44\n- 📌 虽然从会计核算角度讲，投资确实可以提升当下的GDP数字，但若投资形成的资产不能提高生产率、带来更高的收入，不能成为未来更高的消费，这种投资就没有形成实质性的财富，就是浪费。 ^40055543-48-9461-9547\n    - ⏱ 2022-02-16 11:22:49\n- 📌 当然，国内和国际是一体两面，国内失衡会导致国际失衡，而国际失衡反过来也可以导致国内失衡。我国国内失衡，生产多消费少，必须向外输出剩余。但反过来看，美国人大手支出，高价向我国购买，我国的相应资源也会从本国消费者向出口生产企业转移，以满足外国需求，这就加剧了国内的消费和生产失衡。 ^40055543-48-10519-10657\n    - ⏱ 2022-02-16 11:26:41\n\n## 第二节 中美贸易冲突\n\n- 📌 然而在民粹主义和反全球化情绪爆发的年代，讲道理没人听。失业的原因有很多，技术进步、公司管理不善、市场需求变化等。但如今不少美国人，似乎普遍认为“全球化”才是祸根，“贸易保护”才是良方。 ^40055543-49-3295-3387\n    - ⏱ 2022-02-16 11:35:02\n- 📌 而从制造业环节切入全球产业链分工，也是非常正确的方式，因为制造业不仅有学习效应，还有很强的集聚效应和规模效应。 ^40055543-49-5499-5554\n    - ⏱ 2022-02-16 15:16:40\n- 📌 在A股市场上，早有所谓的“果链概念”，包括制造iPhone后盖的蓝思科技、摄像头模组的欧菲光、发声单元的歌尔股份、电池的德赛电池等上市公司。 ^40055543-49-6147-6217\n    - ⏱ 2022-02-16 15:17:19\n\n## 第三节 再平衡与国内大循环\n\n- 📌 要提高居民收入，就要继续推进城市化，让人口向城市尤其是大城市集聚。虽然制造业是生产率和科技进步的主要载体，但从目前的技术发展和发达国家的经验看，制造业的进一步发展吸纳不了更多就业。 ^40055543-50-952-1042\n    - ⏱ 2022-02-16 15:19:24\n- 📌 所以解决就业和提高收入必须依靠服务业的大发展，而这只能发生在人口密集的城市中。不仅传统的商铺和餐馆需要人流支撑，新兴的网约车、快递、外卖等都离不开密集的人口。要继续推进城市化，必须为常住人口提供相应的公共服务，让他们在城市中安居乐业。这方面涉及的要素市场改革，包括户籍制度和土地制度的改革， ^40055543-50-1144-1289\n    - ⏱ 2022-02-16 15:20:50\n- 📌 世上从来没有抽象的、畅通无阻的市场。市场从建立到完善，其规模和效率都需要逐步提升，完善的市场本就是经济发展的结果，而不是前提。我国疆域广阔、人口众多，建立和打通全国统一的商品和要素市场，实现货物和人的互联互通，难度不亚于一次小型全球化，需要多年的建设和制度磨合。 ^40055543-50-2315-2446\n    - ⏱ 2022-02-16 15:24:09\n\n## 第八章 总结：政府与经济发展\n\n- 📌 正如在本书开篇引用的哈佛大学经济史家格申克龙的话：“一套严格的概念框架无疑有助于厘清问题，但也经常让人错把问题当成答案。社会科学总渴望发现一套‘放之四海而皆准’的方法和规律，但这种心态需要成熟起来。不要低估经济现实的复杂性，也不要高估科学工具的质量。” ^40055543-53-1184-1310\n    - ⏱ 2022-02-16 15:30:57\n- 📌 强调政府的作用，当然不是鼓吹计划经济。过去苏联式的计划经济有两大特征。第一是只有计划，否认市场和价格机制，也不允许其他非公有制成分存在。第二是封闭，很少参与国际贸易和全球化。如今这两个特点早已不复存在，硬谈中国为计划经济，离题万里。 ^40055543-53-1930-2046\n    - ⏱ 2022-02-16 15:32:52\n\n## 第一节 地区间竞争\n\n- 📌 在工业化进程中搞地方竞争，前提是大多数地区的工业基础不能相差太远，否则资源会迅速向占绝对优势的地区集聚，劣势地区很难发展起来。 ^40055543-54-1504-1567\n    - ⏱ 2022-02-16 15:35:41\n- 📌 “官场+市场”的竞争体制，可以帮助理解我国经济的整体增长，但这种体制的运行效果，各地差异很大。官员或政府间的竞争，毕竟不是市场竞争，核心差别有三。第一，缺乏真正的淘汰机制。地方政府就算不思进取，也不会像企业一样倒闭。政绩不佳的官员虽然晋升机会可能较少，但只要不违法乱纪，并不会因投资失败或经济低迷而承担个人损失。第二，绝大多数市场竞争是“正和博弈”，有合作共赢、共同做大蛋糕的可能。而官员升迁则是“零和博弈”，晋升位置有限，甲上去了，乙就上不去。所以在地区经济竞争中会产生地方保护主义，甚至出现“以邻为壑”的恶性竞争现象。第三，市场和公司间的竞争一般是长期竞争，延续性很强。但地方官员任期有限，必须在任期内干出政绩，且新官往往不理旧账，因此会刺激大干快上的投资冲动，拉动地区GDP数字快速上涨，不惜忽视长期风险和债务负担。 ^40055543-54-4079-4440\n    - ⏱ 2022-02-16 15:40:20\n\n## 第二节 政府的发展与转型\n\n- 📌 从国防到社会治安，从基础设施到基本社会保障，都要花钱，所以有效的政府必须要有足够的收入。可收税从来都不容易，征税和稽查能力也需要长期建设，不断完善。就拿征收个人所得税来说，政府要有能力追踪每个人的各种收入，能核实可以抵扣的支出，能追查和惩处偷税漏税行为。这需要强大的信息追踪和处理能力。即便在以个人所得税为最主要税种的欧美发达国家，足额收税也是个难题。 ^40055543-55-2232-2408\n    - ⏱ 2022-02-16 15:47:36\n- 📌 在更加复杂的大国比如中国，两种状况都存在。既有在国际竞争中脱颖而出的杰出企业，也有各种骗补和寻租的低效企业。这种结果上的差异，源于各国和各地政商关系的差异。所谓强力政府，不仅在于它有能力和资源支持企业发展，也在于它有能力拒绝对企业提供帮助。(15) ^40055543-55-4407-4601\n    - ⏱ 2022-02-16 15:58:29\n\n## 第三节 发展目标与发展过程\n\n- 📌 在我国，可行的政策空间和演变路径受三大制度约束：农村集体所有制、城市土地公有制、户籍制度。 ^40055543-56-2283-2328\n    - ⏱ 2022-02-16 16:10:57\n- 📌 可行的政策不仅受既有制度的约束，也受既有利益的约束。政策方案的设计，必须考虑到利益相关人和权力持有者的利益。既要提高经济效率，也要保证做决策的人或权力主体的利益不受巨大损害，否则政策就难以推行。(21)可行的经济政策是各种利益妥协的结果，背后是各国特殊的政治体制和议程。在这个过程中，不仅激励相容的机制重要，文化的制约也重要。比如政治经济学中有个重要概念叫“精英俘获”（elite capture），一个例子就是地方政治精英被地方利益集团俘获，损害民众利益 ^40055543-56-2434-2742\n    - ⏱ 2022-02-16 16:13:52\n- 📌 另一个例子是自由贸易和保护主义的冲突。支持自由贸易的概念和理论，几乎算是经济学中最强有力的逻辑，但往往也突破不了现实利益的枷锁。只要学过经济学，都知道比较优势和自由贸易能让国家整体得益。但整体得益不等于让每个人都得益。从理论上讲，即便有人受损，也该支持自由贸易，因为整体得益远大于部分损失，只要从受益方那里拿一点利益出来，就足够补偿受损方且有余。但在现实中，补偿多少？怎么补偿？往往涉及复杂的政治博弈。补偿可能迟迟落实不到位，最终是受益者得益越来越多，而受损者却屡遭打击。虽说平均值是变好了，但那些受损的人的生活不是理论上的平均数字，他们会为了自己的利益而反抗和行动，这是保护主义的根源。(22) ^40055543-56-2847-3215\n    - ⏱ 2022-02-16 16:14:34\n- 📌 改革方向和改革过程是两回事。就算每个人都对改革方向和目的有共识（事实上不可能），但对改革路径和步骤也会有分歧。什么事先办，什么事后办，不容易决定。每一步都有人受益、有人受损，拼命争取和拼命抵制的都大有人在。 ^40055543-56-3408-3511\n    - ⏱ 2022-02-16 16:45:39\n- 📌 经济发展必然要改变旧有的生活方式，重新分配利益，所以必然伴随着矛盾和冲突。政府的关键作用之一，就是调控改变速度的快慢。社会变化过程快慢之间，对身处其中的人而言，感受天差地别。对于环境的变化，人们需要时间去适应。人不是机器部件，不可能瞬间调整，也没有人能一直紧跟时代，所以稳定的改革过程要留下足够的时间和资源去缓冲。这种“渐进性改革”中的各种缓冲机制，往往会拖低效率，所以常常被解读为“扭曲”和“资源错配”。但任何成功的转型过程都离不开缓冲机制。 ^40055543-56-3855-4077\n    - ⏱ 2022-02-16 16:46:38\n\n## 结语\n\n- 📌 无论如何，经济学的主要作用仍是发现和提出问题，而解决问题的具体方案只能在实践中摸索和产生。学术的这一“提问”作用不应被夸大，也不应被贬低。世事复杂，逻辑和理论之外的不可控因素太多，所以具体问题的解决方案，只能在实践中不断权衡、取舍、调整、改进。但发现和提出好的问题，是解决问题的第一步，且“提问”本身，往往已蕴含了对解决思路的探索。切中要害的问题，必然基于对现实情况的深刻理解。因此，无论是理论家还是实践者，“实事求是”和“具体问题具体分析”都是不会过时的精神。 ^40055543-57-936-1167\n    - ⏱ 2022-02-17 09:44:37\n\n# 读书笔记\n\n## 第一节 政府治理的特点\n\n### 划线评论\n\n- 📌 汗牛充栋 ^16142247-7x47hby5L\n    - 💭 用牛运书，牛要累得出汗；用屋子放书，要堆到屋顶（栋：脊檩）。形容藏书非常多。\n    - ⏱ 2022-02-14 16:38:09\n   \n\n## 第三节 纵向不平衡与横向不平衡\n\n### 划线评论\n\n- 📌 总体来看，分税制改革后，基层财政出现了不少困难，引发了一系列后续改革，最终涉及了财税体制的层级问题。到底要不要搞扁平化，学发达国家搞三级财政？是不是每个省都应该搞？对于相关改革效果和未来方向，目前仍有争议。 ^16142247-7x5eyCddv\n    - 💭 从这来看，我一直觉得温州是人富而政府穷，其实不是个例，甚至在外省更加严重\n    - ⏱ 2022-02-15 10:15:59\n   \n\n## 第三章 政府投融资与债务\n\n### 划线评论\n\n- 📌 地方政府还可以把与土地相关的未来收入资本化，去获取贷款和各类资金，将“土地财政”的规模成倍放大为“土地金融”。 ^16142247-7x5g0oHvD\n    - 💭 所以就有了买一个城市的房产就是持有一个城市的股票的观点\n    - ⏱ 2022-02-15 10:38:06\n   \n\n## 第二节 光伏发展与政府补贴\n\n### 划线评论\n\n- 📌 尤其是，我国地方政府有强烈的“大项目”偏好，会刺激企业扩张投资。企业一旦做大，就涉及就业、稳定和方方面面的利益，不容易破产重组。这在曾经的光伏巨头——江西赛维的破产重整案中表现得淋漓尽致。 ^16142247-7x5EszhKT\n    - 💭 所以现在政策偏向扶持专精特新了~\n    - ⏱ 2022-02-15 16:51:29\n   \n\n## 第二节 债台为何高筑：欧美的教训\n\n### 划线评论\n\n- 📌 “特里芬悖论” ^16142247-7x5Q8EIOz\n    - 💭 特里芬困境，或特里芬悖论、特里芬难题[1]。是一种理论：当一个国家的货币同时作为国际储备货币时，有可能造成国内短期经济目标和国际长期经济目标的利益冲突。这困境最早是由比利时裔美国经济学家罗伯特·特里芬在1960年代提出。他指出，当外国想持有该国货币（全球储备货币）时，该国必须愿意提供额外货币供应，以满足世界对于这个“储备”货币的需求（外汇储备），从而导致贸易赤字。\n\n使用国家的货币（如美元）作为全球储备货币，导致国家的货币政策和全球货币政策之间的紧张关系。这反映在根本的国际收支失衡，特别是经常收支：有些目标需要美元总体流出美国，而有些则需要美元总体流入美国。同等程度的货币流入和流出不能同时发生。\n\n特里芬困境通常用来表述美元在布雷顿森林体系下作为储备货币的问题，或更普遍的使用任何国家的货币作为国际储备货币的问题。  \n    - ⏱ 2022-02-15 19:49:49\n\n   \n\n## 第二节 政府的发展与转型\n\n### 划线评论\n\n- 📌 华盛顿共识 ^16142247-7x76pZyhp\n    - 💭 华盛顿共识（Washington Consensus），1989年所出现的、一整套针对拉美国家和东欧转轨国家的、新自由主义的政治经济理论。是社会主义转向资本主义社会的最初级版本。当华盛顿共识逐渐走向失败，宏观经济理论界提出了与此相对的北京共识。美国国际经济研究所的约翰·威廉姆森（John Williamson）对拉美国家的国内经济改革提出了已与上述各机构达成共识的10条政策措施，称作华盛顿共识。\n\n该共识包括十个方面：  \n①加强财政纪律，压缩财政赤字，降低通货膨胀率，稳定宏观经济形势；  \n②把政府开支的重点转向经济效益高的领域和有利于改善收入分配的领域（如文教卫生和基础设施）；  \n③开展税制改革，降低边际税率，扩大税基；  \n④实施利率市场化；  \n⑤采用一种具有竞争力的汇率制度；  \n⑥实施贸易自由化，开放市场；  \n⑦放松对外资的限制；  \n⑧对国有企业实施私有化；  \n⑨放松政府的管制；  \n⑩保护私人财产权。  \n    - ⏱ 2022-02-16 15:45:03\n\n### 划线评论\n\n- 📌 瓦格纳法则 ^16142247-7x76hgNKe\n    - 💭 当国民收入增长时，财政支出会以更大比例增长。随着人均收入水平的提高，政府支出占GNP的比重将会提高，这就是财政支出的相对增长，这一思想是瓦格纳提出的，又被后人归纳为瓦格纳法则。\n    - ⏱ 2022-02-16 15:42:54\n   \n\n# 本书评论\n\n## 书评 No.1\n\n引用结语:生活过得好一点，比大多数宏伟更宏伟。 ^16142247-7x8hQ3WxY  \n⏱ 2022-02-17 10:26:06\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BE%8E%E5%89%A7":{"title":"美剧","content":"\n《兄弟连》\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BE%8E%E5%9B%BD":{"title":"美国","content":"\n# 美国\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BE%8E%E5%9B%BD%E7%A7%8D%E6%97%8F%E7%AE%80%E5%8F%B2":{"title":"《 美国种族简史 》","content":"\n# 《 美国种族简史 》\n\n# 元数据\n\n\u003e [!abstract] 美国种族简史\n\u003e - ![ 美国种族简史|200](https://weread-1258476243.file.myqcloud.com/weread/cover/6/YueWen_189525/t7_YueWen_189525.jpg)\n\u003e - 书名： 美国种族简史\n\u003e - 作者： 托马斯·索威尔\n\u003e - 简介： 罗永浩倾力推荐！为什么今天还要回顾一个国家的种族历史，反思各种族在同一片土地上的生存状况，即使在建国已有两百多年的美国，在种族已经实现了“平等”的今天。人是社会性的动物，追求集体感和身份认同是自然的选择，在种族繁多的美国，因为融合、改变带来的矛盾冲突尤其突出。一个少数族裔融入的过程伴随着各种痛楚，常不为外人道，而在美国，德国人、日本人、法国人、华人、西班牙人、波多黎各人走过的成为“美国人”的道路也各有辛酸。也许，你认为自己了解种族的问题，理解文化震撼，但读完本书，或许你会发现对种族的误解还深深存在，急待改变。\n\u003e - 出版时间 2011-11-01 00:00:00\n\u003e - ISBN： 9787508630922\n\u003e - 分类： 社会文化-社科\n\u003e - 出版社： 中信出版集团\n\n# 高亮划线\n\n## 犹太人\n\n- 📌 犹太人不是来自哪一个国家或属于哪一种文化，而是来自许多的国家并属于不同的文化。 ^189525-14-152-191\n    - ⏱ 2022-08-29 10:58:56\n- 📌 基督教在整个欧洲取代了多神信仰之后，犹太人变为欧洲大陆唯一不信奉基督教的民族，故所到之处皆成“局外人”。这就使犹太人在基督教狂热时期（比如十字军东征）或宗教大恐怖时期（比如中世纪不时发生毁坏整个地区的灾祸）处于自身难保的境地。 ^189525-14-667-780\n    - ⏱ 2022-08-29 11:00:56\n- 📌 早期罗马帝国是个多神论和多元化的庞然大物，在相对宽容的帝国内部，各种各样的种族和宗教群体能够相安共处，犹太人只是其中一分子而已。具有讽刺意味的是，给罗马帝国乃至整个西方文明注入一个重大褊狭因素的，正是犹太—基督教的神学思想。在古罗马，许多宗教派别为表示相互敬重而举行仪式或纪念活动是常见的事，但犹太人和基督徒谁也不参加这类活动。对他们来说，这样做就意味着“偶像崇拜”。二者也都曾因政治上的分裂态度和行为而遭到罗马帝国当局的惩罚，但这种惩罚并非后来盛行于中世纪和现代欧洲的那种意义上的宗教迫害。 ^189525-14-1456-1702\n    - ⏱ 2022-08-29 11:04:01\n- 📌 基督教最终大获全胜，成了罗马帝国的国教。随之而来的宗教偏执就表现为强迫人们皈依基督教，惩罚异端分子和不承认基督教为唯一正确信仰的怀疑分子。在罗马帝国后期的宗教争议中，基督徒之间相互残杀所造成的死亡人数，大大超过了帝国前期多神论时代因信仰而被处死的人数。犹太人也在这种宗教斗争的大批受害者之列。 ^189525-14-1708-1854\n    - ⏱ 2022-08-29 11:04:15\n\n## 意大利人\n\n- 📌 意大利文化复兴的硕果，是意大利北部的产物，对南部的影响很小。哥伦布、但丁、米开朗基罗和罗西尼都是北意大利人。 ^189525-19-2393-2447\n    - ⏱ 2022-08-29 17:21:54\n- 📌 意大利的民族主义只对北部人才有重大意义，是他们在19世纪统一了意大利，也是他们在20世纪成了墨索里尼的主要追随者 ^189525-19-4393-4449\n    - ⏱ 2022-08-29 17:43:48\n- 📌 教育反倒被认为是对家庭神圣性的一种侵犯，是把一个儿童作为一个孤立的个体抽调出来，教之以与其家庭信奉相左的一套价值体系。对于贫困潦倒的平民百姓来说，失去一个孩子做帮手或出外挣钱的机会，实在是一种不堪忍受的损失。 ^189525-19-4759-4863\n    - ⏱ 2022-08-29 17:47:45\n- 📌 那不勒斯周围地区的私生子比例，只相当于罗马周围地区的1/5左右。 ^189525-19-5166-5198\n    - ⏱ 2022-08-29 19:07:56\n- 📌 从意大利同一个村庄或省份来的人，往往“集居”一处，社会交往也局限在本村老乡或同省人的范围之内。 ^189525-19-8674-8721\n    - ⏱ 2022-08-29 19:27:21\n\n# 读书笔记\n\n## 意大利人\n\n### 划线评论\n\n- 📌 就语言和地理而论，意大利是一个四分五裂的国家。好多地方的土语，外地来的人根本听不懂。有人说过，“不仅是每个地区，即便是每个小镇，都觉得本身具有自成一体的独特文化，其百姓对几英里之外的人都感到极为陌生”。各个村庄，即使鸡犬之声相闻，语言和文化也相去甚远。在地理上，该国被亚平宁山脉一分为二，形成了许多相互隔绝的山谷，西西里岛和撒丁岛是两大岛屿。 ^16142247-7BSiCLJau\n    - 💭 和温州的“十里不同音”很像，不如就把温州称为“小意大利”吧 [狗头]\n    - ⏱ 2022-08-29 17:19:15\n   \n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BE%8E%E7%B4%A2%E4%B8%8D%E8%BE%BE%E7%B1%B3%E4%BA%9A":{"title":"美索不达米亚","content":"\n# 美索不达米亚\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BE%8E%E9%A3%9F":{"title":"美食","content":"\n事实上，**肉和鱼并非越新鲜越好吃。**肉类需要排酸才会变得软嫩鲜美，这是肌肉纤维断裂，更宜被人吸收所呈现的特点；熟成的鱼虾蟹则比新鲜捕获的有更明显的鲜甜味，这是一部分蛋白质降解为多肽、氨基酸的标志。\n\n现杀鱼最好用保鲜膜覆盖后搁置在冷藏环境中4到5个小时。随着肌肉中的糖原继续分解为乳酸，结缔组织逐渐软化，肉品也变得柔软多汁，味美鲜香，这个过程称为肉的后熟。此时的鱼、肉最适合作烹饪原料，味道最好。\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E7%BF%BB%E8%AF%91":{"title":"翻译","content":"\nBob\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%80%83%E5%85%8B%E5%8A%B3%E5%A4%AB%E7%89%B9":{"title":"考克劳夫特","content":"\n# 考克劳夫特\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%80%B6%E5%88%A9%E7%B1%B3":{"title":"耶利米","content":"\n根据《圣经》的记载，耶利米在犹太国灭亡前，很早就感觉国家将会遭遇劫难，并不断告诫自己的同胞。但可惜的是，耶利米的言论不被当时的犹太人重视，反而经常遭到人们的憎恶。\n\n在亡国之后，耶利米和百姓一同被掳到巴比伦。但是他后来受到了新巴比伦国王尼布甲尼撒的优待。被释放后，耶利米又回到了耶路撒冷。后来，当地的犹太人起义，失败后逃往了埃及，耶利米又跟随这批犹太人来到了[[埃及]]，并在那里去世。\n\n耶利米被认为是《圣经》中《耶利米书》《耶利米哀歌》《列王纪上》和《列王纪下》的作者。不过，也有人认为《耶利米书》可能是后人根据耶利米的事迹编写的，\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95%E5%9B%BE":{"title":"职业发展图","content":"\n# 职业发展图\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173323.png)  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173349.png)\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%81%8C%E4%B8%9A%E6%80%A7%E6%A0%BC%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA":{"title":"职业性格测试理论","content":"\n# 职业性格测试理论\n\n[[迈尔斯-布里格斯类型指标]]  \n[[霍兰德职业兴趣测试]]  \n[[盖洛普优势评估模型]]\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F":{"title":"职责链模式","content":"\n# 职责链模式\n\n职责链模式的定义是：使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系，将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。\n\n##\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%81%9A%E5%90%88%E5%B9%B3%E5%8F%B0":{"title":"聚合平台","content":"\n大家近几年感触最深刻的恐怕还是内容平台，抖音、视频号、B 站、小红书这些平台，几乎已经聚合了全中国大部分用户的注意力，已经逐步替代了电视台、广播台、报纸、杂志等媒体。这些平台都打散了供给，原来的大的内容供应商（电视台制作组、编辑部）变成了很小的模块化供给（工作室甚至个人）；用户接触的也是个性化的模块化内容，不再是完整的电视节目、一本杂志；同时这些平台也垄断了用户，以广告或会员订阅来获取巨额利润。\n\n## 聚合平台的特征\n\n**第一，与用户产生直接的连接。**\n\n**第二，服务用户的零边际成本。**\n\n传统行业，在为用户提供服务时，会存在最多三种边际成本：\n\n- 销货成本（COGS）生产商品或提供服务的成本\n- 分销成本，比如零售商或者房产中介的费用\n- 交易成本，商品或服务真正在执行交易那一步的成本\n\n而对于聚合平台来说，不存在这些费用：\n\n- 数字化的商品和服务，没有边际成本，多多益善（这里说的是边际成本，固定成本可能还是极高的）\n- 数字化的商品和服务可以直接在互联网上触达用户，可以零分销成本\n- 交易通过自动账户管理、信用卡支付等方式，几乎没有成本\n\n从这个意义上说，苹果公司不是聚合平台。亚马逊的传统电商业务，也不是聚合平台。但他们由于巨大的规模，让分销成本大幅降低，这也是护城河。\n\n**第三，需求驱动的多边网络**\n\n**通过模块化后用户体验的提升，会吸引更多用户；更多用户，则会吸引更多供应商。这就进入了良性循环。也就是存在网络效应。**\n\n这跟非聚合平台类型的公司是不同的。这类公司用户的增长，会不断增加获客成本，在越过完美的产品市场契合点（product-market fit）之后，用户的价值会陆续降低。这是其规模无法继续增大的原因。\n\n## **聚合平台的分级**\n\n**1 级聚合平台：供给的获取**\n\n- 1 级聚合平台的竞争力在于有很强的购买力。这种平台的搭建需要更长的时间，短期内会不稳定。\n- 最佳的案例是 Netflix。它拥有用户关系，在上文提到的三大成本方面都大有优势。Netflix 不制作内容，但会花大价钱购买内容。\n- 1 级聚合平台通常在供给有很大差异化的行业有效，容易受到有财力的竞争对手的影响。  \n**2 级聚合平台：供给交易成本**\n\n- 2 级聚合平台不拥有供给，在供应商引入时会产生交易成本。\n- [[Uber]] 就是这样的平台，它拥有用户关系，不承担上文提到的三大成本，但同时由于背景调查、车辆验证等环节会产生交易成本。这会限制供给的增长，也就限制了需求的增长。在一些有合规要求地方的 Airbnb 也是这类平台。\n- 2 级聚合平台通常在对供给有质量要求、监管要求对行业中出现\n\n**3 级聚合平台：零供给成本**\n\n- 3 级聚合平台不拥有供给，也不产生采购成本，无论在吸引供给，还是引入供给方面。\n- [[谷歌]]是典型的 3 级聚合平台，供应商（网站）可以让谷歌访问，很多还会积极地让谷歌搜索和发现（SEO）。社交媒体平台也是，很多用户既是用户又是供应商。有关注度的社交网络平台上，专业的内容创作者会免费创作。\n- 3 级聚合平台往往都以广告为主要的收入模式。例外是应用商店，在有限的市场规模下，开发人员可获得的收入会从每个边际用户的获取上提升（主要是应用内购）。\n\n## 疑问\n\n- [[聚合理论]]并不只是用来分析总结过去，更重要的是，它是否对未来有启示。比如，我们在研究社区团购的时候，是否就曾经小看了成本的问题，认为这也是个很好的聚合平台？再比如，传统的媒体行业被颠覆的价值逻辑是怎样的？为什么如今的内容变得越来越碎片？\n- 聚合理论里提到的一些细节，如今看也有证伪的部分，包括在国内也有很多反例。比如对于获客成本而言，在激烈竞争的红海市场里，是很难再通过用户体验去获取自然流量的，就会居高不下；比如对于 [[Netflix]] 而言，它的商业模式目前也饱受质疑，聚合产生的价值是否能撑得住高昂的版权费用，也是值得讨论的课题。\n- 聚合理论是一种抽象的思考方式，它很适合在大的变局中摸索方向，而不是去看产品和运营执行上的细节。用它来思考 AI 的未来趋势，是个很好用的工具。我也正在学习和思考中。比如，[[ChatGPT]] 这样的平台，是否存在同样的特征？ ChatGPT 目前还存在的显著的高边际成本（接口调用费用），是否会让它很难成为大型聚合平台？\n","lastmodified":"2023-09-18T14:54:47.598454772Z","tags":null},"/%E8%84%91%E7%94%B5%E6%B3%A2":{"title":"脑电波","content":"\n# 脑电波\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%84%91%E7%A3%81":{"title":"脑磁","content":"\n# 脑磁\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%84%9A%E6%89%8B%E6%9E%B6":{"title":"脚手架","content":"\n# 脚手架\n\n脚手架设计\n\n- [[打包工具]]\n\n# 为什么不用 Umi 而选择自建\n\n# 其他脚手架参考\n\n- [[hippo]]\n- [[浅析浙商未来脚手架]]\n- [[Umi]]\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%85%90%E8%B4%A5%E5%92%8C%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95%E7%9A%84%E5%85%B3%E7%B3%BB":{"title":"腐败和经济发展的关系","content":"\n# 腐败和经济发展的关系\n\n1. 第一类是“掠夺式”腐败，比如对私营企业敲诈勒索、向老百姓索贿、盗用挪用公款等，这类腐败对经济增长和产权保护极其有害。随着我国各项制度和法制建设的不断完善、各种监督技术的不断进步，这类腐败已大大减少\n2. 第二类腐败是“官商勾连共同发财式”腐败。比如官员利用职权把项目批给关系户企业，而企业不仅要完成项目、为官员贡献政绩，也要在私下给官员很多好处。这类腐败发生在招商引资过程中，而相关投资和建设可以促进经济短期增长，所以腐败在一段时期内可以和经济增长并存。但从经济长期健康发展来看，这类腐败会带来四大恶果。\n   - 其一，长期偏重投资导致经济结构扭曲，资本收入占比高而劳动收入占比低，老百姓收入和消费增长速度偏慢。\n   - 其二，扭曲投资和信贷资源配置，把大量资金浪费在效益不高的关系户项目上，推升债务负担和风险。\n   - 其三，权钱交易扩大了贫富差距。\n   - 其四，地方上可能形成利益集团，不仅可能限制市场竞争，也可能破坏政治生态，出现大面积的“塌方式腐败”。党的十八大以来，中央数次强调党内决不允许搞团团伙伙、拉帮结派、利益输送，强调构建新型政商关系，针对的就是这种情况。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2":{"title":"CI/CD","content":"\n# CI/CD\n\n## 思维脑图\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173541.png)\n\n前端部署一般流程：获取代码 ==\u003e 安装依赖 ==\u003e 源码构建 ==\u003e 产物打包 ==\u003e 推送代码 ==\u003e 重启服务\n\n## 本地部署的优劣势\n\n优势：\n\n1. 无需重新拉取代码\n2. 包含最新依赖\n3. 可以增量构建\n4. 可以快速调试\n\n劣势：\n\n1. 环境一致性\n   - 操作系统\n   - node版本\n   - 本地和服务器环境\n2. 过程一致性\n3. 可回溯性\n   - 日志，本地只有临时日志\n   - 产物，通常部署系统中会留存最近几次部署的构建产物包\n4. 人员分工\n\n## CI/CD\n\n持续集成（Continuous Integration，CI）和持续交付（Continuous Delivery，CD），是软件生产领域提升迭代效率的一种工作方式：开发人员提交代码后由 CI/CD 系统自动化地执行合并、构建、测试和部署等一系列管道化（Pipeline）的流程，从而尽早发现和反馈代码问题，以小步快跑的方式加速软件的版本迭代过程。\n\n这个过程通常是各系统（版本管理系统、构建系统、部署系统等）以自动化的方式协同完成的。而本地部署依赖人工操作，所以并不支持这种自动化的处理过程。\n\n## 自动化部署工具\n\n- Jenkins\n- CircleCI\n- Github Actions\n- Gitlab CI\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E5%8A%A8%E8%84%9A%E6%9C%AC%E7%AE%A1%E7%90%86":{"title":"自动脚本管理","content":"","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6":{"title":"自动驾驶","content":"\n# 自动驾驶\n\n[[百度#萝卜快跑]]\n\n[[轻舟智航]]\n\n## 自动驾驶在争什么\n\n### 路线之争\n\n- Waymo 模式，采用 Waymo 测试为主，技术成熟再谈量产\n- 特斯拉模式，像特斯拉那样以量产为先，通过用户义务贡献测试数据。\n\n### 纯视觉和融合感知路线\n\n- 马斯克认为多传感器融合不本质，徒增系统复杂性，这样只用摄像头，比较省成本\n- 而反对方认为纯视觉并不成熟，多传感器是一种安全保障。这样需要更多的传感器\n\n其实争的是量产的成本。[[轻舟智航#轻舟优势]]\n\n## 自动驾驶的维度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220620154417.png)\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E6%88%91%E4%B8%8D%E4%B8%80%E8%87%B4%E7%90%86%E8%AE%BA":{"title":"自我不一致理论","content":"\n# 自我不一致理论\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615112940.png)\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E6%90%AD%E5%BB%BA%E9%94%99%E8%AF%AF%E7%9B%91%E6%8E%A7%E6%96%87%E6%A1%A3":{"title":"监控系统文档","content":"\n# 监控系统文档\n\n## 全局 config\n\n最终希望可以通过服务端下发，但是这样要考虑跨域问题(优先级低)\n\nconfig 列表\n\n- 版本\n- 过滤次数\n- 过滤某些错误\n- 请求路径\n- …\n\n## RRWEB 问题\n\n1. MutationObserver API 不能监听 DOM 大小变化和颜色等变化（待验证）\n2. 当前方案直接将前 20S 操作上传，会造成请求包体太大，导致超过 Get 请求限制而无法上传，\n\n   准备将其改造成时间数组（切片为 1S）单独定时定长的上传，而错误只上传发生时对应的秒数，由后端计算后返回前几秒的数组\n\n   - 问题 1 上报时间数组 需要 id 识别身份？\n\n## Http 劫持\n\n1. 准备改成保留原始请求一份，像上报接口使用原始请求，不做劫持，不然会死循环\n2. 使用 new Images(…/1\\*1.gif) 上报\n3. 适配器模式\n\n   - 如果是浏览器环境引入`xhr`，是`node`环境则引入`http`。\n\n     ```JavaScript\n     function getDefaultAdapter() {\n       var adapter;\n       // 根据 XMLHttpRequest 判断\n       if (typeof XMLHttpRequest !== 'undefined') {\n         // For browsers use XHR adapter\n         adapter = require('./adapters/xhr');\n         // 根据 process 判断\n       } else if (typeof process !== 'undefined' \u0026\u0026 Object.prototype.toString.call(process) === '[object process]') {\n         // For node use HTTP adapter\n         adapter = require('./adapters/http');\n       }\n       return adapter;\n     }\n     var defaults = {\n       adapter: getDefaultAdapter(),\n       // ...\n     };\n     ```\n\n## 重构问题\n\n发现大部分代码冗余重复较多，比如每个请求都进行了 baseMsg，type，获取错误 event 的，想要改造成，通过事件中心统一进行数据的存储和上报\n\n存储事件准备改造成统一函数，例如：\n\n```JavaScript\nfunction saveTo(){\n    if(wx) wx.localstroage\n    if(indexDB) indexDB...\n    window.localstroage\n}\n```\n\n但这种改造不容易扩展，另外如果做取数据函数同样也要判断环境，先想好兼容形式怎么做\n\nReport Class 大概\n\n```JavaScript\n//去重\n//过滤错误\n//存储错误\n[jserror,promiseError,resError].forEach(v=\u003e{\n    // saveTo\n})\n// 定时上报\n```\n\n## 打包\n\nwebpack =\u003e rollup\n\n## 测试\n\n现在自己测试太麻烦，思考做成单元测试（不优先）\n\njs 问题\n\n- undefined\n- promise\n- referror\n\n网络请求\n\n- xml\n- fetch\n\nvue\n\n- 组件声明\n- 未响应式\n- key 相等\n\n待补充…\n\n## 做这个系统的收益\n\n缩短可交互 js 时间\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E6%90%AD%E6%9C%8D%E5%8A%A1%E5%99%A8":{"title":"自搭服务器","content":"\n# 自搭服务器\n\n## 服务器资源\n\n[洛杉矶 4837 - DigitalVirt](https://digitalvirt.com/store/la-vps-4837)\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%87%AA%E7%94%B1%E8%B4%B8%E6%98%93%E5%92%8C%E4%BF%9D%E6%8A%A4%E4%B8%BB%E4%B9%89%E7%9A%84%E5%86%B2%E7%AA%81":{"title":"自由贸易和保护主义的冲突","content":"\n# 自由贸易和保护主义的冲突\n\n自由贸易和保护主义的冲突。支持自由贸易的概念和理论，几乎算是经济学中最强有力的逻辑，但往往也突破不了现实利益的枷锁。只要学过经济学，都知道比较优势和自由贸易能让国家整体得益。但整体得益不等于让每个人都得益。从理论上讲，即便有人受损，也该支持自由贸易，因为整体得益远大于部分损失，只要从受益方那里拿一点利益出来，就足够补偿受损方且有余。但在现实中，补偿多少？怎么补偿？往往涉及复杂的政治博弈。补偿可能迟迟落实不到位，最终是受益者得益越来越多，而受损者却屡遭打击。虽说平均值是变好了，但那些受损的人的生活不是理论上的平均数字，他们会为了自己的利益而反抗和行动，这是保护主义的根源。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%88%B9%E8%BF%90":{"title":"船运","content":"\n## 相关个股\n\n[[中国船舶]]  \n[[中远海特]]  \n[[中国重工]]\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%89%AF%E6%B8%9A%E6%96%87%E5%8C%96%E9%81%97%E5%9D%80%E7%9A%84%E6%B0%B4%E5%88%A9%E7%B3%BB%E7%BB%9F":{"title":"良渚文化遗址的水利系统","content":"\n在良渚的水利发现之前，最早的治水是传说中的[[大禹治水]]，而且那也只是存在于夏朝，距今 4000 多年。\n\n良渚文化遗址的水利发现将中国五千年文化带到了一个世界上的认可，是历史的实证而不是仅存在于传说中。\n\n这么早拥有水利系统的，也只有[[两河流域]]，而且在健全程度上完全不是一个级别。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%89%BA%E6%9C%AF%E5%93%81%E4%B8%BA%E4%BB%80%E4%B9%88%E5%80%BC%E9%92%B1":{"title":"艺术品为什么值钱","content":"- 得到别人的感叹\n- 买艺术品尤其是顶级的艺术品，投资回报率是很高的\n- 避税， 10 个亿要交税 50%， 游艇、房子都太实用了，价值由市场供给决定，而艺术品可以拍卖\n\n美国捐赠可以避税，你捐赠能避税且收获一个好名声，博物馆能或者名画\n\n##\n\n高端艺术品。40%都是赝品  \n\n古典可以使用颜料年代，色彩扫描等技术  \n但是现代艺术画，就是模仿创作时候的心境再画一副\n\n画商，富豪不会关注没成名的艺术家，所以被一个顶级的画商看上，就走上了成名道路。\n\n被顶级收藏家看重，因为收藏家就是艺术界真正掌握话语权的人\n\n以上两个，都是为土豪提供了安全感和升值空间的\n\n但是艺评人就不一样了，艺评人就像股评人，没有一点真金白银的投入，难以获得股民的信任\n\n\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%89%BE%E5%AE%BE%E6%B5%A9%E6%96%AF%E8%AE%B0%E5%BF%86%E6%9B%B2%E7%BA%BF":{"title":"艾宾浩斯记忆曲线","content":"\n# 艾宾浩斯记忆曲线\n\n我们（时常）会遗忘。遗忘还是小事儿。更要命的是，我们真的会**修改自己的记忆**。认知科学的入门读物里，便有足够令人信服的案例证据。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172855.png)\n\n我自己有记日记的习惯。有时翻看到10年前的日记，经常会倒抽一口凉气——这两件事情的发生顺序，我后来居然完全记反了？！这还远远不算是最麻烦的。如果大脑性能差、可靠性不足这些你还能忍的话，那大脑对任务复杂度「欺软怕硬」带来的**拖延症**，恐怕就会让你感受到焦虑和绝望了。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%89%BE%E8%90%A8%E5%85%8B%E7%89%9B%E9%A1%BF":{"title":"艾萨克·牛顿","content":"\n# 艾萨克·牛顿\n\n#卡片/人物卡\n\n- 国籍：英格兰\n- 生平：1643 年 1 月 4 日－1727 年 3 月 31 日\n- 身份：物理学家、数学家、天文学家、自然哲学家和炼金术士。\n- 简介：  \n1687 年他发表《自然哲学的数学原理》，阐述了万有引力和三大运动定律，奠定世界物理和天文学的基础，成为了现代工程学的基础。他通过论证开普勒行星运动定律与他的引力理论间的一致性，展示了地面物体与天体的运动都遵循着相同的自然定律；为太阳中心学说提供了强而有力的理论支持，是科学革命的一个代表。  \n在力学上，牛顿阐明了动量和角动量守恒的原理。在光学上，他发明了反射望远镜，并基于对三棱镜将白光发散成可见光谱的观察，发展出了颜色理论。他还系统地表述了冷却定律，并研究了音速。\n\n在数学上，牛顿与戈特弗里德·莱布尼茨分享了发展出微积分学的荣誉。他也证明了广义二项式定理，提出了“牛顿法”以趋近函数的零点，并为幂级数的研究作出了贡献\n\n## 第一台望远镜\n\n1672年年初，一位叫作艾萨克·牛顿（Isaac Newton）的年轻人因为制造了一台杰出的望远镜而当选为皇家学会的会员。\n\n## 色散实验\n\n色散实验是牛顿所做的有名的实验之一。实验的情景在一些科普读物里被渲染得令人印象深刻：炎热难忍的夏天，牛顿却戴着厚重的假发待在一间小屋里。窗户全都被封死了，所有的窗帘也被拉上，屋子里面又闷又热，一片漆黑，只有一束亮光从一个特意留出的小孔射进来。牛顿不顾身上汗如雨下，全神贯注地在屋里走来走去，并不时地把手里的一个三棱镜插进那个小孔里。每当三棱镜被插进去的时候，原来的那束白光就不见了，而在屋里的墙上映射出一条长长的彩色宽带：颜色从红一直到紫。这当然是一种简单得过分的描述，不过正是凭借这个实验，牛顿得出了白色光是由七彩光混合而成的结论。\n\n他的文章被交给一个三人评议会审阅，胡克和波义耳正是这个评议会的成员，胡克对此观点进行了激烈的抨击。[[罗伯特·胡克 |胡克]]声称，牛顿论文中正确的部分（也就是色彩的复合）是窃取了他1665年的思想，而牛顿“原创”的微粒说则不值一提，仅仅是“假说”而已。\n\n牛顿大概有生以来都没受过这样直截了当的批评。他勃然大怒，花了整整四个月时间写了一篇洋洋洒洒的长文，在每一点上都进行了反驳。胡克惨遭炮轰，他的名字出现在第一句里，出现在最后一句里，在中间更是出现了25次以上。就这样，胡克大言不惭在前，牛顿恶语相讥于后，两个人都格外敏感且心胸狭窄，最终不可避免地成为对方毕生的死敌。他撤回了所有原本准备在皇家学会发表的文章，到了1673年3月，他甚至在一封信里威胁说准备退出学会。最后，牛顿中断与外界的通信，让自己在剑桥与世隔绝。\n\n## 牛顿的苹果树\n\n这棵苹果树在历史上倒是真实存在的，这棵神奇的树终于在 1820 年的一次暴风雨中被摧倒，有一段树干至今保存在剑桥大学三一学院博物馆，但它的子嗣依然繁衍不息：人们从它身上剪下枝条，嫁接到 Brownlow 勋爵的一些树上。  \n对于牛顿时代的人们来说，苹果作为《圣经》里[[伊甸园]] 的智慧之果，其象征意义是不言而喻的。由“苹果落地”而发现宇宙的奥妙，这里面就包含了强烈的冥冥中获得天启的意味，使得牛顿的形象进一步得到神化。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%8F%E6%A0%BC%E6%8B%89%E5%BA%95":{"title":"苏格拉底","content":"\n## 与孔子相似\n\n苏格拉底生于公元前470年，也就是[[孔子]]去世后的第九年，两人属于同一时代的人。而且非常巧合的一点是，苏格拉底和孔子，虽然一东一西，相隔万里，但是这两人却有着很多的相似之处。\n\n- 苏格拉底在西方思想史上，被认为是西方哲学和伦理学的奠基者，这和孔子在东方的地位相当。  \n- 又比如，苏格拉底和孔子的教育方式也类似，都是启发式的，经常是通过对话和讨论，启发学生思考。\n- 苏格拉底和孔子的另一个共同之处在于，他们的哲学思想其实都是被学生和后来的学者记录下来的。孔子注释了《春秋》和其他一些中国古代典籍，而苏格拉底则自己没有留下任何著作。\n- 再比如，苏格拉底并不富裕。根据阿里斯托芬的回忆，他是依靠学生贡献的学费维持生计的；但是柏拉图则记载苏格拉底明确拒绝接受学费。因此，苏格拉底有可能是依靠朋友的赞助办学的。而对比一下孔子就会发现，这两位哲学家的生活都不富裕，但是办学、投身教育，几乎是他们共同的选择。\n\n### 不同的地方\n\n但是，和孔子通常会对学生的问题加以解答所不同的是，苏格拉底对学生们讨论的问题常常给不出答案。\n\n这反映出了东西方思维之间的差异。孔子不是什么宗教领袖，但是他对于自己的观点是非常确信的。而苏格拉底的思维方式在某种程度上是科学家们渐进的思维方式，没有绝对的真理，只有不断探索的过程。\n\n## 人际关系\n\n学生:[[柏拉图]]、[[色诺芬]]\n\n## 苏格拉底之死\n\n这样一位伟大的思想家，他最后却被雅典的同胞用民主投票的方式处死。苏格拉底之死，不仅体现了哲学与政治的巨大冲突，而且还在不断地提醒后人，[[简单民主制度的缺陷]]。在当时，这件事对苏格拉底的学生柏拉图产生了极大的震撼。后来，[[柏拉图]]的思想主张和他的生活轨迹都因为这件事而发生了改变。\n\n**正是苏格拉底的影响，使得希腊的哲学从关注世界和宇宙的构成、寻找宇宙的规律，转而进入到对伦理、道德和正义的探究。**\n\n**他的死让后来的人明白了一个道理，那就是不受制约的民主无异于多数人的暴政。**\n\n柏拉图在他的著作中就一直在批评雅典这种不受制约的简单民主，特别是当无限权威是以人民的名义、以集体利益的名义来对少数人施加强迫时，少数人几乎无法抵挡它们。面对全体人民的绝对意志，少数人唯有服从。雅典城邦正是以多数人的名义，判处苏格拉底死刑的。\n\n事实上，柏拉图心目中的理想国其实就是一个不同于过度民主的精英专制社会。不要觉得这种多数人的暴政离我们很远，今天网络上对一些人施加的语言暴力，其实就是多数人暴政的体现。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%8F%E7%BE%8E%E5%B0%94%E6%96%87%E6%98%8E":{"title":"苏美尔文明","content":"\n# 苏美尔文明\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E5%87%A0%E4%B8%AA%E8%8A%B1%E8%B4%B9%E7%9A%84%E7%94%A8%E6%B3%95":{"title":"英语中几个花费的用法","content":"\n# 英语中几个花费的用法\n\nCost 的主语是物或某种活动, 还可以表示“值”, 常见用法如下： sth. costs (sb.) + 金钱,某物花了  \n(某人) 多少钱。cost 的过去式及过去分词都是 cost,并且不能用于被动句。spend 的主语必须是人,  \n常用于以下结构：  \nspend time / money on sth.在.  \n……上花费时间（金钱）。take 句型：It takes  \nsb.+ time + to do sth. (做某事花费某人……[用时间]) paid 是 pay 的过去式。pay 的基本用法是：pay  \n(sb.) money for sth. 付钱 (给某人) 买……。pay for sth. 付.  \n…的钱。pay for sb. 替某人付钱。  \npay sb. 付钱给某人。 pay money back 还钱。\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E4%BB%8E%E5%8F%A5":{"title":"英语从句","content":"\n# 英语从句\n\n[[英语语法#复杂句]]的一种\n\n## 句子成分/句型\n\n主语 + 动词 **主语从句**  \n主语 + 动词+宾语 **宾语从句**  \n主语 + 动词+间接宾语+直接宾语  \n主语 + 动词+宾语+宾语补语  \n主语 + 动词+（主语）补语（表语）  \n定语，状语，同位语\n\n### 主语从句\n\n引导词开头的\n\n形式主语\n\n### 宾语从句\n\n从句在整个复杂句中做宾语  \n宾语从句的 that 可以省略  \n主从时态相同\n\n### 表语从句\n\n## 从词类分\n\n### 形容词从句\n\n对某个人或者事物进行描述  \n定语=形容词=关系 从句\n\n#### 关系词\n\n##### 关系代词\n\nthat  \nwho  \nwhom  \nwhose  \nwhich\n\n先行词是**唯一**的： that  \n先行词**多选一**：which\n\n##### 关系副词\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220115183434.png)\n\n#### 非限定性形容词从句\n\n可做代词，也可代表整个句子\n\n### 副词从句\n\n状语从句\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E4%BB%A3%E8%AF%8D":{"title":"不定代词","content":"\n# 不定代词\n\nmany + 可数名词 复数  \nmuch + 不可数名词\n\nsome  \nany\n\neach every 每 不加复数 s  \neach 可以单打独斗 ， 两个或者两个以上  \nevery + 名词 三个或者三个以上  \neither 两者中的每一个  \nneither\n\nboth 两者都  \nall 三者或者三者以上 都 + 复数名词\n\nother 另外的 其他的 + 名词  \nthe other 特指两者中的另外一个  \nanother 泛指 3 个及以上另一个\n\none  \nit\n\n复合不定代词  \nevery-  \nsome-  \nany-  \nno-\n\n形容词修饰复合不定代词时要后置\n\n# 疑问代词\n\nwho 指 谁 ，宾格 whom  \n当疑问代词做介词的宾语紧跟介词就必须用 whom\n\nwhat 指什么  \nwhich 哪一个  \nwhose 谁的\n\n# 连接代词\n\n要理解从句 [[从句]]，引导主语从句，宾语从句和表语从句。\n\n- who\n- whom\n- whose\n- what\n- which\n- whoever\n- whomever\n- whatever\n- whichever\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0":{"title":"英语学习","content":"\n# 英语学习\n\n- 获得流利外语能力的唯一途径是大量的听读输入\n- 输入材料应该是可理解和有趣的，这样才能最大程度地减少压力，提高学习效果。\n- 而自由消遣阅读是提升语言能力最长效、最自主、也是最快乐的途径。\n\n将英语学习分成背单词、学语法、学发音、学写作几个阶段  \n其中背单词，可以学习下[[词根词缀背单词]]\n\n可理解输入 \u003e\u003e\u003e\u003e 语法学习\n\n寻找 i+1 、有趣的、可理解的输入材料\n\n- 每天起码学习 30 分钟，\n- 塑造一个用英语的环境，享受学习英语的过程\n\n### 背单词\n\n- 学单词，用英英词典，思考他的近义词是否可以替代  \n - 学会了一个单词，用他去造个句\n\n [[英语词组]]  \n[[英语语法]]  \n[[介词]]  \n[[b级统考生词]]  \n[[从句]]\n\n## 输入材料推荐\n\n- [【终极英文书单】闲书原著推荐——从入门到进阶 - 哔哩哔哩](https://www.bilibili.com/read/cv7695133)\n - [找书资源库](https://nav.yibook.org/)\n - [Jiumo Search 鸠摩搜索 - 文档搜索引擎](https://www.jiumodiary.com/#)\n - 听阅APP\n\n### 0-1000L\n\n- 二年级读物 《魔法树屋》\n\n### 自由阅读\n\n当阅读量超过 800L 以后 可以尝试去[listopia](https://www.goodreads.com/list?ref=nav_brws_lists)寻找自己感兴趣的书单了\n\n# 软件推荐\n\n听： [Unlock the Knowledge in Podcasts | Snipd](https://www.snipd.com/)  \n说： [MyShell](https://myshell.ai/)  \n读： [[沉浸式翻译]]和[[沙拉查词]]  \n会议记录：飞书妙记  \n视频： youtube 双语字幕 插件\n\n网友其他推荐：\n\n- [[Trancy]]：YouTube 双语字幕+分句学习、网页翻译、生词本、句子成分分析、词性标注、AI 对话\n- [Qwerty Learner](https://qwerty.kaiyi.cool/gallery)：无情的打字机器\n- [Enpuz - 在线英语句子语法分析](http://enpuz.com/)\n- [Relingo - 无压力不打扰学习英语单词，打开浏览器在任何页面添加生词](https://relingo.net/zh/index)\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E7%BB%84":{"title":"英语词组","content":"\n# 英语词组\n\n考查 take on 的意思，意为：承担(工作、责任等)\n\nway 词组 by the way on their way  \n后置定语 现在分词\n\nnot + 短暂性动词 + until 直到…才\n\n*so* *as* *to* = in order *to*一样，“以便，为的是…”，后面跟目的状语\n\nAs if 引导虚拟语气,be 动词全部变成 were\n\n解析：考点：主谓一致。数词+名词（表示时间|、长短  \n重或金钱等） 当作单一的数量时，谓话动词为单数\n\n考点：主谓一致。Measles“麻疹”、mumps“腮腺炎”、mathematics“数学”statistics“统计学”等表示疾病或学科这类词在句中作主语时，谓语动词用单数要加 s。  \ntake time“花费时间”,是固定搭配。\n\n解析：主谓一致。both … and … 连接的名词短语共同做句子的主语，所以谓语动词用复数。\n\n- do sb a favor,意为：帮某人个忙。\n- Let's be friends!\n\n### 同义词辨析\n\n#### 组成\n\n1、**be composed of**表示一个事物由几个部分组成，它的主语应该是事物的整体，宾语为部分，它只能用主动语态。\n\n2、**consist of**常用整体作主语，表示“整体由部分组成”，引申为“包含有”，不能用于被动语态。\n\n3、**be made up of**表示“部分构成整体”，用于主动语态；如果用整体作主语，必须用被动结构 be made up of，这时可以和 consist of 互换。\n\n#### 花费\n\n1. spend 的必须是人， 常用于以下结构：\n\n- (1) spend time ／money on sth. 在……上花费时间（金钱）。例：I spent two hours on this maths problem. 这道数学题花了我两个小时。\n- (2) spend time ／ money (in) doing sth. 花费时间（金钱）做某事。例：They spent two years (in) building this bridge. 造这座桥花了他们两年时间。\n- (3)spend money for sth. 花钱买……。例：His money was spent for books. 他的钱用来买书了。\n\n2. cost 的主语或某种活动， 还可以表示“值”， 常见用法如下：\n   - (1)sth. costs (sb.) ＋金钱某物花了（某人）多少钱。例：A new computer costs a lot of money. 买一台要花一大笔钱。\n   - (2) (doing) sth. costs (sb.) ＋时间某物（做某事）花了（某人）多少时间。例：Remembering these new words cost him a lot of time. 他花了大量时间才记住了这些。  \n     注意：cost 的过去式及都是 cost 并且不能用于被动句。\n3. take 常跟双宾语， 常见用法有以下几种：\n\n- (1) It takes sb. ＋时间＋ to do sth. 做某事花了某人多少时间。例：It took them three years to build this road. 他们用了三年时间修完了。\n- (2)doing sth. takes sb. ＋时间做某事花了某人多少时间。例：Repairing this car took him the whole afternoon. 他花了一下午修车。\n\n4. pay 的基本用法是：\n\n- (1) pay (sb.) money for sth. 付钱（给某人）买……。例：I have to pay them 20 pounds for this room each month. 我每个月要付 20 英磅的。\n- (2)pay for sth. 付……的钱。例：I have to pay for the book lost. 我不得不赔丢失的书款。\n- (3)pay for sb. 替某人付钱。例：Don?蒺 t worry!I'll pay for you. 别担心， 我会给你付钱的。\n- (4)pay sb. 付钱给某人。 例: They pay us every month.他们每月给我们报酬。\n- （5）pay money back 还钱。例：May I borrow 12 yuan from you? I'll pay it back next week. 你能借给我 12 块钱吗？下周还你。\n- （6）pay off one's money 还清钱。\n\n#### 选择\n\n[新概念英语助力高考:choose pick select 的区别-教育频道-手机搜狐](https://m.sohu.com/n/473129496/?wscrid=95360_2)\n\n#### 其他\n\n##### other\n\n1. **不定代词 other**相当于名词或形容词,可以在句中作主语、宾语、定语等。相当于名词时,有复数形式 others。\n2. the other 用于**两者**中的另一个，another 指**三者以上**中的另一个\n\n##### another\n\n**不定代词 another**是由 an 和 other 构成，由此可以判定它只能代替或修饰可数的单数名词，前面不再用冠词。可以在句中作主语、宾语、表语和定语。  \nanother 还有 “**再**……” 的意思，other 有 “**另外**” 的含义：\n\n#### 某时\n\n- sometime 用作副词，可用于过去或将来，意为“某个时候”。\n- some time 作为副词词组，意为“任何时候”或“某个时候”(= sometime)；作为名词词组，其意为“一段时间”\n\n  \u003e Please come over some time (sometime). 请随时来玩  \n  \u003e Please phone me some time next week. 下个星期什么时候给我打个电话吧。  \n  \u003e We lived in the country for some time. 我们在农村住过一段时间。\n\n- sometimes 用作副词，意为“有时”。\n\n#### 少量\n\n“little” 和 “a little” 只能用在不可数名词前，“a little” 的意思是 “一点”，“little” 的意思是 “很少，几乎没有”；  \n“few” 和 “a few” 只能用在可数名词前， “a few” 的意思是 “一些，几个”，而 “few” 则突出数量很少，几乎没有。  \nfew 和 a few 修饰可数名词，但 few 表示否定意义，表示很少，a few 表示肯定意义，表示有一些；  \n而 little 和 a little 修饰不可数名词，little 表示没有，a little 表示有一点。\n\n#### 数量\n\n**amount (n.) ＊后接不可数名词**  \n**number (n.) ＊后接可数名词**\n\n#### set\n\n- set about 开始, 着手\n- set free 释放; 解放\n- set off 出发, 动身 使爆炸, 点燃, 发射 使(某人)开始做, 使发火\n- set at 攻击, 猛烈抨击 估计; 定价; 评价\n- set back 使倒退, 使受挫折; 推迟 拨回(钟表的针)\n- set by 把…搁在一旁; 把…留作将来之用\n- set down 放下, 搁下 让(乘客)下车; 把(东西)卸下车 记下, 登记\n- set fair (天气)晴定(不会转阴)\n- set forth [out] 动身, 出发, 起程 陈列, 展出 提出; 发表; 陈述; 阐明 表彰,\n- set forward 出发, 出动 把钟表时间向前拨, 拨快 发表; 提出 促进, 推动\n- set loose 引起, 惹起, 招致\n- set on [upon] 攻击, 袭击 使攻击, 唆使 开始, 着手 倾心于, 决心要 雇用\n- set oneself against 坚决反对; 坚决与…为敌\n- set out 出发, 开始 陈述；阐明, 提出(理由) 摆出, 陈列, 布置 栽种\n- set [put] right 改正, 矫正；使恢复到良好状态 指出正确道路 使恢复健康\n- set sth. (to sth.) (为某曲调)配词; (为某诗词)谱曲\n- set … to 用… 把…点燃; 用(笔)去写\n- set to 认真干起来, 大干起来; 大吃起来\n- set up 竖起; 建起 安装 设立, 开办 资助(某人), 扶持(某人)建立事业; 使自立\n- set up as 当上了…., 干…的工作\n- set up with 向… 提供\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95":{"title":"语法","content":"\n# 语法\n\n## 我们为什么学语法\n\n为了造句\n\n长句 就是 拆到不能再拆的简单句\n\n## 简单句\n\n粗略的分 就是 ：什么 怎么样 （主语(人或物）+ 谓语 ）  \n[[被动语态]]\n\n### 句子成分\n\n1. 主语\n2. 谓语\n3. 宾语\n\n### 谓语动词\n\n1. 可以独立完成的动作: 不及物动词 主语 + 不及物动词\n\n   \u003e\n\n2. 有一个动作的承受者:及物动词 主语 + 单及物动词 + 宾语\n\n   \u003e Rapa Rabbit like you\n\n3. 有两个动作承受者 : 双及物动词 主语 + 不及物动词 + 直接宾语 + 间接宾语\n\n   \u003e Rapa Rabbit teaches you English\n\n4. 只有一个动作的承受者 (不同与二) :混合及物动词 主语 + 不及物动词 + 宾语 + 宾语补语\n\n   \u003e Rapa Rabbit cpmsoders you smart\n\n5. 不是个\"动作\" ：系动词 主语+ (系)动词 + (主语)补语\n\n   \u003e Rapa Rabbit is tall\n\n#### 三大本领\n\n1. 表示动作的**时间**（`现在`，`过去`，`将来`，从过去某个时间点\"算将来\"(`过去将来`)\n2. 表示动作的**状态** （ 未说明(`一般`)，`完成`，`进行`，不但完成而且继续（`完成进行`）\n3. 表示动作的 **假设,情感等**\n   - If I `were` a rabbit… 虚拟语气\n   - I `ate` a carrot and … 陈述语气\n   - `Eat` this carrot and… 祈使语气\n\n英语的谓语动词本身往往不能独立完成这些本领，独自也无法完成比如表示否定，可能性，必须性等意思\n\n这时候就需要 助动词\n\n### 助动词\n\n为了辅助谓语动词\n\n#### 吃\n\n- 为了协助它表示 **吃过了(完成态)**，就要用到助动词，`have`，e.g. have eaten\n- 为了协助它表示 **正在吃(进行态)**，就要用到助动词，`be`，e.g. is eating\n- 为了协助它表示 **被\"吃\"**，就要用到助动词，`be`，e.g. is eaten\n- 为了协助它表示 **有能力吃**，就要用到助动词，`can`，e.g. can eat\n- 为了协助它表示 **有可能吃**，就要用到助动词，`might`，e.g. might eat\n- 为了协助它表示 **有义务吃**，就要用到助动词，`must`，e.g. must eat\n- 为了协助它表示 **否定**，就要用到助动词，`do`，e.g. don‘t eat\n\n**千万不要把助动词和其他实意身份做混淆**\n\n![谓语动词的三大本领](https://s2.loli.net/2021/12/04/Xix7yInRmE63Wz2.jpg)\n\n### 非谓语动词\n\n可以视作\"改动后的\"谓语动词，可以充当除谓语动词以外的所有句子成分，取代几乎所有从句，简化句子\n\n#### 一大难点\n\n不结合语境，无法和时态作区分\n\n1. 动词不定式 e.g.to eat\n2. 现在分词 e.g.eating\n3. 动名词 e.g.eating\n4. 过去分词 e.g.eaten\n   - The rabbit has `eaten`\n   - This is a half-`eaten` carrot\n\n![谓语动词 VS 非谓语动词 | 100%](https://s2.loli.net/2021/12/04/nFwubUsZy31rJgp.jpg)\n\n## 复合句（并列句）\n\n## 复杂句\n\n### 名词性从句\n\n1. 宾语从句\n2. [[表语]]\n3. 宾语\n4. 同位语\n\n### 定语从句\n\n### 状语从句\n\n## 词类\n\n1. 名词 Nouns\n   - `Rapa Rabbit` is a `rabbit`\n2. 冠词 Articles\n   - Rapa Rabbit is `a` rabbit\n3. 代词 Pronouns\n   - `I` am a smart rabbit\n4. 形容词 Adjectives\n   - I am a `smart` rabbit\n5. 数词 Numerals\n   - I ate `two` carrots\n6. 副词 Adverbs\n   - I ate two carrots `quickly`\n7. 介词 Prepositions\n   - I ate two carrots `with` chopsticks(筷子)\n8. 叹词 Interjections\n   - `Ah` ，the carrot is tasty(真好吃)\n9. 连词 Conjunctions\n   - I ate two carrots `and` a potato , `because` I was hungry\n10. 动词 Verbs\n\n![句子成分VS词类 | 100%](https://s2.loli.net/2021/12/04/PTjQeko49hMCcXE.jpg)  \nÏ\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95-%E7%94%B0%E7%80%9A%E5%8D%9A":{"title":"英语语法-田瀚博","content":"\n# 英语语法-田瀚博\n\n## 词性\n\n### 名词\n\n可数名词不要单写 a n. / the n. + 定语  \n名词在句首一般是主语\n\n### 动词\n\n及物动词 vt. 直接加宾语  \n不及物动词 vi. 不能加宾语 **没有被动**\n\n### 形容词 adj. 形容名词\n\n大部分是前置的  \nThis is a book different from other books ，形容词后置但还是修饰的 a book\n\n### 连词\n\n- 加句子 引导一个句子  \n  并列两句话 ：and or but so  \n  however，thus，therefore，furthermore 都是副词 不能连接两个句子\n- 关系连词  \n  when/if/who/how/altough/while 也不能单独引导一句话\n\n### 介词 后面加名词、动名词\n\n#### 介词短语的作用\n\n- 修饰名词  \n  I can play **soccer in my school** (定语)\n- 修饰动词  \n  I can **play** soccer **in my school** (状语)\n\n#### 介词\n\nin 在…范围  \non 在上面 impact/effect on n. 实体的/虚拟的  \nfor 介词 为了  \n连词 因为 后面加句子 =because  \nof 对于/ 强调属性  \nwith 和/用  \nto 当箭头用 改指向  \nover + n. 超过 + 抽象名词 = to/of  \nacross 遍布  \nabout 关于 + 数字相关的词 大于\n\n### 副词 adv.\n\n修饰 动词/形容词/副词\n\n### 冠词\n\na 一个 泛指  \nthe 特指 翻译成 ‘这个’\n\n### 代词\n\n任何代词在阅读中 你需要去找指代  \nthe / this / it\n\n### 量词\n\n**a n. of** n. 一堆\n\n## 句型\n\n### 主谓宾\n\nI love you  \nI am happy  \nI am in school  \n**定语 =adj. 修饰名词**  \n**状语 =adv. 修饰动词**\n\n### 主语从句 主语本身是个句子\n\n句子做主语，谓语用单数\n\n1. how/what/where 引导\n2. that 引导  \n   That you play tennis is interesting (that 指代 你打网球这件事)\n\n### 宾语从句\n\n写作中宾语从句 that 不要省略  \n阅读中 要小心 that 可能省略  \nI think that **I like to play soccer**  \nI think that That these books are good is interesting\n\n### 状语从句\n\n关系分词 + 分句 ，主句（ 主谓宾 )  \n或 主句（ 主谓宾 )， 关系分词 + 分句  \n只是顺序不同，意思完全相同\n\nAlthough I think that **That these books are good is interesting** , 主句  \n本质： 修饰动词\n\nWhile\n\n1. 分句有进行时， 一般 是 \" 当\"\n2. 没有进行时 一般是尽管 = although\n\nAs 介词: 作为 + n.  \n连词：句子  \n当/ 随着  \n因为 主句一个现象 ， as sdasdasfas  \n正如， as sb/sth v., 句首/插入语\n\nas adj. as  \n翻译时： 第一个 as 忽略，第二个 as 翻译成正如  \nThis city is as beautiful as Shanghai ( 这座美丽的城市 正如上海一样)\n\n### 定语从句\n\n本质就是形容词  \nI like this book **that is red**\n\n#### 没有逗号\n\nI like this book that is red  \n先行词做宾语，That 或者 whick 可以省略  \nI like this book ( that ) **he read**  \nThis book **he read** is good\n\n#### 加逗号 非限定\n\nwhich **可能指 book 也可能指读书这件事**  \nI like to read these book, which makes me happy  \n看到定语从句要去想修饰哪个词\n\n#### 介词 + 定语从句 + 完整句子\n\n只能用 which  \n不会修饰前面一句话  \nI like this book **in which** there is an apple （ 我喜欢这本书，在这本书上，有一个苹果）  \nI know a lots of friends among which there are many doctors ( 我知道很多朋友，在这些朋友中， 有很多医生)\n\n1. Where 和 When 引导的定语从句  \n   在定语从句中做状语  \n   Where 修饰地点，任何可以用 in 来描述的范围  \n   I like the situation in your school where( in which) I can learn many things ( 我喜欢这个氛围在你的学校，在这个氛围里，我能学到很多事)  \n   When 修饰时间\n\n专有名词 + 后面定语从句 （ 修饰专有名词 ）  \nI like WTO 20 years ago , which\n\n#### 定语从句 和状语从句的区别\n\nI can go to **shanghai** where I have many books 定语从句，修饰上海 （ 我能去上海，在上海我有很多书\n\nI can **go** to shanghai , where I have many books 状语从句，修饰 go ， (在我有很多书的地方，我才能去上海 ) 原理 不要在意语义\n\n### 非谓语动词\n\n无论多么复杂冗长的句子，它**有且仅有**一个谓语动词。  \n也是动词, 但凡是动词 你就要去想 谁发出的动词\n\n#### 没有逗号\n\nI like this book **making me happy** (形容 book)\n\n#### 有逗号\n\nI like this book,making me happy. (i,book 或者整句话 都有可能)\n\n### 动名词做主语\n\nVing + 宾语 + 谓语 (单数） + 宾语  \nThinking **that you are good** is interesting  \nProducing **computers from China** is interesting\n\n### 形式主语\n\n1. It is adj. for sb. to do sth.\n2. It is adj. that …  \n   It is important that we should read books\n\nIt plays computer ( 不是形式主语, 需要去前文找指代)  \nIt seems that you are right (这是形式主语，似乎你是对的)  \n感官动词 系动词 be\n\n### 同位语从句 解释名词内容 只能用 that\n\nI like this piece of news that is fresh 定语从句  \nI like this piece of news that I can read books  \nI like this iead/opinion/new/story ( 有内容的名词 ) that …\n\n### There be 有\n\n本质 there be + n. 整体是一个完整的句子  \nThere are **apples** 定语从句/非谓语/介词短语/同位语  \nThere is no n.\n\n#### 变形\n\nThere might be  \nThere is going to be n  \nThere exist n.\n\n### 强调句\n\nIt is adj. for sb. to do sth.  \nIt is \\_**\\_ that \\_\\_\\_**\n\n### 倒装\n\n本质 主谓宾 宾谓主\n\nthis book is among many books  \namong mant books is this book\n\n否定副词打头 后面句子是半倒装  \n否定副词 + 谓语 + 主语 + 宾语  \nI could rarely finish this  \nRarely could i finish this\n\n否定副词 only / rarely / seldom / nor / mrely / barely / not only / neither / scarely\n\n### With /without\n\n#### with\n\nWith 介词短语 不能当主语  \nWith A doing/done sth. 伴随着 A 做/被做  \n**With this book** that is red in China where you can play computers that are interesting **making me happy**, i will buy it\n\n#### without\n\nwithout + n. 状语 修饰动词 在没有… 的情况下  \nI can read this book without a computer\n\n### 插入语\n\n可以任何东西 任何形式 可以用逗号隔开，也可以用破折号隔开\n\n最常见的形式：  \nI like WTO, the/an organization that was estabilished in 1900\n\n## 时态\n\n### 一般过去时\n\n仅仅是描绘动作  \nI played soccer\n\n### 完成时 我已经\n\n之所以写完成，一定在文章中有点用  \nI have played soccer\n\n### 一般现在时\n\n一定会发生  \nThere are some reasons that **might lead** to this situation in the picture\n\n### 过去完成时\n\n拿 唐 清 现代举例  \n唐 对于清 做的事 就是过去完成时  \n唐 对于现代 做的是就是现在完成时\n\n### 现在完成进行时\n\nHave been doing 一直\n","lastmodified":"2023-09-18T14:54:47.602454792Z","tags":null},"/%E8%92%B8%E7%83%A4%E7%AE%B1":{"title":"蒸烤箱","content":"\n# 蒸烤箱\n\n美的 R6 ，蒸不错，\n\n老板的返点多，但是做工细  \n老板 982A 65 L  \n9662D 77L ，1500w 缺点 内胆不锈钢\n\n凯度 ZD 和 TD ,第一梯队中的第一梯队  \n上下独立控温，纳米搪瓷，  \nZD PRO 2 60L  \nTD PRO 2 60L\n\n方太，入局略晚\n\nEF1.i\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8":{"title":"参考链接","content":"\n虚拟滚动简单的说就是渲染在浏览器中当前可见的范围内的内容，通过用户滑动滚动条的位置动态地来计算显示内容，其余部分用空白填充来给用户造成一个长列表的假象。\n\n### 当高度不固定时\n\n- 传入动态高度，缺点 还是已知高度\n- 预先渲染至屏幕外，再渲染至屏幕内，这导致渲染成本增加一倍，\n- 维护一个 position 数组，监听 scrollTop 实时更新高度差 （后面都是写这个）\n\n### 优化点\n\n- 通过二分法寻找开始索引\n- 防止滚动过快出现白屏，在可视区域上下增加额外的预渲染区域\n- 使用 ** [[IntersectionObserver]] ** 替代 scrollTop，减少频繁计算\n- 动态资源使用 [ResizeObserver](https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver) 监听高度变化\n\n# 参考链接\n\n- [图片懒加载原理](https://hateonion.me/posts/19jan30/)\n- [浅说虚拟列表的实现原理](https://github.com/dwqs/blog/issues/70)\n- [如何高性能的渲染十万条数据(虚拟列表)](https://github.com/chenqf/frontEndBlog/issues/16)\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%99%AB%E8%99%AB%E5%AD%90%E7%9A%84%E4%B8%96%E7%95%8C":{"title":"《 虫：虫子的世界 》","content":"\n# 《 虫：虫子的世界 》\n\n# 元数据\n\n\u003e [!abstract] 虫：虫子的世界\n\u003e - ![ 虫：虫子的世界|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/499/712499/t7_712499.jpg)\n\u003e - 书名： 虫：虫子的世界\n\u003e - 作者： 刘慈欣等\n\u003e - 简介： 《虫子的世界》是刘慈欣领衔的一部科幻作品集。该书以刘慈欣的代表作《乡村教师（已签约影视）》为主打，文中既描述了人在宇宙中的卑微与渺小，同时又讴歌了人性的辉煌与伟大。在本文中，一位身患绝症的乡村教师与他的一群学生被放在星际战争的大背景下——银河系内正在暴发一场持续了几万年的星际大战，而在地球上，一位将死的乡村教师，却在为他的学生上最后一堂课。一方面是成千上万星系被外星文明毁灭的悲壮画面，一方面则是一位濒死的教师因为大爱而焕发出的生命回光——刘慈欣的作品总是能在不动生色间给人深深地震撼……\n\u003e - 出版时间 2015-08-01 00:00:00\n\u003e - ISBN： 9787568206938\n\u003e - 分类： 精品小说-科幻经典\n\u003e - 出版社： 北京理工大学出版社\n\n# 高亮划线\n\n## 乡村教师(1)\n\n- 📌 一度了。 这时村里隐约传出一声狗叫，声音很轻，好像那狗在说梦话。他看着村子周围月光下的黄土地，突然觉得那仿佛是纹丝不动的水面。要真是水就好了，今年是连着第五个旱年了，要想有收成，又要挑水浇地 ^712499-2-650\n    - ⏱ 2017-11-27 18:50:36\n\n## 打印一个新地球(4)\n\n- 📌 我不把他当作哲学家。他的《规训与惩罚》《性史》《疯癫史》我都读过。喜欢得不得了。您提到他，我觉得最深层的含义是想焊接当前知识分子关系中被折断的链条。可惜的是，福柯人没来过中国。来过也是在20世纪50年代。如果他现在到这里看看，便会感叹我们的知识分子关系在全世界范围内有多差了。由个体或文化习俗差异引发的普遍忌妒，由生活或教育条件差异造成的歧视，等等。我知道您的学校也发生过许多事情。我研究过几乎北京市所有学校的人际关系状况，不瞒您说，我发现你们学校中最有特色的是城乡矛盾，这些年来，外省乡村籍教师几乎排斥了所有本地城市教师，这虽然不能说是劣币驱除良币，但确实是一种古怪的排斥与歧视。我猜想，外省乡村教师不喜欢本地教师，是因为本地人太过孤傲。于是，他们宁可执行过往的苦大仇深政策，让整个学校的血统越来越纯正地成为一所乡土高校。 ^712499-23-551\n    - ⏱ 2019-02-12 11:03:39\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A1%8C%E5%8A%A8%E5%8D%A1":{"title":"行动卡","content":"\n#卡片/行动卡\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A1%8C%E5%8A%A8%E7%B3%BB%E7%BB%9F":{"title":"行动系统","content":"\n# 行动系统\n\n## 产生自己的行动系统\n\n指导师吴刚有三个行动系统，分别是[[GTD]]、笔记系统和日课( 每日习惯)\n\n按照收集-整理-记录笔记-归档的流程来看  \n[[我的笔记系统]]流程折腾下来目前是看到文章收藏到 notion 或者简悦中，在阅读过程中记录闪念，产生一些卡片，最好能与别的卡片产生一些链接\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A1%A8%E8%AF%AD":{"title":"表语1","content":"\n# 表语1\n\n表语，属于主语补足语，语法名词，是指说明主语的身份、性质、品性、特征和状态的词或从句，表语常由名词、形容词、介词短语、动名词、不定式、副词来充当，它常位于系动词之后。  \n如果句子的表语也是由一个句子充当的,那么这个充当表语的句子就叫做表语从句，表语就是起表述作用的句子成分之一。\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A2%AB%E5%8A%A8%E8%AF%AD%E6%80%81":{"title":"被动语态","content":"\n# 被动语态\n\n[英语语法_语法讲解：被动语态的用法_沪江英语](https://www.hjenglish.com/yufadaquan/p1221968/)\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94%E8%87%AA%E6%88%91%E5%90%AF%E5%8F%91%E4%B9%8B%E7%88%B6-%E9%98%BF%E5%BE%B7%E5%8B%92%E7%9A%84%E5%93%B2%E5%AD%A6%E8%AF%BE":{"title":"《 被讨厌的勇气：“自我启发之父”阿德勒的哲学课 》","content":"\n# 《 被讨厌的勇气：“自我启发之父”阿德勒的哲学课 》\n\n# 元数据\n\n\u003e [!abstract] 被讨厌的勇气：“自我启发之父”阿德勒的哲学课\n\u003e - ![ 被讨厌的勇气：“自我启发之父”阿德勒的哲学课|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/385/25615385/t7_25615385.jpg)\n\u003e - 书名： 被讨厌的勇气：“自我启发之父”阿德勒的哲学课\n\u003e - 作者： 岸见一郎 古贺史健\n\u003e - 简介： 一名深陷自卑、无能与不幸福的青年，听到了一名哲人主张的“世界无比单纯，人人都能幸福”便来挑战，两人展开了你来我往的思考和辩论，在一夜一夜过去后，青年开始思考，为什么“所谓的自由，就是被别人讨厌”？问题不在于世界是什么样子，在于你是什么样子。\n\u003e - 出版时间 2017-05-01 00:00:00\n\u003e - ISBN： 9787111495482\n\u003e - 分类： 心理-积极心理学\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 第二夜 一切烦恼都来自人际关系\n\n- 📌 我学历低所以更要付出加倍的努力 ^25615385-24-2832-2847\n    - ⏱ 2020-02-04 13:14:10\n\n## 第四夜 要有被讨厌的勇气\n\n- 📌 用一句话形容就是自私任性的人。哲人：的确，对以自我为中心的人物的一般印象就是这些。但是，还必须再加上一种类型。实际上，不能进行“课题分离”、一味拘泥于认可欲求的人也是极其以自我为中心的人。青年：为什么？哲人：请你考虑一下认可欲求的实质——他人如何关注自己、如何评价自己？又在多大程度上满足自己的欲求？受这种认可欲求束缚的人看似在看着他人，但实际上眼里却只有自己。失去了对他人的关心而只关心“我”，也就是以自我为中心。青年：那么，也就是说像我这样非常在意别人评价的人也是以自我为中心吗？虽然如此竭尽全力地在迎合他人？！哲人：是的。在只关心“我”这个意义上来讲，是以自我为中心。你正因为不想被他人认为自己不好，所以才在意他人的视线。这不是对他人的关心，而是对自己的执著。 ^25615385-47-972\n    - ⏱ 2020-02-04 22:14:46\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7f6wDQkB3  \n⏱ 2020-02-13 14:34:24\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A3%85%E4%BF%AE%E4%B8%89%E6%AD%A5-%E6%88%BF%E5%B1%8B%E7%B3%BB%E7%BB%9F":{"title":"照明系统","content":"\n电，是水电改造的重点，还可细分为强电、弱电、开关、插座这几个细项。  \n光，是照明。房间是否明亮、美观以及好用，很大程度上都取决于照明做得好不好。在装修时，不仅每个房间都应当按照度设置灯具，隐藏式照明也应精细化设计。  \n水，是水电改造的另一个重要环节。洗衣、洗澡、做饭都离不开水系统。通过装修，你可以获得更优质的水系统，对水压、水质以及上水线路进行改善。  \n暖，是暖通，也就是暖气、空调和通风的总称。究竟什么形式的暖通设备适合自己家？新风到底是什么？有空气净化器是不是就能替代了呢？在暖通系统一节中你将会得到解答。\n\n# 照明系统\n\n照明系统只需要考虑两点：照度以及照明位置的精细化布置。  \n照明系统=亮度设计+位置精细化\n\n## 色温\n\n色温单位是 K（开尔文），数值越低，光线越暖，数值越高，光线越冷。\n\n- 3000K 色温的光感非常温暖柔和，适合用来营造家中的温馨氛围。\n- 4000K 中性光的色彩真实，适合在化妆镜前、浴室镜前使用。\n- 而 6500K 色温因为具有蓝光强烈、氛围冷淡的特点，不推荐在家中使用。\n\n## 精细化设计\n\n那么什么样的照明设计才算精细化设计呢？我们可以通过下表，做一个测试。3 分以上及格，6 分以上优秀，9 分以上精细级照明。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202190735.png)\n\n## 各房间照明\n\n### 门厅照明\n\n门厅照明最容易出彩的设计便是入口处的感应灯光，在门口设置人体红外感应开关即可实现。在吊柜底放一个射灯，与主光源用同一个开关联动控制，开灯时也同时照亮柜子台面。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202192031.png)\n\n### 厨房照明\n\n每个台面、水槽、灶台上乃至每个抽屉和柜子里都应该有照明。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202192116.png)\n\n### 卫生间照明\n\n洗手池和镜子是卫生间照明设计的重点对象。这面镜子不仅要在刷牙洗脸时使用，还可能是化妆镜，所以一定要有一盏镜前灯（4000K 色温，色彩才真实）。马桶区放一个低亮度的人体感应夜灯，起夜上厕所不会被强光刺激。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202193047.png)\n\n### 客厅照明\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202193207.png)\n\n### 卧室照明\n\n卧室可以不设主灯，这是现代装修的新派做法—卧室照明开关只控制床头柜照明条（以及地台床的床底照明条）。剩下全部用台灯、落地灯等光源照明，这让卧室显得温馨私密。记得把所有的柜子、抽屉都加上内置照明，卧室的照明设计才算完成。\n\n### 阳台家务区照明\n\n照明设计中最容易忽略的房间就是阳台。如果将阳台当作家务区来做，那么这里的灯具精细程度并不亚于厨房。阳台的柜子和抽屉里可能存放着一年半载才会用到一次的工具（比如手电筒、螺丝刀），最需要有明亮的照明协助寻找。如果在打开抽屉的瞬间，抽屉里的感应灯条自动亮起，就会让人感到顺心之极。而天花灯位置也别忘了设置一盏能够直接照亮洗衣机区域的嵌灯，这样才不会洗完衣服在滚筒里遗落衣物。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202193338.png)\n\n# 电系统\n\n电系统=强电+弱电\n\n强电中单单是确定插座的位置，都值得细细琢磨几天：想在衣柜里安装感应灯条，那么在衣柜后方就要预留插座；厨房水槽下的橱柜里只留一个插座可远远不够，净水机、垃圾处理器、软水机、小厨宝和洗碗机统统都要用到插座。可布置插座开关的位置还只是强电系统中最表面的一步，要进行进一步电改造，你还应该知道如何改良强电箱里的空气开关和回路安排，以及装修中电线应该选择多粗的。\n\n弱电是电系统的另一大环节。网络、电视、电话相关的信号线，都属于弱电范畴。现在已经步入信息化时代了，弱电比以往更需要你在装修时充分考虑，精心安排。\n\n## 强电\n\n强电改造的最大目的，就是为了用电便利和安全。所谓强电，指的就是 220V 的交流电，是生活中绝大多数电器包括照明的动力源。强电改造环节需要考虑这三点：电线粗细、强电箱的配电设计、插座位置。只要这三点设计好，你家的强电部分就算搞定了。\n\n要知道强电怎么设计，首先要弄清电器的功率，单位是 W（瓦），功率越大的电器耗电越多。常见家电的功率：冰箱 60W、电视 200W、壁挂式空调 1300W、电热水器 3000W。\n\n冰箱所需的电流为 60/220≈0.3A，电视所需电流 200/220≈1A，壁挂式空调的电流为 1300/220≈6A，电热水器的电流为 3000/220≈14A。\n\n号越大电线截面积越大，电阻越小，能承载的电流也就越大。1.5 平电线最大允许电流为 12A，2.5 平电线最大允许电流为 19A，4 平线最大允许电流为 28A。\n\n买线的时候还会常见到两种标识：一种叫 BV，指的是铜芯单芯硬线，这种实心硬线多用于家装，字母后面会接有数字，如 BV2.5、BV4 等，指的是电线截面积多少平。还有一种电线叫 BVR，指的是多芯软线，通常家装少见。\n\n我的建议是，至少**BV2.5 起**，厨房卫生间等大功率电器较多的房间，应当更粗，至少用 4 平线。并且可以多设置几条回路来分摊用电量。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202194021.png)\n\n### 插座\n\n插座按电流又可分为两类：普通 10A 和 16A。平时常见的插座都是 10A 的，只允许合计最大功率 2200W 的电器使用。\n\n而有些超大功率电器（比如空调、地暖、热水器、浴霸、烤箱、意式咖啡机）的电线会更粗，插头的铁片也会更粗，普通 10A 插座根本插不进去\n\n#### 门厅\n\n门厅开关分两个，既有回家自动照明的感应开关，又有手动控制的开关。别忘了在门厅里预留插座，方便电器使用。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195330.png)\n\n#### 厨房\n\n厨房插座不能少，上中下三段最好都预埋插座，并且要有 16A 插座供大功率电器使用。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195353.png)\n\n#### 卫生间\n\n卫生间的电器虽都是小件，可数量一点也不比厨房少，只有精细化的电布置才能用得舒服顺手。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195430.png)\n\n#### 餐厅\n\n餐厅只设置一个插座可不够，餐厅会用到的电器有：电磁炉、微波炉、热水壶、面包机等。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195453.png)\n\n#### 客厅\n\n客厅灯具开关要精简，一个双开开关即可。客厅插座却绝不能少，除了房间四角默认布置的插座之外，还应在电视柜内多设置几个插座，以便使用影音电器、网络设备等。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195516.png)\n\n#### 阳台家务区\n\n承担家务功能的房间，电器设备一定不会少。把阳台的家务区当成厨房来做就可以了。凡是柜子内都应该有照明，侧墙上也应该有十五孔插座用来供家务电器使用，另外别忘了给洗衣机预留插座。只有精细化、人性化的插座布置，才能让家里电器用起来得心应手。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202195609.png)\n\n## 弱电\n\n弱电指的是电压数较小（36V 安全电压以下）的直流电路  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202210723.png)\n\n### 网络\n\n在装修的水电改造中，网线一定要预埋好一些的，因为这将直接决定将来你家的网络速度。网线的型号叫作“类”，我们通常说几类网线，比如五类（CAT5）、超五类（CAT5e）、六类（CAT6）等。网线的类数越高，速度越快，线材也越粗。可以通过网线的外皮标识，来辨认是几类网线。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202210809.png)\n\n网络有着木桶效应—最终上网速度取决于整个线路最弱的那段。所以整条网络线路的全部设备都要提升到同一个档次：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202211818.png)\n\n#### 单路由器\n\n光猫进来直接接无线路由器就搞定了。相信这是绝大多数家里的做法，这种方案适合房屋面积小于 100m2 的单层住宅。如果对有线网口的需求量更多，可以在路由器后接一台交换机来解决。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202211852.png)\n\n#### Mesh 路由器\n\n对比买两个传统路由器并将其中一个设置为 AP 模式的方案，其最大的优势在于：Mesh 路由器系统可以全屋使用同一个 SSID（Wi-Fi 名称），在不同房间上网时不需要来回切换不同路由器。\n\nMesh 系统本体路由器和分身扩展路由器之间，强烈建议使用网线直连的方式（而不建议使用无线的方式互连，因为会降低分身扩展的信号强度），**这就需要在装修硬装时提前在各房间需要分身路由器的地方，预埋好网线和网口。**\n\n## 注意事项\n\n### 弱电布置注意事项：\n\n1. 弱电线管要与强电线管平行走线，并且相距 30cm 以上，以避免强电对音频视频信号的电磁干扰。如果有强弱线管交叉时，需要用静电屏蔽铝箔包起来并接地，来进行屏蔽措施。\n2. 低音炮同轴信号线出线 2m 以上，以方便调整低音炮位置。\n3. 投影仪至少预埋一条 HDMI 备用线，并预留空管，方便后期加线。\n\n### 强电布置注意事项：\n\n1. 可以给影音室的设备柜单独一条强电回路（可降低外界电器的干扰—比如冰箱压缩机一启动，音响可能会出爆音）。\n2. 居中的茶几下可预埋地面插座（地插），方便手机充电和使用电脑等需求。\n\n# 智能家居\n\n## 推荐\n\n### 一体式智能马桶\n\n智能马桶，非常体贴好用。能感应人来自动开盖、自动加热马桶圈，用完自动冲水，夜里自动亮夜灯。属于让人用过一次之后就再也用不回去的智能设备。\n\n### 人体感应灯\n\n精细化的照明，尤其是还不需要自己手动开关，能极大地提高生活品质。在需要的时候自动亮，虽然简单，但这其实才是智能的真正奥义—无微不至却又无影无形。\n\n### 智能门锁\n\n### 全屋智能系统\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A3%85%E4%BF%AE%E4%B8%89%E6%AD%A5-%E7%A9%BA%E9%97%B4%E5%B8%83%E5%B1%80":{"title":"装修三步-空间布局","content":"\n# 装修三步-空间布局\n\n相信许多朋友走进自己未来家的毛坯房里，拿出一张 A4 纸画个草图，标记出厨房、卫生间、沙发、电视和餐桌，然后自信满满地觉得这就已经思考成熟，可以开始装修了。\n\n其实装修不是简单地摆家具，而应该从人的行为出发，预想你将来的生活行为路线—从进门到出门，从起床到化妆更衣，从下班买菜回家、洗菜切菜到烹饪上桌，把自己想象成这个温馨的家里追求生活品质的主人。用细腻的感情、打造温馨家庭的思维来思考：\n\n- 你会发现，厨房不仅需要灶和水槽，还要有一个足够大的切菜区域和灶旁盛菜区域。\n- 你会发现，一进门需要先脱鞋、脱外套、摘帽子，然后挂包、挂钥匙，这一系列行为动作都需要对应的收纳储物家具。\n- 你会发现，客厅未必一定要墙多长沙发就多长—对着前面的电视机。也许自己未来的家可以是一个能够与亲朋好友围坐在一起聊天交流、读书、听音乐或与孩子玩耍的空间。\n- 你会发现，每个卧室一组 1.5m 的衣柜可能并不足以满足你对穿衣打扮的需求。“我的主卧要有一个整间衣帽间，像大明星那样！”\n- 你还会发现，或许不需要把三居室中的所有房间都装修成卧室（摆上一张床和一组小衣柜）。如果家里长期只有夫妻俩住，把原本是次卧的房间打造成影音室、书房或健身房，说不定更能满足二人世界的高品质生活需求。\n\n## 玄关\n\n这里是家里使用频率最高的地方，也是开门见山展示家里品位的场所，却又是在装修时最容易被人忽略的空间。它的功能需求其实极大，在玄关里要解决许多实际的问题—\n\n- 家里来客人衣服挂哪里（是不是只能搭在餐厅椅背上或者客厅沙发上）；\n- 进门换鞋脱下的鞋放哪里（是不是只能杂乱无章地摆在过道当中）；\n- 外面下雨了雨伞是否能很快被找到；\n- 钥匙、钱包能不能在出门前就摆在手边；\n- 有没有一盏灯在欢迎你归来—随着你入户换鞋而亮起（还是你只能到家后匆忙地在黑暗中寻找灯具开关）。\n\n### 想象场景\n\n想象这样的使用场景：进门之后要脱下脚上的运动鞋，换上拖鞋，还要脱掉大衣摘掉包，放下钥匙和雨伞。而收寄快递这种事情，也通常发生在门口，这时又需要纸盒、快递单、泡沫、剪刀、胶带等与快递相关的物品。还有一些设备工具类，如扳手、电钻等也有不少人习惯收纳在玄关处。\n\n### 鞋柜\n\n鞋柜的深度比男主人最大号的鞋子深一点就可以了，通常是 35cm。鞋柜下方应该空出 15cm 的高度，以便把常穿鞋放在开敞的明面上。另外，别忘了在方便处放置鞋拔子。\n\n### 挂衣钩\n\n进了屋挂大衣、挂帽子、挂包包，这一系列动作都需要在玄关完成。实现此功能的物品可以是一排钉在墙上的挂钩、独立式衣帽架。如果空间宽敞的话，可以是一个衣柜。\n\n### 储物柜\n\n台面上放钥匙、钱包。还可以摆花瓶、放台灯，家里的温馨气氛从进门起油然而生。柜子里可以收纳拆快递用的剪刀、快递单、快递盒、雨伞、雨衣、电动自行车充电器等。\n\n### 镜子 （个人感觉非必要\n\n出门前对着门厅的镜子再一次整理仪表，让自己信心满满，保持一整天的好心情\n\n## 厨房\n\n### 开放式厨房\n\n开放式厨房的优缺点优点：\n\n1. 开开心心地边聊天边准备饭菜。厨房终于成为家庭的中心。\n2. 夏天做菜可以吹空调。客厅吹来的凉风让厨房时刻都舒服极了。\n3. 拿东西便捷。随手就能从餐厅、客厅走两步到厨房冰箱拿两听可乐。\n4. 空间开阔。放眼望去一整片的 LDK（起居室、餐厅、厨房），视野开阔敞亮之极。  \n   缺点： 1.偶尔会有少许油烟。如果你是西餐爱好者，那就更不必担心了。 2.需要保持整洁度。洁癖和勤快者可以不必担心。\n\n因此，如果你是一个勤快的人，能做到每次炒完菜就做好厨房清洁，另外将厨房用具买得精致、美观一些，那么开放式厨房将非常适合你。\n\n### 厨房三大件\n\n厨房三大件。分别是洗碗用的水槽、炒菜用的炉灶以及冰箱。在厨房区域合理摆下它们三个，厨房就已经设计完成了一大半。其中灶和水槽相当简单，把它俩看成两个底面为 90cm×60cm 的方块即可。而冰箱则不一定非要放进厨房里，还可以考虑将冰箱放在离厨房不远的厨房外部，以节约寸土寸金的厨房面积。\n\n灶、水槽和冰箱这三大件是厨房设计中最优先摆放的，其他一切东西都要为其让步。按照下面七条原则，像摆积木一样把它们三个摆进你的厨房里。\n\n1. 水槽靠窗放置，洗菜、洗碗采光好。\n2. 水槽旁要有 30cm 距离，用来放置沥干架（晾洗过的盘子和碗）。\n3. 灶与水槽之间，要有 70cm ~ 140cm 长度的备菜、切菜台面。\n4. 灶旁离墙或冰箱至少 20cm，用来盛菜。\n5. 大厨房可以考虑中间做成厨房中岛，惯常做法是：把水槽放在厨房岛上  \n   厨房岛台高 95cm：比正常厨房台面高 10cm。高一点的水槽可以洗菜不弯腰。同时 95cm 又刚好是吧台的合适高度。\n6. 别忘了冰箱开门时所需的空间。 约等于 1 ㎡\n7. 需要记住的几个厨房关键尺寸：\n   - ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202124358.png)\n   - 操作台面通常深度是 60cm。但如果厨房太小，为了满足 1m 的过道，也可做成 50cm 等其他特殊尺寸。\n   - 橱柜及挂杆的高度：85cm 台面高度是按中国主妇平均身高（160cm）算出的。如有特殊需求，可以根据自己的身高对橱柜厂家进行要求，公式（单位 cm）为：底柜台面高度=身高 ÷ 2 + 5。\n\n### 厨房柜子\n\n1. 地柜\n2. 吊柜\n3. 高柜 （高柜具备强大的收纳能力。可以用来放冰箱、烤箱、微波炉、洗衣机、软水机等大型厨房电器。如果你家有足够的厨房空间，那么放几组高柜，既实用又高端大气上档次。\n\n### 提高生活品质的厨房设备\n\n1. **近吸式抽油烟机**  \n   如果是开放式厨房或者喜欢爆炒的朋友，家里装修必须选择吸力强劲的抽油烟机。决定抽油烟机吸力的有两点：1.抽油烟机离烟道近；2.抽油烟机离灶近。\n2. 抽拉式水槽龙头\n3. 厨房空调  \n   夏天的厨房是家中最热的地方，空调本应是每一个厨房都安装的电器，却不知何故极不普及。在厨房吊顶上嵌入专用的厨房空调（中央空调），定点送风，可以实现吹人不吹灶，让夏日的烹饪不再是一场汗流浃背的战斗。\n\n## 卫生间\n\n卫生间也许只占家里不到 5%的面积，但它的地位跟厨房一样，是整个装修中最重要、最需要花心思的地方\n\n### 卫生间四大件\n\n#### 洗脸盆\n\n1. 小型盆\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125314.png)  \n   \u003e 深度 27cm 是小型盆的典型尺寸，如果是小户型，尤其是在洗脸池对面放的是马桶或是淋浴的情况下，小型盆可以让出更多的过道空间，但是洗脸的时候非常容易溅出水来，台面上也没什么空间放太多东西。\n\n2. 一体盆\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125332.png)  \n   \u003e 最普遍的洗脸池台盆，台盆面积比较大，不容易溅出水来。一体成型的瓷面好打理，溅出的水往池里一抹就好了，同时用的玻璃胶也比台上盆要少，不容易滋生霉斑。\n\n3. 台上盆\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125430.png)  \n   \u003e 台上盆最大的优点是**好看**，可选的造型多种多样：有圆的、方的、椭圆形甚至青花瓷和土豪金。**然而台盆与台面间隙有卫生死角，较难打理**。安装时，间隙处的玻璃胶务必使用防霉 7 年或 10 年的高级玻璃胶，否则日久天长容易发黄变黑。\n\n4. 双台盆\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125513.png)  \n   \u003e 如果卫生间供放置洗脸池的地方很宽敞，宽度大于 1m，那么恭喜你可以考虑升级豪华双盆了。双台盆是提升生活品质和卫生间档次的最佳选择。\n\n#### 马桶\n\n马桶依下水方式，可分为墙排马桶和地排马桶。地排常见坑距（下水中心点与墙的距离）有 305mm 和 400mm 等。而墙排既可以是家里原本就预埋的墙排下水，也可以地排改墙排。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125731.png)\n\n1. 墙排马桶  \n   强烈推荐墙排式马桶，因为可以借助这 20cm 的假墙让卫浴设备全部壁挂，创造出极为整体、好看又好用的效果。让大家了解什么叫“一堵假墙拯救整个卫生间”。 （能放什么卫浴设备？？？  \n   ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202125816.png)  \n   ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130526.png)\n\n2. 地排马桶\n\n#### 淋浴\n\n真正的干湿分区不是通过“淋浴房”这种简单粗暴的方法实现的，而是应当用隔墙、玻璃隔断和门，这些划分空间的工具来达成。\n\n#### 浴缸\n\n#### 尺寸\n\n下面是这四大件所需的最小尺寸。注意：所有尺寸都是净尺寸，即瓷砖表面之间的距离（贴完砖每侧墙会比毛坯时增加 3cm 左右）。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130108.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130131.png)\n\n### 提升卫生间品质的小物件\n\n1. 智能马桶圈\n2. 拉出式水龙头\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130346.png)\n\n3. 多合一浴霸\n4. 带插座和照明的镜柜\n\n   \u003e 如同专业化妆镜一般四周嵌入 LED 灯条的镜柜，让人站在镜子前化妆时，脸不再成为阴影面。柜里还应当设有内置插座，方便电动刮胡刀、洁面仪、电动牙刷、吹风机等电器的充电及使用，不会让乱糟糟的电线占据台面 。\n\n5. 马桶喷\n\n   \u003e 枪挂在马桶旁边，既能方便冲洗马桶，连边角缝隙都能冲干净，又能方便冲刷卫生间的地面和墙角。安装时只需在马桶水箱上水口处加装一个三通即可。\n\n### 不要忘的细节\n\n第一件：洗澡时衣服放哪里。解决方案可以是一个不在淋浴区的台面（浴室凳、搁物架甚至是洗衣机），也可以是卫生间门上或墙上的一排钩子。\n\n第二件：上厕所刷手机是常态，所以要有一个随手放手机的地方。另外厕纸、卫生巾也应有方便拿取的台面或抽屉柜子放置。解决方案可以是马桶边的小台子，或者是马桶边放一把多功能浴室凳，另外壁挂马桶后面的矮墙上方，可以安装一组浅吊柜，里面收纳卷纸、玻璃水等卫生间用品。\n\n### 卫生间防臭\n\n第一种是下水口。包括所有明面上能看到的地漏，和明面上看不到的下水管，比如洗脸池、马桶和浴缸下水（不要忘记浴缸和洗脸池的溢水口也都是直通下水口的）。\n\n第二种是排风扇。在大风天时，通风管道里的污浊气味也可能会在强大的风力作用之下逆流到家里。  \n一张表总结卫生间防臭  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130732.png)\n\n## 餐厅\n\n餐厅绝不仅仅是用来就餐，还需要收纳许多与就餐相关的物品：吃饭时需要使用餐巾纸，手机充电需要充电线，看电视需要遥控器，喜欢做咖啡的朋友要摆上一台意式浓缩咖啡机和几盒胶囊咖啡，喜欢喝茶的朋友需要茶叶、茶具、电热水壶，注重健康保养的朋友餐前饭后可能还要服用各类药品和营养保健品。厨房空间较小的家，或许连微波炉、电饭煲都要挪进餐厅。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202130911.png)\n\n## 客厅\n\n之所以把客厅放到玄关、厨卫和餐厅之后，是因为真正能让家用起来舒服的地方是卫生间和厨房，展示给外人的门面是门厅，而真正与家人团聚以及会见朋友的地方，是餐厅。因此这四间屋子值得花费大量心思去布局和打造。\n\n在我看来，客厅更应该是展现主人品位的地方。藏书多的高知家庭可以打造一整面墙的玻璃书柜。热爱音乐的人可以摆上他的乐器和喜欢的唱片。喜欢茶和古玩的屋主，可以用展示柜摆放自己收藏的茶具和茶叶。喜欢坐在家中和朋友聊天的屋主，可以在客厅中间铺张地毯，布置几组小沙发围成一圈。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131112.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131128.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131138.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131215.png)\n\n说不定，调个方向就好了如果你家的客厅和餐厅不是各自独立的房间，而是 LD 型（Living 客厅+ Dining 餐厅）或者是 LDK（Living 客厅+ Dining 餐厅+Kitchen 厨房）时，别忘了柜子应当整墙通长一体设计，让柜子不像是后打的，而像是原本就“长”在墙上，看起来更自然、更有整体性。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131307.png)\n\n### 客厅案例\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131413.png)  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131423.png)\n\n#### 沙发后的背景墙比电视墙更有人情味\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131509.png)\n\n#### 小空间可以创造出更加亲密的围坐感\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131535.png)\n\n#### 沙发和座椅共同围合成充满生机的起居室\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131600.png)\n\n### 电视 vs 投影\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202131710.png)\n\n#### 电视\n\n电视就是一个超大号显示器，主要是看它的显示效果好不好，其他可有可无的功能（比如 3D、智能、曲面）不必过多考虑，选电视时重点考虑下面三个要素即可：\n\n1. 4K 指的是分辨率为 3840（≈ 4K）×2160 像素的屏幕\n2. OLED。传统的 LCD 或 LED 像素本身不能发光，所以需要背光源提供背光，这导致传统屏幕在纯黑显示时其实并不是纯黑，而是偏灰甚至偏蓝，这种“漏光”现象让传统 LCD（LED）屏幕的色彩对比度较差，画面黑的地方不够深邃。OLED 屏色域广、画面鲜艳、对比度强，是完胜传统屏幕、画质有飞跃性提升的电视产品。\n3. HDR.可以理解为电视机时时帮你做 PS 处理。从而使得亮度、色彩、对比度全方位改善画质的画面技术。\n\n## 阳台\n\n打造家务区的前提条件：要有污水下水口（注意不能是雨水口）。只要有污水口的阳台，就可以打造一个功能完整的阳台家务区。\n\n家务区里可以摆放这些东西：洗衣机、吊柜、搁板、挂杆、水龙头。地方大的话还可以放进一个洗手池，还可以将烘干机叠放在洗衣机的上面。\n\n## 卧室\n\n想明白未来的家到底会有几个人居住\n\n### 床\n\n首先不提倡的是打榻榻米。  \n国内流行的榻榻米，并不是严格意义上的日式榻榻米，其实应该叫作大炕。全屋定制的厂家宣传其多功能性及收纳能力，可实际使用起来很不方便，因为床垫铺好就难以再抬起来了。  \n另外榻榻米并不舒服，就算用了高档席梦思床垫也无法抵消最下层的坚硬。更大的硬伤是：打了榻榻米这个房间就只能用于睡觉，永远无法改造成其他用途的房间了。\n\n推荐之一便是储物床，可以是抽屉柜床也可以是高箱气压床。换季的被子统统放到床下储藏，方便又省地，甚至床头板都可以有储物空间，睡觉时随手放眼药水、眼镜、手机。  \n推荐之二的是软包床，晚上靠在后面软软的垫子上看书、看电视，简直太惬意。软包床要选购现代的，千万别选古典欧式风格的软包床，过于土豪风。\n\n注意：**某些软包床和高箱气压床会对床垫有高度限制**（比如只能配 23cm 以下厚度的床垫），所以购床架时务必提前考虑好与之搭配的床垫。\n\n人一生的三分之一时间都在床垫上的睡眠中度过，为了让自己有一个更高质量的睡眠，床垫的钱最不应该省。装修可能都要花个几十万，一个千元级、万元级的床垫还是不过分的吧。\n\n### 衣柜\n\n定制价格贵\n\n价钱还不是关键区别，大品牌成品衣柜的做工质量和设计成熟度还要远远高于定制衣柜，成品衣柜经过无数次市场的检验，普遍不会出问题。但定制衣柜完全是一次性设计，给你家衣柜的设计时间通常只有短短几十分钟，非常容易出现诸多奇奇怪怪、令你抓狂的问题：比如搁板对不齐、门板扣不上、轨道不平行、结构不合理、尺寸考虑不周等。\n\n就算你期望的是顶天立地一面墙式的衣柜，也完全可以用成品柜子，上面露出的几厘米让施工队包一下，就是“定制衣柜”，实际上大部分定制衣柜厂商也是这么干的（用批量生产的成品衣柜上面包个顶），收的却是一对一服务的定制价格。\n\n#### 强烈推荐自己设计\n\n上半部分几乎不需要动脑筋，因为通常做法就是挂杆。1m 是挂上衣的合适高度。别忘了安装内置感应照明条，打开衣柜门就会自动开灯，瞬间幸福感爆棚。另外，还可选购顶柜，收纳过季的被子和鞋盒最合适不过。\n\n下半部分是唯一需要动点脑筋，人性化设计的部分。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202133014.png)  \n除去上页提到的挂衣杆、抽屉、搁板、网篮四类最常见的衣柜收纳件，还有各种各样可以强化衣柜收纳功能的小配件。建议多了解，然后根据自身需求选购。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202133033.png)\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A3%85%E4%BF%AE%E4%B8%89%E6%AD%A5-%E8%A3%85%E4%BF%AE%E9%A3%8E%E6%A0%BC":{"title":"主材","content":"\n**欧式、简欧、美式、日式、中式、东南亚、地中海等。 不推荐**\n\n# 主材\n\n装修中的主材有：地面材料（木地板、瓷砖或石材）、墙面材料（墙漆）、天花板材料（吊顶）、门和窗户。这些都是在装修的硬装部分完成的。\n\n## 地面\n\n1. 1.不要划分地面区域\n2. 2.不要用花里胡哨的踢脚线\n\n## 墙面\n\n说了这么多，那到底墙面应该怎么做好呢？其实很简单，全部刷白漆就好了\n\n### 乳胶漆\n\n通常家里墙面刷的漆，都是乳胶漆。可以理解为“墙漆=乳胶漆”。与之相对的是“油漆”，油漆是以有机溶剂为介质，而乳胶漆以水作为溶剂（水性漆）。凡是水性漆都比油漆更加安全，无毒无味。现如今绝大多数品牌的内墙漆都是乳胶漆，大品牌内墙漆可以放心大胆地选购。\n\n## 吊顶\n\n拒绝做吊顶的理由通常有两个：一是怕牺牲房间净高，二是怕花钱。  \n吊顶的功能性极为强大，它共有六大作用：\n\n1. 藏结构\n2. 藏照明\n3. 藏水电\n4. 藏无线 AP\n5. 藏空调\n6. 藏新风\n\n## 门窗\n\n### 入户门\n\n推荐：简约的入户防盗门\n\n### 室内门\n\n室内门：平开木门是最常见的室内门形式。建议门与墙面做成同一颜色材质，让门成为墙的一部分。另外平开门还可以选择超窄框和隐藏门形式。\n\n### 窗套和垭口\n\n木门厂家通常会在你家做门的时候，问你包不包窗套和垭口。如果这时你连窗套和垭口是什么都不知道的话，非常可能就默认做了，还花了不菲的价格（通常垭口和门一个价，在 2000 元左右）。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202220537.png)\n\n要知道这个理念：门窗是墙的一部分。所以应当尽可能降低门窗洞的存在感。而垭口和窗套会将门窗洞凸显出来，做出来既不美观也不简约。\n\n**所以，建议家里装修不包垭口和窗套，既省钱又简约美观。**\n\n### 门把手\n\n推荐：简约的黑色门把手\n\n### 断桥铝窗\n\n#### 型材\n\n买窗第一是看型材（窗框），窗框的型号有 50、60、70、80 等型号。数字代表窗框的厚度（毫米），数字越高窗户越厚，保温、隔声以及气密性越好。如果住宅临街建议至少用 60 系列以上的窗户，而如果周边环境非常吵闹或需要保温，则建议 70 以上型号的断桥铝窗。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202220800.png)\n\n#### 隔热条\n\n断桥铝的主体材料，依旧是铝合金，光靠手指头敲、听响声是没法区分铝合金窗和断桥铝窗的，两者最主要的区别是有没有尼龙隔热条。\n\n#### 玻璃\n\n三看玻璃。玻璃是整个建筑中保温隔音功能最薄弱的地方。通常窗户型号越高，玻璃的厚度也就越厚、中空层越多。建议至少用 5 + 15A + 5（5mm 的玻璃加 15mm 空气层再加 5mm 的玻璃）的中空玻璃，追求隔音和防寒的朋友可选用双层中空：5 + 16A + 5 + 16A + 5 玻璃。\n\n#### 五金件\n\n最后看五金件好不好。好的五金件能保证窗户开关几十年顺畅，并确保开启扇能严丝合缝，拥有更好的密闭性。\n\n大理石石材的厂家做的窗台石两侧通常都带着“小耳朵”，窗台石本身已经很突兀了，如果再有这两个小耳朵，更加破坏家里美观简约的整体装修效果。\n\n**所以，建议大家在做窗台石的时候，着意提醒石材的安装师傅，不要这两边的小耳朵。另外窗台石比墙面只突出 1cm 即可，尽量降低其存在感。**\n\n### 窗帘\n\n买什么样的窗帘才好呢？注意以下三点即可：\n\n1. 颜色低调：里层的白纱就不用说了，简简单单没有任何花纹的白色就很好。而外层可以是米黄、棕、灰，几种低调的颜色都非常适合。造型更是简约即可，不要有任何多余修饰。\n2. 顶天立地：为了让房间的视觉效果上增高，建议窗帘的尺寸不是按照窗户大小选择，而是要按照一整面墙的高度，顶天立地布置。这样看起来会显得这个房间非常宽敞明亮。当柔光透过白纱照进屋时，你的房间会有着大型落地窗一般的视觉感受。\n3. 藏帘头：窗帘顶部要藏起来。比如通过吊顶和原本天花板的高差（吊顶不要铺满，留出 15 ~ 20cm 凹槽），自然就会形成一个窗帘盒，用来藏帘头最美观不过，还不会漏光。\n\n### 家具\n\n原则就是：买简约现代的家具。所谓简约现代的家具，指的就是外形不做过度雕饰，由现代设计师设计的富有美感的家具。与之相对的是，仿照古董做的、过度雕饰的家具。再说两个选购现代风格家具的诀窍，让你轻松为家里添置高品位家具：\n\n### 日常用品\n\n经常会遇见这种情况：刚装修完很高大上的房子，怎么住进去之后却显得那么“接地气”，远没有当初设计师给的效果图好看。这很有可能是因为日常用品太过于“日常普通”，破坏了原有的装修风格。建议有条件的朋友，把家里凡是能看得见的日常用品，都换成有设计感的。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202222213.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202222229.png)\n\n### 绿植\n\n绿植的装饰起到了巨大的作用—将一个冷冰冰的建筑变成了生机勃勃且又温馨美满的家。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202222257.png)\n\n### 地毯\n\n1. 颜色低调。无须在地毯颜色上独出心裁，其实灰色、米黄色等低调的颜色就足够优雅。\n2. 图案简单。纯色无花纹的地毯是极佳选择。地毯繁杂程度不要繁过左边这张地毯。\n3. .放在人常待的地方。我们应该在什么地方放置地毯呢？通常在卧室床的区域、客厅的沙发区域，以及阳台躺椅周边。让人能够脱掉拖鞋坐下来放松的地方。\n4. 你需要一台吸尘器。如果家里购置了地毯，那么吸尘器恐怕是必需的了，因为这几乎是唯一能够清理地毯的工具。\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A3%85%E4%BF%AE%E6%9C%80%E5%A5%BD%E8%BF%99%E4%B8%89%E4%BB%B6%E4%BA%8B%E5%B0%B1%E5%A4%9F%E4%BA%86":{"title":"《装修，最好这三件事就够了》","content":"\n# 《装修，最好这三件事就够了》\n\n#input\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2023-02-02]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n## 闪念\n\n### [[装修 7 宗罪]]\n\n### 装修的本质\n\n1. 装修是对未来生活品质和幸福感的投资。\n2. 装修是一个不断买买买的过程，你的消费观在装修中将会一览无余。\n3. 装修要把钱花在刀刃上，而不是面子上。\n4. 装修预算不是越低越好，有些钱不能省。\n\n   \u003e 尤其是有刚性需求的功能性产品不能省—隐蔽工程不能省、厨房电器不能省、卫浴花洒不能省、开关插座不能省、五金防臭不能省。装修预算绝不是越低越好，盲目图便宜的装修业主其实反而容易成为不良商家的宰割对象。多花心思和时间写清自己的生活需求，调查清楚同等材料产品的低价购买途径，端正消费观做到没有癖好和偏见，才是真正的省钱之道。\n\n5. 收纳不是装修的全部，要适当留白。\n6. 陷入某种装修情结，容易走偏路。\n\n   \u003e 装修的商家有着多种多样的营销方式，传播各种吓唬人或安抚人的词汇。而不少消费者就把这些对营销术语的一知半解，当成了自己的信仰和情结：有人对板材封边有着强迫症，看不得一点没经过封边处理的刨花板；有人将实木奉为信仰，管它真实是什么，只要销售说出的产品名字里带了实木二字才能心安；有人对甲醛惊恐万分，用硅藻泥绿萝和活性炭包筑造了一个让自己心里舒坦的家；还有人对辐射恐惧，怕楼顶的信号基站，怕窗外的高压电线，怕电视柜里的路由器和厨房的微波炉，就连踩在大理石地面上都感受到脚掌隐隐有一种被灼烧般的痛；还有人对净高、风水、朝向有强迫症，等等。这些情结都会令你的装修之路越走越偏，以至走向一条路数不对却烧钱无穷的歪路。放下那些术语和成见，不带情结和信仰地装修房子，你才能轻松愉悦又经济实惠地装出一个好用又好看的家\n\n### 装修三步法\n\n装修装的是什么？应当有这样的认识：**采光、通风、水暖电的质量要比家具的布局重要；而家具的布局又要比装修风格重要。**\n\n#### 1 [[装修三步-空间布局 |空间布局]]\n\n玄关、厨卫、餐厅、客厅、卧室等所有房间的规划和家具摆放。只有精细地规划每一间房间、认真思考每一个功能、精心放置每一件家具，才能让空间和家具发挥它们最大的作用，才能住得既舒服又不浪费面积。\n\n#### 2 [[装修三步-房屋系统 |房屋系统]]\n\n与照明、电、水、暖气、空调等相关的房屋系统铺设。这是装修最基础，也是最根本的环节，水暖电如果不好用，那么生活品质无从谈起。这一步决定了家的生活品质。\n\n#### 3 [[装修三步-装修风格 |装修风格]]\n\n决定装修风格的主材、家具以及装饰，它们都应当是现代的手法和形式，这才符合时代的审美。看完这步，相信你会对美有一定了解。这一步决定了家好不好看。\n\n### 需求\n\n全屋风格要点：1.干净简约的平吊顶。全屋石膏板吊顶，边缘留缝做洗墙灯槽。2.干净简约的墙面地面。无门套门框踢脚线，白门隐藏在墙内。地面采用复古的鱼骨纹。3.房屋系统设备（照明、暖通）隐藏。外露只有装饰性的吊顶灯饰。玄关要点：1.简约的入户防盗门。与墙融为一体，毫不突兀。2.玄关虽小五脏俱全。收纳架、鞋柜、镜子、衣柜，一个都不能少。\n\n玄关要点：1.简约的入户防盗门。与墙融为一体，毫不突兀。2.玄关虽小五脏俱全。收纳架、鞋柜、镜子、衣柜，一个都不能少。\n\n厨房要点：1.极为精细化的厨房照明—厨房台面上、底柜下，甚至是吊柜顶都安装灯条。2.简约大方的橱柜门板—白色磨砂质感和隐藏式把手。3.雅士白石材作为厨房台面、厨房侧墙、中岛台台面材质。4.餐桌（中岛台）用现代优雅的吊灯。\n\n客厅要点：1.围坐式的沙发，和一堵墙的爱好（书架）。2.没有花里胡哨的吊顶，依旧是大平顶，四周灯槽。3.时尚简约的家具。4.讲究的日常用品（抱枕、花瓶、水杯、书籍）。5.隐藏线缆的挂墙式电视。\n\n卫生间要点：1.地面墙面简约大气。大面积使用统一石材，而没有用小碎砖或多种颜色的瓷砖。2.精细化的照明—水池上方（镜子下）、吊顶上、吊柜下等。3.干净简约的吊顶。石膏板大平顶，边缘留缝做灯槽。4.地排马桶改墙排马桶。美观又实用，多了明面收纳和吊柜收纳。5.干湿分离。通过玻璃门或一堵墙来实现。\n\n衣帽间要点：1.全屋大面积使用现代的材质—玻璃、镜子、金属、石材。2.精细化的照明—不论是衣柜还是整个衣帽间都有足够精细化的照明设计。3.衣帽间有座凳，换衣服才方便。卧室要点：1.无主灯设计，只用床头灯、吊顶边缘凹槽灯条作为照明。2.床居中摆放，彰显主角地位。床的造型富有设计感，且极为舒适。3.时尚美观的床头灯和床头桌。4.每个房间都有一两盆绿植。5.卧室床头做了一堵材质与众不同的墙，当然也可以是不易落灰的石材贴面。6.颜色灰色低调，顶天立地的窗帘。7.温馨的气氛，放一块地毯。\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%A3%85%E4%BF%AE-7-%E5%AE%97%E7%BD%AA":{"title":"一、着急装修","content":"\n# 一、着急装修\n\n在装修前至少应该预留两个月的考虑时间，看几本好的装修指南，和家人一起讨论生活的需求和对未来生活品质的期待，认真测量一下自己的房子并画成平面图，好好考虑每一个房间的布局和改造方案。\n\n# 二、盲目信任各种“师”\n\n说一句得罪人的实话，装修公司设计师、整体厨房设计师、空调新风设计师、定制家具设计师、家具家电的安装师傅以及你家的施工队工长，这些人对你家的一切行为出发点只有两个，赚钱和省事。说白了就是赚省事的钱，他们并不会多替你考虑房子的品质，也不会为你深思熟虑人性化设计，更不会为你家做出任何有创新的变动。\n\n装修不能靠撞大运，凭缘分。佛系装修想要遇上一个有经验、审美高、为你设身处地着想还不坑你的设计师和装修师傅，概率几乎为零。如果你毫无保留完全信任他们，只代表你可以任人宰割。\n\n# 三、乱拆墙\n\n不少人开始装修的第一件事就是拆墙，能打的都打、能拆的都拆。可这件事一定要在设计完、想好了布局、问过物业结构事宜之后再去做，否则有时不仅费力还不讨好，甚至会威胁到身家性命。\n\n### 不能拆的墙\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230202111827.png)  \n什么是承重墙？钢筋混凝土墙、剪力墙。所以一般大于 150mm 厚（抛去砂浆面漆层的净厚度）的墙最好不要动，但凡拆除时拆到结构钢筋（不是拉结筋），就不能再往下打了。另外梁也是不能拆除的，而有时梁并不在天花板底下，而是在地面上，叫作“反梁”（在客厅、阳台、窗台下会见到），也是不能拆除的。  \n通常只有 100mm 厚、140mm 厚的红砖墙、轻质隔墙（它们的简单判别方法就是用手指头敲起来有空响）才是可拆的墙体。\n\n# 四、风格不统一\n\n不讲原则的装修风格混搭就好比穿了一身名牌，但实现的效果却花里胡哨，甚至令人发笑。\n\n# 五、装修就是打柜子\n\n首先定制家具在质量上肯定不如量产的现成家具，成品家具都是经过多年市场考验的设计方案，而专门定制的经常会出一些低级设计错误，比如定制衣帽间没考虑你转身的余地、定制门厅柜没考虑到鞋的高度，更有甚者衣柜门太大或太小关不上，尺寸没对上。\n\n过多的柜子反而会让家变小  \n你家的柜子到底需不需要定制，市场上那么多成品家具方案难道真的没有一款合适你家吗？仔细想想尺寸和布局，说不定自己买个成品衣柜就能“定制”出又省钱又好看的衣柜了。\n\n# 六、不实用的家具\n\n购买家具前应当扪心自问：我真的需要这些家具吗？经常见到这样的情景：在餐厅打了一组又占地儿又花钱的酒柜，后来才发现自己压根不喝红酒。\n\n# 七、晃瞎眼的吊顶灯池\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F":{"title":"装饰者模式","content":"\n# 装饰者模式\n\n装饰者模式能够在不改变对象自身的基础上，在程序运行期间给对象动态地添加职责。跟继承相比，装饰者是一种更轻便灵活的做法，这是一种“即用即付”的方式，\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%84%E5%88%92%E8%B0%AC%E8%AF%AF":{"title":"规划谬误","content":"\n# 规划谬误\n\n规划谬误只是普遍存在的乐观偏见的一种表现形式。我们中的大多数人都认为世界是美好的，但世界却没有想象般美好；我们觉得自己的贡献很大，但事实上并没有那么大；我们认为自己设定的目标很容易实现，但其实实现的可能性也没有那么大。\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%86%E5%B7%AE":{"title":"视差","content":"\n# 视差\n\n#卡片/术语卡\n\n## 简介\n\n视差是由于观察者的运动（而非物体本身的运动）造成的物体位置的明显偏移。\n\n## 例子：\n\n举个例子，假设你在视线正前方一臂距离处竖直握着一支钢笔。保持这支钢笔静止，把你的头从左向右移动，注意钢笔和背景中其他物体的位置发生的偏移。这些物体位置的明显偏移当然是由于你的头在运动，而不是钢笔和背景中其他物体的任何运动。这是视差的一个例子，也就是说，物体位置的明显偏移是由于你的运动。\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%86%E6%9D%8F":{"title":"视杏","content":"\n# 视杏\n\n## 一面\n\n路由懒加载  \n路由传参  \nreact 的理解  \nDOM 操作  \n数组的方法\n\n## 三面\n\n估计就是做的比较深的项目吗？  \n有为项目学习一些更多的知识点吗\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%86%E9%A2%91%E5%8F%B7":{"title":"提问并找出答案","content":"\nDocs 后流量会下降\n\n- 比拼选品，比拼执行力\n\n私域\n\n1. 自身优势选品\n2. 工具，产妈妈\n3. 二次创作，手工精剪\n4. 一鱼多吃\n\n混剪工具 BGM\n\n1. 规则看好几遍，\n2. 奖励规则，积极参与\n\n# 提问并找出答案\n\n提问的水平代表你思考的水平，提问越宏观，层次越是低，越是赚不到钱。  \n通过层层追问倒逼自己问更具体的问题，来找到赚钱的路径。\n\n1. 视频号怎么赚钱？\n2. 大家在视频号上怎么赚钱的？\n3. 大家在视频号上怎么带货赚钱？\n4. 视频从哪里来的？\n5. 视频怎么剪辑的？\n6. 有什么工具？\n7. 大家在怎么做？\n8. 带的什么货？\n9. 哪些货更受欢迎？\n10. 赚的谁的钱？\n11. 大概赚多少？\n12. 投入时间怎么样？\n13. 我要是做的话第一步是什么？\n\n# 参考链接\n\n[微信视频号](https://xf8ux5k350.feishu.cn/docs/doccn6xyzY9ikk9htVUw0u8f2vc)  \n[如何利用生财，抓住视频号带货的红利](https://ro14u4yq4i.feishu.cn/docs/doccnDNYNNS4oFLmqA0eykZXw8f)  \n[拥抱抖音，编程号单条视频涨粉 1.2 万](https://articles.zsxq.com/id_u8zmeullfdkg.html)  \n[一个普通人对“个人 IP”这个词的一点体会](https://articles.zsxq.com/id_b3vhtb0xlm0f.html)  \n[低于拼多多 1-3 块快速出单，出评后调高利润的无货源抖音小店玩法](https://articles.zsxq.com/id_to3cbqwpp7jv.html)\n\n[聊一聊我对视频号直播的了解](https://articles.zsxq.com/id_zuufsaehick1.html)  \n[手把手教学视频号](https://dwftbwhg9l.feishu.cn/docx/doxcnn9IYwUkxGkOPYsWUjrHJhh)  \n[微信短视频带货，不太详细教程.](https://bingosay.notion.site/9e578062ac4e4adfad642c4613118045)\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%86%E9%A2%91%E6%B7%B7%E5%89%AA":{"title":"视频混剪","content":"\n# 视频混剪\n\n# 视频下载\n\n- [GitHub - iawia002/lux: 👾 Fast and simple video download library and CLI tool written in Go](https://github.com/iawia002/lux)\n\n# 参考资料\n\n- [程序化自动生成视频实现Youtube掘金 · 语雀](https://www.yuque.com/erliang-vtlak/nynb90/dw1b3q?)\n- [单人日产200条实战攻略](https://wx.zsxq.com/dweb2/index/topic_detail/214822451152541)\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97":{"title":"《 解忧杂货店 》","content":"\n# 《 解忧杂货店 》\n\n# 元数据\n\n\u003e [!abstract] 解忧杂货店\n\u003e - ![ 解忧杂货店|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/752/449752/t7_449752.jpg)\n\u003e - 书名： 解忧杂货店\n\u003e - 作者： 东野圭吾\n\u003e - 简介： 《白夜行》之后，东野圭吾最受欢迎的作品。作品超越推理小说的范围，却比推理小说更扣人心弦，出版当年即获中央公论文艺奖。僻静的街道旁有一家杂货店，只要写下烦恼投进店前门卷帘门的投信口，第二天就会在店后的牛奶箱里得到回答：因男友身患绝症，年轻女孩静子在爱情与梦想间徘徊；克郎为了音乐梦想离家漂泊，却在现实中寸步难行；少年浩介面临家庭巨变，挣扎在亲情与未来的迷茫中……他们将困惑写成信投进杂货店，奇妙的事情随即不断发生。生命中的一次偶然交会，将如何演绎出截然不同的人生？\n\u003e\n\u003e - 出版时间 2014-08-01 00:00:00\n\u003e - ISBN： 9787544270878\n\u003e - 分类： 精品小说-悬疑推理\n\u003e - 出版社： 南海出版公司\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6Tw4TEfut  \n⏱ 2017-09-16 16:45:31\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B":{"title":"《计算机网络自顶向下》","content":"\n# 《计算机网络自顶向下》\n\n寻址是一个问路过程\n\n## 协议分层\n\n自顶向下\n\n- 应用层(FTP、HTTP、SMTP)\n- 运输层 ([[UDP]], [[TCP]])\n- 网络层 (IP)\n- 链路层(路由分发,将数据上报到网络层)\n- 物理层(双胶铜线、单模光纤等)\n\n## 网络安全\n\n### 病毒\n\n**至今为止的多数恶意软件是自我复制(self-replicating) 的:一旦它感染了一台主机, 就会从那台主机寻求进人因特网上的其他主机，从而形成新的感染主机，再寻求进入更多 的主机。以这种方式，自我复制的恶意软件能够指数式地快速扩散。恶意软件能够以病毒 或蠕虫的形式扩散**\n\n### Dos攻击\n\n- 弱点攻击。这涉及向一台目标主机上运行的易受攻击的应用程序或操作系统发送 制作精细的报文。如果适当顺序的多个分组发送给一个易受攻击的应用程序或操 作系统，该服务器可能停止运行，或者更糟糕的是主机可能崩溃。\n- 带宽洪泛。攻击者向目标主机发送大量的分组，分组数量之多使得目标的接入链 路变得拥塞，使得合法的分组无法到达服务器。\n- 连接洪泛。攻击者在目标主机中创建大量的半开或全开TCP连接。该主机因这些伪造的连接而陷入困境，并停止接受合法的连接。\n\n#### 计算机网络设计者能够采取哪些措施防止DoS攻击?\n\n### 嗅探分组\n\n所不在的因特网接入极为便利并让移动用户方 便地使用令人惊奇的新应用程序的同时，也产生了严重的安全脆弱性一一在无线传输设备 的附近放置一台被动的接收机，该接收机就能得到传输的每个分组的副本!这些分组包含 了各种敏感信息，包括口令、社会保险号、商业秘密和隐秘的个人信息。记录每个流经的分组副本的被动接收机被称为分组嗅探器(packet sniffer) 。\n\n因为分组嗅探器是被动的，也就是说它们不向信道中注入分组，所以难以检测到它们。因此，当我们向无线信道发送分组时，我们必须接受这样的可能性，即某些坏家伙可 能记录了我们的分组的副本。如你已经猜想的那样，最好的防御嗅探的方法基本上都与密码学有关\n\n### 伪装身份\n\n生成具有任意源地址、分组内容和目的地址的分组，然后将这个人工制作的分组传输 到因特网中，因特网将忠实地将该分组转发到目的地，这一切都极为容易\n\n为了解决这个问题，我们需要采用端点鉴别，即一种使我们能够确信一个报文源自我 们认为它应当来自的地方的机制。\n\n## 准备工作\n\n下载[Wireshark](https://www.wireshark.org/download.html)\n\n### UDP和TCP\n\n可靠数据传输、吞吐量、定时和安全性。\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%80%9A%E5%85%B3":{"title":"《计算机网络通关》","content":"\n# 《计算机网络通关》\n\n## 构成应用的 7 种基础元素\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725172839.png)\n\n1. 计算机组成原理\n2. 操作系统\n3. 计算机网络\n4. 算法和数据结构\n5. 图形学\n6. 编程技巧\n7. 编译原理\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E5%BC%80%E5%90%AF%E6%94%B9%E5%8F%98%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8E%9F%E5%8A%A8%E5%8A%9B":{"title":"认知觉醒：开启改变自己的原动力","content":"\n# 认知觉醒：开启改变自己的原动力\n\n周岭\n\n## 提出问题\n\n- 是什么样的认知？\n- 我们需要为之做出什么改变？\n- 他的中心思想是什么？\n- 我读完后，会有什么改变\n\n## 读书笔记\n\n焦虑的几种形势\n\n- 第一，完成焦虑。总是把自己的日程安排得太满，每天都活在截止期限（Deadline）面前\n- 第二，定位焦虑。误的定位只会让人觉得一切都来不及了，事实上，这根本就是错误的对标。\n- 第三，选择焦虑。有时选择太多也会让人陷入焦虑，\n- 第四，环境焦虑。\n- 第五，难度焦虑\n\n归结起来，焦虑的原因就两条：**想同时做很多事，又想立即看到效果。**\n\n理智脑：人类独有的前额皮质  \n耐心就是这样，不能急于求成，允许自己缓慢地改变，甚至经常失败。无论结果如何，和自己对话都会产生效果。  \n所以，当你感到心里有说不清、道不明的难受的感觉时，赶紧坐下来，向自己提问。\n\n感性和理性的信息处理速度天差地别，11 000000次/秒 和 10次/秒  \n怎么利用潜意识?\n\n- 在读书时一旦看到有启发的内容，就触发熔断点，立刻停止读书。\n  - ·为什么刚才这个点让我有启发？\n  - 我能够把这个启发点用在3个不同的事情上吗？\n  - 这个启发点有没有其他类似的知识？\n- 无论在生活中还是在学习上，凡是被某件事击中，“动了感情”，就要有意识地提醒自己追问原因。\n  - 为什么这个电影桥段会让我感动？发生了什么？\n  - 为什么这个产品让我这么喜欢？是什么让它与众不同？\n  - 为什么我不由自主地沉溺于这段剧情了？\n\n先用感性能力帮助自己选择，再用理性能力帮助自己思考。\n\n凭感觉找出舒适区和困难区中间的拉伸地带，让自己处于学习的拉伸区  \n《美好人生运营指南》，6条寻找人生使命的建议\n\n- 这个世界有很多事情可以做，你最想帮助哪些人？\n- 什么事让你废寝忘食？\n- 你在做什么事情的时候最让自己感动？\n- 你最让人感动的时刻是什么？\n- 如果没有任何经济压力，你会如何度过余生？\n- 闲暇的时候，你关注最多的是哪方面的信息？\n\n《坚毅》，\n\n- 设想你即将离开世界，回首一生会为什么事情而后悔？\n- 想一想你最喜欢的人物是谁？\n- 你年轻的时候是怎么度过闲暇时光的？\n\n必须动用已有的知识去解释新知识，当你能够把新学的知识解释清楚时，就意味着把它纳入了自己的知识体系，同时达到了可以教授他人的水平，并可能创造新的知识。\n\n可见“缝接”是深度学习的关键，而大多数人只完成了“获取知识”，却忽略了“缝接知识”这一步，因此，他们的学习过程是不完整的。\n\n为浅学习正名  \n如何有关联能力？\n\n- 热爱一件事\n- 输入足够多，不论是看书还是经历\n- 保持好奇心\n- 常说一句话。“ 这个道理可以用到哪里 ？”\n\n**寻找触动点**  \n不要迷恋打卡，打卡会使你做事的动机改变，陷入了为了学而学的境地  \n任务设置时要使用新策略：**设下限，不设上限。*\n\n**学习时从不过度消耗自己，只要感到精力不足，就停下来主动休息，这反而使他们精力桶的水位得到快速回升**\n\n想先看到结果再行动的人往往无法看到结果。\n\n## 读后感\n\n这本书的作者是一个‘缝合怪’，这并不是贬义，他这本书也在贯彻他的思想。他读了很多书，很多知识都是我之前看到过的，但是作者都将其用起来了，就像书中所说，书不在读的快读的多，而在你能把其中一点记住并应用到生活中，比如刻意练习他的点就在于 超出舒适区的大量练习，比如金字塔原理中，如何更好的学习的七层金字塔，也就是被动学习和主动学习的知识留存率，在每次阅读完后，将新的知识和老的知识体系进行缝接，将知识真正的融入到自己的知识体系中，利用弗曼曲线，讲知识用更简单，通俗易懂的，自己的话讲出来，这才是深度学习。\n\n## 读书记录\n\n2021.2.23 - 2021.2.24\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E5%BC%80%E5%90%AF%E8%87%AA%E6%88%91%E6%94%B9%E5%8F%98%E7%9A%84%E5%8E%9F%E5%8A%A8%E5%8A%9B":{"title":"《 认知觉醒：开启自我改变的原动力 》","content":"\n# 《 认知觉醒：开启自我改变的原动力 》\n\n# 元数据\n\n\u003e [!abstract] 认知觉醒：开启自我改变的原动力\n\u003e - ![ 认知觉醒：开启自我改变的原动力|200](https://weread-1258476243.file.myqcloud.com/weread/cover/86/YueWen_33628204/t7_YueWen_33628204.jpg)\n\u003e - 书名： 认知觉醒：开启自我改变的原动力\n\u003e - 作者： 周岭\n\u003e - 简介： 为什么我们做事总是急于求成、避难趋易？所谓有耐心，就是要“咬牙坚持、死磕到底”？如何不再用“三分钟热情”和“打鸡血”的方式做事？如何保持极度专注？如何消除焦虑？如何提高学习能力？这是一部可以穿透时间的个人成长方法论。7大底层概念，20个成长关键词，助你彻底走出焦虑与迷茫，拥有清醒的认知、清楚的目标、清晰的路径、清爽的情绪。通过“大脑构造、潜意识、元认知”等思维规律，你将真正看清自己；通过“深度学习、关联、反馈”等事物规律，你将真正看清世界，提升自控力、专注力、学习力……只有洞悉底层的内在规律，我们才能真正开启自我改变的原动力。\n\u003e - 出版时间 2020-06-01 00:00:00\n\u003e - ISBN： 9787115543424\n\u003e - 分类： 心理-认知与行为\n\u003e - 出版社： 人民邮电出版社\n\n# 高亮划线\n\n## 第一章 大脑——一切问题的起源\n\n- 📌 想同时做很多事，又想立即看到效果 ^33628204-6-2741-2757\n    - ⏱ 2021-02-23 14:14:11\n- 📌 耐心就是这样，不能急于求成，允许自己缓慢地改变，甚至经常失败。无论结果如何，和自己对话都会产生效果。 ^33628204-7-7982-8032\n    - ⏱ 2021-02-23 14:23:12\n\n## 第二章 潜意识——生命留给我们的彩蛋\n\n- 📌 所以，当你感到心里有说不清、道不明的难受的感觉时，赶紧坐下来，向自己提问。 ^33628204-8-3713-3757\n    - ⏱ 2021-02-23 14:28:17\n- 📌 理性思维虽然很高级，但在判断与选择方面可能并不具有优势，它那蹩脚的性能实在无法与灵敏快速的感性媲美。 ^33628204-9-6052-6102\n    - ⏱ 2021-02-23 14:41:18\n\n## 第三章 元认知——人类的终极能能力\n\n- 📌 比如说有人骂你，你就想骂回去，但是你在这个反应当中会有一个哪怕是零点几秒的间隔去思考或者审视，这个间隔就是你获得的教育或者经历的意义。 ^33628204-11-2470-2537\n    - ⏱ 2021-02-23 15:48:05\n\n## 第五章 学习力——学习不是一味地努力\n\n- 📌 任务设置时要使用新策略：设下限，不设上限。 ^33628204-18-5302-5350\n    - ⏱ 2021-02-23 18:20:26\n- 📌 他们学习时从不过度消耗自己，只要感到精力不足，就停下来主动休息，这反而使他们精力桶的水位得到快速回升 ^33628204-20-2163-2233\n    - ⏱ 2021-02-23 18:26:56\n\n## 第七章 情绪力——情绪是多角度看问题的智慧\n\n- 📌 好的交流都是客观的、不带主观猜测的交流，这样才会让双方都摆脱“战斗模式”。 ^33628204-25-6332-6369\n    - ⏱ 2021-02-24 10:13:09\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n这本书的作者是一个‘缝合怪’，这并不是贬义，他这本书也在贯彻他的思想。他读了很多书，很多知识都是我之前看到过的，但是作者都将其用起来了，就像书中所说，书不在读的快读的多，而在你能把其中一点记住并应用到生活中，比如刻意练习他的点就在于 超出舒适区的大量练习，比如金字塔原理中，如何更好的学习的七层金字塔，也就是被动学习和主动学习的知识留存率，在每次阅读完后，将新的知识和老的知识体系进行缝接，将知识真正的融入到自己的知识体系中，利用弗曼曲线，讲知识用更简单，通俗易懂的，自己的话讲出来，这才是深度学习。 ^16142247-7om2sYfd6  \n⏱ 2021-02-24 15:22:36\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%AF%E7%9B%9F":{"title":"讯盟","content":"\n# 讯盟\n\n1. webpack 插件生命周期\n2. react.memo 第二个参数\n3. 了解 [[bufferArray]] 吗\n4. 知道 [[blob]] 和 [[fileReader]] 的区别吗\n5. 切片里具体是什么知道吗\n6. Codereview 做了什么\n7. [[Vue 和 react 的 hooks 区别]]\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%B0%E5%BD%95%E5%BD%B1%E7%89%87":{"title":"记录影片","content":"\n今天本来想在[[Notion]]搭建一个影音库的，但是想想豆瓣的看过都懒得点，真的会去维护好这个影音库吗\n\n这个时候要问问自己的需求是什么，记录一下以后翻回来找资源还是单纯觉得封面墙会比较好看。\n\n自动化同步的方式，用[[AirTable]]对接豆瓣 api 的方式好像会合适点。\n\n暂时先不折腾了，想了想是一个伪需求\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%B0%E7%AC%94%E8%AE%B0%E4%B8%8D%E8%A6%81%E5%81%9A%E7%9A%84%E4%BA%8B":{"title":"记笔记不要做的事","content":"\n# 记笔记不要做的事\n\n1. 不要想着把 TODO 和笔记放着一个软件里去完成，all in one 只会使大脑更难接受一件事，如果想要坚持一个习惯，不要太复杂，五分钟能完成就行\n2. 不要精益求精，做笔记应该和读书一样，先把书都厚，再把书读薄。在笔记中的理解就是 想追求数量，产生链接，然后不断优化链接和合并笔记\n3. 不要进行分类，双链笔记本身就是为了产生链接，当链接产生的足够多的时候，你产出的文章本身就是分类了\n4. 读一本书，不要去记住「作者讲了什么」「作者怎么讲」，而是**要将书的内容拆散、提取，找到对自己有价值的部分，化为己用。**\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AALazyMan-%E7%B1%BB":{"title":"设计一个LazyMan 类","content":"\n设计一个LazyMan 类\n\n要求设计 LazyMan 类，实现以下功能\n\n```JavaScript\n\nLazyMan('Tony');\n// Hi I am Tony\n\nLazyMan('Tony').sleep(10).eat('lunch');\n// Hi I am Tony\n// 等待了10秒...\n// I am eating lunch\n\nLazyMan('Tony').eat('lunch').sleep(10).eat('dinner');\n// Hi I am Tony\n// I am eating lunch\n// 等待了10秒...\n// I am eating diner\n\nLazyMan('Tony').eat('lunch').eat('dinner').sleepFirst(5).sleep(10).eat('junk food');\n// Hi I am Tony\n// 等待了5秒...\n// I am eating lunch\n// I am eating dinner\n// 等待了10秒...\n// I am eating junk food\n```\n\n代码\n\n```JavaScript\n      class LazyMans {\n        constructor(name) {\n          this.name = name;\n          this.queen = [];\n          setTimeout(() =\u003e {\n            this._next();\n          }, 0);\n        }\n        sleep(wait, isFiset = false) {\n          const _sleep = () =\u003e {\n            setTimeout(() =\u003e {\n              console.log(`等待了${wait}秒`);\n              this._next();\n            }, wait * 1000);\n          };\n          isFiset ? this.queen.unshift(_sleep) : this.queen.push(_sleep);\n          return this;\n        }\n        _next() {\n          if (!this.queen.length) return;\n          let shift = this.queen.shift();\n          shift.call(this);\n        }\n        eat(food) {\n          const _eat = () =\u003e {\n            console.log(`I am eating ${food}`);\n            this._next();\n          };\n          this.queen.push(_eat);\n          return this;\n        }\n        sleepFirst(wait) {\n          return this.sleep(wait, true);\n        }\n      }\n      function LazyMan(name) {\n        return new LazyMans(name);\n      }\n```\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F":{"title":"设计模式","content":"\n# 设计模式\n\n## ⑥ 大原则\n\n### 开闭原则\n\n开闭原则指的就是对扩展开放、对修改关闭。编写代码的时候不可避免地会碰到修改的情况，而遵循开闭原则就意味着当代码需要修改时，**可以通过编写新的代码来扩展已有的代码，而不是直接修改已有代码本身**。**对扩展开放，对修改封闭**\n\n```JavaScript\nfunction validate() {\n    // 校验用户名\n    if (!username)  ... else ...\n    // 校验密码\n    if (!pswd) ... else ...\n}\n```\n\n如果此时增加一个校验条件，就要修改 validate() 函数内容。\n\n```JavaScript\nclass Validation {\n    private validateHandlers: ValidateHandler[] = [];\n    public addValidateHandler(handler: IValidateHandler) {\n        this.validateHandlers.push(handler)\n    }\n    public validate() {\n        for (let i = 0; i \u003c this.validateHandlers.length; i++) {\n            this.validateHandlers[i].validate();\n        }\n    }\n}\ninterface IValidateHandler {\n    validate(): boolean;\n}\nclass UsernameValidateHandler implements IValidateHandler {\n    public validate() {\n      ...\n    }\n}\n```\n\n### 里氏替换原则\n\n里氏替换原则是指在使用父类的地方可以用它的任意子类进行替换。里氏替换原则是对类的继承复用作出的要求，要求子类可以随时替换掉其父类，同时功能不被破坏，父类的方法仍然能被使用。\n\n### 依赖倒置原则\n\n准确说应该是避免依赖倒置，好的依赖关系应该是类依赖于抽象接口，不应依赖于具体实现。这样设计的好处就是当依赖发生变化时，只需要传入对应的具体实例即可。\n\n### 接口隔离原则\n\n不应该依赖它不需要的接口，也就是说一个类对另一个类的依赖应该建立在最小的接口上。目的就是为了降低代码之间的耦合性，方便后续代码修改。\n\n### 迪米特原则\n\n一个类对于其他类知道得越少越好，就是说一个对象应当对其他对象尽可能少的了解。这一条原则要求任何一个对象或者方法只能调用该对象本身和内部创建的对象实例，如果要调用外部的对象，只能通过参数的形式传递进来。这一点和纯函数的思想相似。\n\n### 单一职责原则\n\n应该有且仅有一个原因引起类的变更。这个原则很好理解，一个类代码量越多，功能就越复杂，维护成本也就越高。遵循单一职责原则可以有效地控制类的复杂度。\n\n## 设计模式\n\n### 设计模式的分类\n\n经典的设计模式有 3 大类，共 23 种，包括创建型、结构型和行为型。\n\n#### 创建型\n\n创建型模式的主要关注点是“如何创建和使用对象”，这些模式的核心特点就是将对象的创建与使用进行分离，从而降低系统的耦合度。使用者不需要关注对象的创建细节，对象的创建由相关的类来完成。\n\n具体包括下面几种模式：\n\n- **抽象工厂模式**，提供一个超级工厂类来创建其他工厂类，然后通过工厂类创建类实例；\n- **生成器模式**，将一个复杂对象分解成多个相对简单的部分，然后根据不同需要分别创建它们，最后构建成该复杂对象；\n- **工厂方法模式**，定义一个用于创建生成类的工厂类，由调用者提供的参数决定生成什么类实例；\n- **原型模式**，将一个对象作为原型，通过对其进行克隆创建新的实例；\n- **单例模式**，生成一个全局唯一的实例，同时提供访问这个实例的函数。\n\n#### 结构型\n\n结构型模式描述如何将类或对象组合在一起形成更大的结构。它分为类结构型模式和对象结构型模式，类结构型模式采用继承机制来组织接口和类，对象结构型模式釆用组合或聚合来生成新的对象。\n\n几种模式：\n\n- **适配器模式**，将一个类的接口转换成另一个类的接口，使得原本由于接口不兼容而不能一起工作的类能一起工作；\n- **桥接模式**，将抽象与实现分离，使它们可以独立变化，它是用组合关系代替继承关系来实现的，从而降低了抽象和实现这两个可变维度的耦合度；\n- **组合模式**，将对象组合成树状层次结构，使用户对单个对象和组合对象具有一致的访问性；\n- **装饰器模式**，动态地给对象增加一些职责，即增加其额外的功能；\n- **外观模式**，为多个复杂的子系统提供一个统一的对外接口，使这些子系统更加容易被访问；\n- **享元模式**，运用共享技术来有效地支持大量细粒度对象的复用；\n- **代理模式**，为某对象提供一种代理以控制对该对象的访问，即客户端通过代理间接地访问该对象，从而限制、增强或修改该对象的一些特性。\n\n#### 行为型\n\n行为型模式用于描述程序在运行时复杂的流程控制，即描述多个类或对象之间怎样相互协作共同完成单个对象无法单独完成的任务，它涉及算法与对象间职责的分配。\n\n行为型模式分为类行为模式和对象行为模式，类的行为模式采用继承机制在子类和父类之间分配行为，对象行为模式采用多态等方式来分配子类和父类的职责。\n\n几种模式：\n\n- **责任链模式**，把请求从链中的一个对象传到下一个对象，直到请求被响应为止，通过这种方式去除对象之间的耦合；\n- **命令模式**，将一个请求封装为一个对象，使发出请求的责任和执行请求的责任分割开；\n- **策略模式**，定义了一系列算法，并将每个算法封装起来，使它们可以相互替换，且算法的改变不会影响使用算法的用户；\n- **解释器模式**，提供如何定义语言的文法，以及对语言句子的解释方法，即解释器；\n- **迭代器模式**，提供一种方法来顺序访问聚合对象中的一系列数据，而不暴露聚合对象的内部表示；\n- **中介者模式**，定义一个中介对象来简化原有对象之间的交互关系，降低系统中对象间的耦合度，使原有对象之间不必相互了解；\n- **备忘录模式**，在不破坏封装性的前提下，获取并保存一个对象的内部状态，以便以后恢复它；\n- **观察者模式**，多个对象间存在一对多关系，当一个对象发生改变时，把这种改变通知给其他多个对象，从而影响其他对象的行为；\n- **状态模式**，类的行为基于状态对象而改变；\n- **访问者模式**，在不改变集合元素的前提下，为一个集合中的每个元素提供多种访问方式，即每个元素有多个访问者对象访问；\n- **模板方法模式**，定义一个操作中的算法骨架，将算法的一些步骤延迟到子类中，使得子类在可以不改变该算法结构的情况下重定义该算法的某些特定步骤。\n\n### 创建型-工厂模式\n\n工厂模式其实就是**将创建对象的过程单独封装**\n\n### 创建型-单例模式\n\n```JavaScript\nclass Storage {\n    static getInstance() {\n        // 判断是否已经new过1个实例\n        if (!Storage.instance) {\n            // 若这个唯一的实例不存在，那么先创建它\n            Storage.instance = new Storage()\n        }\n        // 如果这个唯一的实例已经存在，则直接返回\n        return Storage.instance\n    }\n}\n```\n\n### 行为性-观察者模式\n\n发布订阅模式\n\n但如果韩梅梅没有拉群，而是把需求文档上传到了公司统一的需求平台上，需求平台感知到文件的变化、自动通知了每一位订阅了该文件的开发者，**发布者不直接触及到订阅者、而是由统一的第三方来完成实际的通信的操作，叫做发布-订阅模式**。\n\n观察者模式\n\n韩梅梅把所有的开发者拉了一个群，直接把需求文档丢给每一位群成员，这种**发布者直接触及到订阅者**的操作，叫观察者模式\n\n观察者模式和发布-订阅模式之间的区别，在于是否存在第三方、发布者能否直接感知订阅者\n\n### 行为性-迭代器模式\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AF%81%E5%88%B8%E5%88%86%E6%9E%90%E5%8E%9F%E4%B9%A6%E7%AC%AC6%E7%89%88%E7%BB%8F%E5%85%B8%E7%95%85%E9%94%80%E7%89%88":{"title":"《 证券分析：原书第6版（经典畅销版） 》","content":"\n# 《 证券分析：原书第6版（经典畅销版） 》\n\n# 元数据\n\n\u003e [!abstract] 证券分析：原书第6版（经典畅销版）\n\u003e - ![ 证券分析：原书第6版（经典畅销版）|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/342/26454342/t7_26454342.jpg)\n\u003e - 书名： 证券分析：原书第6版（经典畅销版）\n\u003e - 作者： 本杰明·格雷厄姆 戴维·多德\n\u003e - 简介： 1940年最经典版本+巴菲特亲笔作序+10位华尔街金融大家导读+4位国内价值投资践行者的深度思考。在这本书中，格雷厄姆与多德首次提出了价值投资的理念，并分别从证券分析的原理、三大证券分析方法、证券分析操作实务这三个方面阐释了价值投资的基本框架。《证券分析》第6版由著名经济学家巴曙松领衔专业人士全新翻译。正如巴曙松老师所言：“历史不会重演，然而总是押着韵脚。当前中国证券市场的转型，同样需要确立价值投资的理念。我决定组织力量翻译《证券分析》第6 版的初衷，也正在于此。”\n\u003e - 出版时间 2019-09-01 00:00:00\n\u003e - ISBN： 9787220115271\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 四川人民出版社\n\n# 高亮划线\n\n## 译者序 在中国证券市场转型的过程中重温经典的价值——《证券分析》第6版译本序\n\n- 📌 我乐意以格雷厄姆的名言与各位读者共勉：“很显然，价值投资需要坚定的信念，以不同于常人的方式思考做事，而且需要耐心等待遥遥无期的机遇。”是为序。 ^26454342-7-5608-5708\n    - ⏱ 2021-08-07 19:34:24\n\n## 第6版前言 格雷厄姆和多德的永恒智慧\n\n- 📌 今天的价值投资者不太可能仅通过价值曲线的引导或翻阅股票的财务报表发现投资机会。 ^26454342-10-9037-9076\n    - ⏱ 2021-08-07 19:39:18\n\n## 02 分析问题的基本要素以及定量和定性因素\n\n- 📌 投资者更喜欢规模大、经营良好、记录优良，且预计未来盈利会增加的企业，这是很自然合理的。但这些期望，虽然看似有理有据，却往往无法实现。 ^26454342-19-6735-6801\n    - ⏱ 2021-08-10 15:18:42\n\n## 04 区分投资与投机\n\n- 📌 安全的概念只有建立在比购买者的心理状态更加真实的基础上才真正有用。只有明确的定义及完善的标准才能保证安全度，或至少声明清楚何谓安全 ^26454342-21-5567-5632\n    - ⏱ 2021-08-10 16:21:41\n- 📌 事实上，依我们之所见，绝大部分实力雄厚的公司的普通股，在大多数时间里都必须被看作投机买卖，因为它们的价格太高，在任何理性投资的意义下都无法保证本金安全。 ^26454342-21-7531-7607\n    - ⏱ 2021-08-10 16:23:46\n\n## 导读三 解开债券之谜\n\n- 📌 回顾1931—1933年铁路债券的崩溃，症结在于交通运输行业的稳定性被高估，投资者对其安全边际过分满意。但事实证明，这种安全边际其实是不足的。问题产生的原因并不在于投资者忽视了既有的标准……而是当现实经济形势需要更严格的要求时，投资者仍满足于原有的标准…… ^26454342-24-5782-5910\n    - ⏱ 2021-08-10 17:05:58\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.606454812Z","tags":null},"/%E8%AF%86%E7%A0%B4%E8%BF%B7%E5%B1%80%E7%90%86%E8%B4%A2%E9%80%9A%E8%AF%86%E7%AC%AC%E4%B8%80%E8%AF%BE":{"title":"识破迷局:理财通识第一课","content":"\n# 识破迷局:理财通识第一课\n\n## 提出问题\n\n理财过程中会遇到什么坑？\n\n我们应该怎么避免？\n\n这本书让我想到之前学习如何做生意的时候，看到的一句 印象深刻的话：成功的理由各不相同，失败的理由大致相同，我们应该尽量避免别人犯的错，找到自己的成功之道（误 ）\n\n## 读书笔记\n\n基金定投 止盈不止损\n\n私募，P2P不要碰\n\n目前，市场上大部分股权产品，优秀者内部回报率（IRR）在10%～20%之间，如果能达到20%以上，则属顶级回报率了\n\n### 房产\n\n中国楼市有四大“坑”：别墅、公寓、商铺、海景房。\n\n海景房，一般离家远，住的少，租不出去，不好卖\n\n毕竟，决定一个楼盘价值的首先是地段。这些年真正开发成功的海景房，都是集生活、工作、度假于一体，在配套成熟的基础上开发，开盘时价格就“高高在上”了，还不愁卖，如三亚、陵水、乐东等地区的海景房。\n\n40年和65年产权的公寓完全不是一回事，前者容积率高、面积小，居住体验不佳，不能上户口，当然也就没有学位可供小孩上学。\n\n- 公寓在交易时会收取“天价”税费。\n\n二手房交易前，注意以下几点：\n\n- 第一，和房东本人沟通。不动产证上登记的所有人才是有权卖房的人，所有的谈判务必和房主本人沟通。如果非本人卖房，则要有本人和代理人的身份证件及本人签署的授权委托书\n- 第二，确定房屋产权清晰。对于未取得不动产证的房产，务必特别谨慎。\n- 第三，明确房产共有人。房产如为共有，出售时必须共有人全部到场签字。\n- 第四，确认房产有无二押。很多二手房是有抵押贷款的，购买时需要设定抵押的房产可以签约买卖，但没解押前不能过户。\n- 第五，使用官方合同。为避免麻烦，交易时使用当地房产局监制的官方合同，这必然能保护双方利益。特别要注意的是，要在合同中明确相应的违约责任。房款务必分期，确认无误后支付尾款\n\n**谨防中介**\n\n法拍房，谨防**买卖不击破租赁的原则**\n\n### 保险\n\n比保险更重要的是体检，但不是越贵越好，对于PET-CT，我也不建议作为常规体检项目\n\n医疗报销险，这类产品基本都规定社保报销后还有1万元的免赔额。如果你住院一共花了1.8万元，其中医保报销了9000元，剩余9000元在1万元免赔额内，医疗保险是不予赔付的。\n\n医疗险不是万能的，会有很多风险敞口无法覆盖，如外购药、院外治疗、重病后薪资收入锐减、营养费、看护工资等，尤其在罹患恶性肿瘤、严重心脑血管疾病时。重疾险购买的逻辑很简单：在你可承受的保费支出内，选择最大的保额和最全面的保障。\n\n**切记，切记，一定要把健康告知多看几遍，确保正确告知**\n\n### 海外理财\n\n校不接受持菲律宾特别退休居住签证和马来西亚第二家园计划的学生报考。\n\nSRRV压根和移民、绿卡没有关系，就是一张方便退休养老和投资居住的长期签证而已。\n\n海外购房。大V和中介 ，他们能获得的佣金大约是总房款的10%，这个比例只少不多。\n\n### 其他\n\n在金融从业者眼中，充值送钱本质上就是纯信用融资，就是向你借钱。  \n民间对于被骗后报案有很多**错误**的理解，如“报案后，属于非法集资，钱即使追回来，和自己也没关系”。  \n受传统思维影响，多数老百姓骨子里对借钱都是排斥的，真正的高净值人士都在娴熟地使用贷款，将自己的财富和人生加杠杆。  \n等额本息、等额本金、利随本清、先息后本是4种常见的还款方式，到底有什么区别？  \n**等额本金实际利息最少；等额本息利息其次；利随本金和先息后本的利息最多。**\n\n记住 可以没现金，但是一定要有信用卡额度  \n投资产品：唯一值得信任的仅有理财项目的底层资产，即：谁借钱，借去做什么，用什么钱来还，还不上怎么办？把这4个问题搞清楚了，而且是真的搞清楚了，确定是优质的资产，才是值得信任的。至于广告背书、专家站台、股东背景、媒体报道，当热闹看看就好，别太当回事。\n\n只要涉及签字的事，一定要谨慎、谨慎再谨慎，尤其是担保行为，一定要想清楚，否则后患无穷。\n\n## 读后感\n\n一些坑，看过就行，留点印象。但感觉有点普通。\n\n## 读书记录\n\n2021.2.24 - 2021.2.24 应该不会二刷\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%AF%8D%E6%A0%B9%E8%AF%8D%E7%BC%80%E8%83%8C%E5%8D%95%E8%AF%8D":{"title":"词根词缀背单词","content":"\n看下来的观点都是认为词根词缀方法适合用来加强记忆，开始的单词积累还是适合死记硬背\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%AF%A1%E7%A7%98%E4%B9%8B%E4%B8%BB":{"title":"《 诡秘之主 》","content":"\n# 《 诡秘之主 》\n\n# 元数据\n\n\u003e [!abstract] 诡秘之主\n\u003e - ![ 诡秘之主|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/264/20868264/t7_20868264.jpg)\n\u003e - 书名： 诡秘之主\n\u003e - 作者： 爱潜水的乌贼\n\u003e - 简介： 蒸汽与机械的浪潮中，谁能触及非凡？历史和黑暗的迷雾里，又是谁在耳语？我从诡秘中醒来，睁眼看见这个世界：  \n枪械，大炮，巨舰，飞空艇，差分机；魔药，占卜，诅咒，倒吊人，封印物……光明依旧照耀，神秘从未远离，这是一段“愚者”的传说。\n\u003e - 出版时间\n\u003e - ISBN：\n\u003e - 分类： 男生小说-异界大陆\n\u003e - 出版社：\n\n# 高亮划线\n\n## 不想错过\n\n- 📌 伴随着哒哒哒的声音，一截虚幻的白纸从无线电收报机里吐了出来，上面用鲁恩文写道：“至高的伟大的永恒的主人，您渺小的卑微的忠诚的仆人阿罗德斯应您召唤而来！“您知道吗？艾伦.克瑞斯医生家的孩子前晚已经出生了。”还好我及时联络了“魔镜”……克莱恩轻轻颔首道：“现在知道了。”哒哒哒，那截虚幻的白纸吐出了更多：“根据对等原则，轮到您提问了。”克莱恩本想问一问因斯.赞格威尔、“0—08”和那个“红天使”恶灵的事情，可想到自己在灰雾之上都占卜失败，“魔镜”阿罗德斯肯定也看不清楚，最多能提供“0—08”更为详细的资料，而这样一来，在没有灰雾屏蔽的情况下，自己等于真正地“知道”了“0—08”，也就相应会被对方知晓，不利于藏在幕后，导演戏剧。 ^20868264-995-0\n    - ⏱ 2020-09-12 13:12:37\n\n## 漫游星空者\n\n# 读书笔记\n\n## 漫游星空者\n\n### 划线评论\n\n- 📌 一，不要回应任何呼唤；二，不要鲁莽靠近未有了解的生物和建筑；三，忍受孤独。” ^16142247-7kmBoP7va\n    - 💭 三体没人划线吗\n    - ⏱ 2020-09-14 23:21:40\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7kzp9WwOt  \n⏱ 2020-09-23 09:21:29\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%AF%BB%E4%B9%A6%E6%98%AF%E4%B8%80%E8%BE%88%E5%AD%90%E7%9A%84%E4%BA%8B":{"title":"《 读书是一辈子的事 》","content":"\n# 《 读书是一辈子的事 》\n\n# 元数据\n\n\u003e [!abstract] 读书是一辈子的事\n\u003e - ![ 读书是一辈子的事|200](https://weread-1258476243.file.myqcloud.com/weread/cover/48/YueWen_922382/t7_YueWen_922382.jpg)\n\u003e - 书名： 读书是一辈子的事\n\u003e - 作者： 樊登\n\u003e - 简介： 读书能塑造一个人的一生：我们读什么书，就会成为什么样的人。读什么？怎么读？如何借由阅读，进而思考、践行？樊登历时4年，深度解读150本好书，超过1亿人次收听。他提出“读书是一辈子的事”的理念，并分享了自己的选书方法、速读秘密以及独立思考的窍门。此外，本书涵盖了樊登对认识自我以及如何成长的关键思考，以发掘内在天赋、不断精进、进阶突围贯穿个人的成长路径。旨在帮助读者改变固化思维，通过科学和心理学的有效方法，直面业已清晰的未来挑战，成为拥有终极竞争力的强者。\n\u003e\n\u003e - 出版时间 2018-02-01 00:00:00\n\u003e - ISBN： 9787559612793\n\u003e - 分类： 个人成长-人生哲学\n\u003e - 出版社： 北京联合出版公司\n\n# 高亮划线\n\n## 自序\n\n- 📌 这不是我天生就适合当爸爸，而是因为我相信学习可以解决无助的问题。有很多人在家里喜欢发脾气，无论对孩子、配偶，还是老人。发脾气就是懒惰的表现，以为发脾气可以走捷径，而且也懒得去学习更有效的方法。 ^922382-4-2366-2462\n    - ⏱ 2022-01-11 16:54:25\n- 📌 发脾气、生闷气、喝闷酒、找个红颜知己、离家出走、依靠诗和远方，这些奇怪的方法都是绕个弯子的懒惰。 ^922382-4-2536-2584\n    - ⏱ 2022-01-11 16:54:40\n\n## 上篇 认识自己\n\n- 📌 简而言之，就是惯性。就像智者不理解人为什么总在不断地追名逐利，我们也无法理解飞蛾为什么执着地扑火。每个人都有自己的惯性行为，太执着了就会有伤害。比如，一个小时候因家庭贫困而被嘲笑过的孩子，就有可能为了面子活一辈子，顿顿饭都要抢着埋单；一个被父母伤害过的姑娘，就要在男朋友面前各种“作”，以证明对方在乎她；从小被严格要求的学霸，做什么事都不能令自己满意，焦虑得睡不着觉……这就是惯性的来源，你无法选择。 ^922382-5-1153-1353\n    - ⏱ 2022-01-11 17:02:29\n- 📌 好的书最终都会把你引导向同一个方向——认识你自己。我为什么会这么想？为什么会那么做？为什么会有这样的感觉？我能不能走上另外一条道路？还有没有不同的道路？ ^922382-5-1868-1944\n    - ⏱ 2022-01-11 17:03:12\n- 📌 要为未来努力，但也要开心地享受努力的过程，这才是幸福的方法。如果一个人具备幸福的能力，就会发现，只要自己静静地坐着，不说话，慢慢地感受自己，就能够感受到幸福。岁月静好，闲来无事，读上一两本书，人生是多么幸福和满足。 ^922382-5-8532-8639\n    - ⏱ 2022-01-11 17:35:54\n\n## 我战胜了抑郁症：请记住，你并不孤独\n\n- 📌 这本书给我们最大的启示，就是一定不要对抑郁症患者放手，不要说没希望了，他们是完全有希望的。 ^922382-7-1350-1395\n    - ⏱ 2022-01-12 10:17:58\n- 📌 有抑郁状态不代表有抑郁症，但是有的时候，我们毫无理由地变得情绪低落，在这种心境状态非常严重，持续两周或者更久，影响到我们在家庭以及工作中的正常生活的时候，抑郁症才会被认为是一种疾病。 ^922382-7-1521-1612\n    - ⏱ 2022-01-12 10:18:13\n- 📌 在戈登·帕克的理论体系中，抑郁症被分为三个类型——忧郁型抑郁症、非忧郁型抑郁症、精神病型抑郁症，或许还有第四种非典型性抑郁症。忧郁型抑郁症，这种是生物性抑郁的典型形式。基本特征是精神运动紊乱，表现为缓慢或者不安的身体活动，思维活动缓慢，反应越来越迟钝。非忧郁型抑郁症，特点是它是由某一些突然的事件引发的，比如说离婚、家里有亲属离世、孩子叛逆等，或者是经济压力特别大。精神病型抑郁症，会出现妄想和幻觉，比如说觉得自己变成一个会飞的人，就经常想从窗子里飞出去。这是非常要命的。 ^922382-7-2608-2931\n    - ⏱ 2022-01-12 10:19:06\n- 📌 她自己的感受是，对很多人而言，抑郁症意味着头不梳、脸不洗，待在一个黑暗的角落什么都不做。事实上，在商业领域，抑郁症往往会表现为以非常快的节奏工作，风风火火地跑来跑去。 ^922382-7-4754-4837\n    - ⏱ 2022-01-12 10:23:04\n- 📌 诺拉·因曼的建议是，治疗抑郁症一定要找到一个好的大夫。这个大夫不会轻易给你下结论，而是能够理解你的状况，站在你的角度思考你的病情，给出一些适量的药。还会鼓励你，告诉你一些药物之外的疗法，而不是直接让患者吃药、电击。吃药和电击能够在一定程度上缓解你的抑郁症，但是问题就是它的副作用很大，作用也有限。 ^922382-7-6070-6218\n    - ⏱ 2022-01-12 10:24:19\n- 📌 格雷姆·考恩，也就是这本书的作者，他分析了自己是怎样走出抑郁症的。他的经验是找到三个路径：排在第一位的是生活的活力，因为抑郁症患者最显著的特征，就是没有活力了，觉得整个生活没劲儿了，所以第一位是要把活力激发出来；第二位是成就，就是作为一个抑郁症患者，你得给自己的生活做出一些事，要想想自己能够获得哪些职业的成就；第三位是亲密，就是你得有很多社会支撑，有一些人愿意帮你。 ^922382-7-8142-8355\n    - ⏱ 2022-01-12 10:26:39\n- 📌 关于活力，作者说活力包括了锻炼、营养、冥想、药物治疗、休闲娱乐和睡眠 ^922382-7-8443-8477\n    - ⏱ 2022-01-12 10:26:51\n- 📌 有位心理专家这样说：“自杀干预的时候，你要告诉他那个后果。让他知道跳下去是很难看的，还有可能半天都死不了，是非常痛苦的。”你要让他想到这个糟糕的结局。他说那他不跳了，他上吊去。你就告诉他，上吊要经历三十多分钟的严重痛苦。他说那他割腕自杀，你就告诉他，割腕自杀两个小时都死不了，这是有数据的，你要想这个后果。对方最后说：“我朝脑袋开一枪。”你说：“行，去吧。” ^922382-7-9872-10051\n    - ⏱ 2022-01-12 10:29:29\n\n## 我的情绪为何总被他人左右：让情绪自由\n\n- 📌 在生活中实践这些书的理念，都涉及一个特别重要的步骤，就是你自己不能急。你一旦急了、生气了，就会发现后边的连续动作都做不出来了。 ^922382-8-533-596\n    - ⏱ 2022-01-12 10:56:02\n- 📌 埃利斯特别有意思，他说什么是过分你自己应该知道，85%的情况下，一个人应该知道自己的这个反应是不是过分。 ^922382-8-2781-2833\n    - ⏱ 2022-01-12 11:05:34\n- 📌 他提出了一个很重要的观点，就是“我能不能做一个更好的选择”。人的一生中，永远都不会丧失的能力，就是选择的能力，我们永远都拥有选择的空间。 ^922382-8-7992-8060\n    - ⏱ 2022-01-12 11:26:04\n- 📌 遇到问题的时候，我们要思考怎么做才能够更好，对自己的家更好，对孩子更好，对与亲人的关系更好。当然，如果做不到的话，其实也没关系。 ^922382-8-8617-8681\n    - ⏱ 2022-01-12 11:25:56\n\n## 情绪急救：总有一个疗法适合你\n\n- 📌 她想起我给她讲过的影响圈和关注圈：影响圈就是我们力所能及，可以改变的事；关注圈就是我们只能看、只能发表议论，但是没法改变的东西。 ^922382-10-13095-13159\n    - ⏱ 2022-01-17 10:47:48\n- 📌 孔夫子讲“尽人事而听天命”，尽人事就指影响圈，听天命指的是关注圈。 ^922382-10-13377-13410\n    - ⏱ 2022-01-17 10:48:05\n\n## 精神问题有什么可笑的：重塑精神世界\n\n- 📌 比如说，自我批评。我们对自己就像对待一匹老马一样，不断地抽打自己，把时间安排得特别紧凑，从来不停下来思考自己到底在干什么。我们在以不同的方式不停地忙碌：疯狂地购物、疯狂地工作、疯狂地赚钱，不断地寻找有可能的下一个幸福点，永远都不满足。 ^922382-11-1091-1208\n    - ⏱ 2022-01-17 10:50:52\n\n## 消除压力，从大脑开始：用科学的方法赶走压力\n\n- 📌 很多人喜欢用喝酒的方式减压，喝酒实际上是一个特别错误的方法。凡是对酒精成瘾的人，瘾会越来越严重，情绪失控也会变得越来越厉害、越来越频繁，因为疲劳和酒精会弱化前运动区的功能，这是很多成年人失控的最主要原因。 ^922382-12-3674-3776\n    - ⏱ 2022-01-17 15:43:37\n- 📌 前运动区有三大功能：第一个就是上述讲到的学习，第二个是工作，第三个是同感。 ^922382-12-3980-4017\n    - ⏱ 2022-01-17 15:44:03\n\n## 人工智能时代：未来时代的生活\n\n- 📌 未来可能更像过去，对我有极大的启发：过去针对一个问题去发明一个东西的想法，彻底发生了改变。比如最新的机器人，我说看一下空气指数，它就报空气指数。然后，它的空气净化功能自动监测，只要室内的空气不达标，它就会自动打开。它会放投影，孩子想看迪士尼的卡通片，它就自己去找片源；你想听周杰伦的歌，随时都可以听。你的家不需要一个空气净化器，一个投影仪、音箱。最后，它还可以有安保的功能，我不在家的时候，可以打开摄像头，看整个家里的状况，出现异常，可以及时报警。 ^922382-14-3772-3996\n    - ⏱ 2022-01-17 17:51:37\n\n## 下篇 精进生活\n\n- 📌 创新者是会脚踩两只船的人：一边做着一份稳定的工作，一边在摸索着创新。 ^922382-18-2395-2429\n    - ⏱ 2022-01-18 11:35:40\n- 📌 最成功的创业者是什么样子的？他们不情愿地、小心翼翼地踮着脚走到悬崖边缘，计算好下降的速度，再三检查他们的降落伞，并在崖底备好安全网以防万一。 ^922382-18-6222-6292\n    - ⏱ 2022-01-18 11:38:41\n- 📌 在一个组织里，当你还没有获得足够的地位的时候，轻易地发表意见、行使权力，是一件很危险的事。心理学上有一个专有名词，叫作性格信用。比如说，明星可以乱穿衣服，有的明星穿一个七分裤走T台，大家会觉得很好看，普通人就达不到这样的效果。艺术家为什么喜欢把自己打扮成奇奇怪怪？因为他们的工作是搞艺术，别人都不知道，没法评判，那只好通过他们的样子，让他们看起来很像艺术家，这就叫作积累性格信用 ^922382-18-12098-12316\n    - ⏱ 2022-01-18 11:43:55\n- 📌 这些拖延的人反倒容易成为伟大的人，这里有一个有意思的理论：每一个创新，市场中都有开拓者和定居者。开拓者的潜台词是：这事没人开始，我跳出来先开始。定居者就是看别人开了个好头，自己慢慢跟着来定居的。 ^922382-18-14374-14471\n    - ⏱ 2022-01-18 14:16:14\n- 📌 这里有一个有意思的心理学现象，著名心理学家埃利奥特·阿伦森进行的一系列实验表明：比起那些一直都喜欢我们的人，我们会喜欢逐渐喜欢上我们的人；比起逐渐喜欢上我们的人，我们会觉得那些起初不喜欢我们，但后来逐渐喜欢我们的人更有价值。 ^922382-18-17115-17227\n    - ⏱ 2022-01-18 14:19:30\n- 📌 比如，管孩子的时候，要强调的是价值观，而不是规则。不许干这个，不许干那个，把手洗干净……这些规则定得越多，这个孩子做事就越本分老实、束手束脚，但是当父母说“你知道为什么要洗手吗，因为健康很重要”，这是在强调价值观。孩子依据着稳定的价值观在做事，他才能够有更多创新的空间。温柔但是有边界就是这个道理。价值观就是边界，但我们是很温柔地在做事，因此我们没有给孩子限定说，“你只能做什么，你不能做什么”。 ^922382-18-18216-18443\n    - ⏱ 2022-01-18 14:20:51\n- 📌 对于一个组织，要想识别和鼓励创新的话，你应该鼓励员工，把就算是没有答案的问题也要提出来，能够提出问题的这个人本身就具有价值。这是培养离经叛道者的一个非常重要的前提，我们需要颠覆性的创新。 ^922382-18-19355-19448\n    - ⏱ 2022-01-18 14:23:40\n\n## 你要如何衡量你的人生：正确的思维方法比答案更重要\n\n- 📌 战略是由两样部分构成的。第一个是你的目标，战略不仅仅是目标，还必须得有目标。第二个就是你将如何实现这个目标。把二者结合起来，这才叫作战略。 ^922382-19-2561-2717\n    - ⏱ 2022-01-18 14:29:20\n- 📌 我们需要学习一个理论，叫作驱动计划理论。从事某项工作前，认真列出哪些事是需要别人提供帮助的，以便能完全达到预期。明白这一条很重要：能帮你做这些关键事情的人是不是需要牺牲自己的利益来帮你呢？换句话说，是不是因为要帮助你完成这项工作，先要假设这些人都是无私的呢？同样重要的事是问问你自己：哪些假设条件需要被验证是真实的，我才会对做出的选择感到满意？我做决策是根据外在的还是内在的动因？为什么我认为这会是自己喜欢的呢？我有什么证据来证明吗？ ^922382-19-5391-5637\n    - ⏱ 2022-01-18 14:32:33\n- 📌 当你遇到很多诱惑，思考一件事要不要做的时候，你要问自己：这需要哪些前提才能够实现，这些前提通过我的努力能不能完成？ ^922382-19-6433-6490\n    - ⏱ 2022-01-18 14:33:59\n- 📌 一个女人找到一个男人，她的目标绝不仅仅是为了钱，为了钱她还不如买理财产品更可靠，她需要的是交流、谈话、关心，情感支撑、理解、包容，共同面对生活中的不确定性，解决孩子各种各样的问题，一块儿参加家长会……这才是“雇用”你做老公的最重要的原因。 ^922382-19-10476-10595\n    - ⏱ 2022-01-18 14:38:07\n\n## 少即是多：找到你的小确幸\n\n- 📌 从物质中获得幸福的时代已经结束。 ^922382-20-530-546\n    - ⏱ 2022-01-18 14:46:30\n- 📌 北欧式的幸福方式：一、享受工作；二、有关系亲密的朋友和家人；三、拥有稳定的经济来源；四、身心健康；五、拥有富有刺激性的兴趣和生活方式；六、拥有自己的时间和自由；七、能够选择适合自己的居住环境；八、具备有效的思维习惯；九、能够放眼未来；十、感觉自己每天都在不断地向目标前进。 ^922382-20-2800-3311\n    - ⏱ 2022-01-18 14:49:15\n- 📌 当你在社会上找到一个领域，让自己成为一个意见领袖的时候，你就可以经常给别人提供意见了，自由职业的机会就会越来越多。 ^922382-20-5806-5863\n    - ⏱ 2022-01-18 14:51:20\n- 📌 未来这个社会，单身的人会越来越多。你没必要非得组建一个家庭，可以保持自己独立的选择和判断。 ^922382-20-6726-6771\n    - ⏱ 2022-01-18 14:52:05\n- 📌 用生活方式社交可以是因为你跑步认识了很多人，这些人跟你因为工作认识的人不一样。你可以用摄影、冲浪、旅游、读书来产生社交的结果。 ^922382-20-8009-8072\n    - ⏱ 2022-01-18 15:02:28\n- 📌 复业的意思是君子不器：你不仅仅是一个老师，你还可以是一个主持人；你不仅仅是一个公司的职员，你还可以是一个品酒师的老师，还可以是一个户外运动俱乐部的负责人。这叫作复业。 ^922382-20-11308-11391\n    - ⏱ 2022-01-18 15:31:08\n- 📌 事实上，Less is more的健康价值观指的是：生活本身也可以是享受的，生活本来就是娱乐的一部分，工作本身也是可以很轻松的。 ^922382-20-11830-11894\n    - ⏱ 2022-01-18 15:31:44\n\n## 向前一步：何时觉醒都不晚\n\n- 📌 冒充者综合征使一个人否定自己的成就。只有当她坦然地接受自己的荣誉，大大方方地说“谢谢”的时候，才能展示自信。向前一步，需要你的自信。 ^922382-21-4504-4570\n    - ⏱ 2022-01-18 15:41:11\n- 📌 关于升职，女性只有在认为自己100%符合条件的时候，才会公开地申请职位，但是男性只要觉得60%的条件符合就会申请。所以，女性需要转变思路，不要总说自己还没准备好，而应该说“我可以边做边学”。 ^922382-21-6521-6616\n    - ⏱ 2022-01-18 15:44:54\n- 📌 书里这样说：交流的最佳效果来自谈吐得体且态度真诚，其关键点在于你不需要直愣愣地冒出大实话，而是适当地修饰后的诚实表达。比如这样说，“我觉得你从来都不认真考虑我的建议”，这就很伤人，因为这句话是一个观点。但你把这句话改成：“写给你的四封邮件你都没回复，我很失望。这让我觉得我的建议对你来说不太重要，真是这样吗？”这种表达方式很明显更容易将你的疑虑表述清楚。 ^922382-21-6867-7044\n    - ⏱ 2022-01-18 15:45:37\n- 📌 在领导力课堂，也会分享这样的知识，就是当你给别人提意见的时候，你要学会先说事实，然后说影响，最后说后果。只要愿意学习这样的方法，你就可以学会良好地表达 ^922382-21-7073-7148\n    - ⏱ 2022-01-18 15:45:32\n- 📌 第五个建议是不要让自己“身还在，心已远”。这个“身还在，心已远”听起来像一个广告词，举个例子来说，明明你还没有怀孕，你就开始担心自己两年后怀孕怎么办；明明你年纪还小，你就怀疑自己嫁不出去了怎么办。你总是在为那些通过忧虑也没法解决的事情担心。 ^922382-21-7437-7557\n    - ⏱ 2022-01-18 15:46:20\n- 📌 时间管理固然很重要，但是控制你的情绪、控制你内心的负罪感同样重要，因为当你负罪感爆棚的时候，你做什么事都不会专心。负罪感其实就来自对完美的不切实际的追求。 ^922382-21-10021-10098\n    - ⏱ 2022-01-18 16:47:54\n- 📌 有时候，是我们自己的想法使得这件事变得问题很大，我们自己认为它出问题了，它才会逐渐出问题。当你自己放松一点儿的时候，你会发现，其实没有那么严重。 ^922382-21-11787-11859\n    - ⏱ 2022-01-18 16:50:50\n\n## 这书能让你戒烟：好办法不需要意志力\n\n- 📌 很多人说，有的人一直抽烟都没事。我就经常会举这个例子：一个人出门如果开车逆行，也未必一定会撞到什么，并不是所有逆行的人都会出车祸，但是逆行的风险很大。很多人是因为抽过多的烟而出现问题的。 ^922382-22-942-1035\n    - ⏱ 2022-01-18 17:01:49\n- 📌 其实，我们每天出门，被车撞到的概率很小，但是我们每天都小心翼翼的，过马路都要左边看看，右边看看，然后才过去。当你每天把含毒素的香烟吸到体内的时候，它确定100%对你的身体有伤害的时候，你反倒无所谓了。 ^922382-22-3308-3408\n    - ⏱ 2022-01-18 17:03:41\n\n## 非暴力沟通：用爱和理解打开一切\n\n- 📌 非暴力沟通的核心为：当一个人觉得情绪受伤，或者心中的某些需求没有得到满足的时候，要做的最重要的事，是寻找这些需求，而不是发泄情绪。 ^922382-23-2937-3002\n    - ⏱ 2022-01-18 18:05:08\n- 📌 非暴力沟通中简单的四步：讲事实，讲感受，讲原因，提要求。 ^922382-23-4034-4062\n    - ⏱ 2022-01-18 18:05:59\n- 📌 区分观察和评论有一句名言，是印度非常著名的心灵大师克里西那木提说的——“不带评论的观察，是人类智力的最高形式”。 ^922382-23-8271-8327\n    - ⏱ 2022-01-18 18:09:27\n- 📌 我们很多人有感受，压在心里不说，最重要的原因，是我们从小到大，太多的感受被忽略了。 ^922382-23-10339-10380\n    - ⏱ 2022-01-18 18:10:50\n- 📌 人的成长有三个阶段。第一个阶段叫作情感的奴隶。有的人不论多少岁，一辈子都是情感的奴隶：总是觉得自己是被迫的，不得不做这么多的事；觉得自己忍辱负重，自己为别人牺牲了特别多。 ^922382-23-12179-12264\n    - ⏱ 2022-01-18 18:11:34\n- 📌 第二个阶段叫作面目可憎。就是有的人学会了推卸责任，说“这事不归我管，你别跟我说这个，谁都和我没关系，我就过好自己的生活”，这会得罪很多人。 ^922382-23-12293-12362\n    - ⏱ 2022-01-18 18:11:40\n- 📌 第三个阶段就是孔子说的“中庸之道”。你找到了中间的那个地方，叫作生活的主人。就是当你成为自己情绪的主人时，你才能够乐于帮助别人。 ^922382-23-12440-12533\n    - ⏱ 2022-01-18 18:11:47\n- 📌 我讲领导力的课程时，有一个原则，叫作设定情境。就是你张口就要讲目标， ^922382-23-13146-13180\n    - ⏱ 2022-01-18 18:22:41\n- 📌 在对方抓狂的时候，最重要的就是体会他的感受，说：“我能够理解你，真的很难过。我知道你的孩子得不到良好的教育，你的心里非常焦虑。作为父母，我们都能够感受得到。”这叫作反映情感，当你能够准确地说出对方此刻的感受时，对方的情绪就会立刻好转。 ^922382-23-14387-14504\n    - ⏱ 2022-01-18 18:25:01\n- 📌 杀人并不能够解决仇恨的问题，杀人只会让仇恨变得更多，会让你自己产生内疚的情绪，以至于永远走不出这个困境。最核心的是你把尚未满足的需求讲出来，让对方感受到你真的很生气，反倒有可能帮助对方解决问题。 ^922382-23-15199-15325\n    - ⏱ 2022-01-18 18:25:21\n- 📌 痛苦来自我们的需求没有得到满足，所以你要盯着需求，而不是盯着情绪，这就是表达愤怒的方法。在生活中，当别人满足了我们的需求的时候，我们可以用非暴力沟通的方式表达感激。非暴力沟通表达感激有三个步骤：一、对方做了什么，使我们的生活得到了改善；二、我们有哪些需求得到了满足；三、我们的心情怎样。 ^922382-23-16978-17316\n    - ⏱ 2022-01-18 18:31:00\n\n## 后记：如何识别一本好书\n\n- 📌 要多用一些时间读经典，也要关注最新的研究成果。经典就是那些你读不进去也不会怀疑是书写得不好的作品。 ^922382-24-2347-2396\n    - ⏱ 2022-01-18 18:54:24\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%AF%BB%E4%B9%A6%E6%9C%80%E5%A4%A7%E7%9A%84%E8%AF%AF%E5%8C%BA%E6%98%AF%E4%BB%80%E4%B9%88":{"title":"读书最大的误区是什么？","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [读书最大的误区是什么？](https://mp.weixin.qq.com/s?__biz=MzAxNTY0NjEzNg==\u0026mid=2247484488\u0026idx=1\u0026sn=1e3dfc1298284f9c9e2b47a7a6687013\u0026chksm=9b81a89facf6218913b6adaf9110136870c5ca400049c14041dce5c7fa04d8368841a34a1777\u0026scene=21#wechat_redirect)\n- tag：#\n- date: [[ 2022-02-21  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 我每次读书，必然都会抱着一个预设条件：我想了解什么信息？解决一个什么问题？在这个基础上，再挑选相关的内容，有针对性地去读。这种情况下，我可能只读一页、两页，甚至如果特别专业的书，也许一句话就能解答我的疑问 —— 那就成了。\n- 他们用来衡量读书成果的是什么呢？是「知识点」。\n- 它代表了知识管理的四个层级，也是学习的四个层次，分别是：Data（数据），Information（信息），Knowledge（知识），以及 Wisdom（智慧）。\n- 比如说「认知资源」。你看到这个词，但你不知道它是什么意思，也不知道它能用来干什么，这时，它对你来说，就是一个「Data」。要注意：Data 并不是知识。因为，你并没有「知道」任何东西，你对这个世界的理解，也没有任何提升。你仅仅是能够「认出」它而已。它对你来说，除了扩充你的词汇量，没有任何意义。这时，如果进一步告诉你：认知资源是我们进行思考的基础，它包括显性认知和隐性认知，会影响你的理解、记忆、运算过程。那么，它就从一个 Data，变成了 Information。在这个过程中，你对它的理解发生了改变。你看到「认知资源」，不再是这四个汉字，它们在你脑海中，会变成某种类似电脑内存的东西。你会把它跟「工作」联系到一起，知道它们之间会通过某种方式产生交互。\n- 于是，我们说，它成了一个「信息」—— 因为你对整个世界的理解，又增进了这么一点点。\n- 如果你不但知道「认知资源能影响工作过程」，你还知道，这个概念是怎么来的，跟哪些概念有关联，有哪些重要的研究、理论，甚至，有哪些重要的论文，分别从什么角度去解释、论证 ——那么这时，你会发现，它不再是一个孤立的点了，而变成了一张网。\n- 这就是 Knowledge，知识。\n- 至于 Wisdom 呢？非常简单。当你在生活中，遇到一些现象时，能想到「它跟认知资源有关」，能准确地抽象出基本的模型，用认知资源来理解、解释这些现象.\n- 很多时候，我们只是将我们自己对于概念的字面理解，代入到了作者的框架里面。我们读到的，是一大堆 Data 和 Information —— 它们压根就没有转化为 Knowledge。\n- 当我们碰到这些知识点的时候，停下来，把它们弄清楚，彻底弄懂它们的前因后果 —— 这才是有效的读书方式。\n- 唯有这样，你才能「跟作者站在同一起跑线上」，用跟作者同等的视角，去审视作者所写的内容 —— 而不是单向、被动地接受。否则，读再多的书，也没有用，你只是不断地在被灌输，作者自己的观点、逻辑和思维而已。\n- 读一本书，不要去记住「作者讲了什么」「作者怎么讲」，而是要将书的内容拆散、提取，找到对自己有价值的部分，化为己用。\n- 一本书在我眼中，是这样的：它可能包含了 50 个知识点，其中 1 个是作者最主要的论点；4 个是为了支撑它的分论点；15 个散落在各章节，是各章节的主要核心；其余 30 个，作者可能觉得不重要，简单带过。那么，我要问自己的就是：我能从中学习到哪几个知识点？\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0":{"title":"读书笔记","content":"\n#input\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[{{date}}]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86":{"title":"贝叶斯定理","content":"\n# 贝叶斯定理\n\n这个研究统计学的定理影响深远，是以18世纪英国一位名为瑞福伦德·托马斯·贝叶斯神甫的名字命名的，因为人们认为他是为一个重大问题作出重要贡献的第一人，这个问题就是：如何推断人们是怎样根据证据改变自己的想法的。贝叶斯定理详细说明了最强烈的信念（在本章的实例中指的是基础比率）**应该与证据分析相结合，这样才能更接近假设而不是偏离到其他方向上。** 例如，如果你相信有3%的研究生是被计算机科学专业录取的（基础比率），你还相信汤姆是该领域研究生的可能性是其他领域的4倍，贝叶斯定理就会认为，你必须相信汤姆是计算机科学家的概率是11%。此外，如果基础比率是80%，那你眼中的新概率就应该是94.1%，以此类推。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B4%9D%E5%B0%94%E4%B8%8D%E7%AD%89%E5%BC%8F":{"title":"贝尔不等式","content":"\n# 贝尔不等式\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B4%A2%E7%BB%8F":{"title":"公司研究","content":"\n# 公司研究\n\n[[大连电瓷]]  \n[[海油发展]]  \n[[四方股份]]  \n[[特变电工]]  \n[[金风科技]]\n\n# 行业研究\n\n[[储能]]  \n[[特高压]]  \n[[新能源]]  \n[[光伏]]  \n[[油气]]  \n[[船运]]\n\n# K线学习\n\n把自己的仓位分成投机仓和价值仓\n\n无论是价值仓位还是投资仓位，都要做好择时\n\nA股的本质是收集筹码，而不是价值本身  \n如何择时？\n\n1. 买入时机看是否有向上突破五周线。然后研究基本面。\n2. 卖出时机，突破5日线 5周线 分别卖出一点，一般来说 突破5周线该减仓一半或者清仓\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B4%A7%E5%B8%81%E5%B4%87%E6%8B%9C":{"title":"货币崇拜","content":"\n就是**不断做一些仪式感的事情追求神似，然后乞求奇迹自动发生。**\n\n## 费曼例子\n\n物理学家[[理查德·费曼]]在1974年给加州理工学生的毕业典礼中，提到了 “货物崇拜科学”的概念。这个故事来自于二战时，南太平洋岛国居民，因为曾经看到美军空运大量物资上岛，于是试图模仿这个仪式，以乞求同样的事情重演。他们造了跑道，跑道两边点着了火，造了小茅屋让人坐在里面，给小茅屋里面的人戴上一个木制模仿耳机，还有几根竹子模仿天线，然后期待货机降临。 所有的事情看上去都完美，形式完全一样，但是货机没有降临。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95":{"title":"资源清单","content":"\n# 资源清单\n\n   - [Dave Conservatoire](https://www.daveconservatoire.org/) ,免费的在线音乐学习网站，立志于“让每一个人都可以接受世界级的音乐教育”。\n   - [MOOC：](https://www.icourse163.org), 慕课 ，国家级课程学习平台\n   - [MasterClass ]：(https://www.masterclass.com), 全球一流的流媒体平台，提供100多种课程，涵盖商务和领导力、摄影、烹饪、写作、表演、体育等各个领域\n   - [阿里云盘资源文档](https://skitter-file-8b7.notion.site/749557891980423ca010f99a4de1c512)\n   - [双手插兜的资源文档](https://docs.qq.com/doc/DY3ZxcHVlV2JyVHZM)\n   - [⭐【500T影视资源文档】⭐](https://docs.qq.com/sheet/DR1ZGZ2N4b0lTZGZo?tab=BB08J2)\n   - [小纸条-开放纯粹的资源网站](https://ali.gitcafe.ink/)\n\n# 夸克资源获取\n\n- [5PB精选](https://link3.cc/5000T)\n- 千千学院1000TB资源 https://docs.qq.com/doc/DTVhmRnV6Y0dKanl2\n- IN资源库 docs.qq.com/doc/DWHVXVEdQSU1jWnl1\n- 趣盘搜 http://pan.funletu.com/\n- 爱盘搜 http://aipanso.com/\n- 从头学电脑 http://space.bilibili.com/481872624\n- [kk网盘资源论坛](https://www.kkpans.com/)\n- [KK小站](https://kkxz.vip/)\n- [3DMGame](https://dldmgame.com/)\n- [5000PB资源](https://skitter-file-8b7.notion.site/a7515f7384a04cb99b1b4667d055b9f1)\n\n# 无版权资源\n\n## 无版权视频向\n\n- Pexels无版权视频  \n- pixabay无版权视频（质量感觉不高）  \n- videvo(视频开头之类的视频，不适合当前项目)  \n- vidlery(卡通类视频，主打网页首图的动效，不太适合当前项目)  \n- 桌面动态壁纸视频\n   - 桌面动态壁纸通常都是一段简短的视频  \n   - 资源多，不需要对视频进行剪辑合并处理  \n\n## 无版权音频向\n\n- SoundCloud中无版权的音乐\n     - 只要Filter results中选择了「To use commercially.」就可以\n     - Chil训（节奏感音乐）\n     - cinematic(电影感音乐)\n     - 有时，音乐没有下载链接，可借助：[SoundCloud Downloader - SoundCloud to MP3 Converter](https://sclouddownloader.net/)下载\n - piⅸabay免版税音乐\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B5%AB%E5%B8%83%E7%90%86%E8%AE%BA":{"title":"赫布理论","content":"\n# 赫布理论\n\n这是加拿大心理学家唐纳德·赫布提出的概念。赫布理论解释了神经元是如何组成连接，从而形成记忆印痕。赫布理论阐明了细胞集群的形态和功能：“两个神经元或者神经元系统，如果总是同时被激发，就会形成一种‘组合’，其中一个神经元的激发会促进另一个的激发。”赫布同时写道：“如果一个神经元持续激活另一个神经元，前者的轴突将会生长出突触小体（如果已有，则会继续长大）和后者的胞体相连接。”  \n这可以视作“**神经元之间有没有连接以及连接的强度有多高，本身是有编码信息的**”\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B6%85%E5%AF%BC":{"title":"超导","content":"\n超导特性：电阻为0，+ 完全抗磁（[[麦斯纳效应]]+ 通量量子化 （[[约瑟夫森效应]]\n\n抗磁性不稀奇（热解石墨），应用地方：磁悬浮列车，减少汽车摩擦（陀螺仪\n\n0 电阻应用：可控核聚变、超导量子计算机、超导电机（超小型、超大型)、超导探测、超导输电\n\n## 投资机会\n\n5、投资机会  \n) 上游：铅、铜、磷，很好选，只有铅（没炒过、用量大、储量小），目前看1000度的炉子也没啥壁垒  \n2)中游：超导板块都是，没有特别亮眼的，去掉低温大屁股超导股，只能捏着鼻子买  \n3)下游：电动车改良、超导输电、磁悬浮列车、超导计算机、可控核聚变总之：短期看起来，都没有可能行出业绩，以题材炒作为主，不用去和新能源、gpt那样去等业绩，出不来的\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%B7%A8%E5%B9%B4%E7%AD%94%E7%96%913%E5%8D%A1%E7%89%87%E5%8D%81%E4%BA%8C%E9%97%AE":{"title":"跨年答疑（3）：卡片十二问","content":"\n## Meatdata\n\n- author：\n- link： [跨年答疑（3）：卡片十二问](https://mp.weixin.qq.com/s?__biz=MzA3MzM0MjUyMQ==\u0026mid=2652149731\u0026idx=1\u0026sn=0bad3be7e35b09a4f05e455572fe10b0\u0026chksm=84f0bcb5b38735a33155e1c0fbbc624f65bede286edc757ce3efe5b0c18d6be5be8081c4ee6e\u0026mpshare=1\u0026scene=1\u0026srcid=0710TdutFkdZg5qX93mgXYBH#rd)\n- tag：#\n- date: [[2021-12-31]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 卡片是万用盒子，是思维加油站，也是瑞士军刀。\n- 除了纳博科夫之外，还有大量作家、学者也是卡片爱好者。在《凡尔纳传》中提到，凡尔纳到 1895 年止，一边创作，一边积累了大约二万五千张卡片；鲁迅写作《中国小说史略》，摘抄的卡片有五千张；钱仲联《清诗纪事》前言提及：「历时五载，引用各类书籍一千余种，前后制作卡片累计七万余张，收作家五千余人」\n- 在中国，同样有一位将卡片用得出神入化的学者，他就是历史学家吴晗。在就读清华大学历史学系时，大学三年抄卡片数十万字；一生撰写明史相关卡片 20 万张。其中，吴晗连续抄录《朝鲜李朝实录》中的中国史料，卡片累积成 80 本册子，最后出版 12 本书。有一年，吴晗家贫缺钱，承诺写书一本，得稿费一万，但是当时战争期间，没有资料可引，于是拼接卡片，短短数月内创作一本流传至今的经典之作《朱元璋传》。\n- 好卡片尊重原始数据，坏卡片着急污染原始数据。\n- 你也能很清楚地知道作者自己的观点是什么。反之，坏卡片将原文作者的观点曲解成自己的观点，你很难区分开。学术训练好的人，会指出自己的引用。并且不会用自己的术语去乱改原始术语。而喜欢传播二手三手知识的人不是这么干的，第一，不会指出出处；第二，会自己发明一套新的术语。\n- 好卡片一次解决一个问题。卡片因为小而美。如果卡片中混杂的信息量过大，则会导致记忆混乱。\n- 好卡片有自己的见解。好卡片在尊重原始数据的同时，也注意记录自己的观点，\n- 好卡片有知识密度。好卡片连接不同记忆，并且产生远距联想。\n- 各位同学被要求写作以下类型的卡片，它们往往代表着人类知识体系中的精髓：术语卡：阅读中出现过的学术术语或者作者特定黑话人名卡：阅读中出现过的人名，以及他的个人简介如何反常识卡：有什么理论模型 / 推断证据 / 故事 / 行动，挑战了你的既有常识金句卡：收集性感的句子行动卡：写下你可以执行的行动技巧卡：积累你学到的技巧任意卡：此处自行发挥在上述七种卡片中，最重要的是：反常识卡、人名卡、术语卡。反常识卡是在拓展你的认知边界。每个时代的「常识」都是帮助人类降低认知负荷，提高社会运转效率，但是恰恰是这些「常识」也妨碍了你的认知。因此，你需要时不时借助鲜活证据来拓展认知边界。假设你是一名古人，你能明白如何通过当时的一些实验证据来证明地球是圆的，那么你就是一个时代的杰出英才。\n- 再说人名卡。人名卡则是让你尊重知识源头的创造者。撰写「人名卡」，你需要注意他哪个时代出生的人物，大家会高估同一个时代天才的数量，却会低估人类历史上天才的智慧。** 这在心理学上被称之为「天才效应」（参见我的老文：《人生标准九》）。\n- 最后说说术语卡。写术语卡时，要尽可能的区分演绎数据和原始数据，不要把自己的知识给污染了。你需要找到最原始的论文或者资料，知道是谁第一个提出这个术语，比如「元认知」、「自主心智」、「心智程序」等是谁提出来的，一旦养成这种习惯，就会增强你的独立思考能力。你还需要注意某个术语诞生的时间脉络。\n- 主要是「必要难度理论」。它可以改善输入输出的连接通道。你需要创设时间的必要难度、地点的必要难度、分散学习的必要难度、测试的必要难度。其中，比较重要的是：第一个是时间的必要难度，写的更晚一点，不要在你听的最爽的时候去写，这个时候都是在你工作记忆区域工作，左耳进右耳出，而且还会造成你很大的「学会了」的错觉。第二个是地点的必要难度，就是在不同的地点写。比如说今天在这听完了，回到家里去写笔记。第三个是叫记忆的生成效应，它指的是用自己的话写。别直接把别人的话复制过来，那叫做自欺欺人。\n- 卡片无需命名！！！这套开智提倡的命名规则更合适文件层级使用。卡片就是求快，尽量使用全文搜索 + 自动命名才是王道。一点需要这么复杂的命名规则，那么，写卡片快不起来。如果实在要命名，也是项目日期在前，\n- 按照开智部落一位族长大虾的心得，阅读任意一本书，写八张卡片足矣：这本书的主题核心，就是最大的反常识卡，并且注意时间脉络。根据反常识，再补充三个证据—就产生三张术语卡；根据这些证据和案例，找出源头和提出术语的人是谁—产生一张人名卡，并且分析他为什么牛，有哪些作品，生平经历是什么；最后根据他写的非常震撼的话语—产生一张金句卡；行动卡是能够指导自己的行动的卡；最后还有一张任意卡，记录个人阅读感想\n- 如何区分什么是合理引用，什么是抄袭呢？请大家注意引用的规范。一般来说，学术界判定「合理引用」与「抄袭」的规范是，没有对外公开发表的内容，没有经过作者同意，不能引用且对外公开。引用对外公开发表的内容，按照法律规定与业界通用规范，需要符合以下标准：1）引用非诗词类作品不得超过 2500 字或是被引用作品的 1/10，如果多次引用同一部长篇非诗词类作品，总字数不得超过 1 万字；2）引用诗词类作品不超过 40 行或全诗的 1/4，古体诗除外3）凡引用一人或数人的作品，所引用的总量不得超过本人创作作品总量的 1/10，专题评论文章除外；4）1991 年我国国际版权局发布《著作权法实施条例》规定：「所引用的部分不能构成引用人作品的主要部分或实质部分」。也就是说把别人作品的实质部分引来作为自己作品的实质部分，尽管引用的量可能不到他人作品的 1/10，也不属于适当引用，而属于侵权。\n- 互联网的知识创业生态下，有两个物种：1. 知识逐利者，以收割焦虑感和功利心为生；2. 知识创造者，在时间源头创造高保真度的知识，布道隽永的智慧。开智部落的嘉文写了一段话：\n- 一流作家与写作新手在不同世界处理文字。一流作家不是在字词级别进行抽象，而是在组块、组块、组块层级进行抽象，观察世界。为了解释这一种抽象，我已经给各位同学介绍了大量认知科学术语，比如「框架」、「意象图式」、「基本层次范畴」、「空间隐喻」。当记忆外部化与概念具象化，最终就变成卡片。在一个如此复杂的世界，你可以利用信息抽象级别更高的思维来理解这个世界；你可以用卡片来封装这个世界。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BD%AF%E6%8A%80%E8%83%BD-2%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%80%85%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF%E6%8C%87%E5%8D%97":{"title":"《软技能 2：软件开发者职业生涯指南》","content":"\n# 《软技能 2：软件开发者职业生涯指南》\n\n[软技能 2: 软件开发者职业生涯指南](\u003c# 软技能2: 软件开发者职业生涯指南\n\n## 提出问题\n\n- 作者心中的软件开发者是什么样的？\n- 职业生涯应该怎么规划？\n- 工资，副业，健康等能获得什么样的规划?\n\n## 读书笔记\n\n### 如何成为软件开发者\n\n**在自动化某一个过程之前，你必须知道手动完成这件事情的全过程。**\n\n你需要具备的职业技能：\n\n- 数据结构与算法\n- 一门编程语言\n- 面向对象设计\n- 数据库基础知识\n- 源代码控制（git）\n- 构建与部署\n- 测试\n\n做中学，学后  \n选择哪门编程语言不重要  \n在任何谈判中，谁先出价谁输（或者至少是处于明显劣势的地位）。在任何情况下，你都不应该透露你目前的工资信息，并且你永远不要说出你期望的工资水平，直到你拿到录用通知书为止  \n因此，如果你只谈薪水，那么你在谈判桌上的筹码会大打折扣。重要的是，一定要记住，一笔交易的不同方面对不同的参与者有着不同的价值。\n\n### 编程语言\n\n- C语言工作在非常底层的位置，它允许开发者直接访问计算机的内存，操纵计算机的许多底层部件。你会发现C被广泛应用在操作系统、底层硬件、嵌入式系统等方面，甚至还有很多老款游戏。**C语言通常被认为是面向系统的编程语言。**\n- C++；从技术上讲，C++是C的超集，这意味着C程序可以在C++编译器编译成功\n- C#是一种面向对象的语言，表达方式类似于C++，但是要比C++简单得多，而且现在还具备许多函数式特性。\n- Java也是面向对象的语言，主要语法基于C和C++，但是与C#一样，Java也非常简洁，不允许直接对内存进行操作，也不允许其他可能带来麻烦的对底层构造的操作。\n- Python可以以面向对象的方式编写，也可以以过程式甚至函数式的方式编写，它是一种解释型语言，这意味着实际上它不被编译。与C、Java和C#相比，\n\n如何正确地使用分支。  \n持续集成（CI），即每次有人签入新代码都要构建软件。  \n伟大的开发者都会编写可维护的代码  \n我每天都花一定量的时间阅读和学习，让自己能够掌握整个行业的动向，借此保持我对技术的敏感性。”  \n**太多的员工无法与老板恰当相处，并不是因为他们故意让这事变得困难，而是因为他们没有掌握要点。他们没有透过老板的眼睛看世界。他们不知道老板对下属的真实期望是什么，也不知道如何从老板的角度来区分好与坏。要想真正了解你的老板，你就需要了解老板的衡量标准是什么，要知道老板的衡量标准与你自己的衡量标准可不是一回事儿。**\n\n创业 迈克尔·格伯的《突破瓶颈》\n\n事实上，我通常建议，大多数软件开发者要去完成的第一个兼职项目就是那些已经存在的项目的复制版本。\n\nTake Action( 采取行动 )\n\n## 读后感\n\n这本书大而全的讲述了一个软件开发者一生中会遇到的大大小小的事，并尽量的给予了自己的建议，我从里面学习了很多知识，尤其是一些知识是碰壁后获得的经验，特别的感同身受，可惜当时没有早点阅读。但是也许是英文书翻译的原因，很多地方写的其实不是很吸引人，有点生硬的感觉。可惜英文不好，有能力还是要尽量读原著，加油。另外入手了《代码大全》和《代码整洁之道 》 ，今年一定要在成为伟大的程序员的路上更进一步，另外希望自己的兼职副业能产生想法，而且能付诸行动。Take Action ！\n\n## 读书记录\n\n2021.2.25 - 2021.2.26 阅读时长4个多小时，因为很多地方速读的。作为大而全的一本书，个别章节值得后面回来翻阅下。\u003e)\n","lastmodified":"2023-09-18T14:54:47.490454226Z","tags":null},"/%E8%BD%AF%E6%8A%80%E8%83%BD2%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%80%85%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF%E6%8C%87%E5%8D%97":{"title":"《 软技能2：软件开发者职业生涯指南 》","content":"\n# 《 软技能2：软件开发者职业生涯指南 》\n\n# 元数据\n\n\u003e [!abstract] 软技能2：软件开发者职业生涯指南\n\u003e - ![ 软技能2：软件开发者职业生涯指南|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/850/31262850/t7_31262850.jpg)\n\u003e - 书名： 软技能2：软件开发者职业生涯指南\n\u003e - 作者： 约翰·森梅兹\n\u003e - 简介： 本书是《软技能：代码之外的生存指南》一书作者的新作，主要围绕软件开发从业者职业生涯的发展历程，描述软件开发者在职场中需要具备的各种“软技能”—如何入行成为软件开发者，如何学会第一门编程语言，如何写求职简历，如何准备面试，如何选择工作岗位，如何选择技术方向，如何拓展技术技能，如何与团队和领导融洽相处，如何以著书立说方式为自己在业界赢得赞誉，等等。本书适合各层次的软件开发者阅读。尽管本书名义上是专门写给软件开发者的，但实际上这也是一本关于管理个人职业生涯以及如何获得成功的书，对软件开发行业的各类从业者做好职业发展规划都很有帮助。\n\u003e - 出版时间 2020-06-01 00:00:00\n\u003e - ISBN： 9787115534538\n\u003e - 分类： 计算机-编程设计\n\u003e - 出版社： 人民邮电出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7opbm7KBc  \n⏱ 2021-02-26 16:58:20\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BD%B4%E5%BF%83%E6%97%B6%E4%BB%A3":{"title":"轴心时代","content":"\n## 什么是轴心时代？\n\n## 东亚-百家争鸣时代\n\n道家  \n儒家  \n法家\n\n吴军老师认为百家争鸣出现的原因是：\n\n1. 战国时期各诸侯国出于国家发展，特别是战争的需要，相继改变了旧有的政治制度，纷纷开始变法。\n2. 在秦朝覆灭后，法家学说经过不断地改良，与儒家思想一同，成为了对中国政治影响最大的思想，这就是所谓的\"外儒内法”。\n3. 很多伟大的思想、艺术和科学成就，是需要有人出钱供养才能产生的。\n\n## 南亚次大陆\n\n到了印度吠陀时代的晚期，历史悠久的婆罗门教所倡导的种姓制度，也开始暴露出各种弊端。婆罗门种姓与其他 3 个种姓之间矛盾愈演愈烈。在这个大背景下，各路思想逐渐涌现，一些新的教派也开始在民众中传播。这些宗教所倡导的思想文化，在后世被统称为“沙门思潮”，这一时期也被称为沙门时期。\n\n### 耆那教\n\n耆那教的创始人是伐达摩那，他是当时一个印度部落首领的儿子，生活富足。然而，他 30 岁时放弃了所有的这一切，甚至抛弃了妻子和女儿，选择了出家去追求精神上的觉醒。经过十几年的参悟和冥想，伐达摩那开悟得道。在随后的 30 年里，伐达摩那几乎走遍了印度各地，传授他的教义和哲学思想。\n\n另外，耆那教反对婆罗门教派的种姓制度，他们生活俭朴，反对暴力，主张和平，并且把不杀生、不妄语、不偷盗、不邪淫和不执念作为自己的五条清规戒律。因此，耆那教派在印度一众沙门教派中，很快取得了更大的影响力。而耆那教对于稍后兴起的佛教，也有很大的影响。比如，佛教的五戒律就来源于耆那教的这五条清规戒律。\n\n### 佛教\n\n佛教是由印度北部，靠近尼泊尔的释迦国的王子，乔达摩·悉达多在公元前 5 世纪创立的宗教。一般，人们称呼乔达摩·悉达多为[[释迦牟尼]]。“释迦”是国名，“牟尼”则是梵语对圣人的尊称\n\n[[佛教兴起的原因]]\n\n佛教最初的分化是在佛陀圆寂大约 100 年后，僧侣们对佛教的戒律开始产生分歧，于是佛教分化为上座部和大众部。\n\n上座部佛教坚持佛陀原本的教义。它的信徒认为，佛陀并不是有求必应的神，而是一位德行圆满的觉悟者，是一位普度众生的导师。人修行的目的是开悟，让自己最终得到解脱，也就是涅槃，从此脱离轮回，解脱痛苦。大众部佛教则认为，佛教的教义应该是随着地域民族变化的，僧团有权力决定哪些戒律该遵守或者不需要遵守。对于佛本身的态度，大众部认为佛法无边，是无上的神。\n\n佛教发展的一个里程碑是大乘佛教（梵语：Mahāyāna）的出现。大乘佛教主张放宽一些清规戒律，以方便更多的人信教，普度更多的众生。因此他们认为这样做是利他的，更符合佛教的精神。大乘佛教的信徒认为持反对态度的佛教徒只求自利，而断除自身烦恼，因此是“小乘”。\n\n## [[犹太人]]的思想风潮\n\n## [[古希腊]]\n\n## 书籍推荐\n\n一本是本特利的《新全球史》，另一套是盐野七生的《罗马人的故事》\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BD%BB%E8%88%9F%E6%99%BA%E8%88%AA":{"title":"轻舟智航","content":"\n# 轻舟智航\n\n#公司\n\n还有在行业玩家普遍以“路测里程”、“车队规模”、“牌照数量”论资排辈时，轻舟却最早提出以仿真测试为主开发迭代，在当时属于“少数派”。\n\n### DBQ V4\n\nL4 的困难在于**最后 1%的场景**，这当中涉及到大量底层的安全冗余方案。\n\n**DBQ V4 量产成本最低至 1 万元人民币**，这在 L4 级自动驾驶赛道上是前所未有的。\n\nDBQ V4 是一个高度可配置的方案，客户可以像勾选菜单一样根据不同的应用场景选择相应的配置，相当于把产品的定义权交给客户。\n\n全部配置可以达到 L4 级自动驾驶，而标配版则可以用 10%的实现 99%的 L4 级自动驾驶能力。这便是随“机”应变。\n\n面对不同的车型、场景，DBQ V4 也能在一套技术栈下快速适配，实现像无保护左转、狭窄道路通行、自主泊车、自动变道超车、主动绕行动态障碍物等一整套的能力，是为**“以不变应万变”**。\n\n### 轻舟速度\n\n**轻舟速度**，已成为行业共识。\n\n- 成立 4 个月即获加州路测牌照。\n- 一年之后，轻舟智航的自动驾驶小巴**龙舟 ONE**首次在苏州亮相，并启动常态化运营模式。值得一提的是，当时基于 Driven-by-QCraft 的解决方案，首台小巴出厂到上路只用了一个月时间。\n- 同年 12 月，在深圳落地首个微循环自动驾驶公交线路。\n- 随后在 2021 年，又在武汉、重庆、北京等地落地运营，还发布自动驾驶网约巴士。截止当年年底，已经有 10 个城市落地，自动驾驶车队（Robobus+Robotaxi）超过 100 辆。\n- 与东风悦享联手打造的**Sharing Bus**，不到半年时间就已经在武汉、大理、苏州等多个城市落地运营。\n\n### 龙舟 SPACE\n\n龙舟 SPACE 的空间可多重变换，灵活覆盖不同场景需求，更像是一种 Mobility As A Service 的体现。\n\n既可用于从长途到短途的无缝接驳，又能用于零售、物流等场景。**建立 15 分钟核酸检测圈**\n\n### 背后方法论\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220518151017.png)  \n它主要包含三个板块。\n\n一是**通过数据流水线工具链轻舟矩阵打造自动化闭环**。通过数据的快速流转，实现技术的快速迭代。  \n这也是基础设施中最为重要的底层支撑，当中包含数据平台、标注平台、训练平台以及仿真模块。  \n其中前三个平台为基础架构模块，可实现数据上传、筛选、标注、训练等全流程任务。  \n随后通过依照真实路测和生成数据构建的仿真平台，来帮助企业训练多个场景算法、测试验证。  \n二是**涵盖车载软硬件的平台级通用全栈技术**。既包括传感器、线控、计算平台等硬件，也包括感知算法、地图定位、云端控制等软件。\n\n三是**面向不同场景批量化输出解决方案**，比如城市公开道路、高速公路、封闭园区/景点、公交定点接驳等场景。\n\n### 轻舟优势\n\n轻舟模式说最重要的是**数据闭环能力**，更准确的说是**低成本高效率**的数据闭环能力。通过不断提高数据自动化处理能力，降低算法迭代的成本和周期。\n\n其实对 L4 来说，99%的场景都很简单，各家能力也趋于同质化，真正的差异化优势在于那 1%不常遇见的复杂长尾场景。  \n而要提升系统应对这类场景的能力，关键是要有相应的数据提供给 AI 训练。\n\n如果依赖路测收集极端复杂场景数据，可能数万公里甚至更多里程才会出现一例，这导致数据反馈的有效率很低，有效数据的平均成本也很高。  \n而要收集足量且覆盖类型齐全的长尾场景，几乎是不可能的。\n\n所以轻舟智航最早提出以仿真为主的自动驾驶研发，通过对有限路测数据的学习，然后使用系统大量生成针对性的场景对 AI 进行训练，这样将路测数据价值放大到极致，也大大加速了迭代周期。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BE%89%E6%A0%BC%E5%BC%8F":{"title":"辉格式","content":"\n# 辉格式\n\n它指的是 19 世纪初期，属于辉格党的一些历史学家从辉格党的利益出发，用历史作为工具来论证辉格党的政见，依照现在来解释过去和历史。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BE%93%E5%87%BA%E6%96%87%E5%AD%97%E8%BF%98%E6%98%AF%E8%A7%86%E9%A2%91":{"title":"输出文字还是视频","content":"\n文字公众号除了容易被盗用，还有一些言论容易被断章取义和举报，这方面是有风险的\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BF%87%E4%BA%8E%E5%85%B3%E6%B3%A8%E4%B8%80%E4%B8%AA%E7%82%B9%E6%97%B6":{"title":"过于关注一个点时","content":"\n# 过于关注一个点时\n\n在海明威的小说中有这么一样一个场景，少年一个人坐在海边看着海面，海面上有一艘白色的小帆船，他盯着的时候船看了一个下午，这个小帆船也都几乎没有怎么移动。\n\n但是当他进屋喝杯水的功夫，再出来的时候，那艘小帆船已经飘走很远了，几乎看不见了。\n\n什么意思呢？\n\n当我盯着自己看的时候，每天给自己定任务，不去想别的的，我自己走了这么远的路，却一点感觉都没有，但是当我坐下来喝口茶休息一下，回头看看自己出发的地方，我靠，原来我已经走了这么远。\n\n就像是进去喝杯水的功夫，帆船飘远了一样，我越是盯着自己看，就越对自己的改变没有感觉，只有我停下来重新审视自己，给自己做复盘的时候我才发现。原来我的变化是日积月累的，变化一直都在，只是我注目着这个过程而忽略了其他。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BF%87%E7%A8%8B%E5%BF%BD%E7%95%A5":{"title":"实例","content":"\n# 实例\n\n## 被出轨的男人\n\n一个男人到死都深信自己的妻子很爱他。所以，当我们听说他的妻子多年前就有了情夫，与这个男人在一起只是为了他的钱时，就会为这个男人感到悲哀。尽管，这个丈夫一生都很快乐，我们还是会同情他。\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BF%88%E5%85%8B%E5%B0%94%E9%80%8A-%E8%8E%AB%E9%9B%B7%E5%AE%9E%E9%AA%8C":{"title":"迈克尔逊-莫雷实验","content":"\n# 迈克尔逊-莫雷实验\n\n#卡片/术语卡\n\n## 简介\n\n这个实验被成为完整的物理学大厦上的两朵乌云之一。  \n\n\u003e 这个实验的用意在于探测光以太对于地球的漂移速度。在人们当时的观念里，以太代表了一个绝对静止的参考系，而地球穿过以太在空间中运动，就相当于一艘船在高速行驶，迎面会吹来强烈的“以太风”。然而实验结果却让他们震惊且失望无比：两束光线根本就没有表现出任何的时间差。以太似乎对穿越于其中的光线毫无影响。 --- 出自 [[《上帝掷骰子吗》]]  \n\u003e\n\u003e 迈克尔逊-莫雷实验的目的是找出更多直接证据来证明以太的存在。实验的核心设想是，从一个点发射出两道光，夹角为 90 度，随后（通过镜子反射）使两道光从两个方向反射回来。如果光通过以太这样的介质来传播，那么由于地球很有可能像船在水面上划过那样在介质以太中运动，预计将看到的两道光反射回来时有微小的时间差。 --- [[《世界观》]]\n\n## 例子：\n\n举个与这个实验核心想法相似的例子，假设让两个人从运动着的船上出发去游泳。思考一下图 22-1 所展示的关于船和游泳者的类比。假设三条船都以同样的速度在水中运动，船 B1 与船 B3 之间的距离和船 B2 与船 B3 之间的距离相等。其中一人（也就是图中的 S1）的任务是游到位于图示上方的船 B1，然后回到他最初出发的船上（也就是 B3）。由于船在水中运动，因此这个人需要以一定的角度游向船 B1，然后同样以一定的角度游回船 B3。另一个人（图中的 S2）的任务是追上位于他出发的船 B3 前面的船 B2，然后回到船 B3。  \n\n![https://res.weread.qq.com/wrepub/epub_23692279_37](https://res.weread.qq.com/wrepub/epub_23692279_37)\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.610454832Z","tags":null},"/%E8%BF%88%E5%B0%94%E6%96%AF-%E5%B8%83%E9%87%8C%E6%A0%BC%E6%96%AF%E7%B1%BB%E5%9E%8B%E6%8C%87%E6%A0%87":{"title":"迈尔斯-布里格斯类型指标","content":"\n# 迈尔斯-布里格斯类型指标\n\n迈尔斯-布里格斯类型指标（MBTI）是国际流行的人格类型理论模型，主要用于指导被测试者选择适合自身的职业发展方向。  \n它从不同个体复杂多元的个性特征中归纳总结出四大关键要素，分别为注意力方向（精力来源）、认知方式（搜集信息）、判断方式（做出决策）、生活方式（应对外部世界），从而得出不同人的偏好。  \n再将偏好细分为外倾（E）和内倾（I）、感觉（S）和直觉（N）、思维（T）和情感（F）、判断（J）和知觉（P）。由此构成 MBTI 的 16 维全方位指标。它的优势在于利用理论模型判断和分析人的个性，从而顺利地把不同人的性格特点进行较为客观的区分。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220616102339.png)\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C":{"title":"远程工作","content":"\n# 远程工作\n\n远程工作网站：  \nhttps://remoteok.com/  \nhttps://weworkremotely.com/\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E8%BF%9E%E8%BF%9E%E6%94%AF%E4%BB%98":{"title":"连连支付","content":"\n# 连连支付\n\n## 一面\n\n1. Http1.1 有什么改动\n2. Http2. 0 进行了什么优化\n3. Fcp 首屏渲染的优化有了解吗\n4. 负载均衡如何配置\n5. 当页面切换导致请求中断，如何保证请求能稳定发送\n6. 使用 rrweb 的时候有遇到什么困难点吗\n7. 了解 http 缓存吗 [[HTTP 缓存]]\n8. Keep-alive 和 http2 有什么区别\n\n## 二面\n\n1. 对 http 缓存的理解\n2. 知道内存泄露怎么发现和解决吗\n3. 垃圾回收机制了解吗\n4. 强引用和弱引用的区别是什么\n5. 你会如何设计一个通用组件\n6. 项目中有什么难点，带来了什么成果。\n7. 首屏渲染你做了什么\n8. 手写两道算法：大数相乘和 flat\n\n## HR 面\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F":{"title":"小结","content":"\n迭代器模式无非就是循环访问聚合对象中的各个元素  \nJavaSctipt 中已经有了对应的实现，forEach\n\n## 内部迭代器\n\n内部迭代器在调用的时候非常方便，外界不用关心迭代器内部的实现，跟迭代器的交互也仅仅是一次初始调用，但这也刚好是内部迭代器的缺点。由于内部迭代器的迭代规则已经被提前规定，上面的 each 函数就无法同时迭代 2 个数组了。\n\n## 外部迭代器\n\n外部迭代器必须显式地请求迭代下一个元素。  \n外部迭代器增加了一些调用的复杂度，但相对也增强了迭代器的灵活性，我们可以手工控制  \n迭代的过程或者顺序\n\n# 小结\n\n迭代器模式是一种相对简单的模式，简单到很多时候我们都不认为它是一种设计模式。目前的绝大部分语言都内置了迭代器。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%80%80%E7%9B%B8%E5%B9%B2%E7%90%86%E8%AE%BA":{"title":"退相干理论","content":"\n# 退相干理论\n\n我们已经假设了 A 生活在 x 轴上，B 生活在 y 轴上，这样一来，我们将会发现两个质点人对于对方所生活的世界是一无所知的。原因很简单：因为 x 轴和 y 轴互相垂直，x 轴在 y 轴上没有投影，反之亦然。对于 A 来说，他完全无法得知 B 的世界发生了什么事情，两人注定了要老死不相往来。这时候，我们说两个世界是正交（orthogonal）的，不相干的。\n\n但是，x 轴和 y 轴垂直正交是一个非常极端的例子。事实上，如果我们在二维平面里随便取两条直线作为“两个世界”，则它们很有可能并不互相垂直。那样的话，B 世界仍然在 A 世界上有一个投影，这就给了 A 以一窥 B 世界的机会（虽然是扭曲的）。\n\n但是，假如我们不考虑低维，而是在高维的空间中，我们随便取两个切片，其互相正交（垂直）的程度就很可能要比 2 维中的来得大。因为它比 2 维有着多得多的维数，亦即自由度，彼此在任一方向上的干涉程度自然大大减小。假设有一个非常高维的空间，比如说 1 亿亿维空间，那么我们在其中随便画两条直线或者平面，它们就几乎必定是基本垂直了。\n\n这就导致了关键的推论：当我们只谈论微观的物体时，牵涉到的粒子数量是极少的，用以模拟它的希尔伯特空间维数相对也较低。**而一旦我们考虑宏观层面上的事件，比如用某仪器去测量，或者我们亲自去观察的时候，我们就引入了一个极为复杂的态矢量和一个维数极高的希尔伯特空间。在这样一个高维空间中，两个“世界”之间的联系被自然地抹平了，它们互相正交，彼此失去了联系！**\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F":{"title":"适配器模式","content":"\n# 适配器模式\n\n适配器模式是一对相对简单的模式。在本书提到的设计模式中，有一些模式跟适配器模式的  \n结构非常相似，比如装饰者模式、代理模式和外观模式（参见第 19 章）。这几种模式都属于“包  \n装模式”，都是由一个对象来包装另一个对象。区别它们的关键仍然是模式的意图。\n\n- 适配器模式主要用来解决两个已有接口之间不匹配的问题，它不考虑这些接口是怎样实  \n  现的，也不考虑它们将来可能会如何演化。适配器模式不需要改变已有的接口，就能够  \n  使它们协同作用。\n\n- 装饰者模式和代理模式也不会改变原有对象的接口，但装饰者模式的作用是为了给对象  \n  增加功能。装饰者模式常常形成一条长的装饰链，而适配器模式通常只包装一次。代理  \n  模式是为了控制对对象的访问，通常也只包装一次。\n\n- 外观模式的作用倒是和适配器比较相似，有人把外观模式看成一组对象的适配器，但外  \n  观模式最显著的特点是定义了一个新的接口。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%80%86%E5%90%91%E6%80%9D%E7%BB%B4":{"title":"逆向思维","content":"\n# 逆向思维\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%80%9A%E8%BF%87%E6%A8%A1%E4%BB%BF%E5%AD%A6%E4%B9%A0":{"title":"通过模仿学习","content":"\n\u003e 模仿有两种，一种是向上模仿，另一种是横向模仿。\n\u003e\n\u003e 向上模仿说的是，有一类人，我们会将它视为偶像，进而模仿他们的行为、人格等，希望学习他们成为更好的自己。还有一类人，我们也会模仿，但他们和我们很像，我们视为同类，这是横向模仿。可是横向模仿容易引发嫉妒，进而有可能演变成冲突，陷入同质化竞争。\n\u003e\n\u003e 横向模仿的危险之处在于，它躲在暗处，十分隐秘，我们常常都不知道是谁触发了我们的欲望，并把我们引向了不属于我们的道路，劫持了我们最真切的渴望，导致走了很多弯路。\n\u003e\n\u003e 向上模仿不一样，因为时空距离较远，和我们的差异较多，我们感到的常常是力量，而不是竞争。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%80%BB%E8%BE%91%E5%AD%A6":{"title":"如何推理","content":"\n# 如何推理\n\n[[什么是逻辑?]]\n\n## [[演绎推理]]\n\n演绎推理 是从大范畴中找小范畴的推理  \n属于必然推理\n\n## [[归纳推理]]\n\n归纳推理是从众多小范畴中找见大范畴的推理\n\n## [[类比推理]]\n\n类比推理则是在相似的范畴之间进行推理\n\n虽然这三种推理，方式不同，但都是为了把我们从已知的拽向未知的，从老的命题拽向新的命题。\n\n归纳推理和类比推理也被称之为合情推理或者叫或然推理\n\n## 形式逻辑和非形式逻辑\n\n## 溯因与辩证\n\n# 如何寻找错误\n\n## 前提性谬误\n\n## 支持性谬误\n\n## 相干性谬误\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%81%93%E6%AD%89":{"title":"道歉","content":"\n# 道歉\n\n这次的事，其实我一直不知道从哪里开始道歉，跟你说对不起吗，辜负了你的期望吗，没有做好这样的细节吗。我想了很久，我最对不起的是我自己，我那天就跟接受到的雷击一样，我承认我不是个有勇气的人，不敢直接把这个结果跟你说起，因为我知道肯定会得到生气冷战。但这不是对你的要求，只是我当时没有经过合理思考得出的。现在静下心来，我想就这件事我应该有上中下三策，  \n上策：改善沟通的方式，和你沟通，提出我的诉求，希望不要冷战不要争吵，同时自己进行改变，不要逃避，坦诚的沟通。  \n中策：坦白告诉你，虽然可能会被骂，会生气，会冷战，但只是我还是愿意沟通的  \n下策：选择逃避，等你自己发现，这样的策略会带来的后果是隐瞒和并没有改善，使人更加生气\n\n我意识到我们不能每次都这样吵架，我觉得这样冷战，拉黑的方式对双方的伤害都是巨大且无效的。我真的希望我们能互相扶持互相进步的走下去，长长久久，我想了很久，我去《爱，需要学习》里面寻找答案。\n\n这本书中提到的好的相处模式：\n\n1. 互相称赞，有很多对彼此的认可，形成良性循环\n2. 有效的互补，比如在争吵中，妻子看丈夫火气上来，就先停下来不说话，等丈夫气消了再说；在教育中，一人唱红脸，一人扮白脸；这背后是对彼此的了解和配合的默契  \n   我们在相处模式上还是比较不错的，记得之前你也说，看别人的相处模式，弹幕都在夸，而我们也是这样的\n\n那么如何去打破无效沟通的循环呢?\n\n1. 不给对方贴标签，因为这就意味着对方没有改变的可能了，想要看到不一样的他，就从不要贴便签开始。比如我们自己两个人，我不要给你贴上“爱生气”，‘爱冷战“的标签，这样我就会积极的跟你去沟通。\n2. 放弃自我辩解，辩解的潜台词是“你根本不懂我的苦衷”，可以先问问自己“但我这么说，对方会听吗？”，如果不行，不如先听听对方怎么说\n3. 打破恶性循环，“循环”则指一个人的行为是在另一个人的刺激下产生的。丈夫的冷落引发了妻子的抱怨，妻子的抱怨又让丈夫想躲，这种躲更加剧了妻子被冷落的感觉，形成一种恶性循环。想要打破，妻子要做的改变是抱怨，而丈夫的改变是对问题的躲避\n4. 看见对方微小的改变，这个我知道，每次改变都是微小的，不会是脱胎换骨般的直接换一个人。有时候，我们习惯盯着对方的旧行为，因此忽略了对方的新行为，以为改变没有发生。去记录和发现对方为自己做出的改变，这里我准备做一个改变录，记录下这些微小的细节。而不是一直记着她老爱生气，而是记录在我明显有话说不好，有事做错，他没有跟我生气的行为\n\n如何有效的吵架呢？\n\n1. 说出真正的需要、委屈和感受，而不是围着一些鸡毛蒜皮的小事绕圈子。\n2. 吵架的时候，能够倾听和回应对方的需要和委屈，而不是不停地为自己辩护，两个人自说自话。\n3. 有效的吵架，总是一边争吵，一边修复。彼此都会抛出修复关系的“橄榄枝”，也会接住对方的“橄榄枝”\n\n不良沟通模式之二：追逃。追的一方希望对方能给予更多回应，而逃更多是沉默和回避的模式。  \n追逃模式的成因：很多时候，追逃是从争吵模式发展而来的。通常热恋情侣、新婚夫妻还有力气争吵，吵着吵着，其中一个人怕了、累了，就开始回避和沉默。他越回避和沉默，另一个人就越指责他，形成恶性循环。  \n解决方案：要学着不怕妻子，不怕说错话，不要怕他生气。你要心平气和地告诉她，我有我的想法，如果你总是这么生气，我就会退缩回来。如果你想听我的想法，就要容忍有时候我跟你想的不一样。  \n解决关系的难题，需要两个人承担起沟通的责任，而不是把责任甩给对方。无论内心有多害怕冲突、多厌恶对方的指责，都要试着跟对方好好说。这样才能停止追和逃的游戏，\n\n这个模式是我们经常发生模式，我们总是会有不一样的想法，开始我还会去说，但是越后来就越不说了，因为怕说错话。还记得我之前老是说你因为我说错话而生气吗，这里我的诉求是：我觉得说错话是个很大的范围，比如那天体检去医院，陈嘿嘿米有关心，但是我之后有关心了，我就有在努力改变了。我们现在记录下来的每一件错事就很棒，我们不要重复的去犯就好。\n\n不良沟通模式之三：冷战  \n在回避式交往中，夫妻双方都不再对对方抱有期待，想方设法让对方变得不重要。回避的目的从警告和惩罚对方，变成让自己内心安宁的自我要求。慢慢地，回避的一方觉得这样十分自在，而另一方通常也会默契地配合。表面上不吵了，实际上谁的内心都不宁静，两个人开始疏远并逐渐变得冷漠。  \n怎么从冷战中走出来：最好在问题产生的时候，关系双方就积极的进行解决，如果感情真的冷了，就很难在热起来了。\n\n这一块我真的一直在努力的避免，冷战的伤害实在是太大了，不要小看拉黑，删除好友这些手段，都是拒绝去沟通，拒绝接受别人橄榄枝的方式。就像上面说的，如果感情真的冷了，就很难再热起来了，我觉得我们还是相爱的，不要去通过冷战惩罚对方。\n\n形成积极的关系模式的三个方法\n\n1. 直接告诉对方自己的需要\n2. 分享自己的脆弱，意味着自己承认需要对方、依赖对方、对方很重要，同时给了对方伤害你的权利。\n3. 看到对方的脆弱，并接纳这种脆弱。  \n   有一对夫妻，妻子总是抱怨丈夫不理解自己，平时跟丈夫说什么，丈夫都没有回应。丈夫听完妻子的抱怨后说：“我不是不想理我妻子。每次妻子说我时，我都很慌乱，不知道该怎么回应，只好默不作声。其实妻子的每句话我都记得。”他历数妻子给他造成困扰的话，说：“有时候妻子说完了，我整晚都睡不着，反复想她的话。”  \n   我问妻子：“你知道你老公这么苦恼吗？”妻子的声音一下子软下来了，说：“我从来不知道，我还以为他一点都不在意我呢。”  \n   后来妻子告诉我，因为这次咨询，自己对老公有了更多理解，也看到并接纳了丈夫的脆弱，发脾气的次数也大大减少了。\n\n提出我的一个诉求，我希望我们吵架可以沟通，拉黑这种方式只有在分手的时候再使用。我也不希望你一直把类似死、分手、离婚这样的词挂在嘴边，讨厌程度大概等于你讨厌我说脏话的时候。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%82%93%E5%B0%8F%E5%B9%B3%E6%97%B6%E4%BB%A3":{"title":"《 邓小平时代 》","content":"\n# 《 邓小平时代 》\n\n# 元数据\n\n\u003e [!abstract] 邓小平时代\n\u003e - ![ 邓小平时代|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/48/674048/t7_674048.jpg)\n\u003e - 书名： 邓小平时代\n\u003e - 作者： 傅高义\n\u003e - 简介： 美国哈佛大学傅高义教授倾十年心力完成的权威巨著《邓小平时代》，是对邓小平跌宕起伏的一生以及中国惊险崎岖的改革开放之路的全景式描述。作者对邓小平个人性格及执政风格进行了深层分析，并对中国改革开放史进行了完整而独到的阐释。书中涵盖丰富的中外档案资料和研究成果，以及为数众多的作者独家访谈。对中美建交、华国 锋历史评估、改革开放的幕后曲折、邓小平和诸多当时关键人物之关系、香港问题、邓小平南巡等重大议题均有详述及剖析。本书既具学院研究的严谨专精，又对中国现实政治与事理人情有透彻把握，被誉为邓小平研究“纪念碑式”的著作。\n\u003e - 出版时间 2012-11-01 00:00:00\n\u003e - ISBN： 9787108041531\n\u003e - 分类： 政治军事-政治\n\u003e - 出版社： 生活·读书·新知三联书店\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n打天下而后守天下，邓公的伟大应该被世人谨记 ^16142247-7906HIKqa  \n⏱ 2019-06-09 19:56:53\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%82%A3%E6%97%B6%E7%9A%84%E4%BA%BA%E6%B0%91%E6%98%AF%E6%94%AF%E6%8C%81%E7%83%A7%E7%9A%84":{"title":"那时的人民是支持烧的","content":"\n# 那时的人民是支持烧的\n\n#卡片/反常识卡\n\n- 印象：\n- 正确：\n- 例子：\n\n![知乎回答](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220525101651.png)\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%82%BB%E8%BF%91%E5%8F%AF%E8%83%BD%E6%80%A7":{"title":"邻近可能性","content":"\n“邻近可能性”  （Adjacent possible) 这个概念, 最初由生物学家 Stuart Kauffman 提出， 在所谓“前生物化学” (prebiotic chemistry) 领域, 意指在生命原生汤 （primordial soup) 内分子间所有可能发生的化学反应。在这个初期，植物，动物，人脑更复杂的东西是不可能出现的。\n\n就可以把这个想象成只是图谱，每一个点都是可以先外延伸的。每一个点都会把你带向一个从未接触的地方。你也图谱也从一个个零散的点变成了一张大大的网  \n\n大多数好的创新，是各种不同想法的一个集群，是各种临近可能性的组合。 **创新受制于周边的软硬件系统的条件， 创新本质上是一个网络**。 孤立于网络而奢谈创新，好比巧妇难为无米之炊。\n\n搭建一个孕育催生创新的网络，本质上需要两个条件：**第一是高密度的连接，第二是要鼓励网络的可塑性。**\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8A%E6%94%BE%E5%8F%8C%E9%93%BE%E7%AC%94%E8%AE%B0%E5%9B%BE%E8%B0%B1%E7%9A%84%E5%8A%9B%E9%87%8FKG-%E7%AC%94%E8%AE%B0%E6%B3%95":{"title":"释放双链笔记图谱的力量——KG 笔记法","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [释放双链笔记图谱的力量——KG 笔记法](https://zhuanlan.zhihu.com/p/440115356)\n- tag：#\n- date: [[ 2022-01-06  ]]\n- Notes:\n\n## 总结\n\n- 这篇文章的实例很详细，值得看一下\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 因此，在 KG 笔记法中，笔记类型主要可以分为以下三种：\n\t- 概念笔记。概念笔记指的是讨论某个概念的笔记，其以该概念的名称来命名。比如，一篇讨论抑郁这个概念的笔记就是一篇概念笔记，其命名为《抑郁》。\n\t- 实体笔记。实体笔记指的是讨论某个实体的笔记，其以该实体的名称来命名。所谓实体指的是客观存在的事物，其有别于概念。比如一篇讨论淘宝网的笔记就是一篇实体笔记，其命名为《淘宝网》。\n\t- 关系笔记。关系笔记指的是讨论不同概念、实体或关系之间关系的笔记。关系笔记关联的双方可以多种多样，比如可以讨论实体和实体之间的关系，也可以讨论概念和概念之间的关系，甚至可以讨论概念和关系之间的关系，等等。从具体关系上来看，概念或实体间的关系可以分成关联、对比、应用、影响四种。\n- ![]( https://pic3.zhimg.com/v2-253fd4d71b7cd089d71ced9162111f52_r.jpg)\n- 对于以上三种信息，我们总共有五种不同的处理方式：\n\t- 综合讨论概念或实体本身的信息。这种信息的处理方式就一种，即直接把信息归入对应的概念笔记或实体笔记中即可。\n\t- 讨论概念或实体某一方面的信息。这种信息的处理方式有两种。\n\t\t- 该方面的信息没有固定名称，比如当前信息讨论的是 “A 视角下的 B”，或者是“C 的作用、影响、应用” 等等。这时候我们就把这部分信息归入概念或实体对应的概念笔记或实体笔记中，即归入《B》、《C》中，再为这些信息单独建立章节。\n\t\t- 该方面的信息有固定名称，那就把这部分信息归入其对应的概念笔记或实体笔记中。比如当前信息讨论的是 “心理学的历史”，而“心理学的历史” 的专有名称是 “心理学史”，那我们就把这部分信息归入《心理学史》中而不是《心理学》下的“历史” 部分。\n\t- 讨论概念、实体、关系之间关系的信息。这些信息有的很复杂，有的很简单，因此我们根据信息的复杂程度进行两种不同的处理。\n\t\t- 对于那些简单的、一句话就阐明的关系，我们可以直接用双链来链接。比如在 “狗是一种动物” 这样一则信息，简单地说明了狗和动物之间的关系，我们可以直接使用 “狗是一种`[[动物]]`” 来链接。\n\t\t- 对于那些复杂的，需要解释阐述的关系，我们就建立一则关系笔记来保存它。同时，在涉及的概念笔记或实体笔记中链接该关系笔记。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8A%E8%BF%A6%E7%89%9F%E5%B0%BC":{"title":"释迦牟尼","content":"\n# 释迦牟尼\n\n释迦牟尼在年轻的时候，过着富足的生活，接受了良好的教育。长大成人后，释迦牟尼结婚生子。但是，到了 29 岁时，释迦牟尼因为苦恼于人生的种种问题，选择离开了他的家庭，他的舒适的环境，出家修行，寻求精神上的启蒙。根据佛经的记载，释迦牟尼试图通过冥想和苦行悟道，但是都失败了。最后，释迦牟尼决定在一棵菩提树下静坐，进入禅定状态，思考人类苦难的原因，也就是后来佛教徒们所说的“不成正觉，永不起身”。\\\n\n佛教不仅传递信仰，也约束人的日常行为，包括在衣、食、住、行等各个方面遵守一系列的戒律。这些戒律在一定程度上起到了世俗社会中法律的作用\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E6%97%A2%E6%9C%89%E4%BB%A3%E7%A0%81%E7%9A%84%E8%AE%BE%E8%AE%A1-%E7%AC%AC%E4%BA%8C%E7%89%88":{"title":"重构:改善既有代码的设计 (第二版)","content":"\n# 重构:改善既有代码的设计 (第二版)\n\n## 第一个示例\n\n我再强调一次，是需求的变化使重构变得必要。如果一段代码能正常工作， 并且不会再被修改，那么完全可以不去重构它。能改进之当然很好，但若没人需 要去理解它，它就不会真正妨碍什么。如果确实有人需要理解它的工作原理，并 h 且觉得理解起来很费劲，那你就需要改进一下代码了。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8F%E5%AD%90%E5%8A%9B%E5%AD%A6%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB":{"title":"量子力学读书分享","content":"\n# 量子力学读书分享\n\n## 波粒二象性\n\n### 波的特性\n\n波是指振动的传播。电磁振动的传播是电磁波。为直观起见，以绳子抖动这种最简单的为例，在绳子的一端有一个上下振动的振源，振动沿绳向前传播。从整体看波峰和波谷不断向前运动，而绳子的质点只做上下运动并没有向前运动。\n\n各种形式的波的共同特征是具有周期性。\n\n各种波的共同特性还有：\n\n1. 在不同介质的界面上能产生反射和折射，对各向同性介质的界面，遵守反射定律和折射定律（见反射定律、折射定律）\n2. 通常的线性波叠加时遵守波的叠加原理（见光的独立传播原理）；\n3. 两束或两束以上的波在一定条件下叠加时能产生干涉现象（见光的干涉）；\n4. 波在传播路径上遇到障碍物时能产生衍射现象（见光的衍射）；\n5. 横波能产生偏振现象（见光学[[偏振现象]] ）。\n\n### 粒子的特性\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8F%E5%AD%90%E7%BA%A0%E7%BC%A0":{"title":"量子纠缠","content":"\n# 量子纠缠\n\n量子纠缠，即在量子力学里，当几个粒子在彼此相互作用后，由于各个粒子所拥有的特性已综合成为整体性质，无法单独描述各个粒子的性质，只能描述整体系统的性质，则称这现象为量子缠结或量子纠缠（quantum entanglement）  \n比如说粒子有像位置、动量、自旋、偏振等物理性质，\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E6%9C%BA":{"title":"量子计算机","content":"\n# 量子计算机\n\n## 好处\n\n德义奇证明，量子计算机无法实现超越算法的任务，也就是说，它无法比普通的图灵机做得更多。但他同时证明，它将具有比传统的计算机大得多的效率，用术语来讲，执行同一任务时它所要求的复杂性（complexity）要低得多。\n\n## 劣势\n\n量子计算机最大的问题，在于不够稳定。  \n只要稍微被“测量”到，量子叠加态就会马上坍缩，只留下一个结果。  \n所以量子计算机还有一个很严重的问题是，很难简单把计算结果给输出来。  \n一旦我们对这个结果进行测量，整个量子叠加态就会瞬间坍缩，从而把正确结果给湮灭了。\n\n所以量子计算机的计算过程会出现大量错误比例，基本都是由“比特错误和相位错误”构成。  \n但这个问题，可以通过一些算法和机制来解决。  \n简单说，就是为了解决量子出错的问题，需要不断进行量子纠错。  \n![量子纠错](https://www.kunlunce.com/d/file/llyj/fl11111/2020-12-06/ce762e23e9933e2dec5e9c8879359c1d.jpg)  \n因此，用量子计算机进行计算，需要要把同一个计算重复上万遍，然后再把这上万个具体的  0  或者  1  统计一遍，才能重新得出正确的运算结果。\n\n除了需要量子纠错的难题之外，量子计算机还在制造难度上存在比较大的瓶颈。\n\n## 和[[经典计算机]]的差异\n\n因为量子比特是具备“可能性”状态，所以在并行计算上，量子计算机的计算速度是远超过经典计算机。\n\n特别是涉及到一些“概率计算”“随机计算”“可能性计算”方面的问题计算时，可以充分发挥量子计算机这个并行计算的特性。\n\n但反过来，一些普通的线性计算问题，量子计算机则体现不出这种对经典计算机的碾压优势。\n\n比如说，两个数相乘，不管这两个数字多大，经典计算机也可以很快计算出这两个数字因子的乘积，在这种线性问题上，量子计算机并没有比经典计算机快多少。\n\n但反过来，给你这个“乘积”，要计算是由哪两个因子相乘，只要这个大数不是偶数，那么经典计算机要反过来计算这个乘积会由哪两个数相乘，就会计算得比较慢，数字越大越难。\n\n但是量子计算机就不一样，量子计算机可以轻易的计算出任意一个大数的因子。因为量子计算机可以一次性把所有可能性计算出来，而不像经典计算机得一次次去把所有可能性计算一遍。\n\n量子计算机本身就是基于量子叠加态去进行量子计算，所以在这种可能性问题上，有巨大的优势。\n\n量子计算机的快，也是主要快在这个地方上。\n\n而这些“概率、可能性、随机”领域的问题，恰好就是材料、制药等领域最容易被卡瓶颈的地方。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%AF%BB%E5%90%8E%E6%84%9F":{"title":"金字塔原理读后感","content":"\n# 金字塔原理读后感\n\n### 2022.04.30\n\n3/14 天  \n【星球编号】: 445  \n【打卡内容】: 《金字塔原理》1-3 章  \n【读书笔记】:  \n金字塔原理让我们能更清晰，更有逻辑的跟别人讲明白一个观点。\n\n因为人的大脑只能记住 7 ± 2 的项目或者事物，所以我们可以对超过这个数量的事进行分类后记忆。这也就是金字塔原理的核心思想，总分分分分思想，由一个中心主题分成 3-5 个副标题，每个副标题使用 3 个段落来描述，每个段落是同一个思想的三个概括性句子组成。\n\n在论述的时候，有两个方法演绎法论述和归纳法论述，他的特点和优势和昨天在 [[《世界观》]] 中科学方法很像，一个是由一个论点通过三段论不断的细化拆分，另一个是归纳很多观点之中相同的部分形成大的观点。\n\n这也是构建金字塔的两种方法：  \n一、自上而下法\n\n1. 画出主题方框 -确定 主题\n2. 设想主要疑问  \n   确定读者，思考能回答读者那些疑问？否则跳 4\n3. 写出对疑问的回答\n4. 说明背景  \n   将讨论的主题和‘‘背景’’相结合，做出第一个关于该主题的不会引起争议的表述\n5. 指出冲突\n6. 检查 “主要疑问” 和“答案  \n   二、自下而上思考\n7. 列出你要表达的所有思想要点\n8. 找出各要点之间的逻辑关系\n9. 得出结论\n\n这也就是我今天的读书了，每次看到书中用到的一些名词重复出现，不再需要去查去百度了，让我感到读书中积累知识得到的快乐，所以书才能越读越快，越读越多，集小流而成江海。\n\n### 2022.05.01\n\n4/14 天  \n【星球编号】: 445  \n【打卡内容】: 《金字塔原理》第 4 章  \n【读书笔记】:  \n我们在写文章或者公文的时候，通常需要讲一个故事，来描述你遇到的一些问题，尽量是读者已知的信息，不需要再去查证，可以代入自己的视角。  \n这就是《金字塔原理》第四章讲的：如何写好序言。  \n序言采用讲故事的形式，是为了让读者能够抛开其他思想，专注于你的话题。而讲故事一般采用“背景-冲突-疑问-解决方案” 的结构。“背景”是交代事情的原委，让读者能跟上思维。冲突就是推动“故事”情结发展的因素，并且必须引发读者的“疑问”。答案自然就是对 “疑问”的解答。\n\n而怎么运用这个结构就需要看你的目的了：\n\n- 标准式：背景-冲突 -答案\n- 开门见山式：答案-背景-冲突\n- 突出忧虑式 ：冲突-背景 -答案\n- 突出信心式：疑问- 背景-冲突-答案\n\n文章的目的一般是为了回答以下 4 类问题\n\n1. 我们应该做什么？\n2. 我们应该如何做\n3. 我们是否应该这么做\n4. 为什么会发生这种情况\n\n为了回答这些问题，书中总结了常见的 4 种序言模式：\n\n1. 发出指令式 （针对“我们应该做什么”或 \"我们应该如何做\"）\n   - 背景 = 我们打算做 X\n   - 冲突-需要你们做 Y\n   - 疑问- 我们如何做 Y  \n     或者\n     - 背景 = 你要做 X\n   - 冲突- 必须按 Y 方式来做\n   - 疑问- Y 方式是啥\n2. 请求支持式（针对“我们是否应该这样做”）\n3. 解释做法式（针对“我们应该如何做”）\n   - 背景 = 必须做 X\n   - 冲突-还没做好做 X 的准备\n   - 疑问- 如何做好准备\n4. 比较选择式（针对“我们应该做什么”） - 背景 = 我们希望做 X\n   - 冲突-我们有不同的执行方案\n   - 疑问- 哪一种比较合理\n\n今天看的，书中举了大量的例子，先概括一遍之后再回头分析文章，后面写作的时候再刻意的将这些思想融入。\n\n### 2022.05.02\n\n5/14 天  \n【星球编号】: 445  \n【打卡内容】: 《金字塔原理》第 5-6 章  \n【读书笔记】:  \n书接上文，我们写完序言以后，那么就应该开始写回答。如何写好一个回答呢，我们得先学习一下推理的几种方式：\n\n- 演绎推理，即基于一个基本点，通过三段论的方式，不断的因此得出结果，形成一条因果链，这样得出的结论比较可靠，但演绎推理非常繁琐，因此我建议在关键句层次尽量避免使用演绎法，转而用归纳法取代。\n- 归纳推理，在若干要点中，大脑首先要发现若干事物（实现、事件、事实）的共性，然后将其归结到一起，加以说明。归纳推理比演绎推理难的多，因为归纳推理需要更多地运用创造性思维。\n- 外展推理，外展推理指的是现提出一个假设，然后寻找支持该假设的信息。一旦获得了支持假设的信息，这以推理过程又变成了归纳推理\n\n选好我们写文章的推理方式，我们就要梳理好要点之间的顺序，形成文章的主干脉络，一般来说，有以下三种顺序：\n\n- 时间顺序，最容易的理解的一种逻辑顺序，它要按照行动的顺序，依次表述达到某一结果必须采取的行动。\n- 结构顺序，当你使用示意图、地图、图画或照片想象某事物时的顺序、\n- 重要性顺序。这是你对一组因为具有某种共同特点而聚集在一起的事物进行陈述或分析时采用的顺序，\n\n写作时必须先构思文章的结构，否则你可能根本不知道自己已经写得一塌糊涂。按照结构写作，便于及时发现错误和遗漏。\n\n然后就是对各组实现的概括实现，如何填充思想进去。  \n不能违背金字塔原理的基本规则：\n\n- 位于金字塔结构每一个层次的思想，都必须是对其下一层次思想的提炼、概括\n- 每一个思想都必须与其同组的其他思想互斥，而且每组中的思想对于上一层概括它们的思想而言，都必须完全穷尽。\n- 在判断某组思想是否完全穷尽时，我们必须非常明确地指出期望这组行动实现的结果或达到的目标，目标不一定总是可以用数字表达，但必须有某种明确的方式判断。\n\n条理清晰地表达行动性思想绝不是一件容易的事，需要艰苦地思考。但是，如果不这样做，就会给读者造成极大的阅读困难。因此我们需要用一下步骤完成这一艰难的过程：先用明确的词语、语句表述各项行动、步骤、流程等、然后区分出不同的抽象层次，再直接从各行动、步骤、流程等总结、概括出行动的结果\n\n寻找各结论之间的共性，要分为三步走\n\n- 第一步，列出可能值得思考的思想\n- 第二步，通过找出思想之间的共同点，证明这些思想确实属于同一 类\n- 第三步，提出一个新思想\n\n大多数人都止于第一步。今天就到这了，之前一直在说要独立思考，但思考不是件容易的事，现在先学会如何思考。\n\n### 2022.05.04\n\n【星球编号】: 445  \n【打卡内容】: 《金字塔原理》第 7-8 章  \n【读书笔记】:  \n思考问题，思考问题，那么问题是否存在，判断其存在的标准，通常要看经过努力得到的成果，与希望得到的结果之间的差距。由特定背景导致的特定结果成为非期望结果 R1 （现状）。希望现有的结构或流程能产生期望结果 R2 （期望结果）\n\n界定问题的框架需要先回答以下三个问题：\n\n- 发生了什么事 （ 背景： 切入点/序幕 + 困扰 / 困惑）\n- 我们不愿看到什么？ （ 非期望结果，现状 R1）\n- 我们想要什么？ （期望结果，目标，R2）\n\n确认了问题，就思考问题的框架。\n\n分析问题的标准流程是：  \n收集信息 =\u003e 描述发现 =\u003e 得出结论 =\u003e 提出方案\n\n一般人通常试图收集某一领域一切可以找到的资料，等所有事实和资料齐备后才开始分析的方式是低效的。效的方法是建立诊断框架和逻辑树，用来分析和引导思维，这样做不仅能提高解决问题的效率，还减少花了构建成金字塔结构、呈现分析结果的工作。\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%91%E6%98%9F%E7%9B%B8%E4%BD%8D":{"title":"金星相位","content":"\n# 金星相位\n\n仅用肉眼观察，你不可能观察到金星实际上像月球一样，会经历一个周期性的相位变化。  \n除此之外，金星不仅会经历周期性的相位变化，而且它的大小也会根据所处的相位发生变化  \n![金星相位](https://res.weread.qq.com/wrepub/epub_23692279_31)\n\n### 为什么会出现这个现象\n\n月球相位是太阳、月球和地球三者间相对位置变化的结果。在任意一个给定的时间点，月球的一半会被太阳照亮，另一半会在黑暗中。当月球和地球所处的位置使我们可以完整地看到月球被太阳照亮的表面时，我们所看到的就是满月。  \n![月球相位](https://res.weread.qq.com/wrepub/epub_23692279_32)\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%91%E9%92%B1%E7%9A%84%E5%B1%9E%E6%80%A7%E4%B8%80%E4%B8%AA%E5%AF%8C%E8%B1%AA%E7%9A%84%E8%B4%A2%E5%AF%8C%E7%A7%81%E6%88%BF%E8%AF%BE":{"title":"《 金钱的属性：一个富豪的财富私房课 》","content":"\n# 《 金钱的属性：一个富豪的财富私房课 》\n\n# 元数据\n\n\u003e [!abstract] 金钱的属性：一个富豪的财富私房课\n\u003e - ![ 金钱的属性：一个富豪的财富私房课|200](https://weread-1258476243.file.myqcloud.com/weread/cover/84/YueWen_40056526/t7_YueWen_40056526.jpg)\n\u003e - 书名： 金钱的属性：一个富豪的财富私房课\n\u003e - 作者： 金胜镐\n\u003e - 简介： 跨国连锁餐厅Snowfox创办人金胜镐认为，在这个年代，要想拥有金钱自由只有三种方法：①靠爸；②中乐透；③经营事业。对普通人来说，成功概率较大的可能只剩下第三种。作者认为，想打造稳定的财富堡垒必须从培养正确的金钱观开始，只要把每一分钱都当作朋友，取之有方，就算一开始积攒的只是小钱，也可以通过分散风险、复利效应等稳定累积到一定资产。除了分享务实的投资观念及实际做法，作者还通过分享自身及朋友的小故事，强调为人处世的心态对一个人累积财富能力的影响。那些总想占别人便宜、对他人资产毫不珍惜、瞧不起弱者、贪图享乐的人，终将走向失败。\n\u003e - 出版时间 2021-06-01 00:00:00\n\u003e - ISBN： 9787213101885\n\u003e - 分类： 经济理财-理财\n\u003e - 出版社： 浙江人民出版社\n\n# 高亮划线\n\n## 经济专家真能预测经济前景吗\n\n- 📌 比这些人的言论更可怕的是将赌注押在这些人的意见上并拼上自己全部财产的人。无论是谁都不知道某只股票明天是涨还是跌。 ^40056526-14-968-1024\n    - ⏱ 2022-08-02 10:34:20\n\n## 称呼别人的方式能改变自己的命运\n\n- 📌 因此，已经获得成功的人一定要回过头来自我审视一番，获取成功之后想要继续维持富足、安定生活的人绝对不能染上这种浅薄之态。要尊敬前辈和朋友，对待后辈和学生要温和，即便他们不在场，对待他们也要始终如一。自己少说话，要多多倾听别人的言语。能够做到这些的人才会得到别人深深的喜爱与信赖。喜爱与信赖自然会招来好运。 ^40056526-16-1528-1679\n    - ⏱ 2022-08-02 10:37:32\n\n## 在银行讲价\n\n- 📌 自己的命运通过自己的选择来决定。如果认为必须在别人制定的选项内进行选择，那将不再是自己的人生，而是别人为你设定好的人生。我们当然要不断扩充选择权，为了使选择能够给自己带来利益，要能够提出其他的备选项。请记住，有时不选择反而可能是最好的选择。 ^40056526-49-1323-1456\n    - ⏱ 2022-08-03 10:37:53\n\n## 把子女培养成富人的方法\n\n- 📌 玩游戏也要有赌注才有意思，子女也需要有证券账户才能看清这一切。股票投资并不是单纯的投资问题，它是一种工具，通过它能够理解生意、国家与世界经济的发展动向，还能够了解企业经营体系的运作规律。 ^40056526-53-1287-1380\n    - ⏱ 2022-08-03 10:49:34\n- 📌 如果子女想创业，那么他自然能够主动寻找到适合自己学习的知识。他们以前不爱学习，只不过是不知道为什么要学习而已。如果他们亲身体会到大学教育的必要性，自然会要求上大学。无论关于什么，如果能感受到需要，就会积极主动去学习。可以带他们去听企业家演讲、参加股东大会和博览会，通过访问企业来鼓励他们树立起成为经营者的梦想。 ^40056526-53-1476-1631\n    - ⏱ 2022-08-03 10:49:47\n\n## 免遭诈骗的方法\n\n- 📌 但我拒绝的理由大致有两种：收益过高或者我无法理解生意模式。如果是我不理解的生意模式，一旦出现问题，我将难以控制；预期收益过高则意味着风险也会很高。 ^40056526-59-1898-1971\n    - ⏱ 2022-08-03 11:05:36\n\n## 失败的权利\n\n- 📌 正因为如此，为了杜绝失败本身，连同挑战也一并阻止了，结果反而造成了失败。子女经历失败恰恰说明他们正在挑战 ^40056526-73-797-849\n    - ⏱ 2022-08-03 11:24:07\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%87%91%E9%A3%8E%E7%A7%91%E6%8A%80":{"title":"金风科技","content":"\n# 金风科技\n\n[金风科技](https://xueqiu.com/S/SZ002202?from=status_stock_match)（002202）公司是国内领军和全球领先的风电整体解决方案提供商;拥有自主知识产权的 1.5MW、2XMW2.5MW、3.MW(S)和 6.XMW 永磁直驱系列化机组,代表着全球风力发电领域最具前景的技术路线;涉及风机制造、风电服务、风电场投资与开发三大主要业务  \n","lastmodified":"2023-09-18T14:54:47.614454852Z","tags":null},"/%E9%93%B6%E8%A1%8C%E5%8D%B1%E6%9C%BA%E7%9A%84%E5%8E%9F%E5%9B%A0":{"title":"银行危机的原因","content":"\n# 银行危机的原因\n\n金融风险的核心是银行，历次金融危机几乎都伴随着银行危机。简单说来原因有四。\n\n1. 第一，银行规模大、杠杆高。美国银行业杠杆达 20 倍，欧洲更高\n2. 第二，银行借进来的钱很多是短期的（比如活期存款），但贷出去的钱却大都是长期的（比如企业贷款），这种负债和资产的期限不匹配会带来流动性风险。一旦储户集中提取存款，银行贷出去的钱又不能立刻收回来，手里钱不够，会出大乱子。\n3. 第三，银行信贷大都和房地产有关，常常与土地和房产价值一同起落，放大经济波动。银行因为杠杆率高，所以要特别防范风险，贷款往往要求抵押物。土地和房子就是最好的抵押物，不会消失也不会跑掉，价值稳定，潜在用途广，就算砸手里也不难转让出去。\n\n   \u003e **银行很少雪中送炭，却常常晴天送伞，繁荣时慷慨解囊、助推经济过热，衰退时却捂紧口袋、加剧经济下行。**\n\n4. 第四，银行风险会传导到其他金融部门。比如银行可以把各种按揭贷款打包成一个证券组合，卖给其他金融机构。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%93%BE%E8%A1%A8":{"title":"链表","content":"\n# 链表\n\n/\\* 链表的优点： 由于链表上的元素在空间存储上内存地址不连续。 所以随机增删元素的时候不会有大量元素位移，因此**随机增删效率较高**。  \n\\***\\*链表**优于数组的:\\*\\*\n\n- 插入与删除的操作….\n- 内存地址的利用率方面….\n- **链表**的扩展性比数组好.\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%94%99%E8%AF%AF%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F":{"title":"错误监控系统","content":"\n# 错误监控系统\n\n[[自搭建错误监控文档]]\n\n一般来说，我们之所以需要搭建前端监控体系，主要是为了解决两个问题。\n\n1. 如何及时发现问题？\n2. 如何快速定位并解决问题？\n\n既然叫前端监控体系，那么我们到底需要监控些什么内容？对于线上的系统是否运行正常，我们可以通过以下信息进行观察，包括：\n\n- 页面的整体访问情况，包括常见的 PV、UV、用户操作行为；\n- 页面的性能情况，包括页面加载耗时、接口耗时等各项数据统计。\n\n## 需要关注的数据类型\n\n结合前面提到的页面的整体访问情况、页面的性能情况、用户问题定位等，我们可以将需要进行关注的数据分成五类。\n\n1. 系统的生命周期数据，可用于观察页面性能情况、整体访问情况等。\n2. HTTP 测速数据，可用于观察外部服务调用情况 、页面性能优化等。\n3. 系统异常数据，可用于观察系统稳定性、系统异常问题。\n4. 用户行为数据，可用于观察页面稳定性、整体访问情况等。\n5. 用户日志，用于进行用户反馈的问题排查。\n\n### 生命周期数据\n\n前端应用的生命周期指页面加载的关键时间点，通常包括页面打开、更新、关闭等耗时数据。我们可以通过`PerformanceTiming`属性中获取到一些生命周期相关的数据，比如：\n\n- 用于页面跳转：`navigationStart`、`unloadEventStart/unloadEventEnd`等。\n- 用于页面加载：`domLoading`、`domInteractive`、`domContentLoadedEventStart/domContentLoadedEventEnd`、`loadEventStart/loadEventEnd`等。\n\n除此之外，我们还可以通过`document`的`DOMContentLoaded`、`readystatechange`等事件，来获取页面加载的关键点。\n\n但随着前端框架的使用，页面的渲染过程、页面间的切换等逻辑都交给了框架进行控制，因此像`DOMContentLoaded`、`readystatechange`这些事件已经失去了原本的作用，很多时候我们会在框架本身提供的生命周期函数中进行数据的收集，比如在 Vue 中就有`beforeCreate/created`、`beforeMount/mounted`、`beforeUpdate/updated`、`beforeDestroy/destroyed`这些生命周期的钩子。\n\n除了框架本身提供的生命周期以外，我们还可以使用 `MutationObserver` 接口，该接口提供了监听页面 DOM 树变化的能力，结合 `performance` 获取到具体的时间。\n\n```js\n// 注册监听函数\n\nconst observer = new MutationObserver((mutations) =\u003e {\n\tconsole.log(`时间：${performance.now()}，DOM树发生了变化！有以下变化类型:`);\n\n\tfor (let i = 0; i \u003c mutations.length; i++) {\n\t\tconsole.log(mutations[0].type);\n\t}\n});\n\n// 开始监听 document 的节点变化\n\nobserver.observe(document, {\n\tchildList: true,\n\n\tsubtree: true,\n});\n```\n\n### HTTP 测速数据\n\nHTTP 请求相关的数据，同样可以通过 `PerformanceTiming` 属性获取，包括 HTTP 跳转开始/结束、域名查询开始/结束等各种时间戳。\n\n### 系统异常数据\n\n一般来说，脚本执行异常大多数情况下会直接导致功能不可用，因此首先需要关注系统异常的数据。\n\n常见的前端异常包括：\n\n1. 逻辑错误，可理解为开发实现功能的时候，逻辑梳理不符合预期；\n2. 代码健壮性，可理解为代码边界情况考虑不周，异常逻辑执行出错；\n3. 网络错误，可理解为用户网络情况异常、后台服务异常等错误；\n4. 系统错误，可理解为代码运行环境兼容性问题导致出错；\n5. 页面内容异常，可理解为缺少内容、绑定事件异常、样式异常等\n\n对于 1-4 的异常情况，可以使用 `window.onerror`、`document.addEventlistener(error)`、`XMLHttpRequest status` 等方法来进行拦截，同时可获取错误相关的信息和数据。比如，通过监听 `window.onerror` 事件，我们可以获取项目中的错误和分析堆栈，将错误信息自动上报到后台服务中。\n\n对于第 5 项的页面内容异常，大多数情况并不会影响系统中大多数功能的运行，同时也缺少可直观观察的数据信息。因此一般情况下，可以通过回归测试、UI 界面测试等方式在上线前进行避免。\n\n### 用户行为数据\n\n我们还可以关注用户的一些行为数据，包括页面浏览量或点击量、用户在每一个页面的停留时间、用户通过什么入口来访问该页面、用户在页面中的一些操作行为。用户行为数据可以结合 DOM 元素的事件监听、页面的加载情况等方式来获取。\n\n- 这些行为数据的统计可以用来监控页面的功能是否正常\n- 通过这些用户行为数据，我们还可以统计出用户在时间轴上的操作顺序，以及每个步骤的操作时间、操作内容等，通过可视化系统直观地展示用户的链路情况，包括系统的入口来源、打开或关闭的页面、每个功能点的点击和操作时间、功能异常的情况 等\n- 用户链路相关信息还可以用来定位问题，比如配合用户日志进行分析。\n\n### 用户日志\n\n系统运行时输出的日志，可以通过两种方式存放。\n\n1. 上报到服务器。由于日志内容很多，如果全量上报到服务器会导致存储成本过大，同时频繁的上报也会增加接口的维护成本。除此之外，由于网络原因等还可能导致部分或全部的日志丢失等问题。\n2. 本地存储。该方案需要引导用户手动操作提交本地日志，或者通过服务端下发配置自动上传，才可以获取到日志内容，从而可以进行具体的问题定位。如果无法联系到用户，或是缓存被清理的情况下，则可能由于异常无法重现而无法修复。\n\n## 数据埋点\n\n数据埋点在业界中已经是比较成熟的解决方案，其中前端常见的埋点方案有三种：代码埋点、可视化埋点、无痕埋点。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220630151538.png)\n\n不管使用哪种埋点方式，我们都需要对数据进行标准化处理。由于最终的数据需要落盘到服务端并进行计算和监控，因此我们需要将采集的数据，按照与服务端约定好的协议格式来进行转换。\n\n同时，为了避免用户突然关闭应用、浏览器异常等情况导致数据的丢失，还可以配合本地缓存的方式，将数据进行缓存，在应用恢复的时候进行数据的上报。\n\n## 数据上报\n\n为了避免数据的上报过于频繁、增加服务端的压力，我们可以在本地进行数据的整合，比如通过队列或数组的方式进行维护，然后选择以下方式/时机进行上报。  \nsendBeacon\n\n### **定期/定量上报。**\n\n对于前端来说，过于频繁的请求可能会影响到用户其他正常请求的体验，因此通常我们需要将收集到的数据存储在本地。当收集到一定数量之后再打包一次性上报，或者按照一定的频率（时间间隔）打包上传，打包上传将多次数据合并为一次，可以减轻服务器的压力。\n\n### **关键生命周期上报。**\n\n由于用户可能在使用过程中遇到异常，或者在使用过程中退出，因此我们还需要在异常触发的时候、用户退出程序前进行上传，以避免问题没能及时被发现和定位。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220630151908.png)\n\n### **用户主动提交。**\n\n一些异常和使用体验问题，可以引导用户进行主动上传。当用户触发上传的操作后，可以将本地的数据和日志一并进行提交。\n\n## 数据监控\n\n数据上报完成后，一般来说需要搭建可视化的管理端，来对这些数据进行直观的监控。\n\n在日常监控中，我们还会通过对监控数据、配置告警阈值等方式，结合邮件、机器人等方式推送到相关的人员，来及时发现并解决问题。\n\n主要是因为监控的搭建比较简单，但维护是个大头，因此更多时候大家会把监控的维护放在可控范围内。\n\n## 学习资料\n\n- 第一个是灯塔，https://github.com/LianjiaTech/fee ，old school，功能齐全完善，还有详细的手册阅读。  \n- 第二个是 https://github.com/wangweianger/zanePerfor ，作者热忱极高，完整的从 0 到 1。\n- [阿里云 前端监控文档导读](https://help.aliyun.com/document_detail/170905.html?spm=a2c4g.11186623.6.633.281f29ddxOQN8g)\n- [腾讯三面：说说前端监控平台/监控 SDK 的架构设计和难点亮点？ - 掘金](https://juejin.cn/post/7108660942686126093#heading-5)\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%94%9A%E5%AE%9A%E6%95%88%E5%BA%94":{"title":"锚定效应","content":"\n# 锚定效应\n\n当阿莫斯和我就锚定效应进行争论时，我同意（他说的）有时会出现调整现象，但其实心里很不服气。调整是一个审慎且有意识的行为，但锚定效应的大多数例子中并没有相应的主观经验。请看下面两个问题：\n\n\u003e 甘地去世时比 144 岁大还是小？  \n\u003e 甘地去世时多少岁？\n\n你是否会把 144 岁向下调整来得出自己的评估？也许不会，但这个大得离奇的数字仍然会影响你的估测。我的直觉告诉我，锚定就是一种暗示。如果有人只是提起某件事，而他的话却促使我们去看、去听或是去感受这件事，此时的情形就可以用锚定来形容。例如，“你的左腿现在是否微微麻木了”这个问题常会使相当多的人回答说他们的左腿确实感到有些异样。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%95%9C%E5%83%8F%E6%B5%8B%E8%AF%95":{"title":"镜像测试","content":"\n# 镜像测试\n\n镜像测试，一个自我认知能力的测试，它基于动物是否有能力辨别自己在镜子中的影像而完成。该测试由戈登·盖洛普在 1970 年部分基于查尔斯·达尔文的观察结果所提出的。在参观动物园时，达尔文向一只猩猩举起一面镜子，并记录了该动物的反应，包括做出一系列面部表情等。达尔文注意到这些表达的意义是模糊的：它们既可以表示该灵长类动物是在冲着它以为是另一只动物个体做出表情，也可能是和一个新玩具在进行某种游戏。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%97%AD%E5%8C%85":{"title":"闭包","content":"\n# 闭包\n\n跟闭包和内存泄露有关系的地方是，使用闭包的同时比较容易形成循环引用，如果闭包的作用域链中保存着一些 DOM 节点，这时候就有可能造成内存泄露。但这本身并非闭包的问题，也并非 JavaScript 的问题。在 IE 浏览器中，由于 BOM 和 DOM 中的对象是使用 C++以 COM 对象的方式实现的，而 COM 对象的垃圾收集机制采用的是引用计数策略。在基于引用计数策略的垃圾回收机制中，结果两个对象之间形成了循环引用，那么这两个对象都无法被回收，但循环引用造成的内存泄露在本质上也不是闭包造成的。  \n同样，如果要解决循环引用带来的内存泄露问题，我们只需要把循环引用中的变量设为 null即可。将变量设置为 null 意味着切断变量与它此前引用的值之间的连接。当垃圾收集器下次运行时，就会删除这些值并回收它们占用的内存。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%97%AE%E9%A2%98%E6%80%9D%E8%80%83%E6%A1%86%E6%9E%B6":{"title":"提取卡片的思考框架","content":"\n[[生财有术二十问]]  \n[[常青的思维框架]]  \n[[黄金圈理论]]\n\n# 提取卡片的思考框架\n\n不妨按照「结构化」的方式，事先设定好一个框架，用这个框架去思考和剖析它。  \n我自己设计的结构，是这样的：\n\n- 本质：它的核心是什么？我可以如何理解它？\n- 来源：它来自哪里？为何会产生？原因是什么？\n- 去处：它表现为什么？我能拿来做什么？如何操作？\n- 联想：它跟其他什么东西相关？可能会涉及到哪些概念？\n\n# 5WHY 倒推因果链\n\n# 三策分析法\n\n三策分析法的核心思维模式就是：**当遇到问题的时候，就把问题的解决方向，设定出三种结果，从达到最优结果作为第一切入点，评估达成条件，如果达不到最优解，则根据条件多少，退而求其次取中策，再者取下策。**\n\n1. **遇到问题先抓本质**\n2. **描述问题现状，明确问题人和物间利益点和矛盾点，确定主要矛盾。**\n3. **确定三策目标**\n4. **想法实现[[帕累托最优]]，以最优解为最高思考优先级，集中脑力去攻。**\n5. **达成最优解需要什么条件**\n6. **评估条件可能性**\n7. **如果注定达不到最优解呢？根据条件，取中策、取下策、让损失最小化。**\n\n**三策模型进阶用法：把三策模型用于整理表达逻上**\n\n# 结构化思维\n\n[[MECE原则]]\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%85%E8%AF%BB":{"title":"阅读","content":"\n生命太短暂，不能花在那些不值得阅读的内容上面。\n\n就算你是一个很爱读书的人，活到70岁最多大概能阅读15000本书，这只占世界最大图书馆美国国会图书馆3800万册藏书的0.04%。\n\n我们一生中能够阅读的书籍其实很少。因此，关键技能不是多读，而是跳过那些不值得读的内容。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81":{"title":"防抖和节流","content":"\n# 防抖和节流\n\n## 前言\n\n在我们工作场景有很多频繁触发的,比如：\n\n1. window 事件:`resize`,`scroll`\n2. 鼠标事件:`mouseMove`,`mousedown` 等\n3. 键盘事件:`keyup`,`keydown` 等等\n\n比如鼠标经过事件,如果你监听他去执行一个函数回调,你会发现一个鼠标滑过区块就会触发成百上千次函数,这对性能显然是个考验。\n\n一般为了解决这个问题,我们有两个解决方案：\n\n1. **debounce 防抖**\n2. **throttle 节流**\n\n## 防抖\n\n防抖的原理：无论你触发多少次事件,我一定在事件触发 N 秒后才执行。如果你一直频繁操作,我就一直不触发,等你停止操作 N 庙后再去执行。\n\n### 简单防抖\n\n```JavaScript\n// 第一版\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(func, wait);\n  };\n}\n```\n\n### 绑定 this 和 event 事件,返回 result\n\n在我们使用`debounce`函数的时候会把`this`绑定到`windows`对象上,这显然不是我们想要的\n\n函数可能是有返回值的,我们也要考虑\n\n另外事件传入我们也没有接受到,所以还要将参数传入\n\n```JavaScript\nfunction debouce(func, wait) {\n  var timeout, result;\n  return function () {\n    var content = this;\n    var args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() =\u003e {\n      result = func.apply(content, args);\n    }, wait);\n    return result;\n  };\n}\n```\n\n### 立即执行\n\n客户：哎 我怎么点半天都没有用啊,能不能给我点了就执行啊,害\n\n得嘞\n\n我们通过传入一个`immediate`来控制函数是否立即执行,\n\n```JavaScript\nfunction debouce(func, wait, immediate = false) {\n  var timeout, result;\n\n  var debounced = function () {\n    var content = this;\n    var args = arguments;\n    if (timeout) clearTimeout(timeout);\n    if (immediate) {\n      //如果执行过,那么就不执行了\n      var callNow = !timeout;\n      timeout = setTimeout(() =\u003e {\n        timeout = null;\n      }, wait);\n      if (callNow) result = func.apply(content, args);\n    } else {\n      timeout = setTimeout(() =\u003e {\n        result = func.apply(content, args);\n      }, wait);\n    }\n  };\n  return debounced;\n}\n```\n\n### 考虑一下取消\n\n```JavaScript\ndebounced.cancel = function () {\n  clearTimeout(timeout);\n  timeout = null;\n};\n```\n\n## 节流\n\n节流的原理：如果你持续触发事件,每隔 N 秒,**只执行一次事件**\n\n### 时间戳版本\n\n时间戳版本原理：第一次拿到当前时间的时间戳并保存在闭包里,拿到下次执行的时间戳比较,如果大于等待时间就执行,并将时间更新。那么我们开始写代码。\n\n```JavaScript\nfunction throttle(func, wait) {\n  var context, args;\n  var previous = 0;\n  var throttled = function () {\n    context = this;\n    args = arguments;\n    var now = +new Date();\n    if (now - previous \u003e wait) {\n      func.apply(context, args);\n      previous = now;\n    }\n  };\n  return throttled;\n}\n```\n\n### 定时器版本\n\n定时器版本原理:和上面基本一致,就是变成通过一个标记`timeout`来记录是否有一个定时器在执行了,如果没有就执行一个新的定时器\n\n```JavaScript\nfunction throttle(func, wait) {\n  var context, args;\n  js;\n  var timeout;\n  var throttled = function () {\n    context = this;\n    args = arguments;\n\n    if (!timeout) {\n      timeout = setTimeout(() =\u003e {\n        func.apply(context, args);\n        timeout = null;\n      }, wait);\n    }\n  };\n  return throttled;\n}\n```\n\n所以比较两个方法：\n\n1. 第一种事件会立刻执行,第二种事件会在 n 秒后第一次执行\n2. 第一种事件停止触发后没有办法再执行事件,第二种事件停止触发后依然会再执行一次事件\n\n### 合并版本\n\n拥有执行和停止触发后还会执行 一次的特性\n\n```JavaScript\nfunction throttle(func, wait) {\n  var context, args, timeout;\n  var previous = 0;\n  var throttled = function () {\n    var now = +new Date();\n    context = this;\n    args = arguments;\n    function later() {\n      previous = +new Date();\n      timeout = null;\n    }\n    //还有多少剩余时间\n    let newDate = wait - (now - previous);\n\n    if (newDate \u003c 0 || newDate \u003e wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n    } else if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n  };\n  return throttled;\n}\n```\n\n再加个取消就很完整了\n\n## 扩展\n\n// TODO:  \n可以使用 vue 写个函数防抖组件,\n\n## 应用场景\n\n### debounce\n\n- search 搜索联想,用户在不断输入值时,用防抖来节约请求资源。\n- window 触发 resize 的时候,不断的调整浏览器窗口大小会不断的触发这个事件,用防抖来让其只触发一次\n\n### throttle\n\n- 鼠标不断点击触发,mousedown(单位时间内只触发一次)\n- 监听滚动事件,比如是否滑到底部自动加载更多,用 throttle 来判断\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%B2%E6%AD%A2%E7%99%BD%E5%B1%8F":{"title":"防止白屏","content":"\n# 防止白屏\n\n- 使用 [[ESLint]] 等代码检查工具，将流程标准化\n- 进行 Code Review ，较少业务上的逻辑死循环\n\n白屏这种问题，主要会遇到的几种情况：\n\n1. 组件内的 JavaScript 错误会导致 React 的内部状态被破坏，并且在下一次渲染时产生可能无法追踪的错误。这些错误基本上是由较早的其他代码（非 React 组件代码）错误引起的，但 React 并没有提供一种在组件中优雅处理这些错误的方式，也无法从错误中恢复。\n\n## 预防\n\n- 如果在拼装的过程中出现错误，那直接会导致编译的失败；\n- 但如果在转换的过程中出现错误，就很不容易被发现。比如常见的空值问题，可以通过 `?.` 和引入类似 [[lodash]] 这样的库\n\n## 兜底\n\n写一个兜底的高阶组件，防止错误继续上报\n\n```js\nexport const errorBoundary = (WrappedComponent) =\u003e {\n\treturn class Wrap extends Component {\n\t\tstate = {\n\t\t\thasError: false,\n\t\t};\n\n\t\tstatic getDerivedStateFromError(err) {\n\t\t\treturn {\n\t\t\t\thasError: true,\n\n\t\t\t\terr,\n\t\t\t};\n\t\t}\n\n\t\tcomponentDidCatch(err: Error, info: React.ErrorInfo) {\n\t\t\tconsole.log(err, info);\n\t\t}\n\n\t\trender() {\n\t\t\treturn this.state.hasError ? (\n\t\t\t\t\u003cErrorDefaultUI error={this.state.error} /\u003e\n\t\t\t) : (\n\t\t\t\t\u003cWrappedComponent {...this.props} /\u003e\n\t\t\t);\n\t\t}\n\t};\n};\n```\n\n用这个高阶组件拦截报错信息，展示统一的错误页面，也就是 ErrorDefaultUI。使用起来也很简单，直接在原函数上挂上注解就可以了。\n\n## npm包\n\n\u003e 在兜底策略上，因为考虑到团队内部和我存在一样的问题，就抽取了兜底的公共高阶组件，封装成了 NPM 包供团队内部使用。\n\u003e\n\u003e 从最终的数据来看，预防与治理方案覆盖了团队内 100% 的 React 项目，头三个月兜底组件统计到了日均 10 次的报警信息，其中有 10% 是公司关键业务。那么经过分析与统计，首先是为关键的 UI 组件添加兜底组件进行拦截，然后就是做内部培训，对易错点的代码进行指导，加强 Code Review。后续到现在，线上只收到过 1 次报警。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%BF%E5%96%80%E7%90%89%E6%96%AF%E8%BF%BD%E9%BE%9F%E8%BE%A9":{"title":"阿喀琉斯追龟辩","content":"\n# 阿喀琉斯追龟辩\n\n阿喀琉斯（Achilles）是荷马史诗《伊利亚特》里的希腊大英雄，以“捷足”而著称。有一天他碰到一只乌龟，乌龟嘲笑他说：“别人都说你厉害，但我看你如果跟我赛跑，还追不上我。”阿喀琉斯大笑说：“这怎么可能。我就算跑得再慢，速度也有你的10倍，哪会追不上你？”乌龟说：“好，那我们假设一下。你离我有100米，你的速度是我的10倍。现在你来追我了，但当你跑到我现在这个位置，也就是跑了100米的时候，我也已经又向前跑了10米。当你再追到这个位置的时候，我又向前跑了1米，你再追1米，我又跑了1/10米……总之，你只能无限地接近我，但你永远也不能追上我。”阿喀琉斯怎么听怎么有道理，一时丈二和尚摸不着头脑。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%BF%E5%B0%94%E4%BC%AF%E7%89%B9%E7%88%B1%E5%9B%A0%E6%96%AF%E5%9D%A6":{"title":"阿尔伯特·爱因斯坦","content":"\n# 阿尔伯特·爱因斯坦\n\n阿尔伯特·爱因斯坦（1879年3月14日－1955年4月18日），是出生于德国、拥有瑞士和美国国籍的犹太裔理论物理学家，他创立了现代物理学的两大支柱之一的相对论，也是质能等价公式（E = mc2）的发现者。他在科学哲学领域颇具影响力。因为“对理论物理的贡献，特别是发现了光电效应的原理”，他荣获1921年度的诺贝尔物理学奖（1922年颁发）。这一发现为量子理论的建立踏出了关键性的一步。\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8":{"title":"阿里云服务器","content":"\n# 阿里云服务器\n\n创建一个抢占式 ESC\n\n## ssh\n\n```bash\n# 生成公钥\nssh-keygen -t rsa -P 'aqwejie@qq.com'\n\n# 查看公钥\ncat .ssh/id_rsa.pub\n\n# 将公钥拷贝到服务器\nscp ~/.ssh/id_rsa.pub root@47.98.252.XXX:/root\n\n# 将公钥加入信任列表\ncat id_dsa.pub \u003e\u003e ~/.ssh/authorized_keys\n```\n\n### 登录\n\n```JavaScript\nssh \u003cusername\u003e@\u003chostname or IP address\u003e\nssh root@172.30.156.55\n```\n\n## 域名管理\n\n去[阿里云登录页](https://dns.console.aliyun.com/#/dns/setting/xiaopang.fun) 点开域名\u003e 解析设置，增加一条记录，例如：  \n![vercel 域名](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230708180410.png)\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98":{"title":"阿里云盘","content":"\n阿里云盘只存 B 站没有和可能多次看的片，百度网盘存备份，低频率使用的，再辅助夸克网盘，这样的存储空间应该够用了\n\n## 参考资料\n\n- [自动签到插件](https://github.com/chelseachen007/checkin/actions/workflows/aliyun.yml)\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%98%BF%E9%87%8C%E4%BA%91-OSS":{"title":"阿里云 OSS","content":"\n买了一个 OSS 服务包后，按要求填好就行  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230712164845.png)\n","lastmodified":"2023-09-18T14:54:47.618454873Z","tags":null},"/%E9%99%95%E8%A5%BF":{"title":"陕西","content":"\n## 油泼辣子\n\n什么都配油泼辣子，香而不辣。用的是秦椒\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%99%95%E8%A5%BF%E5%8D%9A%E7%89%A9%E9%A6%86":{"title":"陕西博物馆","content":"\n# 陕西博物馆\n\n[陕西考古博物馆](https://720yun.com/vr/3e22dasfmlw)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9A%A7%E9%81%93%E6%95%88%E5%BA%94":{"title":"隧道效应","content":"\n# 隧道效应\n\n当然这也会有点帮助，但就像为退休提前进行储蓄一样，如果早点开始的话，对自己的帮助会更大。到最后，学生们的压力都很大，而压力越大、就越会倾向于坚持自己原有的处理方式，即使正是因为原有的处理方式从一开始就在产生问题、导致压力，学生们也很难改变原有的行为。这就是所谓的隧道效应（M ullainathan and Shafir,2013）。但是，穆来纳森和沙菲尔经过详细的研究，找到了隧道效应的解决办法：如果希望能够有所改变，那么解决方案必须得看起来简单。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95":{"title":"雪花算法","content":"\nsnowFlake 是 Twitter 公司采用的一种算法，目的是在分布式系统中产生全局唯一且趋势递增的ID。\n\n第一位占用 1bit，其值始终是0，没有实际作用。2.时间戳 占用 41bit，精确到毫秒，总共可以容纳约 69 年的时间。3.工作机器id 占用10bit，其中高位 5bit 是数据中心ID，低位 5bit 是工作节点ID，做多可以容纳 1024 个节点。4.序列号 占用12bit，每个节点每毫秒0开始不断累加，最多可以累加到4095，一共可以产生 4096 个ID。\n\nSnowFlake算法在同一毫秒内最多可以生成 1024 X 4096 = 4194304 个全局唯一ID。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9C%80%E6%B1%82%E6%94%B6%E9%9B%86%E7%AE%B1":{"title":"案例","content":"\n[[如何寻找需求]]\n\n# 案例\n\n[加油贵=\u003e 团油 App 拉新](https://articles.zsxq.com/id_dr0wabmcvz80.html)  \n[[i茅台]]  \n[[代找 PDF]]  \n[[咸鱼二手书]]  \n[[视频混剪]]\n\n## 选品类的软件\n\n选品类的软件：这个行业说白了就是比谁先刷到优质素材，所以像EDX,优米云这类软件卖的超级贵。  \n我们自己在尝试开发一个自动刷抖音，并记录达标素材的软件，如果有开发业务的圈友可联系我，\n\n# 想法仓库\n\n收集日常中比较繁琐的事，思考能否构建成软件。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9C%8D%E5%85%B0%E5%BE%B7%E8%81%8C%E4%B8%9A%E5%85%B4%E8%B6%A3%E6%B5%8B%E8%AF%95":{"title":"霍兰德职业兴趣测试","content":"\n# 霍兰德职业兴趣测试\n\n霍兰德职业兴趣测试由著名职业性格研究专家霍兰德编制。他认为，个人职业兴趣特性与职业之间应有一种内在的对应关系。根据兴趣不同，可将人格分为六大基本类型：研究型（I）、艺术型（A）、社会型（S）、企业型（E）、常规型（C）、现实型（R）。每个人的性格都是这六个基本类型不同程度的组合。  \n这六大类型区域的界限并非清晰，他是以六边形的形式来表示六大类型的关系的，如此便可分为相邻关系、相隔关系与相对关系。霍兰德把自身对职业环境的研究与职业兴趣差异进行高度结合，因此这一测试对个体职业咨询有着极高的引导作用。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220616102408.png)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9D%9E%E5%85%A8%E6%97%A5%E5%88%B6%E7%A0%94%E7%A9%B6%E7%94%9F":{"title":"全日制和非全日制研究生区别","content":"\n# 全日制和非全日制研究生区别\n\n**全日制研究生：**全日制研究生是指符合国家研究生招生规定，通过研究生入学考试或者国家承认的其他入学方式，被具有实施研究生教育资格的高等学校或其他教育机构录取，在基本修业年限或者学校规定年限内，全脱产在校学习的研究生，记住脱产学习！\n\n**非全日制研究生：**非全日制研究生指符合国家研究生招生规定，通过研究生入学考试或者国家承认的其他入学方式，被具有实施研究生教育资格的高等学校或其他教育机构录取，在学校规定的修业年限（一般应适当延长基本修业年限）内，在从事其他职业或者社会实践的同时，采取多种方式和灵活时间安排进行非脱产学习的研究生，敲重点：非脱产学习！\n\n在这里要补充一下，有相当多的同学可能以为非全日制研究生=在职研究生，但实际上这两者其实是不同的概念。\n\n在职研究生是研究生学历教育的一种类型，是在国家计划内，以在职人员的身份，不脱产或半脱产，部分时间在职工作，部分时间在校学习的研究生学历教育的一种类型。属于国民教育系列。2017 年起，研究生分为两种：双证学历教育统招研究生（包含全日制和非全日制学习形式）、以及在职人员攻读硕士学位学生（单证在职研究生）。\n\n其中单证在职学位研究生包括：在职攻读硕士学位（现已取消）、同等学力申硕，这两种只有在职研究生硕士学位，但没有研究生学历（获得研究生学历必须参加全国统考）。教育部官网指出，16 年后在校研究生、授予学位数包含全日制及非全日制两种学习形式（双证）。而在职人员攻读硕士学位（单证）不属于学历教育。\n\n## 报考在职研究生的三种途径\n\n现在的非全日制研究生，其实是不同于以往的在职研究生。以往在职研究生只有学位证，没有毕业证书，即所谓的单证。而 2017 年非全日制研究生诞生，其与全日制研究生相同，既有毕业证，也有学位证，是双证书培养模式。\n\n全日制研究生和非全日制研究生属于统招统分计划。原有单证在职研究生取消，非全日制双证研究生设立。非全日制研究生列入国家统考，和全日制研究生统一划线，同样录取、培养和毕业要求，其学历学位证书具有同等法律地位和相同效力。两者的学历类型同为普通高等教育，而非全日制仅指学习方式，非学历的类型。\n\n简单来说，非全日制研究生属于在职研究生招生方式的一种，传统理解上的在职研究生包含非全日制研究生。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87":{"title":"简历准备","content":"\n# 简历准备\n\n多参考参考别人的简历 [[前端简历库学习]]\n\n# 问题准备\n\n- [[前端面试]]\n- [[🌐 前端索引]]\n\n# 项目复盘\n\n一定要准备大量的细节\n\n\u003e 我面试应聘者有一个窍门，就是看他说话是否具体。那些合适的应聘者会告诉你大量的细节，而那些只会夸夸其谈术语和概念的人，几乎总是不合适的。\n\n- `项目动机`：需求、为什么做、项目对公司来说有什么意义；\n- `负责角色`：在项目中负责的什么角色，是`Owner`、`核心开发`、还是只是`滑滑水`\n- `技术选型`：这个项目的选型设计（`如果有技术选型的话`）\n- `架构设计`：架构设计和分层设计，如果你有`参与或者是独自架构`的，可以选择在简历上直接附图（`画成横向的`）\n- `细节实现`：一些具体的细节点如何实现，`比如监控SDK就有各个监控数据的细节采集方式`；\n- `亮点设计`：做这个项目中的一些难点考虑，亮点设计等；\n- `项目成果`：表明你这个项目达成了什么成果，`最好有数据说话`；\n- [[🌐 前端索引#项目经验]]\n\n# HR 面准备\n\n\u003e 需要提前准备的一些常规问题还是挺多的，包括：\n\n- 自我介绍\n- 为什么要离职\n- 有成就感的事\n- 在原公司的收获\n- 业余生活\n- 对新公司、新团队的期待\n- 遇到的最大挫折，怎么应对\n- 对城市的选择\n\n# 参考链接\n\n## 简历\n\n[10 个 GitHub 上最火的程序员简历项目](https://github.com/FrontEndGitHub/FrontEndGitHub/issues/15)\n\n## 面经\n\n[4 年经验](https://juejin.cn/post/7035615277400195103)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95":{"title":"面试记录","content":"\n# 面试记录\n\n![[视杏]]  \n![[讯盟]]  \n![[欢聚时代]]  \n![[连连支付]]  \n![[浙商未来]]\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86":{"title":"项目管理","content":"\n大部分人每天做的是固定的动作，那不是项目， 而是运营\n\n我认为有一个重要的认知是，你之所以能坐在这里运营，是因为之前有人做过一个项  \n目。  \n是有人在一片不确定性之中把愿景变成蓝图，摸索出了一套方法，搭建了一个框架，设置了一个岗位，才有了你这个工作。  \n运营是项目成熟以后内化出来的。  \n你有一份稳定的工作，你很喜欢稳定，你认为工作就应该是这样稳定的，而殊不知那是人家做项目的创造出来的东西。有之前的不稳定，才有你今天的稳定。\n\n- 别人筹款设计建设造了一座桥，所以你才可以在这里收过路费。\n- 别人披荆斩棘建了一所学校，所以你才可以在这里教书。\n\n项目和运营这两种非常不一样的活动，造就了两种非常不一样的人。  \n\n- 做项目没有固定套路，一切操作的该与不该都只在项目最后的成败中才能判定，甚至很多时候做完了也不知道哪步做的对还是不对。  \n- 可是做运营则有固定套路，不太需要创 新\n\n做项目需要经验，经验是活的不是死的，必须在每一次成败中动态总结，实时更新。  \n经验往往是不可见、不能写到纸面上的隐性知识。  \n经验会在你的神经网络上留下实实在在的痕迹\n\n然而做运营既然已经有了考核，重要的就不再是所谓经验了一一而是「资历」。我们可以称之为  \n「编制人」\n\n- 我有这个学历、那个证书，我入职比小秦小李他们早了整整五年，那你说这次提拔副科长难道不应该优先考虑我吗？\n- 既然不可见的经验已经被可见的资历取代，通过考核又只需要完成标准化的动作，那所谓的「能力」也就没有意义了。\n\n既然没有明确的成败，工作就不再是以「事」为核心，真正影响大家前途的变量就不是事，而是人。既然成败的硬业绩根本不存在，实际工作能力已经无从谈起，组织又不可能完全按照年龄资历提拔人选，那决定谁上谁下的还能是什么呢？当然是人际关系。  \n英雄没有用武之地，一切只能恩出于上加论资排辈。  \n在这样的氛围下，如果领导说我看小秦能力强我要越级提拔他，你说老王能干吗？这种在项目人编写的制度之中占据一个位置，并且把这个位置当成天经地义的待遇的人，就是编制人\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A2%84%E5%8A%A0%E8%BD%BD%E5%85%B3%E9%94%AE%E8%B5%84%E6%BA%90":{"title":"预加载关键资源","content":"\nPreload 是一个声明性的获取请求，它会告诉浏览器尽快请求资源。通过在 HTML 文档头部添加带有 rel=\"preload\" 的 \u003clink\u003e 标签来预加载关键资源：\n\n```html\n\u003clink rel=\"preload\" as=\"style\" href=\"css/style.css\"\u003e\n```\n\n预加载最常见的用法是用于字体文件，减少因字体加载较慢导致的文字字体闪烁变化。例如：`\u003clink rel=\"preload\" as=\"font\" href=\"/main.woff\" /\u003e`\n\n应用了`preload`提示的资源，通常会以较高的优先级率先在网页中加载，例如下图中的`nato-sans.woff2`请求，`Priority`列的值为`High`，加载顺序仅次于`Document`本身。\n\n## 其他预\n\n|类型|优化目标|示例|注意事项|\n|---|---|---|---|\n|预取回 Prefetch|- 加载优先级较低的资源  \u003cbr\u003e- 后续页面浏览需要加载的资源|`\u003clink rel=\"prefetch\" href=\"/juniortour.js\" /\u003e`|1. Prefetch 预取回的资源并不会被立刻**解析、运行**：例如预取回JS文件时，JS文件内的代码逻辑并不会执行，只是文件保存到了浏览器缓存中。这也是Prefetch与普通 link 标签（`\u003clink href=\"/static/main.3da2f.css\" rel=\"stylesheet\"\u003e`）的核心区别。  \u003cbr\u003e2. Prefetch 的触发时机不固定，会由浏览器相机决定，浏览器通常会在网络带宽、CPU运算都空闲时触发下载。|\n|预加载 Preload|- **当前**页面需要**优先**加载的静态资源|`\u003clink rel=\"preload\" as=\"font\" href=\"/main.woff\" /\u003e`|- 优化目标为当前页面所需资源，而非后续加载。|\n|预连接 Preconnect|- 加载优先级较低的**域名**  \u003cbr\u003e- 后续页面浏览需要连接的**域名**|`\u003clink rel=\"preconnect\" href=\"https://juniortour.net\" /\u003e`|- 用于跨域域名，同源域名不需要  \u003cbr\u003e- 控制只对关键域名应用，避免数量超过6个|\n|DNS预取回 DNS-Prefetch|- 后续页面浏览需要连接的**域名**|`\u003clink rel=\"dns-prefetch\" href=\"https://juniortour.net\" /\u003e`|（同预连接 Preconnect）|\n\n## 参考链接\n\n- [1.4秒到0.4秒-2行代码让JS加载耗时减少67%-《现代前端工程体验优化》-第二章-第一节 - 掘金](https://juejin.cn/post/7274889579076108348)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A3%9F%E7%A5%9E%E9%A2%98%E5%BA%93":{"title":"食神题库","content":"\n题干  \n正确答案  \n- 电影《食神》于1996年12月21日上映。  √\n- 《食神》电影中，皇帝炒饭得到了食神周星驰的肯定，拿到满分。  X\n- 《食神》电影中，莱品[禾花雀]因为厨师太丑得了零分。  √\n- 《食神》电影中，唐牛背叛了食神史提芬周。  √\n- 《食神》电影中，史提芬周的餐馆里用了坏掉的牛肉。  √\n- 《食神》电影中，唐牛成为了新食神。  √\n- 《食神》电影中，火鸡做出了最好吃的撒尿牛丸。  X  \n- 《食神》电影中，撒尿牛丸的第一位顾客是厌食症患者。  √\n- 《食神》电影中，撒尿牛丸被用来打乒乓球。  √\n- 《食神》电影中，周星驰饰演的食神史提芬周靠撒尿牛丸翻身。  √\n- 《食神》电影中，火鸡姐因为保护食神旗被毁容。  √\n- 《食神》电影中，火鸡姐是食神史提芬周的粉丝。  √\n- 《食神》电影中，火鸡姐为食神史提芬周档了一刀。  √\n- 《食神》电影中，食神史提芬周成为了少林弟子。  √\n- 《食神》电影中，火鸡姐曾给史提芬周做了一碗叉烧饭。  √\n- 《食神》电影中，撒尿牛丸的第一位顾客是唐牛。  X\n- 《食神》电影中，史提芬周与唐牛PK做佛跳墙。  √\n- 《食神》电影中，唐牛去的中国厨艺训练学院，其实是少林寺厨房。  √\n- 《食神》电影中，唐牛比赛做的佛跳墙用了七七四十九小时。  X\n- 《食神》电影中，火鸡姐救了周星驰饰演的食神史提芬周。  √\n- 《食神》电影中，参加食神比赛的人都拿了满分。  X\n- 《食神》电影中，周星驰饰演的食神给所有参赛者都打了满分。  X\n- 《食神》电影中，史提芬周参加食神比赛迟到了。  X\n- 《食神》电影中，史提芬周与唐牛PK做皇帝炒饭。  X  \n- 《食神》电影中，食神比赛当晚出现了九星连珠。   √\n- 《食神》电影中，火鸡姐非常喜欢史提芬周。   √\n- 《食神》电影中，食神史提芬周被徒弟唐牛当众击败。   √\n- 《食神》电影中，史提芬周一直都是食神。   X  \n- 《食神》电影中，史提芬周做出的撒尿牛丸很有弹性。   √\n- 《食神》电影中，火鸡姐曾在中国厨艺技术学院学习。   X\n- 《食神》电影中，史提芬周的徒弟唐牛喜欢火鸡姐。   X\n- 《食神》电影中，史提芬周误入了少林寺。   √\n- 《食神》电影中，史提芬周非常有商业头脑。   √\n- 《食神》电影中，史提芬周靠撒尿牛丸重新成为食神。   √\n- 《食神》电影中，火鸡姐最终去了少林寺。   X\n- 《食神》电影中，唐牛曾经是少林寺学徒。   √\n- 《食神》电影中，唐牛的拿手菜是撒尿牛丸。   X\n- 《食神》电影中，史提芬周是全港知名的食神，在饮食界首屈一指。   √\n- 《食神》电影中，使用隔夜米饭来炒米饭是最基本的常识。   √\n- 《食神》电影中，史提芬制作甜品[彩虹鲜花拔丝]是麦芽糖、鲜花瓣制作的。   √\n- 《食神》电影中，火鸡姐卖给史蒂芬是一碗叉烧饭。   X\n- 《食神》电影中，在《香港至尊名厨大赛》中史提芬将四大名厨的菜通通打成0分。   √\n- 《食神》电影中，卖出第一碗[撒尿牛丸]的价格是1元。   X\n- 《食神》电影中，史蒂芬凭撒尿牛丸入围香港饮食奇才。   √\n- 《食神》电影中，火鸡姐摊位下贴满了史蒂芬的照片。   √\n- 《食神》电影中，”好折凳”被誉为七种武器之首。   √\n- 《食神》电影中，食神制作的叉烧饭，起名是[黯然销魂饭]。   √\n- 《食神》电影中，史蒂芬去少林寺的厨房学习仅用了2个月。   x\n- 《食神》电影中，《香港至尊名厨大赛》比赛地点在少林寺。   x\n- 《食神》电影中，最终史提芬周靠咸鱼料理赢得了比赛。   x\n- 《食神》电影中，方丈讨厌别人在背后说他坏话。   √\n- 《食神》电影中，史提芬周最后在少林寺做和尚，法号星星。   x\n- 《食神》电影中，只要用心，人人都可以是食神   √\n- 《食神》电影中，「黯然销魂饭」吃了会流泪，是因为放了洋葱   √\n- 《食神》电影中，少林寺方丈，法号为梦遗。   √\n- 《食神》电影中，史提芬周加入了少林寺十八铜人。   x\n- 《食神》电影中，火鸡姐最终和方丈在一起了。   x\n- 《食神》电影中，史提芬周在做菜时，使出「屠龙斩」   √\n- 《食神》电影中，火鸡姐最终变得很漂亮。   √\n- 《食神》电影中，火鸡姐绰号「双刀火鸡」。   √\n食神题库\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230830163416.png)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A5%A5%E9%A5%BF%E7%9A%84%E7%9B%9B%E4%B8%96%E4%B9%BE%E9%9A%86%E6%97%B6%E4%BB%A3%E7%9A%84%E5%BE%97%E4%B8%8E%E5%A4%B1":{"title":"《 饥饿的盛世：乾隆时代的得与失 》","content":"\n# 《 饥饿的盛世：乾隆时代的得与失 》\n\n# 元数据\n\n\u003e [!abstract] 饥饿的盛世：乾隆时代的得与失\n\u003e - ![ 饥饿的盛世：乾隆时代的得与失|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/456/841456/t7_841456.jpg)\n\u003e - 书名： 饥饿的盛世：乾隆时代的得与失\n\u003e - 作者： 张宏杰\n\u003e - 简介： 本书内容主要写乾隆时代的得与失，作者通过对乾隆时代的解构，为读者描绘了一幅五彩斑斓的“盛世”图景，同时深刻揭示了近代中国失落的秘密。乾隆统治下的中国，纵向比，是中国之前几千年历史中人口最多、国力最盛的时期。横向比，是当时世界上最强大、最富庶的国家。称之为中国历史上最大的盛世，毫不为过。乾隆时代创造了空前的政治稳定，养活了数量空前的人口，奠定了今天的版图。但是，作者从更深的层次看到，表面的繁荣昌盛背后，隐藏着的，是巨大的危机。乾隆在位六十年，正好是英国经历了产业革命的全过程。\n\u003e - 出版时间 2016-04-01 00:00:00\n\u003e - ISBN： 9787229106676\n\u003e - 分类： 历史-历史读物\n\u003e - 出版社： 重庆出版社\n\n# 高亮划线\n\n## 第六章 文字狱\n\n# 读书笔记\n\n## 第六章 文字狱\n\n### 划线评论\n\n- 📌 每演戏时，见有孝子悌弟，忠臣义士，激烈悲苦，流离患难，虽妇人牧竖，往往涕泗横流，不能自已。旁视左右，莫不皆然。此其动人最恳切、最神速，较之老生拥皋比，讲经义，老衲登上座，说佛法，功效更倍。”那些宣传忠君孝亲的戏剧，对帝国的意识形态建设，功莫大焉。 ^16142247-6Vx5G0lCR\n    - 💭 感觉和现在中国执行的很像 只给我们看到富强民主正能量的一面  只能知道想让我们知道的 渐渐变成愚民 当然我也相信这确实是个正能量的中国\n    - ⏱ 2017-12-07 21:11:15\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-6VDkUx62V  \n⏱ 2017-12-11 23:43:53\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A6%99%E5%B8%85%E4%B8%AD%E5%9B%BD%E8%B4%A2%E5%AF%8C%E6%8A%A5%E5%91%8A":{"title":"香帅中国财富报告","content":"\n# 香帅中国财富报告\n\n全球低利率。超低利率 =》 高估值、高波动\n\n茅台是 安全资产，苹果、微软\n\n另一个稳定增长，抗通胀 =》 房产\n\n尽量买 =》 北上广深、成都、杭州、南京、苏州\n\n二手房房价 涨幅 大于 新房涨幅，房市流动性好\n\n附录1 2020年版城市房产投资指南\n\n![img](https://piccdn3.umiwi.com/img/202012/15/202012151616201886693820.png)\n\n世界货币体系的对冲 =\u003e 黄金\n\n## 2021 各行业值得投资情况\n\n消费者服务行业，严重高估\n\n食品饮料 1. 钱没地方去 2. 必选消费\n\n整体估值偏贵，ETF不算好投资方向，但是精选的个股可能还是有机会。\n\n汽车行业 新能源车车企估值平均500倍\n\n成熟车企的市盈率是10~20倍。\n\n而未来三五年的汽车市场、全球资本市场会发生哪些变化，不确定性极高——在这样高的估值点位入场，我觉得需要勇气。\n\n家电行业 虽然处于高点 但是也才27倍\n\n我对“好企业”有个特别市侩和庸俗的判断标准：凡是老百姓都在用的产品，这样的企业不会有大问题\n\n煤炭、石油石化、建筑，都是处于周期下行的行业，市场担心这几个行业的盈利走入下行通道，纷纷抛弃这几个行业。\n\n中长期医药必然是最好行业之一，只不过现在确实涨太多了，需要消化估值\n\n## 银行和科技股\n\n在讨论银行股估值时，一般不用市盈率。市净率（PB），也就是每股股价和每股净资产的比例，是更加常用的指标。\n\n如果一个股票的市净率（PB）小于1，意思是说，现在股市上能打折买入这个企业的净资产。A股银行的平均市净率现在（2020年年底）是0.64，也就是说，现在买中国银行业的净资产，平均六四折！和这个对比，A股市场上非金融企业平均的市净率是13.2。\n\n为什么全球银行业的估值都这样低呢？市场上很多券商报告、基金经理都曾经谈到过理由。概述起来就是两个词：**1.周期行业；2.经济下行** **3.科技金融平台的挑战。**\n\n张坤：**银行是高杠杆的周期行业，碰到周期下行或者是外生冲击（e.g.金融危机、新冠疫情），投资回报下降，坏账率上升，杠杆会加大这种风险暴露**。他就不愿意将自己的基金资产置于这种境地。\n\n房贷换成LPR，也就是市场化的浮动利率后，房贷抵押贷款利率明显处于下行通道，而且随着大规模城市化的结束，房贷规模增速下行也势在难免\n\n但是，以一年期为考虑，银行股是阶段性的投资标\n\n- 银行的估值很低，盘子大，不太容易有太大的回调\n- 2021年无论如何需要对经济进行刺激，将2020年GDP砸出的坑补回\n- A股其他板块都偏贵了\n\n银行股分化严重。个股可以用银行收入结构、银行所在地区、银行不良率以及拨备覆盖率来进行判断。\n\n平安、招商和宁波银行\n\n## 纳斯达克和道琼斯\n\n从道琼斯成分股的百年变化中可以看到：美国大蓝筹股经历了铁路、电报电话到石油、煤矿、钢铁、公用事业、汽车，再到连锁商业、金融、医药、大众消费品、IT、电信的变化。**道指每个时期纳入的行业都代表着对美国未来发展方向的判断，是美国经济增长的指南针**\n\n纳指，就是纳斯达克市场的指数。纳斯达克在企业规模、盈利记录等方面降低上市标准，让这些企业有弯道超车的机会。比如说，1986年微软上市时候，股价只有15美分。11年后微软市值达到5000亿美金，成为全球最大企业。之后英特尔、思科、苹果、戴尔等公司也在纳斯达克书写了新经济的传奇。**纳斯达克100指数在3000多个上市公司中精选出的100只成分股，都具有高科技、高成长和非金融的特点，是绝对的“美国新经济发动机”。**\n\n## 中概股\n\n所谓“中概股”，就是指在美国上市，做中国业务的企业，像你熟悉的阿里、京东、微博都是中概股。\n\n2020年中概股面临的大环境并不好：\n\n- 一个是“信任危机”，2020月4月瑞幸咖啡爆出造假后，\n- “监管冲击波”：《外国公司问责法》，中间一些条例可能会从会计准则方面限制一些中国企业在美上市。\n\n**但即使外部环境碰到这么多问题，“加仓优质中概股”仍然是很多国际大型机构投资者的选项。**\n\n### 从中概股看到的投资风险\n\n由于美股市场是注册制，宽进严出，所以投资中概股的风险也是很高的，一个不小心投资就缩水90%。\n\n**平台经济中，后来者的边际回报会下降。这句话的意思是，到今天为止，中概股优质头部企业基本还是过去20年平台经济的红利，尤其是消费零售（电商）平台的红利。**\n\n## 社交媒体和中概股\n\n### 比特币\n\n**很少有人注意到的是，比特币价格走势和社交媒体活跃度高度相关。**\n\n支持股价/比特币价格的是什么？**就是投资者对于这家企业的“信念”和“共识”。信念越强，价格越坚挺。**\n\n一旦这种集体信念被更大面积地接受，成为公共信念，被固化甚至传承下来，就会变成资产价格形成的内生因素。钻石就是一个最成功的例子。\n\n而近年来全球经济中最成功的叙事就是比特币。\n\n**社交媒体让资本市场估值的波动更大，更容易形成泡沫，也更容易消散。**\n\n## 基金时代\n\n金融模式：\n\n**美国是证券化思路**：企业发展依赖直接融资市场，尤其是风险共担、利益共享的股权市场，这对培养创新的美国企业起到了决定性的作用。\n\n**日本则是传统银行思路：**稳健经营的银行资金更倾向于现金流稳定的大企业。精益求精成为日本产业升级的特色，但“精细”的另一面也是缺乏破坏式创新的意思，比如说你很难想象像马斯克的SpaceX这样的项目能在日本金融体系内长出来\n\n中国呢 :要引导居民储蓄往股权市场上走，同时让金融市场变得更市场化，优胜劣汰，给创新企业以更好的大环境。\n\n2020年之后，即使是牛市也不再是普涨的局面，牛市里普通投资者也更难赚钱。越是分化动荡的市场里，专业化溢价越重要。所有这些都让专业化基金不得不成为未来城市中产的标配之一。\n\n**从过去十多年来看，和指数相比，中国偏股型基金在获得“超额回报”上略有优势，但是并不明显。**\n\n财富水平越高，就越追求资产的安全性，所以说，基金是相对“求稳”的投资方法，在对抗市场下行风险的能力上比较强。\n\n- 冠军基金：冠军基金常常是在某个热点上投资比较激进，才会获得更高收益。后面都会经历较大的跌幅\n- “基金奥斯卡”：平均下来能获得年化9.31%的回报率。也就是中庸水平，和同期同类型基金的平均业绩差不多。\n- 爆款基金：一般来说，大幅的超额认购或者是“秒杀”的基金就算爆款。我们剔除了2019年之后的基金样本，整理了2006年到2018年的爆款基金，然后观察这些基金成立之后的业绩——结果可以用两个字概括：平凡。\n\n如果看好是长牛趋势，就是all in 。\n\n但是很多人其实是工资理财，尤其对年轻人来说，是一种非常好的强制储蓄手段\n\n### 负面清单\n\n为什么讲负面清单而不是“正面清单”呢？道理很简单——**因为成功无法复制，但是错误可以尽量避免。**\n\n- 选基金经理，从业年限不能太短\n- 选基金经理，业绩最大回撤不能太大\n- 选基金，不要选基金规模太小的\n  - 一般来说，2亿以下的MINI基金我们认为风险偏高，5000万就更是一个警戒线。\n- 选基金，不要选基金管理公司规模小的\n  - 典型的“二八定律”分布。按目前的资管规模，要进入前20%权益类资管规模的门槛至少是500亿。所以我们认为（500亿）这个数值可以作为一个门槛。当\n- 不要认为“熊市亏得少”的基金，就会“牛市赚得多”\n- 不要认为逆袭基金就会一直逆袭下去\n\n## 行业职业篇\n\n平台（platform）被称为“双边市场”或者“多边市场”，其实就是聚合消费者和生产者的场所。其实双边市场自古有之，集市、农贸市场、百货商场都是双边市场，而今天的平台经济，其实和数字化密切相关，基本上就是数字化的双边市场。\n\n**数字化平台的价值就是标准化。数字化平台成败的关键就在于能否把供需双方标准化。**\n\n平台做的是标准化的事，所以对年轻的劳动者来说，找一个“难以标准化”的赛道，或者培养自己“非标准化”的能力，是最重要的事\n\n《微粒社会》\n\n### 完美日记和元气森林\n\n后数字时代：平台红利下降，产品服务为先\n\n**数字化正在成为我们生活的背景。数字化这个概念会逐渐成为“电”一样无处不在但毫无感知的存在。一切商业逻辑会逐渐回到根本需求。**\n\n消费上重质不重量，重感受不重品质，消费中的情感和社交需求远远大于实际需求——**这就为低绝对值、高附加值的“小确幸产品”提供了极大的空间**。比如“时尚健身”的几十元一杯的酸奶，比如“吃不胖”的雪糕，比如“用回忆当下酒菜”的白酒……\n\n### 新国货？新在哪里？\n\n所谓“新”，就新在企业信用的构建方式上。\n\n**传统消费品牌的典型模式：从企业信用（产品）出发，通过营销渠道（商场、经销商、广告等等），触达消费者**\n\n**新消费品牌的典型模式：本质上都是“营销主导”，利用数字基础设施（比如电商、社交媒体、内容平台）连接消费者和生产端，快速打出品牌，构建企业信用。**\n\n这个现象其实提醒我们以下三点：\n\n- 研发壁垒较低、营销成本较高的行业，跑出新品牌的概率更大。\n- 消费新品牌也是很脆弱的，会面临高淘汰和快速代谢的环境。\n- 营销创意很重要。如：元气森林“零糖零卡零脂肪’， 李子柒\n\n**但是，营销塑造的是“网红”，不能造就长久的“品牌”。**\n\n### 数字平台真的是垄断者吗\n\n从10月份蚂蚁金服上市被叫停开始，中国动作频频，先发布了反垄断指南，接着处罚阿里、阅文、丰巢；再接着开始调查阿里，约谈蚂蚁金服等等。同期，欧美的反垄断浪潮也来了，亚马逊、苹果、谷歌、脸书先后被欧盟和美国司法部、联邦贸易委员会点名，要进行处罚或者提起诉讼。\n\n**这么说，2020年，是中国数字平台的反垄断元年，也是全球数字平台反垄断的里程碑式的一年。**\n\n**数字平台到底具有垄断性吗？为什么前30年不反，现在要反？当我们说反数字平台垄断的时候，我们究竟在反什么？**\n\n垄断性市场权力里，像苹果这样因为生产者更有效率形成的叫**自然垄断**，企业拥有关键资源的叫**资源垄断**（例如占有沙特阿拉伯石油资源的沙特阿美公司），政府给某个企业排他性权力叫**行政垄断**（例如运营着法国铁路系统的法国国营铁路公司）。这些垄断，都是统治性的市场权力。\n\n#### 垄断”一定是坏的吗？\n\n比如说，谷歌占领了90%以上的全球搜索引擎市场份额，还是免费；微信、QQ长期占据即时通讯市场霸主地位，也不收费呀，就连公众号打赏都不收分文。再想想，有了美团、淘宝、京东、滴滴之后，生活真的方便了好多\n\n**数字平台垄断是一种脆弱的垄断**\n\n\u003e “高科技的竞争本来是，也必然是一场接一场‘胜者通吃’的游戏。‘通吃’只是暂时的垄断，一旦别的好东西降临，它就会消失。”\n\n#### 那么为什么还要反垄断？\n\n数字平台反垄断的目的是要将数字权力关进笼子里。\n\n- 数字权力带来经济上的垄断，影响社会分配机制\n\n  **企业组织模式是一个社会的初次分配形式，国营企业、私营企业、股份制企业，都是不同的组织模式，但本质上不就是不同的分配机制吗？数字平台确实是资本密集、高技能人力资本密集、人均效率（利润）极高，但是对整体劳动力市场来说，这种组织模式其实只是极少数人的天堂**——比如说，2019年，沃尔玛有220多万员工，阿里有10万，但前者的市值是后者的63%。\n\n  这意味着，数字平台头部效应越强，社会财富的分化会越大。\n\n- 数字权力会对社会权力结构造成冲击\n  - **骑手们跑得越快，随之就会被要求以更快的速度送达，然后形成了一个往复循环、越逼越紧的反馈机制。这种“高效”和“优化”的背后就是平台基于大数据的系统和算法。**\n  - **数据不是像别的生产要素，“用完即抛”，而是循环使用，越用越大，吸附能力越强。而这个特征又反过来加强了数据的控制力——所以我们观察到，平台越大，用户越多，沉淀的数据越大，颗粒度越细，用户的依附度越高。**\n\n  **由于数字化和平台组织模式的特征，巨头们的数字权力已经超越了经济领域，渗入了政治甚至文化领域，而且越来越强。**\n\n- 大数据产权究竟该归谁？\n\n  **数据该归谁？隐私怎么处理？这都对现行的经济学、法律、社会学甚至伦理学提出了全新挑战。任何肤浅的、轻浮的回答都要不得。**\n\n## 格局\n\n2020年的三个改变：\n\n- **全球主题的左转弯**\n\n人类历史的主题其实有两个，一个是增长，另一个是分配——政策主题就像钟摆，会在“增长效率”和“分配公平”之间往复摇摆。\n\n**所以，从更注重增长的效率转向更注重分配的公平，这是2020年带来的第一个改变，我称之为全球主题的左转弯。**\n\n- 全球经济犹如穿越大峡谷，充满险阻\n\n  2020年疫情带来的是各国“史无前例”的**放水**，天量资金涌入市场，利率水平再下一个台阶。低增长、超低利率将长期与我们相伴。同时低增长意味着好的投资机会少，所以资金会更追逐头部项目、头部城市、头部国家，经济上的**分化也越加严重**。\n\n- 政治格局：战国时代\n\n特朗普留下的最大政治遗产就是让朝野两党统一认识“要将中国作为对手”，而且把对华政策底线拉得很低了。\n\n如何面对改变：\n\n**20岁一定要记住自己在数字化这个大背景下，要想办法不被“标准化”；**40岁，不好意思，比较惨，左手抓职场，右手抓资产，两手都得兼顾；60岁大多退休了，好好理财，尤其注意“安全资产”，因为你的劳动现金流已经下降了，财富的保值更重要。\n\n### 中国机会\n\n**中国的劳动力要素禀赋决定了我们人工智能的推广和替代没有那么快。起码在后面十来年，只要一个人找对方向努力，多少都能在轨道上找到自己的位置，劳动力市场极化的现象会缓和很多**\n\n拉动消费的根本在于让更多的居民有收入，有财富，有安全感。\n\n\u003e 在核心城市大规模建造安居房，帮助以农民工为主体的新市民以较低价格在城市安家置业，创造新一代中产。 ---二次房改\n\n这个国家的人，对增长，对安定生活的追求，才是中国最大的安全资产溢价。\n\n### 2021年中国的宏观发展趋势\n\n\u003e 1.从长期来看，中国经济向好趋势不变。2020年疫情甚至是一场出清，加强了中国产业链的优势。  \n\u003e 2.从短期来看，目前市场对2021年经济增速的判断过于乐观，可能存在系统性偏差，2021年中国的宏观形势面临高度不确定性。  \n\u003e 3.金融资产价格方面，去年我们给的关键词叫“冰雪消融，花蕊绽开”。2021年这花蕊可能要经历“瑟瑟秋风”。普通个人和家庭资产配置上都应该更加安全求稳。\n\n目前由于对2021年经济形势的普遍乐观估计，市场情绪偏热，部分行业、部分板块的资产价格已经偏高。\n\n2021年的金融资产价格处于一个极其脆弱的均衡中，涨和跌，都不需要太多理由。这种情况其实最难挣钱，一波深跌就可能将之前所有涨幅抹平，甚至砸个坑出来。\n\n**普通中国家庭的财富水平可以用两个词概括，城市\u0026房产。**房产在家庭财富中的比重大约是70%~80%，而中国房产价值的差距主要就是城市差距，也就是我们课程里一再讲到的“城市分化”。**所以一个家庭是否拥有住房，拥有哪个城市、哪个区域的住房，基本就决定了家庭财富的整体水平**\n\n很明显的趋势是，财富水平越高的人，负债率越低\n\n抗风险能力:\n\n- 疫情中，教育是收入的减震器。教育程度越高，疫情中收入的负向影响越小。\n- 大城市是收入抗风险的磐石。\n- 是否拥有高线城市房产和金融资产是疫情中财富不降反升的决定性因素。\n- 是否具有较高金融素养（是否具备正确的金融知识和是否关注金融信息）是做对投资决策的重要变量。\n\n  一个非常有趣的事实是，在金融投资上，学历不等于金融素养。\n\n上升通道在哪里：\n\n- 上中产的列车：没买房的，首先得买房。\n- 城市选择：尽量进入大城市。\n- 职业选择上别被“标准化”\n- 终身学习，尤其是学习金融知识\n- 准确的自我认知，调整好投资心态。\n- 金融投资避坑，年轻人提高储蓄率。\n\n**巴菲特55岁后所累积的财富占他个人总资产的995%,马云如果蚂蚁金服上市成功这个比列还要更大,目前马云55岁后创造的财富占他个人92%左右。复利的魔力,反观我们个人,大部分人动不动就想翻倍,没有耐心。**\n\n## 做一个慢慢变富的人！\n\n## 金融市场高波动的情况下，我们的投资该怎么做。\n\n\u003e 2020年：高估值\u003e高分化\u003e高波动  \n\u003e 2021年：高波动\u003e高分化\u003e高估值\n\n大量资金集聚在头部股票和基金上，引起价格一波又一波的上涨，但是更多的资产价格却在底部“熊”着——这就是我们所说的“高分化”。\n\n**很多投资者都没有意识到的一点是，金融投资亏钱比赚钱容易**\n\n站在2021年这么一个高度不确定的年份，我觉得下面几条可以参考。\n\n1. 以10年期观察，大城市的房产仍然是优质安全资产。但以1~2年左右期限考虑，黄金和中国国债可以进入资产配置组合；如果从5~10年的中长期来考虑，部分行业的龙头企业股权投资是选择项——行业上我认为“衣食住行、生老病死”这8个字是真正能穿越周期，跨越国家、种族的好行业。\n2. 保持足够的安全边际。\n3. 资金量大的家庭要多考虑多种资产的配置，资金量小的家庭为了避免错过上车，但是又害怕踩到市场下跌的雷，可以用定投的方式参与市场\n\n## 读书记录\n\n2021.02.05 一刷\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E9%A9%AC%E5%85%8B%E6%96%AF%E6%99%AE%E6%9C%97%E5%85%8B":{"title":"马克斯·普朗克","content":"\n# 马克斯·普朗克\n\n马克斯·卡尔·恩斯特·路德维希·普朗克（德语：Max Karl Ernst Ludwig Planck，1858 年 4 月 23 日－1947 年 10 月 4 日），德国物理学家，量子力学的创始人。以发现能量量子获得 1918 年度的诺贝尔物理学奖（1919 年颁发）。以之为名的[[普朗克常数]]于 2019 年被用于重新定义基本单位，此外还有以之为名的科学奖座、机构和学会。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A9%AC%E5%85%8B%E6%96%AF%E6%B3%A2%E6%81%A9":{"title":"马克斯·波恩","content":"\n# 马克斯·波恩\n\n马克斯·玻恩（1882 年 12 月 11 日－1970 年 1 月 5 日），又译为马科斯·波恩，是一名德国理论物理学家与数学家，对量子力学的发展做出了重要贡献，在固体物理学及光学方面也有所建树。此外，他在 20 世纪 20 年代至 30 年代间培养了大量知名物理学家。1954 年，玻恩因“在量子力学领域的基础研究，特别是对波函数的统计诠释”而获得诺贝尔物理学奖\n\n玻恩于 1882 年生于德意志帝国布雷斯劳（今波兰弗罗茨瓦夫），1904 年进入哥廷根大学。他在那里完成了有关汤姆孙原子模型的论文。1918 年，他与弗里茨·哈伯对金属与卤素形成离子化合物的过程进行了探讨，后来此机制被命名为玻恩-哈伯循环。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%A9%AC%E6%A1%B6":{"title":"马桶","content":"\n## 迷瞪评测\n\n迷瞪测试釉面影响都差不多\n\n选购建议\n\n1. 进口，不是清洁能力和釉面的差距，而是品牌溢价\n2. 马桶是否产生尿垢和马桶本身没多大关系\n3. 旋风冲水比普通款体验略微好点\n\n但是有评论，釉面的差距要在时间很久才能看的出来~\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E5%B0%94%E5%A4%AB%E7%90%83":{"title":"高尔夫球","content":"\n# 高尔夫球\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E6%95%8815%E6%B3%95%E5%88%99":{"title":"《 高效15法则 》","content":"\n# 《 高效15法则 》\n\n# 元数据\n\n\u003e [!abstract] 高效15法则\n\u003e - ![ 高效15法则|200](https://weread-1258476243.file.myqcloud.com/weread/cover/36/YueWen_914668/t7_YueWen_914668.jpg)\n\u003e - 书名： 高效15法则\n\u003e - 作者： 凯文·克鲁斯\n\u003e - 简介： 如何每周省出8小时阅读、锻炼、陪伴家人？美国海军陆战队顾问、国会议员咨询人凯文·克鲁斯遍访全美有代表性的各界成功人士：千万富翁、奥林匹克冠军、名校尖子生和二百多名企业家——包括马克·库班，马·平库斯，杰夫·维纳等等， 总结了他们的15条时间管理法则和高效工作的习惯，提出了自己独到的E-3C 时间管理工具。本书还收录了100多条关于时间的励志格言，为你整合书中内容，规划自己的完美一天。本书内容不仅适用于办公室的商业人士，学生和自主办公人士也可以运用书中的时间管理工具提高学习和工作的效率。\n\u003e - 出版时间 2017-08-01 00:00:00\n\u003e - ISBN： 9787505741485\n\u003e - 分类： 个人成长-人生哲学\n\u003e - 出版社： 中国友谊出版公司\n\n# 高亮划线\n\n## ◎任务清单存在的问题\n\n- 📌 任务清单上有41%的项目都没被完成。 ^914668-18-824-842\n    - ⏱ 2021-03-04 10:32:42\n\n## ◎过日历上的生活\n\n- 📌 最好的习惯是自动拒绝那些不在规划内的请求，对你自己的日程相冲突的事情，你可以说：“4点到5点我有一个很重要的约会。我们可以五点以后再说吗？或者明天早上再说可以吗？ ^914668-19-3776-3857\n    - ⏱ 2021-03-04 10:35:50\n\n## ◎理查德·布兰森最重要的财产\n\n- 📌 如果你有一个想法但是不马上写下来，那么第二天早上这个想法也许就会永远消失了 ^914668-39-851-888\n    - ⏱ 2021-03-04 10:46:35\n\n## ◎七个步骤来掌控你的邮件\n\n- 📌 每天只检查三次邮件，使用“321-0”方法。每天安排三次时间来处理你的邮件（早、中、晚），设一个21分钟的闹钟，试着在21分钟内将邮箱清空到零。 ^914668-48-945-1024\n    - ⏱ 2021-03-04 10:53:27\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E8%80%83":{"title":"高考","content":"\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230607113249.png)\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E5%A1%AB%E6%8A%A5":{"title":"高考志愿填报","content":"\n# 高考志愿填报\n\n**首先原则是：选择城市\u003e选择学校\u003e选择专业**\n\n **不要只看分数填志愿！！高考是人的考试，重要的是排名。**\n\n## 填报步骤\n\n1. **第一步，首先看你的分数入了哪一档。**\n2. **把自己的分数对应省市的排名找出来。百度搜索“2020年xx省（文科或理科）高考分数段”**\n3. **去百度上找你想要去的城市，有哪些你那个批次的大学。比如搜索“城市➕批次大学排名**\n4. **去初筛完了之后把筛选出来的高校打在表格上，**\n\n   \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230617082102.png)\n\n5. **还要找到近三年的高考分数段（查的方法在第二步，比如你查到了2018年目标院校的录取分数之后，百度2018年xx省的高考位次），查出最高分和最低分当年所在的排名。**\n6. **最后一步填志愿，这一步就根据每个省市的志愿规则不同来咯。**  \n十个志愿一般冲3个，中间4个恰好能上的，最后3个填往年录取的排名比自己排名低500以上的保底学校。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0":{"title":"高阶函数","content":"\n# 高阶函数\n\n## 函数柯里化\n\n一遍编程题引发的思考\n\n#### 实现 sum 函数使得下面输出结果一致\n\n```JavaScript\nsum(1,2,3).sumOf()\nsum(2,3)(1).sumOf()\nsum(2)(1)(3).sumOf()\n```\n\n第一反应是[[柯里化函数]]\n\n显然 这一没有 sumof 实现 也完全复用了\n\n## 防抖和节流\n\n强调一下它们的区别：\n\n- 节流是让事件处理函数隔一个指定毫秒再触发\n- 防抖则忽略中间的操作，只响应用户最后一次操作\n\n## 函数拦截器\n\n对废弃 API 进行提示增加\n\n一个小细节，定义`notice = once(console.warn)`，用`notice`输出，这样的话，调用相同的函数只会在控制台显示一遍警告，就避免了输出太多重复的信息。\n\n```JavaScript\nfunction deprecate(fn, oldApi, newApi) {\n  const message = `The ${oldApi} is deprecated.\nPlease use the ${newApi} instead.`;\n  const notice = once(console.warn);\n\n  return function(...args) {\n    notice(message);\n    return fn.apply(this, args);\n  }\n}\n```\n\n## WEB 拦截器\n\n```JavaScript\nfunction intercept(fn, {beforeCall = null, afterCall = null}) {\n  return function (...args) {\n    if(!beforeCall || beforeCall.call(this, args) !== false) {\n      // 如果beforeCall返回false，不执行后续函数\n      const ret = fn.apply(this, args);\n      if(afterCall) return afterCall.call(this, ret);\n      return ret;\n    }\n  };\n}\n```\n\naxios 请求队列拦截器的实现\n\n## 高阶函数的范式\n\n```JavaScript\nfunction HOF0(fn) {\n  return function(...args) {\n    return fn.apply(this, args);\n  }\n}\n```\n\n`HOF0`是高阶函数的**等价范式**，或者说，`HOF0`修饰的函数功能和原函数`fn`的功能完全相同。因为被修饰后的函数就只是采用调用的`this`上下文和参数来调用`fn`，并将结果返回。也就是说，执行它和直接执行`fn`完全没区别。\n\n## compose\n\n**高阶函数可以任意组合**，形成更强大的功能。\n\n另外，像这样`fn1(fn2(fn3(args…)))`嵌套的写法，我们也可以用高阶函数改变成更加友好的形式： 也就是 compose\n\n### redux 版本(同步函数)\n\n```JavaScript\nfunction f1(arg) {\n  console.log(\"f1\", arg);\n  return arg;\n}\nfunction f2(arg) {\n  console.log(\"f2\", arg);\n  return arg;\n}\nfunction f3(arg) {\n  console.log(\"f3\", arg);\n  return arg;\n}\n\nconst res = f1(f2(f3(\"omg\")));\nconsole.log(\"res\", res); //sy-log\n// f3 omg\n// f2 omg\n// f1 omg\n// res omg\n```\n\n优化写法\n\n```JavaScript\nfunction compose(...funcs) {\n  if (!funcs.length) {\n    return (arg) =\u003e arg;\n  }\n  return funcs.reduce((a, b) =\u003e (...args) =\u003e a(b(...args)));\n}\n\ncompose(f1, f2, f3)(\"omg\");\n// f3 omg\n// f2 omg\n// f1 omg\n```\n\n### koa 版本(异步中间件)\n\n例子\n\n```JavaScript\nfunction compose(middlewares){\n     return () = \u003e{\n\n     }\n}\n\nasync function fn1(next) {\n    console.log(\"fn1\");\n    await next();\n    console.log(\"end fn1\");\n}\n\nasync function fn2(next) {\n    console.log(\"fn2\");\n    await delay();\n    await next();\n    console.log(\"end fn2\");\n}\n\nfunction fn3(next) {\n    console.log(\"fn3\");\n}\n\nfunction delay() {\n    return new Promise((reslove, reject) =\u003e {\n        setTimeout(() =\u003e {\n            reslove();\n        }, 2000);\n    });\n}\n\n\nconst middlewares = [fn1, fn2, fn3];\nconst finalFn = compose(middlewares);\nfinalFn();\n```\n\n#### compose 实现\n\n- compose 接受一个 函数数组\n- 返回一个 具有一个 next 函数参数的 函数\n- 用 Promise 包装，\n- 考虑边界条件\n\n```JavaScript\nfunction compose(middlewares){\n     return () = \u003e{\n         dispatch(0)\n     }\n     function  dispatch(i){\n         let fn = middlewares[i]\n         if(!fn) return Promise.resolve()\n         return fn(()=\u003e Promise.resolve(dispatch(i +1 )))\n     }\n\n}\n```\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6":{"title":"高阶组件","content":"\n# 高阶组件\n\n将组件更加颗粒度的细化，\n\nconnect，withRouter\n\nantd3 rc-form 高阶组件实现 form 表单\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%AD%94%E9%AC%BC%E5%87%BA%E6%B2%A1%E7%9A%84%E4%B8%96%E7%95%8C":{"title":"《魔鬼出没的世界》","content":"\n# 《魔鬼出没的世界》\n\n### 不能被观测到的喷火龙\n\n“我的车库里有一条喷火的龙！”他这样声称。  \n“太稀罕了！”他的朋友连忙跑到车库中，但没有看见龙，“龙在哪里？”  \n“哦，”萨根说，“我忘了说明，这是一条隐身的龙。”  \n朋友有些狐疑，不过他建议，可以撒一些粉末在地上，看看龙的爪印是不是会出现。  \n但是萨根又声称，这龙是飘在空中的。  \n“那既然这条龙在喷火，我们用红外线检测仪做一个热扫描？”  \n“也不行。”萨根说，“隐形的火也没有温度。”  \n“要么对这条龙喷漆让它现形？”  \n“这条龙是非物质的，滑不溜手，油漆无处可粘。”  \n反正没有一种物理方法可以检测到这条龙的存在。  \n萨根最后问：“这样一条看不见、摸不着，没有实体的，飘在空中喷着没有热度的火的龙，一条任何仪器都无法探测的龙，和‘根本没有龙’又有什么差别呢？”\n","lastmodified":"2023-09-18T14:54:47.494454246Z","tags":null},"/%E9%BA%A6%E5%85%8B%E6%96%AF%E9%9F%A6":{"title":"麦克斯韦","content":"\n# 麦克斯韦\n\n詹姆斯·克拉克·麦克斯韦（James Clerk Maxwell），出生于英国苏格兰爱丁堡，英国物理学家、数学家。经典电动力学的创始人，统计物理学的奠基人之一。1831 年 6 月 13 日生于英国苏格兰爱丁堡，1879 年 11 月 5 日卒于英国剑桥。  \n1847 年进入爱丁堡大学学习数学和物理，毕业于剑桥大学。他成年时期的大部分时光是在大学里当教授，最后是在剑桥大学任教。1873 年出版的《论电和磁》，也被尊为继牛顿《自然哲学的数学原理》之后的一部最重要的物理学经典。麦克斯韦被普遍认为是对物理学最有影响力的物理学家之一。没有电磁学就没有现代电工学，也就不可能有现代文明。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%BA%A6%E5%8D%A1%E9%94%A1%E4%B8%BB%E4%B9%89":{"title":"麦卡锡主义","content":"\n# 麦卡锡主义\n\n麦卡锡主义是冷战的产物，其实质就是疯狂地反共与排外。在参议员麦卡锡（Joseph McCarthy）的煽风点火下，这股“红色恐惧”之风到达了最高潮。几乎每个人都被怀疑是苏联间谍，或者是阴谋推翻政府的敌对分子。  \n麦卡锡时代是一个疯狂和耻辱的时代，2000 多万人接受了所谓的“忠诚审查”。上至乔治·马歇尔将军，中至查理·卓别林，下至无数平民百姓都受到巨大的冲击。人们神经质地寻找所谓共产主义者，就像中世纪的欧洲疯狂地抓女巫一样。在学界，近百名教授因为“观点”问题离开了岗位，有华裔背景的如钱学森等遭到审查，著名的量子化学大师鲍林被怀疑是美共特务。越来越多的人被传唤去为同事的政治立场做证，这里面芸芸众生像，有如同玻姆一般断然拒绝的，也有些人的举动出乎意料。最著名的可能要算奥本海默一案了，奥本海默（J. Robert Oppenheimer）是曼哈顿计划的领导人，连他都被怀疑对国家“不忠诚”似乎匪夷所思。所有的物理学家都站在他这一边，然而爱德华·泰勒（Edward Teller）让整个物理界几乎不敢相信自己的耳朵。这位匈牙利出生的物理学家（他还是杨振宁的导师）说，虽然他不怎么觉得奥本海默会做出不利于国家的事情来，但是“如果问题是要凭他在 1945 年以来的行为来作出明智的判决，那么我可以说最好也不要肯定他的忠诚”“如果让公共事务掌握在别人手上，我个人会感觉更安全些的”。奥本海默的忠诚虽然最后没有被责难，但他的安全许可证被没收了，绝密材料不再送到他手上。虽然也有少数人（如惠勒）对泰勒表示同情，但整个科学界几乎不曾原谅过这个“叛徒”。\n","lastmodified":"2023-09-18T14:54:47.650455034Z","tags":null},"/%E9%BA%A6%E6%96%AF%E7%BA%B3%E6%95%88%E5%BA%94":{"title":"","content":"","lastmodified":"2023-09-18T14:54:44.094437281Z","tags":null},"/%E9%BB%84%E9%87%91%E5%9C%88%E7%90%86%E8%AE%BA":{"title":"黄金圈理论","content":"\n# 黄金圈理论\n\n由“为什么（Why）”“怎么做 (How)”和“做什么 (What)”这三者所组成的同心圆，Simon Sinek 称之为“黄金圈”（Golden Circle）。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220426141828.png)\n\n出自一个主题叫作《How Greater Leaders Inspire Action》的 TED 视频，中文翻译为《伟大的领导如何激发行动》。\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/%E9%BB%84%E9%87%91%E6%97%B6%E4%BB%A3":{"title":"《 黄金时代 》","content":"\n# 《 黄金时代 》\n\n# 元数据\n\n\u003e [!abstract] 黄金时代\n\u003e - ![ 黄金时代|200](https://weread-1258476243.file.myqcloud.com/weread/cover/95/YueWen_652123/t7_YueWen_652123.jpg)\n\u003e - 书名： 黄金时代\n\u003e - 作者： 王小波\n\u003e - 简介： 《黄金时代》包括中篇小说《黄金时代》、《三十而立》、《似水流年》、《革命时期的爱情》和《我的阴阳两界》等。\n\u003e - 出版时间 2015-08-01 00:00:00\n\u003e - ISBN： 9787508652597\n\u003e - 分类： 文学-经典作品\n\u003e - 出版社： 中信出版社\n\n# 高亮划线\n\n# 读书笔记\n\n# 本书评论\n\n## 书评 No.1\n\n王小波的书真的很棒  \n ^16142247-6YPQkhk85  \n⏱ 2018-04-21 11:44:20\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/%E9%BB%8E%E6%9B%BC":{"title":"黎曼","content":"\n# 黎曼\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/%E9%BB%91%E4%BD%93%E8%BE%90%E5%B0%84%E5%AE%9E%E9%AA%8C":{"title":"黑体辐射实验","content":"\n# 黑体辐射实验\n\n#卡片/术语卡\n\n## 简介\n\n黑体辐射实验和理论不一样。任何物体，只要其温度在绝对零度以上，就向周围发射辐射，这称为温度辐射; 只要其温度在绝对零度以上，也要从外界吸收辐射的能量。处在不同温度和环境下的物体，都以电磁辐射形式发出能量，而黑体是一种完全的温度辐射体，即任何非黑体所发射的辐射通量都小于同温度下的黑体发射的辐射通量；并且，非黑体的辐射能力不仅与温度有关，而且与表面的材料的性质有关，而黑体的辐射能力则仅与温度有关。在黑体辐射中，存在各种波长的电磁波，其能量按波长的分布与黑体的温度有关。\n\n## 例子：\n\n## 弊端：\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/-%E4%B8%AD%E5%9B%BD%E5%89%8D%E6%B2%BF%E4%B8%8D%E5%A6%82%E9%97%AE%E9%97%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E5%90%A7":{"title":"《 中国前沿：不如问问科学家吧 》","content":"\n# 《 中国前沿：不如问问科学家吧 》\n\n## Meatdata\n\n- author：\n- link：[中国前沿：不如问问科学家吧-郝景芳编著-微信读书](https://weread.qq.com/web/reader/79e32d50727991a479eac77kd3d322001ad3d9446802347)\n- tag：\n- date: [[2021-11-26]]\n- Notes:\n\n## 总结\n\n1. [[人工智能]]\n2. 脑机接口\n    - [[脑电波]]\n    - [[脑磁]]\n\n3. 太空探索\n    - 下一步的重大突破还在于超大型的可重复发射的火箭的建成，使火箭成为一个使用的运输工具\n    - 另外太空葬礼等还是挺新奇的，折合人民币十万左右也还可以接受\n4. 基因编辑\n    - 不是单纯的科学问题，而是人类共识的问题\n    - 可遗传基因编辑和不可遗传基因编辑\n5. 粪菌移植\n    - “高大上”的名字是“肠道菌群胶囊”，但是还有一个俗名，江湖人称“粪菌胶囊”\n    - 对症下药的要会直接攻击目标，而肠道菌群更像一个森林系统，相互有作用，会自我调节，单独提炼会没有效果\n6. 机械骨骼\n7. 人机一体\n8. 细胞治疗\n9. [[大脑探秘]]\n10. 混合显示\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n中国前沿：不如问问科学家吧  \n郝景芳编著\n\n◆ 1 脑机接口的第一步——探测脑磁\n\n\u003e 一般来讲，我们在监测大脑信号时，会在头上放接触电极，从头皮采集身体信号。但大脑在运转时，神经上的电流会辐射产生磁场。这个磁场类似于手机无线电信号，直接从空气中传出。我们可以依靠一些特殊手段，接收大脑神经活动时所辐射的电磁波，但它的信号感会很弱。\n\u003e\n\u003e 方法一，利用超导线圈。当闭合线圈中的磁场发生变化时，会产生感应电流。传统的线圈电压能够产生电流，但电流太小，其电子会直接将电流消耗掉，导致探测不到。超导线圈没有电阻，所以能够探测到大脑辐射出来的电磁波。但该技术相对陈旧，探测精度不高，且超导线圈是超低温的，所以很难在日常生活中进行实质性的大规模应用。\n\u003e\n\u003e 方法二，使用光泵磁力仪。光泵磁力仪是一种量子技术，原理是单原子碱金属气体在外磁场下进行拉莫尔进动[插图]。在拉莫尔进动的过程中，原子对激光的吸收会有一个圆偏振的选择吸收特性。我们可以把一团碱金属气体放在大脑旁边，然后用一束激光打过碱金属气体，探测它吸光的激光强。或者更具体地说，测一个圆偏振光吸收的选择特性，就能够探测其相应的拉莫尔进动速度。测出拉莫尔进动速度后，就能计算出磁场。这就是目前最新一代的大脑电磁波探测方式，是非接触、非植入，对身体无害的高精度脑信号探测仪。\n\n◆ 2 脑磁的“孪生兄弟”——脑电波\n\n\u003e 有这样一个比喻，测脑电波信号，如同在体育场外架了一个麦克风，你无法听清里面的声音，但能了解到场馆内欢呼的意义。这属于一种在传输过程中信号质量就已经被混淆的信号。但是磁不一样。人体是不导磁也不阻磁的，人体的磁场是一个常数。我们都知道在材料学中只有很少数的铁磁性材料有磁导性，其他的（如木头、水、空气）都是同样的磁介质常数\n\n◆ 第三章 太空探索\n\n\u003e 回顾人类真实的太空探索历程，向太空前行的每一步背后，并不是人类对生存的未雨绸缪。真正点燃人类探索勇气的，是我们对真理的渴求和对世界的好奇心。\n\n◆ 3 太空探索的平民化之路\n\n\u003e 由于月球的环境很稳定，这些个人物品可以保存上万年或更久，甚至可能永远留在月球上，因此“月球航班”商业服务营销的就是这样一种“永垂不朽”的概念，当你望向月球的时候，结婚誓言永远都在月球上。\n\n◆ 1 如同“上帝之手”的科学技术\n\n\u003e 大家需要意识到一个问题，人体由很多细胞组成，我们能够针对某些细胞进行编辑，但这并不代表我们可以轻而易举地对整个人体进行编辑。因为把蛋白质递送到人体所有的细胞里，是非常困难的事情。\n\n◆ 2 基因编辑人类，一个需要严肃讨论的话题\n\n\u003e 人类优化论”是很危险的命题，是当年希特勒“人种优化”理论的基础，说白了就是“人种论”。这相当于一个人成了造物主，以人的自我意志定义世界的好与坏，定义基因的好与坏，不携带某种基因型的人在他的认知体系里就是劣等人\n\u003e\n\u003e 所谓可遗传基因编辑，即我如果改变的是配子细胞，也就是精子、卵子，或是早期胚胎，那么这个孩子将来的精子或卵子也会发生变化，其下一代也是被基因编辑过的。所以基因编辑改变的不是一个人，包括子子孙孙。\n\u003e\n\u003e 另一类基因变异是不可遗传的。以镰状细胞贫血为例，把自己的造血干细胞取出来，修改好，移植回自己的身体。这种做法目前并没有太大争议\n\n◆ 3 未来生命轨迹，是自然进化还是人为干预？\n\n\u003e 必须一再强调的是，所谓基因编辑的风险、顾虑，更多的是针对可遗传基因编辑。\n\n◆ 第五章 粪菌移植\n\n\u003e 其实早在 1958 年，美国就有一个“粪菌移植”案例。当时美国有一种名叫“假膜性小肠结肠炎”的消化道疾病，死亡率高达 75%。美国科罗拉多大学医学院的一个外科医生对 4 名患者采用抗生素、氢化可的松、益生菌等治疗手段后，患者仍腹泻严重，甚至出现休克。无奈之下，医生最终和患者及家属商议，用患者家属的粪水对患者进行灌肠。结果，其中 3 名患者在几天之内奇迹般地康复出院。这个早期的“粪菌移植”治疗方案，就是通过调整患者肠道中的菌群健康状态来治疗疾病。\n\n◆ 1 肠道菌群不只是肠道的事\n\n\u003e 经过十几年的研究，我们发现全球的人的肠道菌群的总体相似度达到 80%以上。从基因层面来看，这就说明我们肠道里面携带的是不同功能的基因，相似度也很高。不管你来自哪个地区，是什么人种，人类之间的相似度非常高。\n\u003e\n\u003e 从医学角度讲，整个方案叫作“粪菌移植”，是一种组织移植的概念，跟输血一样。输血就是把正常人的红细胞输送到病人的体内，达到治病救人的目的。粪菌移植就是把正常人体内的肠道菌群，移植到病人的体内，达到治病的效果。\n\n◆ 3 肠道菌群和你的生活息息相关\n\n\u003e 事实上人的进化速度慢于科技进步的速度。比如，很多年前大家都吃不饱，到了现在食物供给很充足，反而导致糖尿病这类疾病高发\n\n◆ 1 机械骨骼的“合理化分工”\n\n\u003e 机械上肢是靠什么来操作手指的运动呢？\n\u003e\n\u003e 肌电信号来控制假肢的动作。另外脑电波信号的控制现在也发展得很快。利用肌电信号的话，要经过一段时间的训练，因为肌肉收缩后才会产生电，用这个信号来控制肢体的动作。\n\n◆ 1 替我打架的机器人\n\n\u003e 有两种姿态同步技术可以对机器人进行肢体语言控制。第一种叫作人偶体感控制器，它的使用人群比较广泛，不管是男生、女生，还是大人、小孩都可以操作，比较容易上手。第二种叫作运动体感控制器，会比较复杂一点，需要穿戴在身上，对穿戴者肢体的空间位置进行捕捉，捕捉完之后形成解耦算法[插图]。解耦算法在系统中运算，最后反映到机器人的身体里进行表达。实际上两种系统有同一个目的，就是让人的肢体语言更形象化、更直观一点，在机器人的运动系统上快速表达。\n\n◆ 3 机器人的未来\n\n\u003e 机器人其实只是一个技术集成名词，它是一种技术，像互联网一样。看你用它做在线教育还是社交，是这种问题。\n\n◆ 第八章 细胞治疗\n\n\u003e 这个词的官方释义是，利用患者自体或异体的成体细胞，主要是干细胞，对组织、器官进行修复的治疗方法，广泛用于骨髓移植、晚期恶性疾病等。坦白说，就是拿细胞当药使。\n\n◆ 1 细胞治疗的两大“法宝”\n\n\u003e 我好奇的是，为什么单就这些细胞可以发挥作用？如果是我自己的细胞，为什么它原来在我的身体里不能当药使用，采集后做了改造，再打回去就能当药了？\n\u003e\n\u003e 为什么细胞能当药物使用，其实是因为你体内原有的细胞数量并不够。就如同有些营养素（比如维生素），既然人体自身也可以合成，为什么还需要体外补充呢，是因为合成得不够，细胞治疗也是这个道理。\n\u003e\n\u003e 免疫治疗，这不光是细胞的问题。我前面也提到，癌细胞是一种外源的东西，理论上讲，它一出现就应该被我们的 T 细胞除掉，但是并没有。因为癌细胞非常狡猾，善于伪装。癌细胞会向体细胞显示一种叫 PD-L1[插图]的分子，相当于什么呢？一个坏蛋拿到了“好人卡”，向 T 细胞传递了一个信息——“其实我是一个好人”，然后免疫细胞就被“骗”了，癌细胞就这样蒙混过关了。\n\u003e\n\u003e 谨慎一点肯定是好的，很多人并不从事科研工作，他们不会像科学家一样有足够的时间和精力查阅文献，他们会把我说的话当真。即便我讲话足够字斟句酌，也并不是百分之百正确。很多事情你必须在看到真实的官方数据后，才能够相信。\n\u003e\n\u003e 真正严谨的科学家会说“有多少人使用过，有多少内容是有效数据”，成功是有一定概率的。但在生活里，我们经常会犯一个认知上的错误，容易把个例当成真理，比如“某某用过这个，特别有效，药到病除了”。信服度似乎特别高，然后一些人被“忽悠”着在美容方面交的“智商税”就尤其多了，比如干细胞美容——在面部注入干细胞，令你容光焕发。\n\n◆ 2 那些年为细胞治疗缴的“智商税”\n\n\u003e 从科学的角度来说，如何判断一个东西是否有效？首先是指出它的原理，到底是什么样的机制使它变得切实可行。其次需要有临床试验数据的支撑，反复研究，以及发表被科学界承认的成果。\n\u003e\n\u003e 其实保健品一事没有绝对的判断方法。首先它是无害的，如果有害的话，国家肯定会明令禁止。至于是否真的有效，只能说不好判断。药物的话就简单了，药到病除，就是它的效果。关于药物使用，每个国家都会基于非常严格的临床实验数据，才允许其投放市场进行销售。\n\u003e\n\u003e 曾经有这样一个实验，两拨患者中一拨人服用药物，另一拨人吃糖水或是营养素之类的东西，但他们都以为自己吃的是实验用药。结果发现，喝糖水也有一定的正向作用，甚至比不吃药的人好得多，这就是典型的安慰剂效应。\n\n◆ 第九章 大脑探秘\n\n\u003e 首先，从器官的层面来看，大脑是通过大脑皮层、间脑、小脑、脑干等部位的分工协调来运作并发挥控制功能。比如，脑干负责控制呼吸、血压、心跳等基本生理活动；而小脑就控制平衡；大脑皮层由额叶、顶叶、颞叶和枕叶四部分构成，主要具有控制性格、学习、记忆等高级心理功能。\n\n◆ 1 记忆与学习密不可分的本质联系\n\n\u003e 什么是学习？毫无疑问，学习有很多种，经典的分类方式有联合型学习和非联合型学习。巴甫洛夫的狗这一实验把铃铛的声音和喂食联系在一起，就是一个联合型学习的例子；斯金纳的鸽子也是类似的，就是让鸽子意识到自己在箱子里做出什么样的动作能够获得食物，相当于把自己的动作和某种结果联系在一起。那所谓的非联合型学习呢，比如习惯等。古话说，“入鲍鱼之肆，久而不知其臭”，这句话所描述的对臭味的习惯，也是一种学习。还有一种特别经典的分类——社会型学习，即人的学习有所谓的模仿成分，看到别人在干什么，就跟着学。所以，学习的方式有很多种，其本质就是行为受到了经验的影响。我们可能本来会有某种形式的行为输出，但是因为过往经验的影响，在面对同样刺激的时候，我们的行为输出方式发生了变化，这也可以被认为是一种学习的过程。综上，所谓记忆，就是学习过程发生之后的结果，如果能长久存在，我们就认为它是一种记忆。\n\u003e\n\u003e 一般我们会以阶段把记忆分成两类，一个叫短期记忆，一个叫长期记忆。很多人都知道这一组概念，但是二者其实可以再细分。换言之，短期记忆和长期记忆是最重要的。\n\u003e\n\u003e 我们可以认为，一个经验如果想影响我们的行为，那么有三个阶段。首先，要出现学习的过程，即大脑意识到这个经验要以某种方式改变我们的行为。其次，改变发生之后，它会在我们的大脑中的一个很短的时间窗口内持续存在，那我们认为这是短期记忆。最后，如果它能够被反复提及，让大脑认为其是具有长久价值的，从而得以保留，才会形成所谓的长期记忆。\n\n◆ 2 记住还是遗忘，都是大脑在“暗中作祟”\n\n\u003e 怎么有点像 V8 的垃圾回收机制  \n\u003e 被动的意思是，我们现在认为当一段记忆还只是短期记忆的时候，它需要被反复唤醒，才能继续存在于短期记忆的存储区域\n\u003e\n\u003e 所以，我们认为这个阶段的遗忘是被动发生的。也就是说，只要你没有强化这一信息，它就逐渐消失了。咱们再回到巴甫洛夫的狗这个例子中，一旦狗主人在喂狗食物时不再摇铃，那么在狗的大脑中，铃铛与食物之间的联系会慢慢变弱，甚至消失。那可想而知，这个机制是具有保护性的，因为如果时过境迁，你却还记得原来的处理方式，这其实是很危险的一件事情\n\u003e\n\u003e 有一个普遍的误解是，大家认为长期记忆存在于海马区，但现在基本可以肯定的是，长期记忆并不存在于海马区。\n\n◆ 3 近未来人类大脑的学习进化、记忆操控\n\n\u003e 人的小数据学习机制是怎么产生的，我们至今并不完全知道，可以猜想的是，人脑一定有一个机制，能够摄取比较丰富的感觉输入，比如人脑在猫这个物种中提取到一些关键性信息——都有毛、尖耳朵、长尾巴，叫声是喵喵喵，然后人脑认为这样的就是“猫”。但是大脑到底是怎么做这件事儿的，其实我们并不知道；为什么大脑关注的是这些特征，而不是猫的颜色（每只猫的颜色可能都不一样）。为什么大脑关注的不是猫所处的位置？为什么不是猫背后那块地毯的颜色？其实到今天我们也并不是特别清楚。这可能也是机器学习未来想模仿人脑的一个比较大的障碍，因为我们现在并不知道在极其有限的数据集存在的时候，人脑到底是怎么如此高效学习的。\n\u003e\n\u003e 要想增强学习的效率，还有一个方法，就是提升你对一个东西的注意力，让你的注意力更集中、更持久、更强。\n\u003e\n\u003e 多动症本身就是一种注意力缺陷，也叫注意力缺失症\n\n◆ 1 混合现实，一项“难辨真假”的技术\n\n\u003e 虚拟现实是体验世界，混合现实则是融入世界\n\u003e\n\u003e 混合现实与虚拟现实最大的不同在于，前者是在现实世界中叠加一些虚拟的物品，从而呈现一种全新的视觉体验。\n\u003e\n\u003e 想象一下，当你戴上一副眼镜，手一挥，一个虚拟的手机屏幕出现在空中。同理，如果你要使用电脑，在空中一点，就会出现虚拟的屏幕、键盘，然后就可以直接办公。这在未来是真正的一个开放式创新应用。换句话说，一切电子信息的获取来源，都可以选择，它不占用你的视野，戴上它以后你仍然可以去户外活动。但虚拟现实做不到这点，戴上虚拟现实设备以后，你只能在密闭空间里使用，去户外会受限制。\n\u003e\n\u003e 我们日常生活中使用的眼镜，最大的面积就是镜片部分，我们一直在研究一种新技术，让镜片不仅有显示功能，还能计算，这是一个新的技术方向，叫光计算。但镜片的主要材质是玻璃，我们的所有计算都发生在 CPU 上，也就是硅（玻璃的主要成分是二氧化硅），那要如何完成计算呢？需要通过光的方式计算。现在已经有人在研究光计算跟人工智能结合的技术了，未来镜片不仅具备显示功能，也是一个 CPU。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E4%BA%BA%E7%94%9F%E7%94%B1%E6%88%91":{"title":"《 人生由我 》","content":"\n# 《 人生由我 》\n\n#人物传记\n\n## Meatdata\n\n- author： [加]梅耶·马斯克\n- link：[人生由我-梅耶·马斯克-微信读书](https://weread.qq.com/web/reader/f3e32eb071e74637f3e8311)\n- tag：\n- date: [[2021-11-25]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E4%BB%8E%E4%B8%80%E5%88%B0%E6%97%A0%E7%A9%B7%E5%A4%A7":{"title":"《 从一到无穷大 》","content":"\n# 《 从一到无穷大 》\n\n## Meatdata\n\n- author：[[乔治·伽莫夫]]\n- link：[从一到无穷大-乔治·伽莫夫-微信读书](https://weread.qq.com/web/reader/d8732de071913d87d8751c1)\n- tag：\n- date: [[2022-02-14]]\n- Notes:\n\n## 总结\n\n-买的纸质书不是这个版本 好像还是有点差异的，不过还是很棒的一本书 2022.2.9-2022.2.14 进行了二刷了一遍，将评分从 4 星改到了 5 星确实好看，可能也是之前的纸质书翻译没这本好\n\n## 闪念\n\n- 还记得之前说的 读一本书 想要得到的几个问题的答案吗？读的多动手的实在是少。之后的阅读强制自己问自己几个问题，可以遵循[[5W1H]]原则，并输出成卡片,这样既可以逼迫自己分析角度全面，又可以输出更多的卡片\n- 之前一直看到别人说，选好的译本很重要，从这本中就可以看出，但他们说暴永宁的译本是最好的一个版本，有机会再三刷一次。\n- 这次的读书卡片没有输出，需要好好反思下\n\n## 常青笔记\n\n## 重点摘要\n\n-从一到无穷大  \n乔治·伽莫夫\n\n◆ 第二章 自然数字和人造数字\n\n\u003e 21 年，皮埃尔·费马（Pierre Fermat）在巴黎买了一本丢番图著作《算术》的法语新译本，其中就有关于毕达哥拉斯三角形的内容。读到这里的时候，费马在页边写了一条简短的笔记，他提出，方程 x2+y2=z2 有无穷多组整数解，但对于 xn+yn=zn 这样的方程，如果 n 大于 2，那么该方程无解。“我有一个绝妙的办法可以证明这一点，”费马继续写道，“但这一页的页边太窄了，实在写不下。”\n\u003e\n\u003e 。1770 年，著名德国数学家莱昂哈德·欧拉出版了一本代数学著作，虚数在这本书中得到了广泛的应用，但欧拉在书中留下了这样的附言：“诸如，之类的表达都是不可能的数，或称虚数。因为它们代表负数的平方根，对于这样的数，也许我们只能说，它们不是零，但并不比零大，也不比零小，所以它们完全是虚构出来的数，或者说不可能的数。”\n\n◆ 第三章 宇宙的奇异特性\n\n\u003e 欧拉的公式还证明了一个有趣的推论：正多面体只可能有五种，也就是图 14 中的那五个。\n\u003e\n\u003e 没有对称平面的物品可以归为两类——左手性的和右手性的。\n\n◆ 第五章 空间和时间的相对性\n\n\u003e 何物体的运动速度都不可能达到或者超过光速。这条基本公理的物理基础来自一个事实，无数实验直接证明了这一点：随着物体的运动速度趋近光速，它的惯性质量（这个值度量的是阻碍物体进一步加速的机械力）会趋近于无穷大。\n\u003e\n\u003e 从这个角度出发，爱因斯坦得出了一个重要的结论：引力现象只不过是四维时空世界的弯曲产生的效应。事实上，现在我们或许可以抛弃“太阳直接对行星产生引力，使之绕太阳作圆周运动”这个不准确的旧说法，更准确的描述应该是：太阳的质量弯曲了周围的时空，行星的世界线看起来之所以是图 30 中的样子，仅仅是因为，那个弯曲的空间中的测地线就是这样的曲线。\n\n◆ 第六章 下降的阶梯\n\n\u003e 将这样的理论推而广之，他们进一步解释说，铁、铜、金的性质之所以各不相同，是因为土原子和火原子在这些金属中的占比不一样。亮闪闪的黄金包含的火原子肯定比黑乎乎、暗沉沉的铁块多，这不是明摆着的事儿吗？既然如此，为什么不给铁加一点儿火，或者最好给铜加点儿火，把它们变成珍贵的金子呢？正是基于这样的逻辑，中世纪那些讲求实际的炼金术士才会在烟熏火燎的炉灶旁耗费无数心力，试图利用廉价的金属炼制出“人造黄金”。\n\u003e\n\u003e 不过，你可别以为给原子拍照有多简单，要拍摄这么小的物体，你必须考虑到，照射在物体上的光线波长必须小于拍摄对象的尺寸，否则照片肯定会糊成一片，就像波斯细密画绝不能用油漆刷来画！成天跟微生物打交道的生物学家深知其中的难处，因为细菌的尺寸（约 0.0001 厘米）正好跟可见光的波长差不多。为了提高照片的清晰度，他们只能用紫外线拍摄显微照片，因为这种光的波长比可见光短，所以拍摄效果更好。但分子的尺寸和晶格中分子之间的距离都太小了（0.00000001 厘米），别说可见光，就连紫外线都达不到要求。要看清单个分子，我们只能借助波长只有可见光几千分之一的射线——换句话说，我们必须借助 X 射线。不过到了这里，我们又遇到了一个看似无法克服的难题：在实际操作中，X 射线能够畅通无阻地穿透任何物质，不会发生折射，所以透镜和显微镜都无法在 X 射线下工作。当然，从医学角度来说，这种强穿透力、不折射的特性非常有用，如果 X 射线在穿过人体时发生了折射，那么最后我们得到的 X 光片就会糊成一片。但这样的特性似乎彻底扼杀了我们用 X 射线拍摄显微照片的可能性！\n\u003e\n\u003e 但是以不同原子的几何形状为基础解释其化学和物理特性的努力全都收效甚微，直到人们认识到，原子并不是几何形状各不相同的基本粒子，恰恰相反，它是由大量独立运动部件组成的相当复杂的装置，我们才真正迈出了理解原子特性的第一步。\n\u003e\n\u003e 事实上，汤姆孙发现，单个电子的质量只有氢原子质量的 1/1840，这意味着原子质量主要来自带正电的组件\n\u003e\n\u003e 原子和太阳系不仅结构相似，还有其他很多共同点：原子核的质量相当于原子总质量的 99.97%，而太阳系 99.87%的质量都集中在太阳里；围绕原子核运行的电子之间的距离相当于电子直径的几千倍，太阳系内行星间的距离与行星直径的比值差不多也是这个数。不过，二者最重要的相似之处在于，原子核和电子之间的电磁力与距离的平方成反比，太阳和行星之间的引力也遵循同样的数学规律。所以电子沿圆形和椭圆形轨道绕着原子核运动，就像太阳系里的行星和彗星一样。\n\u003e\n\u003e 由于原子整体呈电中性，绕核运动的电子数量必然等于原子核携带的正电荷数量，根据 α 粒子因原子核的排斥而产生的偏移散射，我们又能直接估算出原子核携带的正电荷数量。\n\u003e\n\u003e 氦、氩、氖、氙等电子层完整的原子既不需要夺取也不必付出多余的电子，它们更喜欢自己跟自己玩，所以这些元素（所谓的“稀有气体”）化学性质很不活泼。\n\u003e\n\u003e 金属和其他材料很不一样，因为金属原子内部的外层电子与原子核的结合十分松散，所以常常会有一两个电子挣脱原子核的束缚，成为自由电子。这样一来，金属材料内就有大量漫无目的游荡的自由电子，就像一群无家可归的流浪汉。如果给金属丝通电，这些自由电子会顺着电压的方向狂奔，形成我们所说的电流。\n\u003e\n\u003e 金属之所以拥有优秀的导热性能，也是因为自由电子的存在——但这部分内容我们留到后面的章节再讲。\n\u003e\n\u003e 那不是永动机了 原子结构非常稳定，原子内部的电子高高兴兴、不知疲倦地绕着中央的原子核绕圈，绝不损失任何能量，更没有坠落的迹象！\n\u003e\n\u003e 事实上，我们熟悉的力学定律和概念都是基于已有的观察经验建立起来的，而这些经验都来自与人类自身尺寸相仿的物体。后来我们开始运用这些规律解释另一些大得多的物体的运动，例如行星和恒星，结果获得了成功，所以我们才能极为准确地计算前后几百万年的各种天文现象。因此，我们毫不怀疑，这些熟悉的力学定律确实可以向外推广，解释大型天体的运动。尽管经典力学定律的确能解释巨型天体、炮弹、钟摆和玩具陀螺的运动，但电子的大小和质量只相当于最小的力学设备的亿万分之一。我们凭什么相信，同样的定律就一定适用于它呢？\n\u003e\n\u003e 当然，我们没有理由预先假设经典力学定律就一定无法解释原子内部细微部件的运动；但是从另一方面来说，如果真的遭遇了这样的失败，我们也不必过于惊讶。\n\u003e\n\u003e 当平常遇到事的时候也是如此，不去指望一条经验能适用所有情况，找出特定条件的范围。当然，我们没有理由预先假设经典力学定律就一定无法解释原子内部细微部件的运动；但是从另一方面来说，如果真的遭遇了这样的失败，我们也不必过于惊讶。\n\u003e\n\u003e 经典力学的基本概念包括粒子运动的轨道和粒子沿轨道运动的速度。在任意给定时刻，运动的物质粒子必然占据空间中一个确定的点，物质粒子在不同时刻占据的点串联起来，就形成了它的运动轨道，这句话通常被视为不言自明的真理，它也是我们描述物体运动的基础。如果知道特定物体在两个不同时刻占据的位置之间的距离，再除以这两个时刻的时间间隔，就能算出该物体的运动速度。位置和速度，这两个概念奠定了整个经典力学的根基。直到不久前，恐怕还没有哪位科学家想到过，描述运动现象的这两个最基本的概念竟然会有瑕疵，要知道，从哲学的角度来说，这两个概念完全是先验的。\n\u003e\n\u003e 但是物理相互作用下限的存在彻底改变了讨论的前提，现在我们不能再随心所欲地削弱测量设备带来的干扰。这样一来，观察对运动的干扰变成了运动中不可或缺的一部分，物体运动的轨道也不再是数学意义上无限细的一条线，我们不得不将它视为空间中有一定厚度的弥散的条带。经典物理中数学意义上的清晰轨道变成了新力学里弥散的宽条。\n\u003e\n\u003e 为了应对量子力学中位置、速度、能量等参数的不确定性，我们需要一套取代经典力学方法的数学体系。\n\n◆ 第七章 现代炼金术\n\n\u003e 大部分元素都是由化学性质完全相同但原子量有所差异的不同原子组成的混合物。这些相似的原子在元素周期表中占据的位置也完全相同，所以它们被命名为同位素。\n\u003e\n\u003e 普劳特的假说应该表述为：不同种类的原子核由数量不等的基本氢原子核组成，氢原子核在物质结构中拥有如此特殊的地位，所以我们将之命名为“质子”。\n\u003e\n\u003e 这里必须说的是，我们不应将质子和中子视作两种完全不同的粒子，其实它们更像是电性有所差异的同一种基本粒子，我们称之为“核子”。事实上，我们已经知道，质子可以失去一个正电荷，从而变成中子，得到正电荷的中子又会变成质子。\n\u003e\n\u003e 在我们或许可以说，尽管已知的物质千姿百态，种类多不胜数，但追根溯源，它们其实都是两种基本粒子的不同组合：1.核子，物质的基本粒子，它可能是电中性的，也可能携带一个正电荷；2.电子，自由负电荷\n\u003e\n\u003e 鉴于核能的存在，我们的处境（或者更确切地说，不久前我们的处境）就像生活在零下温度环境中的因纽特人。他们周围唯一的固体是冰，唯一的液体是酒精。因纽特人从来不知道火为何物，因为摩擦冰块永远都起不了火；在他们心目中，酒精也不过是令人愉悦的饮料而已，因为他们无法将酒精加热到燃点温度以上。\n\u003e\n\u003e 不过千万别忘了，大部分化学反应要求的反应条件最多不过几百度，而核反应的起始温度可能高达几百万度！正是因为核反应的起始条件如此苛刻，我们才能放宽心过日子，整个宇宙也不会在一场惊天动地的爆炸中变成一大块银子。\n\u003e\n\u003e 50 年前（1896 年），贝可勒尔（Becquerel）发现了放射性的存在，我们由此第一次看到了分裂原子的可能性。事实上，人们发现，靠近元素周期表尽头的元素（例如铀和钍）释放的高穿透性射线（类似普通 X 射线）来自原子缓慢的自发衰变。科学家深入研究了这些新发现的现象，很快得出结论：重原子核会自发衰变，分裂成两个相差悬殊的部件。（1）其中一个部件非常非常小，人们称之为 α 粒子，其实它就是氦原子核；（2）失去 α 粒子的原子核残骸成了新形成的子元素原子核。初始铀原子核分裂释放 α 粒子，残余的子元素原子核被称为铀 XI；后者经历了内部电荷调整过程以后会释放 2 个自由负电荷（普通电子），变成铀同位素的原子核，它比初始的铀原子核轻 4 个单位。接下来，释放 α 粒子的裂变过程和释放电荷的调整过程循环重复，最终我们得到了铅，这种元素的原子核看起来十分稳定，不会继续衰变。\n\u003e\n\u003e 既然所有重于银的原子核都不稳定，那么自发衰变的为什么只有铀、镭、钍这几种最重的元素？答案是这样的：虽然从理论上说，重于银的所有元素都应该被视为放射性元素，而且它们的确会缓慢衰变成更轻的元素；但在大多数情况下，这种自发衰变的速度极慢，我们根本不会注意到它的存在。因此，我们熟悉的碘、金、汞、铅等元素可能要过好几百年才有一两个原子发生衰变，这样的速度实在太慢，哪怕是最灵敏的物理设备也无法探测到它的存在。只有那些最重的元素才有足够强的自发衰变趋势，因此它们才会表现出明显的放射性。\n\u003e\n\u003e 如果能够设法用中子轰击靶标原子核产生中子，而且每次裂变产生的子代中子数量大于初始中子，那么这些粒子就会像兔子（见第九章第 2 节，图 97）或被感染组织内的细菌一样繁殖。一个中子在极短的时间内就能产生数目可观的后代，足以轰击一大块靶标材料的每一个原子核。\n\u003e\n\u003e 正如我们之前看到的，越重的原子核裂变产生的能量越多，那么元素周期表中位置越靠后的原子核裂变碎片产生的中子肯定也越多。这样一来，金原子核裂变（我们还没有实现这个过程，因为它需要的初始能量太高）碎片释放的中子平均数量肯定比 1 小得多，铀核裂变碎片释放中子的平均数约等于 1（每次裂变大约释放 2 个中子），对于那些更重的元素（例如钚）来说，平均每块碎片释放的中子数量可能大于 1。\n\u003e\n\u003e 对分支链式反应的必要条件进行深入的理论和实际研究之后，科学家得出结论：在自然界所有的天然原子核中，只有一种原子核有可能发生这样的反应，它就是著名的轻同位素铀，铀 235，它是唯一一种天然的可裂变物质。\n\u003e\n\u003e 但是自然界中没有纯净的铀 235，它总是以极低的密度掺杂在不可裂变的重同位素铀 238 里（天然铀中铀 235 的占比通常只有 0.7%，其余 99.3%都是铀 238）。所以天然铀很难产生链式反应，就像湿木头很难点燃。事实上，正是因为不活跃同位素的稀释作用，极易裂变的铀 235 才能在自然界中留存下来，不然的话，它们早就在快速链式反应中消耗光了。因此，要利用铀 235 蕴含的能量，我们要么先将它从更重的铀 238 中分离出来，要么想个办法抵消铀 238 的稀释作用，而不必真的将它剔除出去。实际上，在人类释放原子能的过程中，这两条路都有人走过，而且他们都获得了成功。\n\u003e\n\u003e 征服了铀之类重元素核裂变释放能量的难题以后，物理学家开始琢磨另一个相反的过程，核聚变。核聚变是指两个轻元素的原子核融合形成一个更重的原子核，同时释放出大量能量的过程。正如我们将在第十一章中看到的，太阳的能量就来自这样的聚变过程，普通的氢原子核在太阳内部发生剧烈的热碰撞，融合生成更重的氦原子核。要复制这种所谓的热核反应，使之造福于人类，最理想的聚变原材料是重氢，或者说氘，它少量存在于普通的水里。氘原子核（氘核）由 1 个质子和 1 个中子组成。两个氘核碰撞时会发生如下两种反应之一：2 氘核 → 氦-3+1 个中子；2 氘核 → 氢-3+1 个质子\n\n◆ 第八章 无序的规律\n\n\u003e 毫无疑问，这说明布朗运动实际上是物质看不见的热运动造成的结果，而我们通常所说的温度其实不过是度量分子热运动剧烈程度的一种标准。人们研究了布朗运动和温度之间的关系，结果发现，当温度达到 −273℃（即 −459℉）时，物质分子会完全停止热运动，所有分子归于静寂。显然，这就是宇宙中的温度下限，我们称之为“绝对零度”\n\u003e\n\u003e 高温下剧烈的热碰撞不仅会将分子撕裂成原子，还会剥夺原子的外层电子。如果温度升高到几十万甚至几百万度，这种热电离过程就会变得越来越明显。这样极端的高温超过了我们能在实验室里达到的上限，但在恒星尤其是太阳内部却很常见。就连原子也无法在这样的酷热环境中幸存，它的所有外层电子都会被剥夺，物质最终会变成赤裸的原子核与自由电子组成的混合物，电子在空间中高速运动，以极其强大的力量互相碰撞。不过，尽管原子已经残缺不全，但物质仍保留了最基本的化学性质，因为它的原子核仍原封未动。如果温度有所下降，原子核将重新捕获电子，再次形成完整的原子。\n\u003e\n\u003e 由于金属外层存在表面张力，所以这些电子无法离开，但在金属材料内部，它们的运动几乎完全是自由的。如果给金属丝施加一个电压，这些自由电子将顺着电压的方向运动，产生电流现象。从另一方面来说，非金属通常是良好的绝缘体，因为它们的所有电子都被束缚在原子内部，无法自由运动。\n\u003e\n\u003e 两个事件发生的概率。我们可以从数学上证明（见第二章），正弦曲线下方的面积正好等于 1；由于矩形的总面积为 ，我们发现，火柴与边界线（火柴长度等于条纹宽度的情况下）相交的概率是： 。在这个案例中，π 竟然出人意料地冒了出来，18 世纪的科学家布丰伯爵（Count Buffon）首次观察到了这个有趣的现象，所以“火柴与旗帜”问题又叫布丰问题。勤勉的意大利数学家拉兹瑞尼（Lazzerini）真的做了这个实验，他扔了 3408 次火柴，结果观察到，火柴与边界线相交的情况一共出现了 2169 次。将这个结果代入布丰方程，那么，精确到了小数点后第七位！\n\u003e\n\u003e 房间中空气分布的例子告诉我们，分子各种分布状态出现的概率常常是一些很不方便的极小的数字（比如说，所有空气集中在半个房间中的概率是），所以我们一般用对数来指代它们。这个物理量叫作熵，在所有与物质不规律热运动有关的问题中，熵是一个非常重要的参数。刚才我们描述物理过程中概率变化的那句话可以重新表述为：物理系统中任何自发的过程必然朝着熵增的方向发展，直至最后达到熵最大的平衡态。这就是著名的熵增定律，又叫热力学第二定律（第一定律是能量守恒定律），你已经看到了，这条定律其实并不可怕。\n\n◆ 第九章 生命之谜\n\n\u003e 活细胞独特的基本性质包括下面几种能力：1.从周围介质中摄取自己需要的养料；2.将这些养料转化为生长发育所需的物质；3.活细胞的几何尺寸增长到一定程度以后会分成两个相似的细胞，其中每个细胞都跟自己原来的尺寸差不多，而且可以生长发育。当然，独立细胞组成的更复杂的生命体也普遍拥有这三种能力：“进食”“发育”和“繁殖”。\n\u003e\n\u003e 但基因到底是什么？或许基因也是一种复杂的“动物”，我们可以继续将它拆分成更小的生物单元？这个问题的答案非常清晰：不行。基因的确是最小的生物单元。我们不但确信基因拥有生命区别于非生命的所有特征，还可以很有把握地说，它和非生命复杂分子（例如蛋白质分子）的关系也十分密切，这些分子完全遵循我们熟悉的普通化学定律。\n\u003e\n\u003e 和其他化学反应一样，它遵循基本的化学动力学定律：温度每升高 10℃，化学反应的速率大约就会提高一倍。\n\u003e\n\u003e 事实上，如果完全采用化学手段来研究病毒材料，你很容易发现，病毒也应该被视为一种结构精妙的化合物。\n\n◆ 第十章 不断扩展的地平线\n\n\u003e 事实上，要观察到月球相对于遥远恒星背景的视差，光学基线——也就是双眼之间的距离——至少应该达到几百英里的长度。当然，我们不必真的制造一台能将你的双眼拉开这么远的装置，比如说左眼在华盛顿，右眼在纽约，只需要同时从这两座城市拍摄星空背景上的月亮就行。把这两张照片放到立体镜里，你就能看到月亮悬挂在星空中。通过测量同一时刻在地球上不同地点拍摄的月球与星空的照片，天文学家发现，如果从地球表面的两个对跖点观察，月球的视差距离是 1°24′5″。由此计算可得，地球到月亮的距离相当于地球直径的 30.14 倍，也就是 384,403 千米，或者说 238,857 英里。\n\u003e\n\u003e 既然我们可以利用地球本身的尺寸测量地球公转轨道的大小，那又为什么不能利用公转轨道的尺寸来测量恒星的距离呢？换句话说，从地球轨道的两端观察，我们或许有可能看到至少部分恒星的相对位移。当然，这意味着我们需要等待半年才能完成两次观察，但这又有何不可呢？\n\u003e\n\u003e 但事实上，银河并未分岔，你之所以会产生这样的错觉，只是因为太空中有一大团黑暗的星际尘埃和气体，它正好挡住了银心。银河中间的这片暗区与“河道”两侧漆黑的夜空不太一样，后者来自空旷宇宙的漆黑背景，而前者是因为不透明的暗云遮挡。中央暗区中寥落的几颗恒星实际上位于云团前方，也就是我们和暗云之间（图 112）。\n\u003e\n\u003e 虽然我们的太阳控制着太阳系内的所有行星，但银心并不是一颗主宰本星系所有天体的超级恒星。对其他星系核心区域的研究（稍后我们再讨论这方面的内容）表明，星系中心依然由无数恒星组成，唯一的区别在于，这里的恒星密度远大于星系外围（也就是我们的太阳所在的区域）。\n\u003e\n\u003e 太阳绕着银心转一整圈大约需要 2 亿年。当然，这是一段漫长的时间，不过别忘了，我们的太阳系已经 50 亿岁了，也就是说，它已经带着整个家族的所有行星绕着银心转了差不多 20 圈。参照地球年的定义，我们可以将太阳的公转周期定义为“太阳年”，以这个标准来衡量，我们的宇宙只有 20 岁。\n\u003e\n\u003e 夜空中的恒星多不胜数，其中大多数恒星只会默默发光，但某些恒星的亮度会按照一定的规律变化，它们从明到暗，然后由暗复明，如此不断循环。这些巨型天体的脉动像心跳一样富有节律，它们的亮度也会随脉动发生周期性的变化。个头越大的恒星脉动周期越长，就像钟摆越长就摆得越慢。特别小的造父变星（以恒星的标准而言）只需几个小时就能完成一个周期，而那些巨无霸的脉动周期可能长达数年。越大的恒星当然就越亮，所以造父变星的脉动周期和平均亮度之间存在明显的联系。有的造父变星离我们很近，所以我们可以直接测量它们的距离，进而推算它们的实际亮度；借助这座桥梁，我们可以算出这种类型的恒星脉动周期和亮度之间的一般关系。\n\n◆ 第十一章 创世年代\n\n\u003e 这个假设基于所谓的“多普勒效应”：如果光源正在靠近我们，那么光的颜色会偏向光谱的紫端；反过来说，正在远离我们的光线看起来偏红。  \n[[多普勒效应]]\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0":{"title":"《 刻意练习 》","content":"\n# 《 刻意练习 》\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2021-11-22]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n人的学习受到情境的制约或促进。你要学习的东西将实际应用在什么情境中，那么你就应该在什么样的情境中学习这些东西\n\n学习不再是挖掘某人潜力的方式，而是发展这种潜力的方式。我们可以创造自己的潜力。\n\n有目的的练习\n\n**一旦某个人的表现达到了“可接受”的水平，并且可以做到自动化，那么，再多“练习”几年，也不会有什么进步。**\n\n定义明确的具体目标，可以有效地用于引导你的练习。\n\n不论你在努力做什么事情，都需要反馈来准确辨别你在哪些方面还有不足，以及怎么会存在这些不足。\n\n遇到瓶颈？ = \u003e 试着做不同的事情，而非更难的事情\n\n**有目的的练习：走出你的舒适区，但要以专注的方式制订明确的目标，为达到那些目标制订一个计划，并且想出监测你的进步的方法。还要想办法保持你的动机**\n\n大脑和肌肉一样会进行调整 。大脑对于处在舒适区之外却离得并不太远的“甜蜜点”上的挑战，改变最为迅速\n\n心理表征是一种与我们大脑正在思考的某个物体、某个观点、某些信息或者其他任何事物相对应的心理结构，或具体或抽象\n\n一个简单的例子是视觉形象。例如，一提到蒙娜丽莎，很多人马上便会在脑海中“看到”那幅著名油画的形象；那个形象就是蒙娜丽莎在他们脑海中的心理表征。\n\n### 如何写一本书\n\n提出问题：\n\n1. 我们希望读者从我们的专业知识中学到些什么？\n2. 什么概念和观点是重要的，需要介绍？\n3. 读者读完本书后，对于训练潜力的看法，会怎样改变？\n4. 我们需要阐述哪些一般的主题？\n5. 显然，得解释刻意练习是什么。怎么来解释？\n\n技能与心理表征之间的关系是一个良性循环：你的技能越娴熟，创建的心理表征就越好；而心理表征越好，就越能有效地练习，以磨炼技能。\n\n训练的细节\n\n练习时间\n\n刻意练习与其他类型的有目的的练习在两个重要的方面上存在着差别。**首先，它需要一个已经得到合理发展的行业或领域，其次，需要一位能够布置练习作业的导师。**\n\n刻意练习的特点\n\n- 刻意练习发展的技能，是其他人已经想出怎样提高的技能，也是已经拥有一整套行之有效的训练方法的技能。训练的方案应当由导师或教练来设计和监管，他们既熟悉杰出人物的能力，也熟悉怎么样才能最好地提高那种能力。\n- 刻意练习发生在人们的舒适区之外，而且要求学生持续不断地尝试那些刚好超出他当前能力范围的事物。因此，它需要人们付出近乎最大限度的努力。一般来讲，这并不令人心情愉快。\n- 刻意练习包含得到良好定义的特定目标，通常还包括目标表现的某些方面；它并非指向某些模糊的总体改进。一旦设定了总体目标，导师或教练将制订一个计划，以便实现一系列微小的改变，最后将这些改变累积起来，构成之前期望的更大的变化。改进目标表现的某些方面，使得从业者能够看到他的表现已经通过练习得到了提高。\n- 刻意练习是有意而为的，也就是说，它需要人们完全的关注和有意识的行动。简单地遵照导师或教练的指示去做，还不够。学生必须紧跟他的练习的特定目标，以便能做出适当的调整，控制练习。\n- 刻意练习包含反馈，以及为应对那些反馈而进行调整的努力。在练习过程的早期，大量的反馈来自导师或教练，他们将监测学生的进步、指出存在的问题，并且提供解决这些问题的方法。随着时间的推移，学生必须学会自己监测自己、自己发现错误，并做出相应调整。这种自我监测，需要高效的心理表征。\n- 刻意练习既产生有效的心理表征，又依靠有效的心理表征。提高水平与改进心理表征是相辅相成的，两者不可偏废；随着人们水平的提升，表征也变得更加详尽和有效，反过来使得人们可能实现更大程度的改进。心理表征使人们能监测在练习中和实际的工作中做得怎么样。它们表明了做某件事的正确方法，并使得人们注意到什么时候做得不对，以及怎样来纠正。\n- 刻意练习通过着重关注过去获取的技能的某些特定方面，致力于有针对性地提高那些方面，并且几乎总是包括构建或修改那些过去已经获取的技能；随着时间的推移，这种逐步的改进最终将造就卓越的表现。由于新技能的学习是建立在现有技能基础上的，因此，导师会为初学者提供正确的基本技能，使学生后来能在更高层面上重新学习那些基本的技能。\n\n寻找专家，发现指标\n\n**不论什么时候，只要有可能，最佳的方法几乎总是找一位优秀的教练或导师**\n\n让刻意练习成为工作的一部分\n\n拒绝三种错误思想\n\n- 认为某人的能力通常受到基因特征的限制。\n- 认为，如果你足够长时间地做某件事情，一定会更擅长。\n- 认为，要想提高，只需要努力\n\n训练计划  \n王牌飞行员训练计划 =\u003e 模拟实战训练，并且拥有反馈，且不会被击落\n\n研究了 课程、行业大会和其他会议、讲座、座谈会，以及参加医疗会诊和许多其他的会议，其目的是增长医生的知识并精进他们的医术\n\n效率最低的是说教式的干预（缺少反馈），互动式的干预可以提高医生的医术，改善病人的治疗，但总体进步仍然不大\n\n在生活中刻意练习\n\n导师可以做的最重要的事情是帮你创建心理表征，以便你能监测和纠正你自己的表现。主要还得靠你自己来训练，完成导师布置给你的练习。\n\n**从事有目的的练习十分重要，不能只是漫无目的地重复同样的动作，而不制订提高与进步的清晰目标。**\n\n自己设计练习方法\n\n反复做一件事情，目的是找出你在哪些方面存在不足，并且聚焦于在那些方面取得进步，试着采用不同的方法来提高，直到你最终找到适合自己的方法。\n\n步骤\n\n第一阶段：产生兴趣  \n第二阶段：变得认真  \n第三阶段：全力投入\n\n尽管成年人的大脑可能在某种程度上不像儿童或青少年的大脑那样具有较强适应能力，但它依然能应对学习和改变。其次，由于成年人大脑的适应能力与未成年人的大脑不同，因此，成年人的学习很可能通过与未成年人稍有不同的机制来发生。\n\n第四阶段： 开拓创新\n\n创新者几乎无一例外地在各自的领域或行业中工作了很长时间，已经成为杰出人物，然后再开始开辟新的天地。\n\n针对韩国围棋高手的单独研究，围棋高手平均93，普通人100 =\u003e围棋高手在智力测验上的分数并不会比普通人的分数高。\n\n从长远来看，占上风的是那些练习更勤奋的人，而不是那些一开始在智商或者其他才华方面稍有优势的人。\n\n自我实现的预言\n\n**最初的表扬和不擅长的预言都会成真**\n\n学物理例子  \n原先：\n\n\u003e 首先，在一间大型的教学厅内每周上三次课，每次播放 50 分钟的幻灯片讲座，然后每周布置家庭作业，并且有辅导的环节，在该环节中，学生们将在一位助教的监管之下解答习题。\n\n刻意练习：\n\n**采用刻意练习方法的课堂，目的并不是向学生灌输知识，而是让学生练习像物理学家那样思考。**\n\n\u003e 每次上课之前，两人要求学生朗读一段从物理学课本中摘下来的内容，一般只有三四页纸那么长，然后再完成一个简单的在线判断题测试，看一看他们对刚刚朗读的内容掌握了多少。目的是让他们在来到课堂之前，先熟悉课堂中将会讲到的物理学概念。为了做到那样，斯劳里尔斯首先将学生分成几个小组，然后提出一个“课堂问题”，也就是说，学生们在线回答该问题，刚一答完，答案便自动发给老师。这些问题的选择，目的是让课堂上的学生思考一些概念，这些概念对大学一年级的物理系学生来说有一定的难度。学生们可以在小组中探讨每个问题、说出答案，然后由斯劳里尔斯告诉大家标准答案，并围绕该答案来阐述，同时回答学生可能提出的任何问题。这种讨论使得学生思考那些概念，寻找概念与概念之间的联系，通常不只是停留在被问到的特定课堂问题之上\n\n这也就是如何学习中提到了，互动性更高的会更加深刻\n\n**在学习上，刻意练习的方法与传统方法之间的重要差别是对技能与知识的着重点不同，也就是说，一个强调你可以做什么，另一个强调你知道什么。**\n\n设计一些不是能够轻松回答，需要耗费一些思考的问题，回答问题，然后在学习的过程中去修订答案\n\n回答下上面的问题，\n\n### 一万个小时定律？\n\n我认为更多的是虚指，因行业，内容等变化，我认同是刻意练习一定量时间后不说成为世界顶尖，成为一个杰出的人才不成问题，另外之前看到有人为了凑一万个小时，把工作时间也算进去，我认为不可取。\n\n### 前端领域应该怎么刻意练习？\n\n我发现我开始问的太宽泛了，应该不断的细分。  \n比如如何学 HTTP, 如何学工程化，如何学算法，并制定详细的计划。  \n举个例子，算法学习准备采用艾宾浩斯的记忆曲线规律，现在是参加 91day 训练营，他的模块划分依据很符合循序渐进的难度规律，那么我们就需要三五天后回头刷已刷过的题，也就是每日一题+ 3-7 天前的题 + 扩展一题这样的模式进行每日刷题。\n\n### 如何问出更好的问题\n\n我认为读完以后有点明白如何去确定目标和定制计划了，问出更好的问题，我后面会阅读 [[《 金字塔原理 》]] 等学习并实践，希望问的问题能越来越好，另外感觉先学习方法论确实是个正确的方向，感觉读书还是很快乐的，加油！\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E5%89%8D%E7%AB%AF%E7%B4%A2%E5%BC%95":{"title":"🌐 前端索引","content":"\n[[前端构建工具]]  \n[[Chrome]]  \n[[前端项目]]\n\n## 工程效率\n\n- [[工程效率问题收集]]  \n- [[阿里云服务器]]  \n- [[自动化部署 |CI/CD]]  \n- [[Docker]]  \n- [[Engineer_Jest |Jest学习]]  \n- [[前端工程化]]  \n- [[npm |工程化工具发展]]  \n- [[前端函数式 |前端函数式演进]]\n\n## HTTP\n\n- [[加密算法 |鉴权与加密算法]]  \n- [[HTTP 缓存]]  \n- [[HTTP发展史]]  \n- [[HTTPS]]  \n- [[HTTP 报文]]  \n- [[HTTP问题 |网络协议灵魂之问]]  \n- [[《计算机网络自顶向下》 ]]  \n- [[《计算机网络通关》]]\n\n## JavaScript\n\n- [[设计模式]]  \n- [[高阶函数]]  \n- [[红宝书第四版]]  \n- [[正则学习 |正则]]  \n- [[TypeScript]]  \n- [[JavaScript 代码的执行流程]]  \n- [[前端模块化]]  \n- [[防抖和节流]]  \n- [[JS类型检测 |类型检测]]\n\n## 前端框架\n\n- [[Vue]]\n- [[React]]\n- [[Vue 和 React 差异 |Vue 和 React 差异]]\n\n## 计算机基础\n\n- [[Brew |Brew 安装]]  \n- [[《初识操作系统》 |初识操作系统]]  \n- [[代码片段 |一些优秀的代码片段]]  \n- [[github |学会使用git]]  \n- [[重构 改善既有代码的设计 (第二版)]]  \n- [[职业发展图]]\n\n## 面试题\n\n- [[JavaScript问题 |JavaScript 专题]]  \n- [[正则题 ]]  \n- [[HTML、CSS 专题]]  \n- [[编程题]]  \n- [[前端编程题]]  \n- [[Vue 问题]]\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8%E4%B9%8B-React-%E7%AF%87":{"title":"前端面试宝典之 React 篇","content":"\n#  前端面试宝典之 React 篇\n\n## 如何回答好:‘你怎么理解React\n\n思考如何回答好一个问题？\n\n考察在工作中的状态以及思考问题的思路：\n\n\u003e 你是出现一个问题解决一个问题，不断被外界推着线性往前走；  \n\u003e 还是能够高屋建瓴地思考全局。\n\n对待这类概念题，讲究一个四字口诀“讲说理列”，即“讲概念，说用途，理思路，优缺点，列一遍” 。\n\n- 讲概念：用简洁的话说清楚该技术是什么。最好能用一句话描述。\n- 说用途：描述该技术的用途。能够具体结合适合场景，拓展性的描述。\n- 理思路：梳理该技术的核心思路或运作流程。这个地方可深可浅，如果对其有足够深入的了解，建议详细地展开说明。\n- 优缺点，列一遍：对该技术栈的优缺点进行列举。列举优缺点肯定有与其他技术方案横向对比的过程，那么在这个过程中，切忌刻意地踩一捧一，容易引发面试官的反感。\n\nReact 中只需要关心两件事：数据与组件。\n\n那为什么会把基本单位定位于组件呢？如果对设计模式有印象的话，你是否还记得“组合优于继承”的铁律？\n\n**而 React 是通过组件化的方式解决视图层开发复用的问题，本质是一个组件化框架。**\n\n**这里问“为什么用 JSX”，其引申含义是“为什么不用 A、B、C？”**\n\n“为什么采用该技术方案”这一类问题是主考官最爱提的。这类问题其实在考察你的两个方面：\n\n- 技术广度，深挖知识面涉猎广度，对流行框架的模板方案是否知悉了解；\n- 技术方案调研能力。\n- 为什么不用模板\n\n因为模板会有很多新概念，比如：v-if,v-show….\n\nJSX 并不会引入太多新的概念，它仍然是 JavaScript，就连条件表达式和循环都仍然是 JavaScript 的方式。\n\n- 模板字符串\n\n代码结构变得更复杂了，而且开发工具的代码提示也会变得很困难。\n\n- JXON\n\n代码提示困难\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E5%8A%A8%E7%89%A9%E5%BA%84%E5%9B%AD":{"title":"《 动物庄园 》","content":"\n# 《 动物庄园 》\n\n#input\n\n## Meatdata\n\n- author： [[乔治·奥威尔]]\n- link：[动物农场-乔治·奥威尔-微信读书](https://weread.qq.com/web/reader/c7932430715b9fd8c7913fakecc32f3013eccbc87e4b62e)\n- tag：\n- date: [[2022-04-12]]\n- Notes:\n\n## 读前准备\n\n- 人类，琼斯\n- 猪 ，老少校，十一二岁，睿智长者\n- 两个代表性的猪 雪球和拿破仑\n- 三条狗，分别叫做蓝铃铛、杰茜和钳爪\n- 两匹拉套干重活的马，一匹叫拳击手，一匹叫紫苜蓿，小心翼翼，代表着力量\n- 驴子本杰明。后者在农场里算得上最资深的动物，脾气也是最坏的。他难得说话，一旦开口通常会发表一些冷嘲热讽的怪论，\n- 白山羊慕莉尔，会读大部分七戒，\n- 绵羊，一直听从指挥，歌唱着“四条腿好，两条腿坏。”，代表着乌合之众\n- 猫 , 经常在工作岗位上见不到，也不听讲话\n- 乌鸦摩西，不爱参与聚会，喜欢散布谣言\n\n## 总结\n\n- 七戒律  \n\t1． 凡用两条腿行走的都是敌人。2．凡用四条腿行走或长翅膀的，都是朋友。3．凡动物都不可穿衣服。4．凡动物都不可睡床铺。5．凡动物都不可饮酒。6．凡动物都不可杀任何别的动物。7．凡动物一律平等。\n- 好看，五星推荐。看开头第一篇的时候就想到这是一个从工农起来反抗，然后变成和资本共同生存的故事，因为共富是反人性的。但是这本书还是深深地震撼了我，读到最后才知道了这是苏联建立的过程，但我每一章都看到现在中国的影子，我不知道什么时候，我们会开始排挤完真正想建设社会主义的人，接受造谣，甩锅，七戒律不断减少，无能为力，直到一代一代没有了社会主义的记忆。愿能保持独立思考，至少做一只驴，不要做绵羊和拳击手\n- 老爷们满嘴的主义，其实都是生意\n\n## 闪念\n\n- 开始是想建立一个工农主导的社会，我猜后面仍会变成资本主义社会，因为共富是反人性的\n- 首先是要宣扬主义，发布了 七戒\n- 在一开始的整个夏天，每个人都乐于劳动，没有偷吃一根草\n- 猫会偷懒，每个人的聪慧程度不一样，甚至有些人对七戒也无法完全记忆，就压缩为一句格言：“四条腿好，两条腿坏。”\n- 用脑力活动为理由 开始占用 苹果和牛奶\n- 自给自足的社会传播出去了，引起了世界各地的造反和起义\n- 打退了人类的第一波进攻，并且杀了一个人\n- 两党之争，在碰头会上，雪球凭其精彩的演说往往赢得多数，但拿破仑有时候更长于为自己拉票争取支持。\n- 雪球点了科技发展的技能树，而拿破仑走了团结人民的路线，并从小教育了九条狗并发动了政变赶走了雪球，并取消了碰面会 # 临高启明中也讲了 有人在早期就选择抓教育潜心发育几年\n- 然后开始推翻之前雪球做的贡献，树立新的政权威信\n- 开始给动物们洗脑，更多的干活是为了以后的福祉。\n- 开始和人类发生贸易，并让部分人为贸易做出一点牺牲\n- 开始否定开始定下的 七戒律，\n- 猪们开始住进农场主的住宅\n- 因为狂风而倒塌的风车，被甩锅到雪球身上，并通过授勋和奖励物质的方式鼓励抓捕雪球\n- 遇到困难，并且需要加大风车的投入，粮食短缺，饥寒交迫\n- 人类开始传谣，说所有的动物都快饿死、病死，说动物们不断闹窝里斗，甚至发展到互相食肉和残杀幼仔\n- 拿破仑吩咐把饲料棚内几乎空空如也的周转箱用沙子填到将近上沿处，然后用仅剩的那点儿谷类食物覆盖表层。并通过收缴更多的鸡蛋(加税，同时减少下一代）去买谷物\n- 开始有坏事发生，并都疑似雪球干的，开始全面检查，动物们成天惶惶不可终日。（立靶子）\n- “我怎么也想不明白。我实在没法相信这等事会发生在我们农场。一定是我们自己在什么地方出了纰漏。据我看来，解决的办法只有一个——更加努力工作。从今以后，每天早晨我要提前整整一小时起身。”\n- 说 《英格兰的生灵》是造反之歌 改成了 “ 动物农场，动物农场，我决不会让你受伤！”\n- 开始神话拿破仑，并出现了《拿破仑同志》的诗\n- 皮尔金顿 和弗雷德里克中斡旋，并被弗雷德里克使用假钞欺骗，发动了战争，风车被毁坏了，宣传战争胜利，动物们保护了自己的农场\n- 吱嘎说他在拳击手弥留之际的最后几个小时一直守护在侧。\n- 几年过去了。寒来暑往，时光流逝，寿命不长的动物一生更如白驹过隙。已经到了没有谁还记得造反前是怎么回事的那样一个时代，除了紫苜蓿、本杰明、乌鸦摩西和几口猪。\n- “四条腿好，两条腿更好！“\n\n## 常青笔记\n\n- [[动物庄园读书分享]]\n\n## 重点摘要\n\n- 动物农场  \n乔治·奥威尔\n\n◆ 第一章\n\n\u003e\u003e 只有工人阶级才是掌握生产力的，却被少数资本占为己有所有生灵中唯独人是光消费不生产的。人不会产奶，不会下蛋；人力气太小，拉不动犁；人跑得不够快，逮不着兔子。然而人却是所有动物的主子。人使唤动物干活，却只给动物少得不能再少的一点回报，仅仅为了不让他们饿死，而其余的部分悉数被人据为己有。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 只有工人阶级才是掌握生产力的，却被少数资本占为己有所有生灵中唯独人是光消费不生产的。人不会产奶，不会下蛋；人力气太小，拉不动犁；人跑得不够快，逮不着兔子。然而人却是所有动物的主子。人使唤动物干活，却只给动物少得不能再少的一点回报，仅仅为了不让他们饿死，而其余的部分悉数被人据为己有。\n\n◆ 第二章\n\n\u003e\u003e 开始是想建立一个工农主导的社会，我猜后面仍会变成资本主义社会，因为共富是反人性的琼斯被扫地出门，庄园农场是动物们的了。\n\n◆ 第五章\n\n\u003e\u003e 大多人无法判断言论的正确性，所以所谓的民主也就变成了老爷们自己的判断，引导着乌合之众做出判断其实，他们此刻正在听哪一位发言，必定会发现自己认为这一位说的有理。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 大多人无法判断言论的正确性，所以所谓的民主也就变成了老爷们自己的判断，引导着乌合之众做出判断其实，他们此刻正在听哪一位发言，必定会发现自己认为这一位说的有理。\n\n◆ 第七章\n\n\u003e\u003e 拳击手代表了有一定学识的知识分子，但容易迷信权威或者榜样  \n\u003e\u003e “啊，那就不同了！”拳击手说。“既然拿破仑同志这样说，那一定错不了。”\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 自从琼斯离开农场一直到今天以前，还没有哪一只动物杀过另一只动物。连一只老鼠也不曾被杀。\n\n\u003e\u003e\n\n\u003e\u003e “我怎么也想不明白。我实在没法相信这等事会发生在我们农场。一定是我们自己在什么地方出了纰漏。据我看来，解决的办法只有一个——更加努力工作。从今以后，每天早晨我要提前整整一小时起身。”\n\n\u003e\u003e\n\n\u003e\u003e 如果说紫苜蓿在心中为自己设计过什么关于未来的蓝图的话，那幅蓝图上将是一个摆脱了饥饿和鞭子的动物社会，大家一律平等，工作各尽所能，强者卫护弱者，就像在听少校演讲之夜紫苜蓿用她的前腿卫护一窝失恃的小鸭那样。可是，理想的动物社会没有盼到，而他们反倒落入了这样一个时代：谁也不敢说出自己的想法，动辄狂吠不止的恶犬到处横行，你不得不眼睁睁看着你的同志在招认了丑恶罪行后被撕成碎片——她不知道怎么会闹成这样的。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95":{"title":"《 卡片笔记写作法 》","content":"\n# 《 卡片笔记写作法 》\n\n## Meatdata\n\n- author：\n- link：[卡片笔记写作法：如何实现从阅读到写作-申克·阿伦斯-微信读书](https://weread.qq.com/web/reader/3d8326d072552e803d87c41k65132ca01b6512bd43d90e3)\n- tag：\n- date: [[2021-11-20]]\n- Notes:[[卡片笔记法]]\n\n## 总结\n\n感觉没有获得想要的记录方法，\n\n## 闪念\n\n- 读这本书是因为在使用 Obsidian 的过程中了解到，这个软件的核心是[[卡片笔记法 |卡片笔记盒法]],所以来读这本书。\n- 希望可以得到我想要了解的几个问题\n  - 卡片笔记法的优劣势\n  - 卡片分类的维度\n  - 如何更好的去记笔记\n- 我对这本书的期望是让我知道卡片笔记盒的优缺点，如何使用，如何改进等问题的工具书，而他似乎更多的去论证了心流等问题，有点坏印象\n- 卡片盒笔记法，我认为可以视作为将写作分解成每天的小收集，通过你的思考使收集的笔记产生联系，这样产出的文章将会避免那种预设观点的情况。\n- 在记忆方面，有两种测试方法： `存储强度` 和 ” `提取强度` . 我们的大脑容量是有限的， 虽然根据科学研究，现在人脑开发程度不足 3%。所以 ,将注意力从存储强度转移到提取强度是很有意义的。学习不是像保存在硬盘上那样保存信息，而是在信息碎片之间建立连接和桥梁，在合适的时刻绕过抑制机制。提取强度就是使用特定的“线索”触发特定的记忆，当我们需要的时候，可以通过策略性的思考回想起最有用的信息。 比如提取的方法: [[记忆宫殿]]\n- 这本书看着看着，突然又感觉这方法的平庸了，不知是不是我没有理解到位，我的理解中应该是一个类似 wiki 的知识图库，通过自己的思考去链接。不过又是对的，他不过是将输入全部改成自己的总结，并记录链接到自己的联想\n\n## 常青笔记\n\n-[[卡片笔记法]]\n\n## 重点摘要\n\n-卡片笔记写作法：如何实现从阅读到写作  \n申克·阿伦斯  \n31 个想法\n\n◆ 推荐序一 像卢曼一样写卡片\n\n\u003e 在这里，需要介绍一个超出多数人常识的原理：必要难度（Desirable Difficulty）。这是认知科学最新研究成果，是认知科学家比约克夫妇（Robert A.Bjork \u0026 Elizabeth Ligon Bjork）在近 30 年前提出的，之后历经了两代认知科学家、数十个认知科学实验室发展，目前已成为认知科学中关于学习与记忆的主流理论。什么是必要难度理论？人类记忆存在广泛且普遍的元认知错觉，会误将“记住了”当成“学会了”。如果将人的大脑粗陋地比作一块硬盘，假设你的每次记忆都是往这块硬盘中写入内容，那么，可以近似地将记忆想象成无限的内容，但硬盘上的这些信息会相互争夺空间。人的记忆有两种基本机制：存储与提取。比约克率先区分了记忆竞争的两种不同类型：存储强度（storage strength）与提取强度（retrieval strength）。以前，人们习惯性地认为，记得越快，学习效果越好。简言之，存储越容易，提取就越快。但他的实验发现了与常识相反的结论：“存储与提取负相关”，也就是说，存入记忆越容易，提取出来越困难；反之，如果你有些吃力地存入，知识提取会更方便。\n\u003e\n\u003e 而卢曼比他们更精细，针对不同记忆提取场景，做了很多优化。卢曼经常使用的索引可以分为以下四类。第一类是主题索引。当某个主题的内容积累得足够丰富，卢曼就会做一张主题索引卡，对这个主题进行概览。主题索引卡上会汇集所有相关笔记的编码或链接，每条笔记会用一两个词或一个短句简要说明核心内容。这类索引，相当于给了你一个进入某一主题的入口。第二类与主题索引类似，只不过不是对某一主题的概览，而是针对盒子里相近位置的卡片所涉及的所有不同主题进行概览。第三类是在当前卡片上做索引，标明这条笔记逻辑上的前一条是什么、后一条是什么（这些卡片在盒子里的位置可能并不挨着）。第四类，也是最常用的索引形式，就是简单的“笔记-笔记”连接。两条笔记可能完全没有关系，把它们关联在一起，往往会产生出乎意料的新思路。通过这些关联操作，我们能更好地对卡片内容进行组合、拼接、提取，从而产生更高质量的内容。\n\n◆ 推荐序三 用卡片笔记积累你的知识复利\n\n\u003e 从本质上讲，卡片笔记写作法不是一种“技巧”，而是一个“系统”，一种存储和组织知识、扩展记忆以及生成新连接和想法的系统。简单来说，就是把你感兴趣或者将来可能会用到的知识收集起来，然后用一种像集装箱一样标准化的方式，去处理这些笔记，建立笔记之间的联系，供你使用。\n\n◆ 译者序\n\n\u003e 以往教授笔记方法的图书多以两类为主：一类是教授记笔记的形式，比如一页纸法、九宫格法、思维导图法；另一类则以教授原理为主，如费曼笔记法、康奈尔笔记法、PQ4R 法等。\n\u003e\n\u003e 为什么要记笔记？我们看书学习时会产生自己的思考，这样的洞见来之不易，如果不记笔记，往往会转瞬即逝，因此记笔记可以巩固我们的思考成果。自己的思考并不意味着完全不同于原始的知识，有时哪怕是精简一下语言，调整一下语序，使得下一次再查看时不需要花费和第一次一样多的时间，那么我们花在第一次学习上的时间也就有了价值。更不要说像本书建议的那样，用自己的语言，以标准化的格式记下笔记，再在笔记之间建立联系，产生更多新的想法了。一个笔记系统不仅可以是我们的外接大脑，也可以是生产力的助推器。\n\u003e\n\u003e 如果读者只是从网上浏览了别人分享的关于这本书的书摘，那么这种既不是自己的理解又没有语境的干货，就很难在自己的知识、情感和实践层面等找到契合点，这就是教育学上讲的“惰性知识”，自然很难为己所用。如果读者看过原书，也有了自己的思考，却没能记得住，或者习惯性地用一句“一看就会、一做就废”来搪塞自己，那么可能忽视了学习心理学上关于成功模仿的四要素——观察、保持、复现和动机。\n\n◆ 第一章 绪论\n\n\u003e 在德国，教授通常在开始公开演讲时，会介绍自己的课题，卢曼也被问到他主要研究的课题是什么。他的回答堪称经典。他简洁地回答道：“我的研究课题是社会理论，持续时间是 30 年，成本为零”（Luhmann,1997）。要知道，在社会学中，“社会理论”可是所有课题之母。\n\u003e\n\u003e 卢曼并不只是照抄他所读过的文章中的观点或引文，而是将其从一个语境转化到另一个语境。这很像翻译，不同的语境用不同的词描述，但是要尽量真实地保持原意。\n\u003e\n\u003e 如果把他的卡片盒看成是个人的维基百科或纸上的数据库，那将是相当具有误导性的。它们之间显然有相似的地方，但其微妙的差异才正是这个系统的独特之处。\n\n◆ 关于写作，你需要注意的几个问题\n\n\u003e SQ4R 是“浏览（Survey）、提问（Question）、阅读（Read）、复述（Recite）、修订（Revise）、复习（Review）”6 个英文单词的首字母缩写。它是一种阅读方法，但肯定又会很快被新一代阅读方法 SQ5R（管它代表什么）取代\n\n◆ 简洁是最重要的\n\n\u003e 而永久笔记则是以另一种方式写出来的，让你即使已经忘记了当时所取材的上下文，仍然可以理解它们。\n\u003e\n\u003e 永久存放在卢曼卡片盒里的笔记只有文献笔记和永久笔记。前者可以非常简短，因为上下文很明显就是它们所指的文本。后者则需要写得更加谨慎和细致，因为它们需要一目了然\n\u003e\n\u003e 与项目有关的笔记可以是以下内容：·手稿中的评论；·与项目有关的文献收集；·大纲；·草稿片段；·备忘录；·待办事项；·当然还有草稿本身。\n\n◆ 让工作推动你前进\n\n\u003e 写永久笔记也是一样，它还内置了另一个反馈循环：用文字表达自己的想法，会让我们思考自己是否真的想清楚了。当我们试图将其与之前写的笔记联系起来时，很容易发现矛盾、不一致或重复的地方。虽然这些内置的反馈循环并不能取代同行或上级的反馈，但唯独这些反馈是随时可用的，可以帮助我们每天都有少许、多次的进步。\n\n◆ 第三章 成功写作的六个步骤\n\n\u003e 事实上，人们之所以认为他们可以在多任务处理方面做得更好，并认为这样可以提高生产力，原因不外乎两个：一是缺乏对比，或缺乏可以提供客观数据的外部测量；二是心理学家所说的“曝光效应”，即做某件事的次数多了，人们就会相信自己已经很擅长做这件事，而不考虑实际表现\n\u003e\n\u003e 写论文不仅仅是在键盘上打字，它还包括阅读、理解、思索、产生想法、建立联系、区分术语、寻找合适的词语、结构化、组织、编辑、修正和重写等。\n\u003e\n\u003e 虽然我们对人类长期记忆能力的估计并不一致，而且颇具猜测成分，但心理学家过去在谈到短期记忆容量时的看法是一致的：我们最多可以同时在脑海中保存 7±2 件事\n\n◆ 阅读和理解\n\n\u003e 我们从文本的具体语境中提取出来的是在特定语境中服务于特定目的、支持特定论点的观点，并不一定属于我们自己的理论体系，也不一定符合我们自身的语言习惯。要想将这些观点融入我们自己的思维体系，并放到卡片盒里，就必须用我们自己的话对其进行转述。所谓转述，并不是要随意改变原来的意思，使之适合我们，而是用不同的文字尽可能真实地表述原意。同样地，即使是复制引文而不改变其用词，其含义也会因为上下文的剥离而发生改变。这是初学者常常犯的错误，最终只能带来拼凑的想法，永远无法形成连贯的思路。\n\n初学者这几条可以说是完全命中，输入足够多的情况下，却没有办法有输出。在看到 Obsidian 后，对卡片笔记盒有一点了解后，我感觉这会是改变我写作的方法。\n\n\u003e 而如果记笔记时没有明确的目的，就很难意识到它在一个大项目中的重要意义，就会感觉记笔记更像是一件苦差事。有时候，写长篇摘抄的意图是好的，但这是不可持续的；有时候，只给句子画线，在空白处写评论，这几乎等于没有做笔记；而更多的时候，读书的同时并没有做笔记，对于写作而言，这几乎相当于根本没有读过这本书。在卡片盒系统中，一切都是为了在卡片盒中积累足够数量的有用笔记，这给我们的阅读和做文献笔记指明了清晰的方向。\n\u003e\n\u003e 许多学习指南都建议人们从确定假设或主题开始线性地进行写作，这必然会导致更多的确认偏差。首先，基本上你在开始研究前就已经预设了立场，把你当下的理解定为研究的预期结果而非起点，这导致后期你的认知都会具有片面性\n\u003e\n\u003e 辨别模式、质疑所用框架，并发现不同作品间差异的能力，是进行批判性思考并审视文本或谈话背后观点的先决条件。能够对问题、论断和信息进行重新构架，甚至比拥有广博的学识更重要，因为如果没有这种能力，我们就无法将知识用于实践。值得欣慰的是，这些技能是可以习得的，只是需要刻意练习（Ericsson,Krampe,and Tesch-Römer,1993;Anders Ericsson,2008）。单纯进行阅读、在句子下面画线或者背诵原文都不能算是刻意练习，做卡片盒笔记才是。\n\u003e\n\u003e 另外，我们也不应该低估写作的好处。在口头表达时，我们很容易掩饰毫无根据的主张，还可以用自信的手势来跳过论证的漏洞，或者不顾自己是否知道自己的意思，随口说一句“你知道我的意思”。但写在纸上的时候，这些手法过于明显，像“那就是我所说的！”这样的叙述很容易被查证。“写下来”最重要的好处是，当我们对某件事情的理解达不到自己以为能达到的程度时，它能帮助我们正视自己的观点。\n\u003e\n\u003e 阅读，尤其是重复阅读，很容易使我们误以为自己理解了一篇文章。重复阅读是特别危险的，这是因为存在[[曝光效应]]（mere-exposure effect）：当我们熟悉某事物的时候，会开始相信自己已经理解了，最大的问题是，我们还会对其越发喜欢\n\n◆ 记卡片盒笔记\n\n\u003e 当我们想着已有的笔记来做新的笔记时，我们考虑到的东西会比我们自身记忆中可用的信息更多。这是非常重要的，因为我们自身记忆提取信息的方式并不总是理性而合乎逻辑，而是会遵循心理规则。而且大脑也不会严格根据神经信号客观地储存信息。当我们每次试图提取信息时，都会重建和改写记忆。\n\u003e\n\u003e 将一个想法嵌入卡片盒里已有的上下文中，一个常见的方法是写出它为什么对自己的思路很重要。例如，我最近读了穆莱纳森（M ullainathan）和莎菲尔（Shafir）写的《稀缺：我们是如何陷入贫穷与忙碌的》（2013），他们研究了稀缺的体验如何影响认知并导致决策过程的变化；帮助读者理解以下问题：为什么几乎没有时间或金钱的人有时会做一些在别人看来毫无意义的事情？为什么面对最后期限的人有时会在各种任务之间疯狂切换？为什么钱少的人有时会把钱花在外卖等看似奢侈的事情上？在别人看来，一次只做一件事情，或者批量购买食材并自己做饭更有意义。这本书的有趣之处在于，作者并没有对这些行为进行质问甚至没有进行评判，而是把它作为一种普遍的人类现象进行研究。\n\u003e\n\u003e “选择是构建我们思维之船的龙骨，从容量有限的记忆来讲，选择的作用更为明显。相反，如果我们什么都记，那么大多数情况下应该与什么都没记住是一样的，并且我们再次回想某个东西时所花的时间和第一次学习它时所用的时间一样长，这样我们的思想就永远不能进步。”（WilliamJames,1890）\n\u003e\n\u003e 斯泰因等人以一个正在学习静脉和动脉区别的生物学新手为例，说明了这是多么常见的现象：“（他）可能会发现一开始很难理解和记住动脉壁厚、有弹性、没有瓣膜、而静脉弹性较差、壁较薄、有瓣膜”（Stein et al.,1984）。但只要稍微阐述一下这种区别，并提出适当的问题，比如“为什么会这样？”学生就可以把这些知识与之前的知识（比如对压力的理解和心脏的功能）联系起来。只要将这些知识与“心脏将血液压入动脉”这一常识联系起来，他们马上就会知道，这些动脉壁需要承受很大的压力，在静脉中，血液流回心脏的压力更小，这意味着动脉需要比静脉壁更厚。当然，静脉就需要有瓣膜来防止血液回流。一旦理解了，他们就几乎不可能忘记关于静脉和动脉的属性和差异等知识。\n\u003e\n\u003e 卡片盒迫使我们提出许多阐述性的问题：它意味着什么？它与某事有什么联系？它与某事有什么区别？它与什么相似？卡片盒没有按主题分类，这是积极建立笔记之间联系的前提条件。只要联系是有意义的，不同的笔记之间也可以建立联系。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6":{"title":"∑ 微信读书","content":"\n以下列表从微信读书自动同步而来，书籍库记录主要工具推荐使用[[Notion]]\n\n移步[小胖的阅读空间](https://www.notion.so/chelsechen/c43dea2de200460298485541aa0544b3)，好看很多吧\n\n```dataview\ntable without id\n     (\"![](\"+ cover + \")\") as Cover, \n     file.link as Name ,\n     author as Author, \n     category, \n     lastReadDate as 最后阅读时间\n where cover != null\n```\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2":{"title":"《 思考，快与慢 》","content":"\n# 《 思考，快与慢 》\n\n## Meatdata\n\n- author：丹尼尔卡尼曼\n- link：[思考，快与慢-丹尼尔·卡尼曼-微信读书](https://weread.qq.com/web/reader/af83263058c217af81f8979kecc32f3013eccbc87e4b62e)\n- tag：\n- date: [[2021-12-01]]\n- Notes:\n\n## 总结\n\n丹尼尔卡尼曼这本书将人的思维分为系统1和系统2，分别代表这快思考与慢思考，并且指出人类大部分都是考直觉进行判断的。但快思考和慢思考本身是没有优劣的，是相辅相成的，当系统1遇到难以解决的困难时，系统2就会被激活。  \n系统1的思维是快思维、感性思维，主要靠直觉，也就是俗话说的“拍脑袋”，是快速的，未经大脑深思熟虑的。\n\n系统2的思维是慢思维、理性思维，是经过认真思考的，经过推敲，沉思后得出的思维。这就决定了通过系统2运作得出的结论往往更靠谱。  \n在日常生活中，我们总是系统1先行，但系统1认为自己可以处理问题并给出答案时，就会跳过系统2的思考。我们需要做的就是发现系统1思考过快的点，转为系统2进行思考，足够多以后，系统1的不假思索的正确率也会随之提升。需要注意的是系统2的运作需要注意力的集中，所以像边跑步边思考这样的事是不可行的，但是却可以边散步边思考。  \n一些与生活息息相关的快思考：\n\n- 依靠记忆做出判断的方法：[[可得性启发法]],这就很容易产生偏见\n\n## 闪念\n\n- 把这种依靠记忆作出判断的方法称为**[[可得性启发法]]**\n\n  \u003e 阿莫斯和我想知道我们这所大学的教授们的离婚率是多少。我们注意到这个问题立即勾起了我们脑海中的记忆，我们俩不由想起自己知道或听说的那些离了婚的教授。于是我们就凭着脑海中这些事例对这个离婚率问题作出判断。\n\n- 当系统 1 遇到难以解决的问题的时候，系统二就会被激活。那么有没有一种可能，但我们思考的足够多的时候，系统 1 也在不断进化，难解决的问题也就是变成的系统 1 能解决的问题\n- 快思考就像生活中不假思索说的话，会伤害到别人，但是你的认知觉得没什么\n- 想要抑制快思考太快得出结论，就要了解什么会影响到快思考，比如[[曝光效应]]，[[光环效应]],\n- 相信眼见为实，很多时候，我们拼凑出的连贯情节与事实是无限接近的，完全可以用来支持理性活动\n- 遇到锚定的数字时，应尽量的使用系统 2，调用平时积累的知识进行思考\n- 可得性偏见，是指容易因为脑子里回忆的难易程度对一个事件形成一个错误判断。避免方法，保持[[空杯心态]]，对论点都进行数据论证，而不是只凭他在脑海里出现的顺序\n- 在思考卡片要有分类吗，要有框架吗？如果要有应该怎么去分类[[卡片分类]]\n- 艾拉事件说明，我们的大脑解决小风险的能力有一个基本限度：我们要么完全忽视风险，要么过于重视风险，没有中间地带。每位等待晚归女儿的家长都能体验到这种感觉。你也许知道真的是（几乎是）没有什么可担心的，但你的大脑会不自觉地闪现危险的景象。\n- 不要忽略基础比率，描述一个'羞涩的诗歌爱好者'时不应该直接想到文学专业，有着更大基数的工商管理会有这更大的可能。\n- 人们对更详细、更丰富的描述作出的概率判断更高，这一点有违逻辑。预言家总会给其客户设下陷阱：对情节加以详述会使其更可信，却更不可能成为现实。\n- 少即是多，当一个高端产品附赠便宜的小礼物的话，那么整套产品就不吸引人了\n- 昨日因为表现好夸奖了一个人，昨日因为惩罚了一个人，第二天表现好的人比昨日表现差了，表现差的表现好了，这不是因为你的夸奖或者责罚，而是因为[[均值回归]]了。\n- 对于预测这件事，一些短期的预测能达到 20%就是一件值得推广的事，更长远的事专家也不会有更高的准确率。比如在股市中，假设所有人都是理性人，那么股票应该只跟随公司业绩增长，那么如果超过业绩增长的可能性，是否应该卖出止盈？但这又犯了卖出涨的好的，而留下了亏得多的。\n- 保罗·米尔（Paul Meehl），成了我心目中的一位英雄。[[巴纳姆效应]]\n- 直觉判断和公式判断。避免因为[[光环效应]] 对一个产生误判，可以使用闭上眼睛和进行 6 项你认为可靠的项目打分的公式进行判断。而又可以反向思考下，我们的面试中，见到面试官的第一面和简历都可以好好准备下，会严重影响到你的面评。\n- [[规划谬误]]\n  - 不切实际地接近理想状况（的计划和预测）。\n  - 可通过参考类似案例的数据得到提高（的计划和预测）。\n- “当你单独看某件事时，你很容易受系统 1 的情感反应的支配。” 尽量的利用宽框架\n- 思考 1 是记忆自我，思考 2 是经验自我\n\n## 常青笔记\n\n- [[曝光效应]]\n- [[光环效应]]\n- [[框架效应]]\n- [[大数法则和小数定律]]\n- [[锚定效应]]\n- [[可得性启发法]]\n- [[贝叶斯定理]]\n- [[巴纳姆效应]]\n- [[禀赋效应]]\n- [[沉没成本]]\n- [[处置效益]]\n- [[偏好逆转]]\n- [[前景理论]]\n- [[峰终定律]]\n- [[过程忽略]]\n- [[满意度]]\n- [[缪勒莱耶错觉]]\n- [[后验概率]]\n- [[心理账户]]\n- [[规划谬误]]\n\n## 重点摘要\n\n思考，快与慢  \n丹尼尔·卡尼曼\n\n◆ 序言\n\n\u003e 这位投资官所面对的问题（我是否要投资福特公司股票）就很难，但更简单且相关的问题（我喜欢福特汽车吗）却很快在他的脑海中形成了答案，并且让他就是否作出投资这个问题也作出了相应的选择。这就是直觉启发法的核心观点：当面对难题时，我们往往会对相对简单的问题进行回答，却忽略了自己已经置换了原始问题这个事实。\n\u003e\n\u003e 可悲的是，人们总是孤立地看待问题，表现出框架效应，即决策的制定往往因为对所回答问题不合逻辑的选择而受到影响。\n\n◆ 第 1 章 一张愤怒的脸和一道乘法题\n\n\u003e 当系统 1 的运行遇到阻碍时，便会向系统 2 寻求支持，请求系统 2 给出更为详细和明确的处理方式来解决当前问题。系统 2 在系统 1 无法提供问题答案时，就会被激活，这好比你碰到了“17×24”这样的乘法题，系统 1 无法给出答案，系统 2 便被激活来解决问题。\n\u003e\n\u003e 系统 1 和系统 2 的分工是非常高效的：代价最小，效果最好。通常情况下，这种分工很有效，因为系统 1 很善于完成自己的本职工作：它在熟悉情境中采取的模式是精确的，所作出的短期预测是准确的，遇到挑战时做出的第一反应也是迅速且基本恰当的。然而，系统 1 存在成见，在很多特定的情况下，这一系统易犯系统性错误。你会发现这个系统有时候会将原本较难的问题作简单化处理，对于逻辑学和统计学问题，它几乎一无所知。系统 1 还有一个更大的局限，即我们无法关闭它。如果看到屏幕上显示一个你认识的单词，你就能读出这个词——除非你的心思完全不在它上面。\n\u003e\n\u003e 不是所有错觉都是视觉上的，还有思维方面的，我们将其称为认知错觉。\n\u003e\n\u003e 提到认知错觉，最常被问及的问题就是能否避免这种错觉。上述各例传达的信息不容乐观。因为系统 1 是自主运行的，我们无法随意使其停止，因此直观思维所导致的错误常常难以避免。我们不可能一直没有成见，因为系统 2 可能对系统 1 产生的错误毫无所知。\n\n◆ 第 2 章 电影的主角与配角\n\n\u003e 赫斯在文章中还提到了颠茄（belladona）——一种使人瞳孔变大的物质，曾作美瞳之用。作者还提到，一些常去赶集的人常常戴着墨镜，因为这样就能隐藏自己对商品的兴趣了。\n\n◆ 第 4 章 联想的神奇力量\n\n\u003e 此外，只是想到背后中伤某位同事就会使人更想去买香皂、消毒剂或清洁剂，而不是去买电池、果汁或者糖果。当人们感觉自己的心灵受到了玷污，往往也会引发他们清洗自己身体的想法，这种冲动被称为“麦克白效应”。\n\u003e\n\u003e 统 1 包含了对这个世界的认知模式，能立即估测哪些事情是正常的，哪些是出人意料的，它是你作出快速直觉性判断的依据，且这种判断十有八九是准确的，而你的所有判断活动几乎都是在这一系统的指引下毫无意识地完成的。然而，系统 1 也是你直觉中很多系统性错误的根源，\n\n◆ 第 5 章 你的直觉有可能只是错觉\n\n\u003e 重复能引发放松状态和令人舒心的熟悉感。著名心理学家罗伯特·扎伊翁茨（RobertZajonc）曾潜心关注重复某种刺激和这一刺激最终带来的轻微情感波动之间的关系，扎伊翁茨称之为曝光效应（mere exposure effect\n\n◆ 第 6 章 意料之外与情理之中\n\n\u003e 系统 1 的主要功能是维护并更新你个人世界的模式，它呈现的都是常态下的思维模式。这个模式由许多联想和结果共同构成，这些联想由情境、事件、行为等概念引发，而结果则总是伴随某种规律出现，有可能是两者同时出现，也有可能出现时间只差那么一点点。随着这些联系的形成和加强，联想概念的模式逐渐展现出发生在你生活中的各种事件的结构，这一模式还将决定你对当下的理解和对未来的期望。\n\u003e\n\u003e 事实上，所有的标题都要满足我们对逻辑连贯的需求：一件大事必然会带来一些后果，而这些后果也需要一些原因对其作出解释。我们对那天发生的事情所知有限，于是系统 1 便熟练地将这些知识片段组合成一个连贯的因果关系。\n\n◆ 第 7 章 字母“B”与数字“13”\n\n\u003e 有系统 2 参与时，我们几乎会相信所有事情。因为系统 1 不仅好骗，还容易产生偏见，而尽管系统 2 掌管怀疑和不信任的大权，但是它有时很忙，不忙时也很懒惰，总会擅离职守。的确，已有证据显示，当人们劳累或是精力耗尽时，更容易受那些空洞却有说服力的信息影响，例如广告。\n\u003e\n\u003e 联想记忆的运作是导致“确认偏误”的原因之一。如果有人问你：“山姆友好吗？”你就会想到山姆的各种行为举止；而如果有人问你：“山姆是不是很不友好？”你就很难想起他的许多举动。\n\u003e\n\u003e 如果你赞同一个总统的政见，你可能也会喜爱他的声音及着装。喜爱（或讨厌）某个人就会喜爱（或讨厌）这个人的全部——包括你还没有观察到的方面——这种倾向就叫做[[光环效应]]。\n\u003e\n\u003e 艾伦：聪明——勤奋——冲动——爱挑剔——固执——忌妒心强本：忌妒心强——固执——爱挑剔——冲动——勤奋——聪明如果你像我们一样，你就会更喜欢艾伦一些。\n\u003e\n\u003e 我们对一个人性格特征的观察顺序是随机的。然而，顺序的确很重要，因为光环效应注重第一印象，而后续信息在很大程度上都被消解掉了。\n\n◆ 第 9 章 目标问题与启发性问题形影不离\n\n\u003e 在此我们又看到了系统 2 的另一个“特性”。到目前为止，我似乎已经将其描述成一个给系统 1 留有足够余地的默许监视器。我描述的系统 2 还具有主动搜寻记忆的功能、复杂计算功能、比较功能、规划功能和决策功能。\n\u003e\n\u003e 系统 1 的特点·生成印象、感觉和倾向；当系统 2 支持这些行为时，它们就会成为信仰、态度和意图。·自主且快速运行，只需付出较少努力，甚至不用付出努力，没有自主控制的感觉。·当发现（搜寻）特殊形式时，能接受系统 2 编控来调动注意力。·在接受了一定的训练后，能够做出熟练的回应，产生直觉。·为联想记忆激发出来的各种想法创造连贯形式。·将认知放松感和真理错觉、愉快的感觉以及放松的警惕感联系起来。·区分常态中令人惊奇之事。。推断原因和意图。。忽略歧义，按捺住心中的疑问。·夸大情感的一致性（[[光环效应]]）。·将注意力集中在当前的证据上，忽略不存在的证据（眼见即为事实）。·作一些基本估测。。通过常态和原型来表现集合，但不要将两者看成一个整体。·通过测量确定不同程度对应的匹配物（比如音量的大小）。·真正去计算，而不是空想（思维的发散性）。·有时用简单点的问题替代难题（启发法）。·对变化的感知比对形态的感知更敏锐（[[前景理论]]）。*·对可能性作出过高估计。*·对数量越来越不敏感（心理物理学）。*·对损失的反应比获得更强烈（损失厌恶）。*·严密设计决策问题，分别进行讨论。\n\n◆ 第 10 章 大数法则与小数定律\n\n\u003e 对规律的错觉在方方面面影响着篮球赛场。你要用多少年的观察才能肯定一个投资顾问是有真才实学的？一个执行总裁实现多少次成功的兼并，董事会才能确定他对这项工作有着非凡的才能？简单说来，如果你听从自己的直觉，就常常会因为把随机事件看做是有规律的事件而犯错。我们都非常愿意相信生活中大多数事情并不是随机的\n\u003e\n\u003e 小数定律包含在大脑工作的两个重要部分中。夸大对小样本的信任只是众多错觉中的一种——比起信息的可靠度，我们会更加注重信息本身的内容，其结果就是我们会将周围的世界变得比数据所能证明的更加简单和统一。在想象的世界中过早下结论比在现实中更有把握。·统计学家的很多观察研究都可归结到因果关系的解释上，但他们却不承认是这样的。许多事实其实只是巧合，包括事件的采样。对偶发事件作出因果关系的解释必然是错误的。\n\n◆ 第 13 章 焦虑情绪与风险政策的设计\n\n\u003e 桑斯坦越来越相信，对风险带有偏见的反应是导致公共政策中优先处理权不稳定和错位的重要原因。立法者和监管人员对民众的无理要求可能会反应过度，因为他们有着很强的政治敏感性，也因为他们和其他民众一样容易抱有同样的认知偏见。\n\u003e\n\u003e 艾拉事件说明，我们的大脑解决小风险的能力有一个基本限度：我们要么完全忽视风险，要么过于重视风险，没有中间地带。每位等待晚归女儿的家长都能体验到这种感觉。你也许知道真的是（几乎是）没有什么可担心的，但你的大脑会不自觉地闪现危险的景象。\n\n◆ 第 14 章 猜一下，汤姆的专业是什么？\n\n\u003e 当你怀疑信息的可靠性时，可以做一件事：作概率判断时，往基础比率那方面想。别期望遵循这条原则会很容易——它需要在付出很多努力的情况下，才能实现自我监督和自我控制。\n\n◆ 第 15 章 琳达问题的社会效应\n\n\u003e 出所料，人们对更详细、更丰富的描述作出的概率判断更高，这一点有违逻辑。预言家总会给其客户设下陷阱：对情节加以详述会使其更可信，却更不可能成为现实。\n\n◆ 第 16 章 因果关系比统计学信息更具说服力\n\n\u003e 然而，我有可能错了，如果发觉自己所处的环境中还有许多人有可能去提供帮助，我可能就不会走出去了。别人的存在会削弱我最初的责任感\n\u003e\n\u003e 尼斯贝特和博吉达发现，当他们向学生展示令人惊讶的统计学事实时，学生什么也学不到；但当学生惊讶于个体案例时，例如知道两个友好的人对求救的人袖手旁观时，他们会立刻归纳并推断出帮助他人似乎比自己想象的要困难。尼斯贝特和博吉达将结论总结为耐人寻味的一句话：这些受试者不愿从普遍现象中推导出特殊性，这一点与他们愿意从特殊现象中归纳出普遍性如出一辙。\n\n◆ 第 17 章 所有表现都会回归平均值\n\n\u003e 当时我告诉他们关于技能训练的一条重要原则：对良好表现的嘉奖比对错误的惩罚更有效。不管是对鸽子、老鼠、人类，还是其他什么动物的研究，都给这个说法提供了证据\n\u003e\n\u003e 均值回归，起初是金融学的一个重要概念。均值回归是指股票价格、房产价格等社会现象、自然现象（气温、降水），无论高于或低于价值中枢（或均值）都会以很高的概率向价值中枢回归的趋势。根据这个理论，一种上涨或者下跌的趋势不管其延续的时间多长都不能永远持续下去，最终均值回归的规律一定会出现：涨得太多了，就会向平均值移动下跌；跌得太多了，就会向平均值移动上升；自然界由于有惯性的作用，社会现象中，比如股价房价领域，由于心理作用、投机作用等，有时甚至有矫枉过正的令人措手不及的惊人现象。回归平均值\n\u003e\n\u003e 糟糕的表现常常会有提高，而好的表现则会变得糟糕，这跟表扬与惩罚都没有关系。\n\u003e\n\u003e 这个事实应该怎么理解？ 比如扶老奶奶这样的事，比如自私的人能赚到更多的钱吗生活给予我们的反馈常常违背常理。因为当别人取悦我们时，我们也会对他好；当别人对我们不好时，我们也会对他产生厌恶之情。然而从统计学角度来看，我们却是因为对人友好而受到惩罚，因为举止无礼而得到嘉奖。\n\n◆ 第 18 章 如何让直觉性预测更恰当有效？\n\n\u003e 有些预测判断，比如那些工程师所作的预测，主要就是通过查找表格、精确计算以及对类似项目的结果进行仔细分析得来的。还有一些预测则需要直觉和系统 1 的共同参与，主要有两种类型。有些直觉主要依靠反复训练得来的技能和经验。\n\n◆ 第 19 章 “知道”的错觉\n\n\u003e 这个错觉的核心是我们认为自己了解过去，这也表明未来也应该是可知的，但事实上，我们对过去的了解比我们自认为能够了解的要少。“知道”不是唯一一个会引起错觉的词。“直觉”和“预感”等词一般也可用来形容过去的想法变成了现实。\n\u003e\n\u003e 尼克松访问结束后，费斯科霍夫和贝斯让这些人回想他们对 15 个可能出现的结果的预测。结果很明显。如果一个事件果真发生了，人们就会夸大自己此前作出的预测的可能性；如果可能的事件并未发生，受试者就会错误地回忆说自己当初一直都认为此事发生的可能性不大。接下来的多次实验表明，人们不仅会高估自己最初的预测，还会高估其他人作出的预测。\n\u003e\n\u003e 《基业长青》和其他类似书籍的基本概念是：良好的管理措施会得到认同，而执行这些措施会带来丰厚的回报。这两点都有些言过其实了。公司是非常成功还是不怎么成功，其间的区别在很大程度上要看这家公司是否幸运。\n\n◆ 第 20 章 未来是不可预测的\n\n\u003e 众多研究者有一个普遍认同的观点，那就是几乎所有炒股的人，不管他们对股票是否了解（很少人了解股票），都在玩碰运气的游戏。交易者的主观经验只不过是他们在很不确定的情况下作出的看似明智的猜测而已。然而在高效率的市场中，明智的猜测比瞎猜也准不了多少。\n\u003e\n\u003e 第一点是，预测错误不可避免，因为这个世界就是不可预知的；我们应该了解的第二点是，我们不应该相信高度主观的自信就是准确性的指示器\n\n◆ 第 21 章 直觉判断与公式运算，孰优孰劣？\n\n\u003e 即使是不那么正规严肃的遴选面试，直觉也会起到积极作用，当然前提是按照规定收集客观信息并对不同特性进行独立评分。我建立了一个给予“闭眼”评估和整合 6 项指标同等权重的公式。从这件事中我学到一个普遍规律：不要简单地相信直觉判断——无论是你自己的还是他人的——但也不要完全抛开它。\n\u003e\n\u003e 设想你要为你的公司招聘一名销售人员。如果真的想选择最合适的人选，那么你应该这样做：首先，选择一些这个岗位要求的先决条件（比如技能熟练程度、个性稳重程度、可靠性等）。不要列太多，6 个左右即可。这些条件最好相对独立，同时要保证你通过一个问题就能够对这几个条件进行评估。下一步就是为每个条件都列出一些问题，并想好如何对其进行评估，分数为 1 ～ 5 分。你应该清楚什么情况“最弱”，什么情况“最强”。\n\n◆ 第 22 章 什么时候可以相信专家的直觉？\n\n\u003e 环境有规律可循，直觉才可相信\n\u003e\n\u003e 我的大多数时间则用在了对临床医生、股票投资者以及政治学者等人的研究上，这些人普遍都在做毫无依据的长期预测\n\u003e\n\u003e 人们对直觉的自信心不能作为他们判断的有效性的可靠指标。换句话说，当有人告诉你你应该相信他们的判断时，不要相信他们，也不要相信自己。\n\n◆ 第 23 章 努力养成采纳外部意见的决策习惯\n\n\u003e 我从中悟出了三点，第一点是显而易见的，我偶然得到了两种截然不同的预测方法。后来，这两种方法被我和阿莫斯称为内部意见和外部意见。第二点是我们最初的预测，即完成项目需要大约两年的时间，体现出一种[[规划谬误]]。我花了很长的时间才悟出第三点，我将这一点称为非理性坚持，一如我们那天做的荒唐事：没有终止那个项目。面对选择时，我们因为事业心而丢掉了理性。\n\u003e\n\u003e 看轻或是忽略分布信息的普遍趋势可能是预测产生错误的主要原因。因此，计划者应该尽力划分出预测问题的类别，这样才能充分利用所有能够获取的分布信息。\n\n◆ 第 24 章 乐观主义是一柄双刃剑\n\n\u003e 规划谬误只是普遍存在的乐观偏见的一种表现形式。我们中的大多数人都认为世界是美好的，但世界却没有想象般美好；我们觉得自己的贡献很大，但事实上并没有那么大；我们认为自己设定的目标很容易实现，但其实实现的可能性也没有那么大。\n\u003e\n\u003e 然而，无论在社会生活中还是在股票市场中，乐观主义极其重要。个人及企业会奖励那些提供了冒险且有误导性信息的人，而不是说真话的人。我们从造成大萧条的金融危机中学到的是：总有一段时间，专家间和企业间的竞争会造成大家对风险和不确定性视而不见。\n\u003e\n\u003e 为“事前验尸”。流程十分简单：当一个机构即将做出一个重要决策但还没有正式下达决议时，克莱恩提议召集对这个决策有所了解的人开一次简短的会议。在会议之前有一个简短的演说：“设想我们在一年后的今天已经实施了现有计划，但结果惨败。请用 5 ～ 10 分钟简短写下这次惨败的缘由。”\n\n◆ 第 27 章 [[禀赋效应]]与市场交易\n\n\u003e 经验丰富的商人显然已经学会了正确提问，即“与可以得到的其他东西相比，那个杯子真的是我特别想‘得到’的吗”。经济学家会问这个问题，有了这个问题，[[禀赋效应]]就不复存在了，因为得到的快乐和放弃的痛苦之间的不对称性没有关联。\n\n◆ 第 30 章 被过分关注的罕见事件\n\n\u003e 人们对前景理论的最初构想包括这样的观点：“罕见事件不是被忽视就是被过度重视。”不过，这个说法并没有详细说明在什么情况下事件会被忽视，什么情况下会被过度重视，也没有从心理学上对此作出解释。\n\u003e\n\u003e 分母忽视这个观点有助于解释为什么不同的风险表达方式所造成的效果会有这么大的不同。如果你看到“能使儿童免受某种疾病侵袭的疫苗有 0.001%的风险将导致终身瘫痪”这样的说法时，就会觉得这个风险看似很小。现在，请考虑用另外的方式描述这一风险：“在 10 万名接种疫苗的儿童中，有一个将会终身瘫痪。\n\u003e\n\u003e 我们已经知道系统 1 更善于处理独立事件，而不是整个范畴的事件。\n\n◆ 第 32 章 心理账户是如何影响我们的选择的？\n\n\u003e 理性的决策者只会对当前投资的未来结果感兴趣，经济人不会去考虑纠正先前的错误。当有更好的投资项目时，对亏损账户进行额外投资的决策被称为“沉没成本悖论”，这是一个代价高昂的错误决策，在大大小小的许多决策中都能看到其身影。\n\u003e\n\u003e 人们对由于不采取行动而导致的结果，会比因行动而产生的结果有更为强烈的情绪反应（包括后悔）\n\n◆ 第 33 章 评估结果的逆转\n\n\u003e “当你单独看某件事时，你很容易受系统 1 的情感反应的支配。”\n\n◆ 第 35 章 体验效用与决策效用的不一致\n\n\u003e 这种选择对医疗实践有所启示，我们注意到：·如果目的是为了减少患者的痛苦记忆，那降低最为疼痛时的疼痛感就比将疼痛的过程减到最短更为重要。同样的道理，如果患者在过程结束时感到的疼痛相对较轻，他对此过程的记忆就会更好，那么逐渐减轻疼痛比急剧减轻更可取。·如果想减少实际体验到的痛苦，迅速完成这个过程或许更合适，即使这样做会让患者更疼痛并给患者留下可怕的记忆。\n\n◆ 第 38 章 思考生活\n\n\u003e 刚结婚或马上要结婚的人当被问到对生活的整体评价时，很有可能就会联想到结婚这件事。\n\u003e\n\u003e 们为自己设定的目标对于他们要做什么，以及对只关注经验自我的幸福感是难以维持的这一事实的感受都极为重要。幸福不是忽略人们想要得到的。\n\n◆ 结语\n\n\u003e 统 1 是我们许多错误的原因，但也是我们许多正确做法的原因，而且我们也常做正确的事。我们的想法和行动通常由系统 1 指导，是当机立断的。系统 1 的一个优点就是储存在我们联想记忆中丰富而详细的世界：在这个世界里，人们能在不到一秒的时间内，从普通事件中区分出令人惊奇的事件；立即对自己所期望的事生成想法，并对令人惊奇之事和正在发生的事自动搜寻有因果关系的解释。\n\u003e\n\u003e 系统 1 的运行特征，包括眼见即为事实、强度匹配和联想一致性等，会产生可预测的偏见和认知错觉，比如锚定效应、回归平均值的预测、过度自信，以及许多其他错觉。\n\u003e\n\u003e 避免系统 1 出错的方法从原则上讲是很简单的：认识到你正处于的认知领域，放缓并要求系统 2 来加以强化。\n\n◆ 附录 A 不确定性下的判断：启发法和偏见\n\n\u003e 本文描述了在不确定的情况下进行判断的三种启发式：（1）代表性。人们通常在需要判断物体 A 是否属于类别 B 或是事件 A 是否属于过程 B 时，就会使用代表性；（2）事件的可得性。当人们需要估测某类事件发生的频率或是某个特定进展的合理性时，就会使用可得性。（3）通过锚定进行调整。当相关数值可得时，许多预测都会用到锚定。使用这些启发式不仅能节约很多时间，大多数时候也很奏效，但它们也会导致一些系统性的错误。更好地理解这些启发式和它们带来的偏见，能够在不确定的情境下提高判断和决策的质量。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E6%83%85%E6%84%9F%E6%9C%BA%E5%99%A8":{"title":"《 情感机器 》","content":"\n# 《 情感机器 》\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2021-12-09]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n- 马文·明斯基在《情感机器》里提出，成人的精神活动可以分为六大层级我们的每一种主要的“情感状态”都是因为激活了一些资源，同时关闭了另外一些资源——大脑的运行方式由此改变了。资源可以分为六个不同的层级——本能反应、后天反应、沉思、反思、自我反思、自我意识，以对想法和思维机制进行衡量。每一个层级模式都建立在下一个层级模式的基础之上，最上层的模式表现的是人们的最高理想和个人目标。\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E6%89%93%E5%BC%80%E5%BF%83%E6%99%BA":{"title":"《 打开心智 》","content":"\n# 《 打开心智 》\n\n#input\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2022-11-13]]\n- Notes:\n\n## 读前准备\n\n准备二刷  \n记下想要得到问题的答案\n\n- 什么是行动导向和状态导向\n- 有什么优缺点\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/-%E6%8A%8A%E8%87%AA%E5%B7%B1%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95":{"title":"《 把自己作为方法 》","content":"\n# 《 把自己作为方法 》\n\n## Meatdata\n\n- author： [[项飚]]\n- link：\n- tag：\n- date: [[2021-12-24]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n- 为什么会丧呢？可能的原因是因为我们的教育和观念会逼着我们去想回报这件事，让我们失去Fun的能力\n- 人是不是马克思主义的起点？过去我们将人的问题归咎到经济发展，但经济不可能一直发展，经济也无法解决所有问题，那么就要回到物质应该如何分配，如何建设精神世界的问题了。\n- 现在人吃穿不愁更简单了，要一门心思的往\"中心\"钻吗？\n- 不仅仅认同身份价值，而是去寻找真正值得自己去捍卫的价值。如果每个人这么想是不是更倾向于资本主义，寻找有利于自己的点，但不仅限于钱？我经常会感觉自己寻不到[[社会主义]]和[[资本主义]]之间的差异，如果有机会读下[[《 毛泽东选集 》]] 和 [[ 《 马克思主义 》]]\n- 不要迷信一个符号，世界是变化的。听到北大就认为TOP2，要去思考哪里好，跟我有什么关系。名人不名人的，只跟他但是说的什么话，有没有用，有没有趣有关，在[[《 思考，快与慢 》]]中，也见到了什么时候可以去相信专家。\n- [[实证主义哲学]]\n\n## 常青笔记\n\n- [[民粹主义]]\n\n## 重点摘要\n\n- 把自己作为方法  \n项飙 吴琦\n\n◆ 童年图景\n\n\u003e\u003e 从小就爱思考反常的事“抓革命”是什么意思，因为对我来讲，“抓”都是抓坏人，革命是好的，怎么会“抓”呢？\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e “抓革命”是什么意思，因为对我来讲，“抓”都是抓坏人，革命是好的，怎么会“抓”呢？\n\n\u003e\u003e\n\n\u003e\u003e 后来我发现，普通人这么关心政治，关心社会变化，这在世界范围内其实很少。我知道日本人在餐桌上从来不谈政治，认为谈政治是一种不文明的行为。我就很奇怪，问我爱人为什么大家不谈政治，她说你谈了以后，可能会破坏情谊。因为大家的政治观点可能不一样，老婆不知道丈夫投票投了哪个党，爸爸不知道儿子投了哪个党，没有这种讨论。德、法的群众比较政治化，和我们有点像。\n\n\u003e\u003e\n\n\u003e\u003e 他能对身边的事情形成一个图景。比如说做年糕，他会把从浸水、攒米[插图]到火候掌握很系统地讲出来，能够把其中的道理勾勒出来，事情和事情的联系也就清晰起来，形成一个图景。\n\n\u003e\u003e\n\n\u003e\u003e 清理“三种人”，是文化大革命结束后，中国共产党党内进行拨乱反正和人事调整的一项政治运动。三种人指的是：造反派起家的人、帮派思想严重的人、打砸抢分子。主持这场运动的为反对“文化大革命”的一派，以邓小平、陈云、胡耀邦等党内元老为主，目的是防止改革开放的方针被“文革”遗留分子翻案。“三种人”\n\n\u003e\u003e\n\n\u003e\u003e 他突然说，“文革”不是完全错的，你看一些干部，到60年代已经开始坐小车、穿皮鞋，肚子越来越大，毛说，这样下去不行，那有什么办法，只好发动群众。\n\n\u003e\u003e\n\n\u003e\u003e 距离感、怀疑心可能还是蛮重要的，否则去大学就很容易被卷入别人的话语里去\n\n◆ 北大青年的焦虑\n\n\u003e\u003e 十八九岁的孩子本来应该找伙伴，有各种天真的想法，但在那种情况下，大家都在算计如何保护自己，如何取悦你的班长、副班长或者炊事员。其实能拿到的利益非常小，如果不取悦，也不一定有什么风险。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 有观点认为，在20世纪，战争和军队是做了一些好事的，彻底打乱了社会等级。如果没有战争，日本和英国可能都不会有重工业。\n\n\u003e\u003e\n\n\u003e\u003e 比方说德国，最老牌的资本主义国家之一，长期实行“社会市场经济”的模式，强调竞争，强调个人企业家精神，同时非常强调国家对市场秩序的调配、福利制度，又有很深的基督教传统在里面——人是怎么回事，在市场上怎么对待人，失败以后怎么办，什么样的成功应该引以为荣、什么样的成功要引以为耻。苏东解体之后，它就成了赤裸裸的资本主义，只有成功和失败的区别，没有可耻的成功和可荣的成功之间的区别，完全根据最后现金的获得量来衡量，哪怕是用可耻的方法获得了成功，也可以很自豪，甚至比正常的方法更值得骄傲，说明你聪明、大胆。\n\n\u003e\u003e\n\n\u003e\u003e 我那天也跟我妈妈讲这个事，我要去别人家玩，外公第一句话就是不要去，他说你去别人家，可能会给别人造成麻烦，别人很客气地招待你，也许心里并不想让你来。这种怀疑心其实给我造成很大的阴影，到现在为止还是这样。这跟我爱人的性格完全不一样，我爱人的性格是，她觉得别人见我这么高兴，他们也会很高兴，所以她想做什么事情，第一个想法就是去做，而我第一个想法是先想反面。\n\n\u003e\u003e\n\n\u003e\u003e 大部分地方院校的老师其实对自己身边的生活兴趣很小，看一下学术期刊上写什么文章，就往上套，主要目的是进入那个话语体系，而不是观察身边的世界。\n\n\u003e\u003e\n\n\u003e\u003e 为什么因为照顾子女而腐败，大家就觉得好像可以宽容一点？同时我们对腐败官员的揭露，却把大量篇幅放在男女关系上，而对这个人究竟怎么贪污、制度设计哪里有问题、贪污造成的具体后果又讲得很虚幻？道德是多维度的，为什么在这个维度给予那么大的权重，其他的事情给予小的权重？\n\n◆ 研究“浙江村”\n\n\u003e\u003e 我一直拷问自己，为什么我在理论这方面欠缺严重？因为我在北大确实没有接受什么理论训练，而且我的阅读量也很低，阅读能力比较差。这个听起来比较奇怪，但我在北大就有这种感觉，更大的震撼是出国之后看到他们对文献的处理能力。这是一种很重要的能力，因为我们大量的信息和思考方式是一定要通过文字表达出来的，积累确实很重要。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 一方面我和知识分子说话有点心理障碍，大家都读过的东西我不知道，另一方面我觉得有些知识分子活在话语里，讲的是从一个话语到另一个话语之间的逻辑推演，也许和实际发生的事情相去很远。\n\n\u003e\u003e\n\n\u003e\u003e 他们不讲理论，只讲故事讲经历，讲见地，很直接，一刀插进去再提出来。他们讲事情，都要讲到“点”上去，也就是导致某个现象的最重要的原因，而这个原因又往往是以前没有被意识到的。但是他们似乎没有耐心把这个“点”演化开来，形成系统的论证，聊天中点到为止，又跳到另外一个点去了。他们其实提出了大量让人非常兴奋的假设，但是没有去验证。\n\n\u003e\u003e\n\n\u003e\u003e 现在想起来主要是语言的问题，自己不懂的东西就认为不好。一方面是完全的震惊，另一方面又没有深刻的反思。这个可能跟竹内好讲的中国和日本的区别有点像，就是说受到新的文化冲击时“回心”（中国）和“转向”（日本）的问题[插图]。“回心”是彻底粉碎，彻底反思自己为什么跟人家不一样，不是简单地问差距在哪里，而是问差别在哪里，把这个差别看作一种既定事实，同时也是思考和创造的来源，这是革命性的；另外一种是“转向”，就是他所说的日本的方式。\n\n\u003e\u003e\n\n\u003e\u003e 在实地调查之前，没有任何一个东西给我真正的启发，我就把那些词都放在一起。调查回来之后，看到一本论文集叫作《虚拟》（Virtualism）[插图]，它的序言是我到了牛津后第一次看懂一篇英文文章，因为我的英语那时好一点了，那篇文章不是什么经典，但就是因为懂了，思路就一下子打开了。这就回到前面我们讲的，理论不在于新不新、深不深，更不在于正确不正确，而是能不能形成沟通性。\n\n◆ 年轻人之丧\n\n\u003e\u003e 老师来讲历史课，完全没有概念，为什么要讲这一段跟现在看起来完全无关的事情，这段历史对今天的学生究竟有什么意义、有什么意思？这样就不能把历史的事实激活。激活有两种办法。一种是进入历史的内部，讲三国就讲三国内部的故事，这是一种比较粗浅的把它讲得有趣的办法。更重要的是能够建立一些联系，比如三国之间权力的争斗、领土之间的变迁以及人们的领土意识，和我们现在完全不一样，可以把这一层讲出来。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 说实话，西方教育还是比较强。我们这种咬牙坚持的能力比他们强，学了西方学生没学的东西，但平均来看，他们的工作热情、纪律性比国内教育的学生要强。\n\n\u003e\u003e\n\n\u003e\u003e Fun的意思就是能够对事情本身发生很大的兴趣和热情，不需要外在的回报来刺激热情。艺术、数学这些东西都是很好的例子，可能是人的本性。我们的家庭和学校教育，活生生地逼着你去想回报，就算有个人兴趣，也叫你千万不能把这个当作职业。取向就非常不一样。艺术上的热情还是比较自然的，爱画画的人总是爱画画，但其他工作，比如研究性的、公益性的，会牵扯到很多很繁琐的细节，确实要有一种持续的热情。不能完全靠自发，而是需要通过教育。\n\n\u003e\u003e\n\n\u003e\u003e 日本给我们一个警示，出现了很多封闭的宅男宅女，生活非常稳定和固化。日本的教育也不太行，很强调工匠精神，强调执着、专注，也不太强调fun。\n\n\u003e\u003e\n\n\u003e\u003e 确实，今后的经济政治关系可能会发生很重大的变化，人们不太需要花很多时间做物质工作去赚钱，我们能够用比较少的投入获得足够的生存资源，在这个情况下，经济活动在一个社会人的活动里的位置会变得越来越不重要。那个时候要有全新的想象。比如基本收入（basic income），意思是公民每个月都拿那么多钱，不管工作不工作。极端的情况下出现大量人工智能，很多工作自动化，剩下的就是分配问题。中国当然不太可能很快这样，但也需要新的想象。如果赚钱糊口不是主要的目的了，你的生活意义是什么，你怎么和社会形成关系？\n\n\u003e\u003e\n\n\u003e\u003e 我们这些年改革，在老百姓的生活里，其实是一个生命意义、生活意义转移的过程。读好书、考好学、找个好工作、家里给买房子，一直是将意义外化转移，到最后没有必要转移了，就是要回到人本身。国家也是这样，过去任何问题都首先是经济问题，经济发展了，好像其他都能解决。但你看现在的民族政策、内地和香港的关系、青年的问题，靠经济发展都解决不了，而且经济也不可能无限发展，不可能给每个人一架私人飞机随便开，所以越来越回到意义本身。意义不是虚无缥缈的人文精神，而是来自人和人的关系怎么构造，这跟经济有很大关系，回到物质资源如何分配、社会关系如何协调这些问题，但不一定建立在生产劳动的基础上了。\n\n◆ 边缘与中心\n\n\u003e\u003e 真正的英雄不是改变世界，而是改变自己生活的每一天。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 在现代性之下，“边缘”和“中心”变成一组对立关系，中国人又有那么强的中心情结，觉得边缘的生活不值得过，造成极大的焦虑。权力和资源过度集中。人们常说“红二代”一般不腐败，因为从小家庭条件比较好，钱无所谓，我想是有道理的，你看我们的日常生活或者新闻报道，不少巨贪都是从社会底层上来，包括在学术单位里，那些从底层上来的人往往更加容易变本加厉，就是因为他们对自己“边缘”的定位。他不认这个命。为了从边缘进入中心可以不择手段，进入中心之后觉得原来在边缘学到的那些做人原则也可以统统不要。\n\n\u003e\u003e\n\n\u003e\u003e 如何把边缘的生活变得有趣，这很大程度上是文化建设和意识形态的问题。\n\n\u003e\u003e\n\n\u003e\u003e 学者在这方面有很大的责任，不一定老讲全国性的大问题，而是把一些具体的小东西讲清楚。今天全国需要几千个、上万个乡绅，如果他们能够发掘、系统化地方的声音，就很有意思。地方的声音就是强调它的多元，这会给中国的长治久安打下很好的基础，\n\n\u003e\u003e\n\n\u003e\u003e 比较简单地讲，如果在英国讨论政治——英国也是很乱的，它跟法国不一样，它很晚才有中央集权，到现在中央集权也不是很强，到今天也没有成文的宪法，但它又曾经是一个全球性的帝国——我的观察是他们好像没有觉得必须要有一个成型的历史叙述。它没有很好的历史叙述，但这个国家在实践中积淀了很多原则，连贯性比较强。中国有一点倒过来，中国在事实上的连贯性很弱，也有很多的断裂，但每一个朝代都修前朝的历史，在历史书写上连贯性很强，所以就造成了很强的意识上的连贯性——我们是“中国人”，有“中国”这么一个单位。但在实际的生活逻辑上，其实有极大的断裂。而英国的国别认同，在精英中比较强，对中产阶级来讲则是很模糊的事，他们搞不清楚英国人是谁，也不关心这样的问题。\n\n\u003e\u003e\n\n\u003e\u003e 我认同这样的身份价值，而不认为我仅因为我出生成长而去捍卫价值，要寻找你愿意捍卫这个价值的原因我是中国人，这不是一个骄傲不骄傲的问题，我就出生在这个文化里面，就跟我是温州人一样，我出生成长在中国七八十年代一个南方中小城市，这是命，一定要百分百去拥抱它，嚼透它。在这个意义上，我的身份认同很清晰。大家现在说的身份认同有另外一层意思，好像认同了一个东西，就要捍卫一套价值，要遵循一定的行为规则，继承一定的文化气质，这个因果关系对我来说不存在。\n\n\u003e\u003e\n\n\u003e\u003e 我是中国人，这不是一个骄傲不骄傲的问题，我就出生在这个文化里面，就跟我是温州人一样，我出生成长在中国七八十年代一个南方中小城市，这是命，一定要百分百去拥抱它，嚼透它。在这个意义上，我的身份认同很清晰。大家现在说的身份认同有另外一层意思，好像认同了一个东西，就要捍卫一套价值，要遵循一定的行为规则，继承一定的文化气质，这个因果关系对我来说不存在。\n\n\u003e\u003e\n\n\u003e\u003e 是，但不一定是回到中国的命题，而是回到自己作为一个边缘者、回到我是谁的问题。想清楚究竟我能做什么，我跟世界的关系是什么。我认为世界上所有的人都有这个问题，都得搞清楚自己是谁，否则都会有这种危机，除非完全盲目地被主流裹挟进去。\n\n◆ 个人危机\n\n\u003e\u003e 我今年管招生，看到很多中国学生的申请，博士、硕士我都看了，我发现很多同学会找一些有名的人写一封很简短的推荐信。另外一个策略是找自己的老师写，我们完全不知道这个推荐人是谁，但写得比较具体、实在。在这种情况下，后者的效果要远远好于前者。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 。我回去看别人写的研究计划，也吓一跳，非常直白朴素，就像是跟父母讨论一样。这类研究计划的打分远远高于雄心壮志、很正式的那种。这对我也是一个教训。我们在国内写报告，好像就是要高于生活，要写得很拽很正式，脱离生活，如果把吃喝拉撒睡都写进去，好像很不正常。\n\n\u003e\u003e\n\n\u003e\u003e 申请的题目也一样，一定要很具体，如果让我看到你对这个题目有真心的感触，我就更加能够理解你为什么要做这个题目，会对你有信任，信任你会做下去。有的题目显然是从别人那里抄过来的，感觉就不一样。西方强调个人性，我觉得很有道理。政治家也是一样，大家都想知道这个人的生活习惯，早餐吃什么，喜欢喝什么酒，只有知道了你的真实性之后，才可以信任你。当然东方文化在政治上是相反的，这些东西都要被隐蔽，领导人不是个人，他是权力的化身，这就是不太一样的理解。\n\n◆ 全球化与逆全球化\n\n\u003e\u003e 我原先分析，这是两个美国之间关系的调整，一个是全球美国、精英美国，一个是地方美国和平民美国。特朗普代表了平民美国对精英美国的反动。长期来看，特朗普到现在究竟会对全世界的政治格局造成什么效果，还没有很强的证据证明会有灾难性的结局。他不太靠谱，那不很好吗？\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 距离感其实就是历史感。有的事件发生了，不要把它在象征意义上做太多诠释，这是我反对的。\n\n\u003e\u003e\n\n\u003e\u003e 中国作为大国，一个很大的优势是，即使大家都不搞全球化了，国内还是有很大的空间。全球化、反全球化这个问题可能有一定的虚假性，所谓虚假性是我们还是被新闻中的许多词汇所迷惑。\n\n\u003e\u003e\n\n\u003e\u003e 英国脱欧其实情况相当复杂，投票脱欧的人，很多是这些年在英国没有得到好处的农村人，生活变得更困难，但是真正倡导的人，鲍里斯·约翰逊[插图]等人都是精英，所谓的蓝领加紫袜子。蓝领是工人，紫袜子是贵族。紫袜子为什么要脱欧？这些人是没有民族主义概念的。一个印度作家写过，英国有皇族、有共和派、有种族主义，但没有民族主义，因为英国从来都是以世界看世界，当英国成为一个国家的时候，它就是一个帝国的形式。\n\n\u003e\u003e\n\n\u003e\u003e 说要把中国故事讲好，这种心理需求本身是有问题的。为什么“一带一路”是一个中国故事？牵涉到那些巴基斯坦人、埃塞俄比亚人，他们怎么讲？这里很复杂\n\n\u003e\u003e\n\n\u003e\u003e 。但事实上，很多人在国内卖鞋卖不掉，只能去非洲卖，但是到了国外，别人就觉得四川人来打工、河南人来种菜、温州人来卖打火机，统统都跟中建一样，是“一带一路”计划的。中国经济体量那么大，出去一点很自然的，即使上面不提倡，他们也得出去。但是一定要把这些多样丰富的实践讲成一个故事，往往会造成别人没有必要的警惕。\n\n\u003e\u003e\n\n\u003e\u003e 中国叙述在我看来是一种比较狭隘的思路，它要靠一种制度框架来界定自我。你是中国人，出生在中国，成长在中国，这是事实，但是你看问题的时候，可以是一个母亲，是一个女儿，是一个六十岁退休的老师，这些都是看问题的视角。\n\n\u003e\u003e\n\n\u003e\u003e 欧洲可能短期内问题处理不好，而中国动员全省的力量、全国的力量办一件事，当然能办得很好；但问题是说你得看明年，这个事情办完之后，十年以后是什么效果，这方面欧洲做得很成熟。的确是天天抗议示威，人们成天抱怨，这个就是它的常态，也是一种政治智慧。\n\n\u003e\u003e\n\n\u003e\u003e 这也是知识分子的修养，看到一个事不会轻易地兴奋，说我们城市化办得好，那就要去问，原来住这儿的人去哪儿了，他们怎么想的，为什么其他国家那些人就没有被清理。老是反着问。反着问也不是故意挑刺，也是一种乐趣吧。我觉得这就是反思，反思不一定要咬着牙，有的时候跟道德一样，需要拿下来放在手里，这样捏捏那样捏捏，就进入这个事情内部去了。\n\n◆ 用80年代来批判80年代\n\n\u003e\u003e 。有一次高平子[插图]的孙子跟胡适说他要继承张载说的“为天地立心，为生民立命，为往圣继绝学，为万世开太平”，胡适就说，怎么叫“为天地立心”，你解释给我听，你的祖父是学天文的，你不应该再引这些不可解的话\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 一般人认为80年代是一种理想主义，这个词我觉得还是比较精确，所谓理想主义首先就是一种超越，存在的价值就是对现状的超越，就是追求现在不存在的东西。\n\n◆ 什么是批判\n\n\u003e\u003e 法律过程、律师制度。我小时候觉得律师制度很奇怪。这个人是不是坏人已经很明显，为什么需要律师在那里辩护。但“辩”这个概念很重要，就是说一定要假设我们不知道事实的过程是怎么回事，然后通过“辩”来把事实过程明晰起来。过程明晰之后，我们可能会发现那些明显的结论可能都是错的！学术也是这样，不能靠直觉去判断，一定要去证明它，要去展示结论是怎么达到的。往往越是明显的结论，越难去证明，但是一旦证明了以后，会是很大的贡献\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 比如在解放前的温州，出海捕鱼的渔民是一个特殊的群体，不能与农民通婚，只有在非常落魄的情况下，农民才会跟渔民通婚。如果是渔民的话，女人衣服连襟的方向都是反的，要往右走，让大家远远一看就知道是贱民，分化到了这个程度。要把这些具体的东西讲出来，去考虑为什么在那样的社会里要划分得那么绝对，甚至在服饰、发髻的样式上，要故意强化出来。\n\n◆ 理解的学问\n\n\u003e\u003e 那种通透是不成立的，如果这样的话，世界就不改变了，历史就是静止的。事实上世界一直都在变，通透的人怎么去解释这个变？如果说一切都是随机的不可言说的，那是反历史的。深刻是从网状知识结构中来的，而那种犬儒式投降式地回到自己的小世界，买完菜、做完饭，其他什么都不管，只是消极地用最小耗能法去应对，生命也可以维持下去，但就停止思考了。那就把生命的活的网变成一个死的点。\n\n◆ 访谈之前\n\n\u003e\u003e ，社会科学告诉你，其实没有什么很强的规律，都在于自己怎么样去理解这个世界，怎么样主动地采取行动。可能会有大的图景，但没有所谓的规律，因为一旦发现规律，那么一切到此为止，就不需要再去做工作了。它是通过科学的态度去证伪，去搜集材料，把事情搞清楚，但最后是要武装你，进一步去创造新的现实，去改变现实。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 我们总体的社会环境，有很强的冲动要把人符号化、象征化，这个大学，那个名人，很多人都是抱着五颜六色的泡泡在漂。年轻人要有勇气去问：这是在干什么，这个大学好在哪儿，跟我有什么关系，名人不名人的，先看看他在说什么，说的东西有没有趣，直截了当地去理解。符号是靠大家撑着的，如果不撑它，符号就没有了。把符号化的东西消解掉，形成有机的小群体、横向的领导力，不要指望有父母亲式的人物给你保护。我们从小的教育符号化太重了，要摆脱那个，用比较自然的方式问问题，用有机的语言说话，这需要一段时间的培养。\n\n◆ 牛津记忆\n\n\u003e\u003e 牛津的环境很好，但牛津的研究不一定很前沿。我希望有一个放松的环境去考虑我自己的小世界，如果在美国，可能就不那么放松，因为他们总是要前沿化，一定要坐头排，那也会走火入魔，经常是为了前沿而前沿。社会生活里有很多问题都是老问题，一定要把老问题吃透。不断制造新的语汇，这没什么太大的意思。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 消极的自由，就是不要管我；积极的自由，就是我要去建设\n\n\u003e\u003e\n\n\u003e\u003e 我个人觉得还是高水平的大锅饭比较好。否则就没底了，大学里发奖金给钱，搞得乌烟瘴气，拿了钱的觉得可以拿更多，没拿到的当然不高兴，不如一下子刷平。我爸就老不理解这个事，他说刷平了那不是谁都不工作了吗？的确有一批人不工作，什么都不发表。但大学、社会、个人生活都是一个生态系统，每个人有不一样的能力，有的人教学教得好，但不做研究，有的人就是发表不了论文著作，但这个人能聊天，聊天对我们来说也是很重要的财富。没有竞争压力了，大家最独特的才华才会体现出来。\n\n\u003e\u003e\n\n\u003e\u003e 但是我没有小资产阶级式的情绪化。我从小有一个特点，就是不太愿意多愁善感（unsentimental），我从来也不过生日，没有写信送卡片、关爱小动物之类的习惯，就是非常物质化地生存，要节省，不能浪费……\n\n◆ 距离感与直接性\n\n\u003e\u003e 因为有了人的劳动投入之后，真和假、实和虚、熟悉和不熟悉才会形成强烈的对比。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 回到怎么做到“直接”的方法上来，“直接”的意思是：第一，要有内容；第二，要有碰撞，有冲击力；第三，要写得直白。首先一定要在内容上有丰富的积累，对事情有切入，不能只讲在面上的总体判断。切入是要看清楚事情是怎么由内而外地构成。我上课的时候会讲这两者的分别，explain（解释）和explain away（搪塞），explain away就是造出一个自圆其说的说法，把这个事情settled（处理掉）。典型的例子，比如人口流动研究中的“推拉理论”[插图]或者经济中的供求关系，因为有供有求，所以事情发生。这不是解释，其实是把问题解释没了。真正的解释是切入，要进去，去问：需求到底从哪里来的？是怎样被构造出来？供给也是这样，资源怎样被调动？一定要看看里面的内容是怎样发生的，冲突是什么。\n\n◆ 人类学的圈子\n\n\u003e\u003e 的。至于同行，因为我对别人不太熟悉，不能够形成对话。这里其实有个问题，学术研究只是变成了同行之间的对话，你说话是为了让我批判。这是我一个朋友说的西方人类学陷入的困境：一个人类学家说了点什么，是为了让别的人类学家有话可说。\n\n◆ 非虚构写作\n\n\u003e\u003e 对很多青年思考者来说，他们不是职业的知识分子，那就要把自己和社会的关系想清楚，就是“认命不认输”[插图]的那个说法。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e LGBT是女同性恋者（Lesbian）、男同性恋者（Gay）、双性恋者（Bisexual）与跨性别者（Transgender）的英文首字母缩略字。LGBT群体\n\n◆ 学术不是天职\n\n\u003e\u003e 。如果有一个想法是从中文先发展出来的，我会用英语再表达一下，在英语表达的过程当中，就会发现原来很多想法不严密，有很多东西需要解释，一解释的话，就会发现所用的概念和所指的现象之间的联系并不自明。用了一个比较模糊的词，究竟对应什么具体现象，有时候对应不上。倒过来，如果用英文形成的想法，用中文去表达之后，也会发现很多问题。比如自己以为有一定创新意义的说法，用中文一说，发现其实没什么意思，没有新的见地在里头，敏锐性不够，杀伤力不足。所以中文可以检测出内容上究竟有多少新意，英文检测论证过程、定义是不是基本清楚，如果这两个都通过了，我就比较自信。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 讲事情无非是两种讲法。一种是大量地简化，简化到一个已经成型的模子里面，这样就把这个事情安定下来，放到盒子里，看起来很清楚。另外一种讲法是把内部的复杂性都讲出来，那就成了没底的事，因为要在比较有限的时间和空间里把事情讲出来，别人会越听越糊涂，因为细节都是绕的，整个盒子倒在桌上，不成系统。所以要提纲挈领。要讲故事，只有对大的问题有关怀，知道背后的基本问题指向在哪里，才能把复杂性带出来。打个比方，在日常生活里有很多矛盾搞来搞去，很纠结，它们不一定是钱多钱少的问题，也不一定是自由不自由的问题，什么算是有足够的自由这都是讲不清楚的事，真正引发矛盾的可能是一个具体的尊严问题，有的时候是面子，有的时候是所谓的人格，这也是老百姓经常用的话语。抓准了这个基本指向，细节都会有它的意义。\n\n◆ 民族与民粹\n\n\u003e\u003e 人口贩卖也是冷战之后、90年代初出现的政策概念。出现这个概念，很大程度上是因为西欧对来自东欧的性工作者的一种道德恐惧。首先，柏林墙倒塌之后，西欧觉得无数的人会从东边过来，很恐惧，要遏制这个情况。第二，西欧的公众对性产业仍然有根深蒂固的道德恐惧，但是又不能讲它不好，因为西欧的女权主义非常强势，认为性产业是一种“性劳动”，要充分尊重和保护，不应去禁止或在道德上谴责。所以政策就把性产业的问题转化成一个人口贩卖的问题。它的意思是说，要是从东欧移到西欧做性工作者，不可能是自愿的，没有妇女会自愿做性工作者，肯定是被贩卖的，是这么一个逻辑的链条\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 他要打破我们今天国别的框架，认为很多跨国联系长期存在，三百年前有贸易网络，可能比国家更重要。像我这样从北大出来的人，觉得这个没意思，因为今天最重要的框架还是国别。后来我才慢慢理解到，这种视野相当重要，不是去否认今天国家的重要性，而是如果对国家有历史性的了解，就能相对化，有距离感，那种乡绅的东西就会出来。乡绅为什么要学历史，西方的知识分子为什么要学古典学，学希腊、罗马，不是要简单地建立一个自我叙述，虽然它可以被那样利用，民族主义就是要构建出一个非常连贯的单线的历史叙述；而是可以帮助我们建立起另外一种时间感，长时间感，使你对今天的政治有一个比较好的把握，同时又有比较健康的距离感。\n\n\u003e\u003e\n\n\u003e\u003e 我比较反对创造性或者天才的说法。任何东西都是靠做出来的，不做的话什么都没有。小时候课本里面的达·芬奇画鸡蛋，都蛮真实的，技术性的东西相当重要，只讲空洞的东西是不行的。\n\n\u003e\u003e\n\n\u003e\u003e 。艺术不完全是靠想象，艺术很具体，你对今天早上那一束阳光的感受，是很具体的，要把握那种感受，一定要把它做出来，通过雕塑或者画画，色彩的调配，物质性很强。夸夸其谈相当可怕，好像一种灵感让自己感动起来，但是飘过去了就什么都没有\n\n\u003e\u003e\n\n\u003e\u003e 首先，没有所谓真正的全人类，全人类也是某一种视角。其次，我们如果也学你看全人类，其实是对自己在世界上位置的背叛，要尊重我们被殖民、被剥削的过程，必须靠民族主义来对抗那种普适、抽象的叙述。所以我觉得民族主义在今天还是很重要，我把它看作一种斗争工具，但如果认为这是中国人对世界格局、世界关系本质化的反应，那就一点意思都没有，因为我们知道民族主义在中国是晚清才兴起的，是很多人的斗争，把它消解成那样，其实很不负责任。\n\n\u003e\u003e\n\n\u003e\u003e 欧洲的历史学家是把莱茵河西岸叫作市民的民族主义（civic nationalism），把莱茵河东岸叫作民族的民族主义（ethnic nationalism）。西岸的意思就是以法国为代表的共和主义，有共同的政治理念，不管什么肤色什么民族，只要尊重我的政治理念和宪法，都是公民。东岸是东欧、巴尔干，主要看你爹是谁、你姓什么、信什么宗教、皮肤的颜色。后者是种族性的，而前者是原则性的，一直有这个区分。\n\n\u003e\u003e\n\n\u003e\u003e 我写过，中国的社会主义革命其实是民族主义和国际主义紧密结合的，否则不可能有社会主义，社会主义是世界性的。官方界定毛泽东的最大贡献，不是建立了新中国，而是“伟大的马克思主义者”，他把马克思主义提到一个新的高度，是世界性的贡献。现在把他讲成一个民族主义者。中国有很多人都是民族主义者，包括章太炎、孙中山，开始排满，然后要共和，然后又走社会主义道路，大家都在世界格局里寻找位置，民族这条线划在哪里，是非常动态的过程，不是天然给予的范畴。现在很多民族主义的情绪是把民族这条线给绝对化了，看不到历史上民族是怎么形成的，但是又拿历史上的斗争和自己狭隘的理解套起来，所以很多年轻人也就被绕进去了。\n\n◆ 新加坡启蒙\n\n\u003e\u003e 她让我理解到电影、诗歌、艺术、民谣其实和学术一样，都是人类自我表达的方式。你想多可怕，我要等到那个时候才理解到学术是人的一种实践，到了三十多岁才启蒙，在牛津都没有理解到。因为从小到大，学习是天职，从来不问为什么学习，没有想过学术和寓言其实是一回事，跟唱歌是一回事。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 我们讲到中心和边缘，大有大的难处，而因为小，能看到的东西就多。这个话听起来很奇怪，大的东西内在不是更多吗？是，中国很复杂，但中国中心的任务往往是消解这些复杂性，把它简单化、统一化，因为它怕这个复杂。但在新加坡这样的小地方，政治上当然要统一，但文化上要生存，唯一的办法就是要强调多样性。\n\n\u003e\u003e\n\n\u003e\u003e 新加坡比温州还小，温州有九百多万人口，新加坡只有五百万\n\n\u003e\u003e\n\n\u003e\u003e 你的这个问题提得很好，为什么会在一个小地方受启蒙。正是因为把我原来那些大的象征性、符号性、固定性的思维，那种自大解放出来了。瓦妮老笑我，她一下子就能把我看清楚，估计她经常见我们这样的人。她说印度尼西亚学者也有这个问题，被国族的自我论述淹没，动不动就要讲大的东西，在不理解、不懂的情况下，把国族放到很高的层次上。新加坡就不能那么讲，它也没有自己的历史，就是一个小岛，1899年开埠，然后英国人殖民，后来又归了日本人。这样一段很短的历史，没有统一的语言，没有统一的文化，是一个本不应该存在的国家。到现在为止，他们心理上的出发点还是这样，“我们的存在，其实违反了历史的自然规律”，所以要不断努力，要走在历史前头。这个意思很深，但这正是我们生存的意义所在，永远不能把任何东西认为是自然而然的。\n\n\u003e\u003e\n\n\u003e\u003e 在小的地方，更清楚地看到人的世界。东南亚很有趣，你看国家很小很弱，但生活也可以很好，不在世界中心就没有意义了？\n\n◆ “盘根”式共同体\n\n\u003e\u003e 为什么“人的再生产”，而不是物的再生产，变得越来越重要？在流动的过程中，是不是告诉我们一种新的全球范围内的政治经济学关系？物的生产的重要性减弱了，人的生产的重要性上升了。生产出多少辆车，做多少双鞋，其实赚不了多少钱，不如好的大学、好的医疗技术、好的养老环境重要。“人的再生产”现在已经成为很重要的财富积累和价值的来源。背后的意思是，在国际格局中，谈中国崛起、亚洲崛起，如果只是追求物的生产，那肯定永远追不上。因为你在做太阳能板的时候，别人在新的“生活方式”上下功夫，而生活方式是赚钱的来源。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 真正的纽带一个是共同的研究兴趣；再一个是个人关系，就是友情；第三是异质性，我们每个人不一样，我的研究想得比较大、比较空，但有的人就做得很细，有互补性。也有国度上的异质性，有的人做泰国研究，有的人做日本，有的人做中国。团体内部一定要有异质性，而且这个异质性要比较大，如果大家都是做中国某一件事的研究，那在一起能说什么呢？关系也变得紧张，到最后还有知识产权、署名权问题。案例不一样，视角不一样，甚至有的时候在一些根本问题上不一样，也没有关系，可能有的人觉得我这种做法太空，不可能实现，但也可以聊，这种“空”可能对他也有启发性，有想象力。国内的主要问题还是异质性不够，纯粹的同质性的合作关系，深化不下去。\n\n◆ 跨国性的自洽的小世界\n\n\u003e\u003e 韦伯（Max Weber）讲得很清楚，理性化可能是一种牢笼，所以我们都渴求通过一种有机的个人性的盘根式的小世界抵制这个体制。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 我们碰到乌干达的朋友、苏格兰的朋友时，要了解他们的本土，同时又要建立一种共通性，这里就要把握好层级的问题。我们之间究竟重合在哪里，在共同建立起来的东西里，经过了哪些抽象化，提炼了哪些，删除了哪些特殊性，要把这个过程想得很清楚。所以，地方性和全球性都不是真实的，都是人为的。\n\n◆ 大学应该寻找例外\n\n\u003e\u003e 现在去看那些改革开放四十年的回顾，都认为恢复高考是很重要的机会，觉得这是天经地义的事，恢复高考就说明社会恢复了基本的理性，实现了基本的正常，但这是谁的正常？对农民来讲，恢复不恢复高考，对当时90%的农民来讲影响不大，但是恢复高考把此前的官僚和城市知识分子一下子拢进来，其实是一个政党和当时社会主义体制下的精英的重新联盟。大学当然是搞精英主义，你看现在回忆恢复高考的人，很多都是干部子弟，从农村回到城市，不仅恢复了原来比较优越的地位，而且用这种途径在文化、道德上使自己的优越正当化、合法化。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 总的来讲，确实有意思的事不太多。说老实话，学界的进步比我原来想象的要小，我原来认为国内那么多变化，听他们一讲，提的都是很有意思的现象，却没有什么分析，蛮奇怪的。\n\n◆ 新研究\n\n\u003e\u003e 再生产和学生的流动就很有关系，现在的英语教育、出国留学，不仅是简单的镀金，而是要改变人本身。家长们不仅仅是想让孩子读个洋学位好找工作，而是越来越觉得国内的教育不符合人性，把孩子的天性快乐搞没了，出国是为了保护“人”。\n\n◆ 共同理想\n\n\u003e\u003e 而自我证明这个概念是个悖论。要证明自己其实就是没有自己，意思是说，要通过已经预设的原则和标准、别人的逻辑和流程来证明自己的存在，其实是取悦别人，把自己搞没有了。对个人来讲，就是要求一份认可，这个是我们在教育上的教训，都太深刻了，包括我自己。做事情是要活得光鲜，不是活得快乐。去哪里旅游，主要是拍照让人看。前提当然也是一种自卑。英国就从来没有要证明自己，日本军国主义兴起，就是要证明自己不比欧洲差。所以你讲得很对，自我证明是很危险的。\n\n◆ 乡绅作为方法\n\n\u003e\u003e 原来就是这个意思，利用人民代表去取代乡绅，这就是很复杂的一个问题。现代国家的设立，很多人说导致了劣绅淘汰良绅，资源掠夺型的、自私自利的乡绅取代了原来比较文化型的乡绅。人民代表完全是地方各界群众的代表，如果能够把人民代表大会制度做好，那也是乡绅的现代化，好的人民代表就应该是乡绅。\n\n◆ 访谈之前\n\n\u003e\u003e 有一个现象我现在感到很奇怪，中国有部分青年激进化程度比我想象的还要高。这提出一个信号，“悬浮”会导致两种效果。第一个是焦虑，大家都很忙，跑来跑去，一些基本的生活理念变得非常保守，就是所谓的新家庭主义，中国式逼婚，一定要生小孩，一定要买房子，跟这种单一化联系到一起。正因为“悬浮”之后，自己当下的行为本身不能产生意义，就有点原教旨主义，家里那点事儿成了人生唯一的意义寄托。这种新保守主义的对立面就是激进，因为多样、矛盾的经历很难厘清、给予意义，所以觉得需要革命式的、全面的、翻天覆地的变化，其他都是虚幻，都是假的，都在压迫。“悬浮”解释了经济为什么能够增长那么快，全国人民都奔着一个目标去，都在为自己奋斗，拼命干活，挣钱，也导致了这两个潜在的问题。你觉得中国思想界能够给这样的同学提供什么帮助？\n\n◆ 人的再生产\n\n\u003e\u003e 如果拿人的流动去看，原来的发达国家依然是“人的再生产”的产业中心，它们把握教育、医疗和各种知识产权，以及生活方式的潮流。把资本主义的这个变化和前面我讲的流动趋势放在一起，似乎得到了一个解释，为什么中国人在变富的同时追求所谓“早发早移”，也就是说，尽快赚钱然后尽早移民，很重要的原因就是移民并不是为了赚钱，而是为了“人的再生产”，为了更加稳定的可预期的未来，为了更好的子女的教育、更洁净的空气、更多的绿地，但赚钱还得在中国赚，因为这里的利润比西方还要高。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 看中国留学生的历史，改革开放之后大概可以分三个阶段。第一个阶段是从1976年到1992年。教育是改革开放的第一枪之一，1978年中美有一个教育交流“口头谅解”[插图]，那时的留学生以公派为主，年纪偏大，以工科为主，硕士特别是博士为主，从来没有听过有人出去上本科。而且一定要回来。留学带有非常强的价值取向，就是去西方学先进的技术、理念、制度、管理方式，作为中国未来的榜样。第二个阶段是从90年代到最近，不再是公派为主，体现出个体化、低龄化、学科多样化，但我觉得最重要的一点变化是价值取向的取消。价值取向有两个变化，第一，不再必然回国报国，不再为报国而学习，第二也不认为西方代表着未来，是榜样国家。为国服务和普世价值，两重意义都被动摇，更加功利性、工具化。最近就很明显，大家不再觉得美国的制度是榜样，但问他为什么要去，他说当然要去，去了那儿有空气，有绿地，工作还很舒服。\n\n\u003e\u003e\n\n\u003e\u003e 今天更明显，很多年轻人去了美国留学，不觉得美国代表任何终极价值，反而觉得中国制度很好，但是一心要待在美国，成天就是摇号，一年摇三次，想拿到绿卡。\n\n\u003e\u003e\n\n\u003e\u003e 但是在很多鼓励留学生回国创业的政府项目中，我也看到一个悖论。这些项目一方面非常强调经济理性，说我们投入那么多钱，鼓励他们回来，主要是为了促进经济发展，对我们生活有利，肯定是双赢合作。但另一方面，具体怎么做，怎么把钱分出去，希望你做什么，操作的模式又有非常强的仪式化特征。比如，如果只要经济合作，直接谈项目就完了，为什么需要把所有项目集中在一起，开一个大会，搞签字仪式？开这个会来很多人，花不少冤枉钱。具体的活动流程高度仪式化，也有很强的情感意识形态，包括“祖国”、“母亲”、“贡献”这种话语在里面。这种留学生回国政策，把仪式和理性结合在一起，我叫它仪式经济。这个概念至少有两个意义。第一是国家投入很多钱做这个仪式，所以本身存在一个办仪式的经济。第二，真正让这个仪式获得说服力，让人信服它的，是一个经济主义话语，是经济双赢，理念上是高度经济主义的。\n\n◆ 阶层流动的悖论\n\n\u003e\u003e 我们可以说这种经济增长确实是物质生产主义的，主要靠物质生产的积累来实现高速的大规模的增长，很大程度上正是以不重视“人的再生产”为代价。举一个关于“悬浮”的例子。有一位出租车司机，开两班车，我问他怎么不累，身体怎么样。他说：“身体？身体是以后的事。”这就是以“人的再生产”为代价，来追求高速度。很多人说，你说得太理想了，要是大家不那么高速的话，我们年轻人基本的物质条件上不去，就会有大规模的失业、贫困，会有更大的问题。这个有点似是而非。要用中国现在的经济总量来讲的话，如果进行彻底地再分配，这些问题都会解决掉，我们的物质总量，够大家过得好。现在我们好像被绑架了，一定要更高更快更强，正是因为不太愿意进行激烈的再分配，已经获得的人还要获得更多，同时又要把下面的人也提上去，这个确实很难，今后可能还是要慢慢走向再分配的思路。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 钱是我赚的，怎么可以再分配？这个人类学有话可讲。你讲到小时候的集体生活，占有的概念是很薄弱的，人应该分享，“占有”确实是改革开放之后才逐渐盛行，人们变得斤斤计较。现在“占有”成为重要的人生目标，确实值得更好地研究，因为中国传统里没有特别强的占有概念。最重要的资源是土地吧，土地有地表、地下权的分离，土地流转比较频繁，大多数情况下地主不是特别大，富不过三代，轮流来，宗族又有义田来济贫。现在的“占有”，占和有可以说是对立的。你居者有其屋，那是“有”；你一个人买那么多套房子，把房价抬得那么高，自己食利，那就是“占”了。\n\n◆ 再谈乡绅\n\n\u003e\u003e 之前您提到过舅舅对您影响很大，这次在温州，我见到他，果然是一个本地通，他似乎知道温州的一切是怎么构成的，真是一个具体的有乡绅感觉的例子。中国社会里其实一直有很多这样的人，散布在各行各业里，并不好统一定义他们，就是什么都知道一点，什么都能讲，而且讲得很有趣，能把生活的质感和层次讲出来。\n\n\u003e\u003e\n\u003e\u003e\n\n\u003e\u003e 另外这和我们对性关系、性别关系的认识都有关。比如在西方，这些玩笑在我们同学这样的社会阶层是不可想象的，特别是男女同学都在一起的时候。在他们看来，性关系是很直接的事情，不需要遮掩，所以也不用到一定年龄说出来。你要跟一个西方人开这样的玩笑，像吃豆腐之类，他第一反应是你在讲一个事实，能把他吓死。然后你说，不用怕，只是个玩笑，他就更糊涂了，对他们来说这没有什么好笑的。但我们讲出来是有一种解放感，然后这个解放感会在群体里形成特殊的亲密感，所以有趣。这类玩笑在印度、日本也不太可能，要看具体的圈子。这又和对性别关系的理解有关。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7":{"title":"🗜 效率工具","content":"\n# 🗜 效率工具\n\n比较好用的一些工具\n\n## Mac\n\n- Snipaste,截图工具，随意贴图，很方便\n- copilot，没有用过 Copilot 的程序员是不完美的，用了后按 Tab 比 cv 多\n- uTools，很多实用的工具集，基本不用打开 google 翻译，json 之类的网站了\n- [[Obsidian]]，我的主力记笔记软件\n- [[Notion]],页面好看，database 型笔记软件，适合剪藏和收集\n- [[Picgo]], 自建图床\n- [[Wrap]]:AI shell 工具\n- [[VSCode]] ：主力编程软件\n- [[Chrome]]：主力浏览器的 [[Chrome插件]] 当然必不可少\n- Hidden Bar: 小图标管理，可以替代Bartender \n\n## Windows\n\n好久以前的都不记得了，先占个坑\n\n# 其他文章推荐\n\n## Mac\n\n[也许是 Apple 平台最全能的视频播放 App：Infuse - 少数派](https://sspai.com/post/68706)\n\n## 开源软件\n\n- [分享 12 款我常用的开源免费工具 - 掘金](https://juejin.cn/post/7200582238580752445)\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/-%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%A7%80%E7%9A%84%E5%B7%A5%E4%BD%9C%E4%B9%A0%E6%83%AF%E5%80%BC%E5%BE%97%E5%AD%A6%E4%B9%A0":{"title":"《 有哪些优秀的工作习惯值得学习？》","content":"\n# 《 有哪些优秀的工作习惯值得学习？》\n\n#input\n\n## Meatdata\n\n- author： [[常青]]\n- link：[有哪些优秀的工作习惯值得学习？ - 知乎](https://www.zhihu.com/question/22960521/answer/2275436412)\n- tag：\n- date: [[2022-04-26]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n### 主次思维的本质是什么\n\n**真实的世界从来不是单靠勤奋这个变量支撑运行的，除了勤奋外，我们还被两条残酷的事实支配着…..**\n\n- **残酷的事实 1 ：我们的资源永远是稀缺的****，把这个“稀缺”换到我们个人上，这个稀缺可以是：（**人力、物力、财力、精力、时间、注意力、意志力…..**）**\n- **残酷的事实 2 ：最终结果往往取决于重要的少数**，世界上的财富分配取决于大名鼎鼎的[[二八定律]]\n\n### 为啥我们会分不清主次\n\n有两个关键原因:\n\n- 我们几乎没有给事情做统筹规划的习惯，总是习惯于遇到问题解决问题。[[管状视觉]], 比如摄影时候的聚焦\n\n\t\u003e 经济学家管这种**忙到没时间思考，从而导致越来越忙的死循环现象叫做“ [[稀缺陷阱]] ”**\n\n- 忙碌所带来的“充实感”可以缓解焦虑\n\n### 怎么分清主次\n\n- 理任务，有清晰马上可以落地执行的日计划、周计划、还有负责宏观把控的月计划、季度计划、年计划….  \n为了避免我陷入低水平的重复，我还有对应的日复盘、周复盘、月复盘、季度复盘，年复盘…..  \n并根据现实的反馈，对每个阶段进行校正，时刻调整，确保我的方向始终走在主航道上，**而不是让自己走一步看一步，被动的等待着问题的到来，陷入战术上的勤奋不可自拔….**\n- 明目标，**当我们陷入忙碌，或焦虑的时候，问问自己：** 我们做这件事的最终目标是什么？我做这件事的目的是为了达成什么结果？我们当前的动作有利于达成这个结果吗？\n- 分主次？ 来源 [[《矛盾论》]].**我们遇到问题的时候，一定要分清楚哪些要素或者事项是问题的主要矛盾和次要矛盾。** **当分清楚后，先把资源集中攻克主要矛盾，当主要矛盾解决后，次要矛盾再上升为主要矛盾，如此循环，直到问题终结**！！  \n\t当事情很多让你杂乱无章的时候，请思考：**这些事情中，哪一件事情不优先解决，后面的事情就没有办法推进，或者会对后面的发展产生重大影响。**\n- 知轻重,**要意识到我们资源的稀缺，意识到大部分的结果，被少数的事情决定着，在资源有限的情况下，我们千万不要傻乎乎的平均发力！！！** ，也就是做减法\n- 控缓急？**做事一定要考虑我们的时间维度，我们只有给事情配上了时间的优先级，它才是清晰可见，井井有条的，否则你做事的时候必然会乱作一团。** 对任务的部署\n\n### 主要的是培养主次思维\n\n**主次思维，最重要的是思维，而不是技巧，它的精粹是道，而非术！！**\n\n## 闪念\n\n- 从几个标题可以很好的看出用了[[黄金圈理论]], 这样比较可以比较清晰的讲清楚一件事\n\n## 常青笔记\n\n## 重点摘要\n\n- 正如那句调侃做事不分主次的名句所说：**如果这个世界运行的法则是靠低水平忙碌就能致富的话，那么这个世界的首富应该是：驴！！！**\n- **所谓知轻重，就是放弃的艺术，是舍弃的艺术，是做减法的艺术，无论工作生活，只有会做减法，我们的人生才是高质量的。**\n- **意识比技巧重要，因为你即使你没有术，只要你带着意识，你也会在实践中慢慢的总结出自己的术的。**\n- **当你面对一堆问题的时候，你脑中浮现的不是焦虑，不是慌张，不是头大，而是能在脑中问自己：**\n\n\u003e 这一堆事情中，那些个条件或因素是主要矛盾？  \n\u003e 哪些因素是这个问题的杠杆解？  \n\u003e 那些必须留？  \n\u003e 那些可以仍？  \n\u003e 那些现在做？那些可以暂缓做？  \n\u003e 那些必须自己做？  \n\u003e 那些可以外包做？  \n\u003e ……\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E6%9D%8E%E5%85%89%E8%80%80%E8%AE%BA%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%96%E7%95%8C":{"title":"《 李光耀论中国与世界 》","content":"\n# 《 李光耀论中国与世界 》\n\n## Meatdata\n\n- author： [[李光耀]]\n- link：[李光耀论中国与世界-李光耀口述-微信读书](https://weread.qq.com/web/reader/bd732e20543c26bd747b0c7)\n- tag：\n- date: [[2022-02-17]]\n- Notes:\n\n## 读前准备\n\n- 读完写一篇对李光耀的认识\n- 李光耀对中国是什么样的认知\n- 中国的优点和缺点\n\n## 总结\n\n## 闪念\n\n### 中国的未来\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E7%83%A7%E6%8E%89%E6%95%B0%E5%AD%A6%E4%B9%A6-%E9%87%8D%E6%96%B0%E5%8F%91%E6%98%8E%E6%95%B0%E5%AD%A6":{"title":"《 烧掉数学书： 重新发明数学 》","content":"\n# 《 烧掉数学书： 重新发明数学 》\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2022-02-09]]\n- Notes:\n\n## 总结\n\n- 读着感觉挺无趣的，先不读了\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86":{"title":"📚 知识管理","content":"\n# 📚 知识管理\n\n从零散的知识笔记，从一页页的读书方式转变成从书籍从提取知识而不是[[信息]]\n\n# 什么是知识体系\n\n**就是把各种规律连接起来的体系。**\n\n- [[我的知识管理系统]]  \n- [[渐进式总结笔记]]\n- [[我的信息处理流]]\n\n# 有什么知识管理体系\n\n- L 先生的[[INKP]]\n- shaonan的[[P.A.R.A]]\n\n# 参考资料\n\n- [分享我的生活管理系统](https://mp.weixin.qq.com/s/iR9UrlKZU81NFqKqkE6qTw)\n- [L 先生的知识体系指南](https://mp.weixin.qq.com/s/SZ-Vn587R590RAGyZH-TPA)  \n- [[建立知识体系，这份指南就够了]]  \n- [道长的个人知识体系](https://mp.weixin.qq.com/s/SBKGfQWu8nBGhlRKs9EYKQ)\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/-%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95":{"title":"《 置身事内：中国政府与经济发展 》","content":"\n# 《 置身事内：中国政府与经济发展 》\n\n## Meatdata\n\n- author： [[兰小欢]]\n- link：[置身事内：中国政府与经济发展-兰小欢-微信读书](https://weread.qq.com/web/reader/2a332d10726332f72a34943)\n- tag：\n- date: [[2022-02-14]]\n- Notes:\n\n## 读前准备\n\n- 这本书和[[《 李光耀论中国与世界 》]] 是沈琦推荐的，更好的了解中国国情的书\n- 我希望从这本书里知道以下几个问题\n\t- [[中国政府自顶之下是如何执行的]]\n\t- 中国近些年高速发展中，有哪些不为人知的故事？ 比如[[税收改革]]\n\t- 高速发展背后有什么隐患？ 本书以一种乐观态度看待中国的发展，相信中国能应对好\n\t- 作为一个普通人，怎么才能更好的生活在中国？\n\t\t- 生活过得好一点，比大多数宏伟更宏伟。\n\t\t- 未来如果地票政策，农村户口还是要留有的\n\n## 总结\n\n## 闪念\n\n- 在2012年592个国家扶贫开发工作重点县中，却有超过一半位于省交界处，贫困发生率远高于非边界县。\n- 随着城市化发展，人们对公共服务需求不断变化，有以下两种改革思路\n\t1. 一是加强县的独立性和自主性，弱化其与市区的联系。第二章将展开讨论这方面的改革，包括扩权强县、撤县设市、省直管县等。\n\t2. 二是扩张城市，撤县设区。撤县设区扩张了城市面积，整合了本地人口，将县城很多农民转化为了市民，有利于充分利用已有的公共服务，发挥规模收益。\n- 古代的官和吏，区别很大。“官”基本都是科举出身的读书人，下派到地方任职几年，大多根本不熟悉地方事务，所以日常工作主要依靠当地的“吏”。这些生于斯长于斯的吏，实际权力大得很，是地方治理的支柱，不但不受官员调动的影响，甚至不受改朝换代的影响。\n- 写论文是一个高度个人化的行为，所以导师被称为”老板“，而其他授课老师并没有\n- 成功执行的政策都是经过多方的征求意见、协商和修改的，而不是机械的命令与执行，所以理解利益冲突，理解协调和解决机制，是理解政策的基础。 以下是93年的税收改革\n\n\t\u003e 但为了改革顺利推行，中央最终做了妥协，决定在全国范围内用1993年做基年。这个决定立刻引发了第四季度的收税狂潮，根据项怀诚和刘克崮的回忆：（项怀诚）实际上，9月份以后确实出现了这些情况。在那一年，拖欠了多年的欠税，都收上来了。一些地方党政领导亲自出马，贷款交税，造成了1993年后4个月财政收入大幅度增加。（刘克崮）……分别比上年同期增长60%、90%、110%和150%，带动全年地方税收增长了50%～60%\n\n- 1998年发生了两件大事确定了城市对土地建设的垄断权利\n\t1. 第一是单位停止福利分房，逐步实行住房分配货币化，商品房和房地产时代的大幕拉开。\n\t2. 修订后的《中华人民共和国土地管理法》开始实施，基本上锁死了农村集体土地的非农建设通道，规定了农地要想转为建设用地，必须经过征地后变成国有土地\n\n![https://res.weread.qq.com/wrepub/epub_40055543_11](https://res.weread.qq.com/wrepub/epub_40055543_11)\n\n- 如果有机会进行下苏联的计划经济，美国的资本经济和中国的对比了解 #状态/todo\n\n\t\u003e 强调政府的作用，当然不是鼓吹计划经济。过去苏联式的计划经济有两大特征。第一是只有计划，否认市场和价格机制，也不允许其他非公有制成分存在。第二是封闭，很少参与国际贸易和全球化。如今这两个特点早已不复存在，硬谈中国为计划经济，离题万里。\n\n- 因此我国的市场化改革始于满足社会需要。1981年党的十一届六中全会的**\"人民日益增长的物质文化需要同落后的社会生产之间的矛盾\"**转化到 十九大的**”人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾“**\n- 原先制造业可以通过中国的人口规模摊薄成本而不用去扩张海外市场，\n- 收入差距不可能完全消除，但社会也无法承受过大的差距所带来的剧烈冲突，因此必须把不平等控制在可容忍的范围之内。影响不平等容忍程度的因素有很多，其中最重要的是经济增速，因为经济增速下降首先冲击的是穷人收入。不妨想象正在排队的两队人，富人队伍前进得比穷人快，但穷人队伍也在不停前进，所以排队的穷人相对来说比较有耐心。但如果穷人的队伍完全静止不动，哪怕富人队伍的前进速度也减慢了，困在原地的穷人也会很快失去耐心而骚动起来。这种现象被称为“[[隧道效应]]”（tunnel effect），形容隧道中两条车道一动一静时，静的那条的焦虑和难耐。\n\n## 常青笔记\n\n- [[对于缴税的看法]]\n- [[地方债的治理与改革]]\n- [[腐败和经济发展的关系]]\n- [[银行危机的原因]]\n- [[增发货币]]\n- [[产能过剩]]\n- [[如何提高居民的收入和消费]]\n- [[我国地方政府推动经济发展的模式]]\n- [[政府竞争与市场竞争的差别]]\n- [[自由贸易和保护主义的冲突]]\n\n## 重点摘要\n\n置身事内：中国政府与经济发展  \n兰小欢\n\n◆ 献言\n\n\u003e 社会进程本是整体，密不可分。所谓经济，不过是研究者从这洪流中人工提炼出的部分事实。何谓经济，本身已然是种抽象，而之后大脑还须经过若干抽象，方能复刻现实。没有什么事是纯粹经济的，其他维度永远存在，且往往更为重要。——约瑟夫·熊彼特《经济发展理论》\n\n◆ 前言 从了解现状开始\n\n\u003e 在我国，政府不但影响“蛋糕”的分配，也参与“蛋糕”的生产，所以我们不可能脱离政府谈经济。必须深入了解这一政治经济机体如何运作，才可能对其进行判断。\n\u003e\n\u003e 本书注重描述现实，注重解释“是什么”和“为什么”。当不可避免涉及“怎么办”的时候，则注重解释当下正在实施的政策和改革。对读者来说，了解政府认为应该怎么办，比了解“我”认为应该怎么办，重要得多。\n\n◆ 第一节 政府治理的特点\n\n\u003e 用牛运书，牛要累得出汗；用屋子放书，要堆到屋顶（栋：脊檩）。形容藏书非常多。汗牛充栋\n\u003e\n\u003e 简单说来，党负责重大决策和人事任免，政府负责执行，但二者在组织上紧密交织、人员上高度重叠，很难严格区分。\n\u003e\n\u003e 这种从上到下的部门垂直关系，被称为“条条”，而横向的以行政区划为界的政府，被称为“块块”。\n\u003e\n\u003e 通常情况下，“条条”关系是业务关系，“块块”关系才是领导关系，因为地方党委和政府可以决定人事任免。\n\u003e\n\u003e 尤其当没有清楚的先例和流程时，办事人员会在部门之间“踢皮球”，或者干脆推给上级，所以权力与决策会自然而然向上集中。制度设计的一大任务就是要避免把过多决策推给上级，减轻上级负担，提高决策效率，所以体制内简化决策流程的原则之一，就是尽量在能达成共识的最低层级上解决问题。\n\u003e\n\u003e 在任何体制下，权力运作都受到两种约束：做事的能力及做事的意愿。前者取决于掌握的资源，后者取决于各方的积极性和主动性\n\n◆ 第二节 外部性与规模经济\n\n\u003e 一方面，因为规模经济，覆盖的人越多越划算，政区越大越好；另一方面，受制于人们获取这些服务的代价和意愿，政区不能无限扩大\n\u003e\n\u003e 第一个重要因素是人口密度。我国幅员辽阔，但人口分布极不平衡。如果从黑龙江的瑷珲（今黑河市南）到云南的腾冲之间画一条直线，把国土面积一分为二，东边占了43%的面积却住了94%的人口，而西边占了57%的面积却只住了6%的人口。(11)\n\u003e\n\u003e 第二个重要因素是地理条件。古代交通不便，山川河流也就成了行政管理的自然边界，\n\u003e\n\u003e 第三个重要因素是语言文化差异。汉语的方言间有差异，汉语与少数民族语言也有差异。若语言不通，政务管理或公共服务可能就需要差异化，成本会因此增加，规模收益降低，从而影响行政区域划分\n\u003e\n\u003e 理解了这些因素，就能理解很多政策和改革。比如，随着经济活动和人口集聚，需要打破现有的行政边界，在更大范围内提供无缝对接的标准化公共服务，所以就有了各种都市圈的规划，有些甚至上升到了国家战略，比如长三角一体化、京津冀一体化、粤港澳大湾区等。再比如，地理阻隔不利沟通，但随着基础设施互联互通，行政区划也可以简化，比如撤县设区。此外，理解了方言和文化的多样性，也就理解了推广普通话和共同的文化历史教育对维护国家统一的重要性。\n\u003e\n\u003e 我国经济中有个现象：处在行政交界（尤其是省交界处）的地区，经济发展普遍比较落后。省级的陆路交界线共66条，总长度5.2万公里，按边界两侧各15公里计算，总面积约156万平方公里，占国土面积的六分之一。然而，在2012年592个国家扶贫开发工作重点县中，却有超过一半位于省交界处，贫困发生率远高于非边界县。(15)这一俗称“三不管地带”的现象，也可以用公共物品规模效应和边界的理论来解释。\n\u003e\n\u003e 这些因素在民国时期已存在，所以“三不管地带”才为革命时期的中国共产党提供了广阔空间。家喻户晓的革命圣地井冈山，就位于湖南、江西交界处的罗霄山脉之中。其他很多著名的革命根据地也在省界处，比如陕甘宁边区、晋察冀边区、鄂豫皖边区、湘鄂赣边区等。红军长征中非常重要的“四渡赤水”，就发生在川黔滇边界的赤水河地区。(17)\n\u003e\n\u003e 。但省界处的问题依然没有完全解决。一些省份把水污染严重的企业集中到了本省边缘的下游区域，虽然本省的平均污染水平降低了，下游省份的污染却加重了。(19)\n\u003e\n\u003e 区域性整合的基本单位是城市，但在城市内部，首先要整合城乡。在市管县体制下，随着城市化的发展，以工业和服务业为经济支柱的市区和以农业为主的县城之间，对公共服务需求的差别会越来越大。调和不同需求、利用好有限的公共资源，就成了一大难题。改革思路有二：一是加强县的独立性和自主性，弱化其与市区的联系。第二章将展开讨论这方面的改革，包括扩权强县、撤县设市、省直管县等。二是扩张城市，撤县设区。1983—2015年，共有92个地级市撤并了134个县或县级市。(20)比如北京市原来就8个区，现在是16个，后来的8个都是由县改区，如通州区（原通县）和房山区（原房山县）。上海现有16个市辖区，青浦、奉贤、松江、金山等区也是撤县设区改革的结果。\n\n◆ 第三节 复杂信息\n\n\u003e 但上级不可能掌握和处理所有信息，所以很多事务实际上由下级全权处理。即使上级想干预，常常也不得不依赖下级提供的信息。比如上级视察工作，都要听取下级汇报，内容是否可靠，上级不见得知道。如果上级没有独立的信息来源，就可能被下级牵着鼻子走。\n\u003e\n\u003e 唐朝以后，“官”基本都是科举出身的读书人，下派到地方任职几年，大多根本不熟悉地方事务，所以日常工作主要依靠当地的“吏”。这些生于斯长于斯的吏，实际权力大得很，是地方治理的支柱，不但不受官员调动的影响，甚至不受改朝换代的影响。\n\u003e\n\u003e 信息复杂性和权力分配是个普遍性的问题，不是中国特色。在各国政府中，资深技术官僚都有信息优势，在诸多事务上比频繁更换的领导实权更大。\n\u003e\n\u003e 。按照国务院2012年最新的《党政机关公文处理工作条例》（以下简称《条例》），公文共分15种，既有需要下级严格执行的“决定”和“命令”，也有可以相对灵活处理的“意见”和“通知”，还有信息含量较低的“函”和“纪要”等。\n\u003e\n\u003e 这种“层层加码”现象的背后，既有上级层层施压和摊派的因素，也有下级为争取表现而主动加压的因素。\n\u003e\n\u003e 相关机构，其下属的土地管理部门根本无力防范和惩处。2006年，中央建立国家土地督察制度，在国土资源部（现改为自然资源部）设立国家土地总督察（现改为国家自然资源总督察），并向地方派驻国家土地监督局（现改为国家自然资源督察局）。这一督察机制总体上遏制了土地违法现象。但中央派驻地方的督察局只有9个，在督察局所驻城市，对土地违法的震慑和查处效果比其他城市更强，这种明显的“驻地效应”折射出督察机制受当地信息制约之影响。(27)\n\u003e\n\u003e 大学老师考核学生一般有两种方式：考试或写论文。若考卷都是标准化的选择题，那老师虽有出题的权力，但不能决定最后得分。但若考卷都是主观题，老师给分的自由度和权力就大一些。若是研究生毕业论文，不存在严格的客观判断标准，导师手中的权力就更大了，所以研究生称导师为“老板”，而不会称其他授课教师为“老板”。\n\u003e\n\u003e 但大多数事情都不可能如此简单清楚，千头万绪的政府工作尤其如此：一件事该不该做？要做到什么程度？怎么样算做得好？做好了算谁的功劳？做砸了由谁负责？这些问题往往没有清楚的标准。一旦说不清楚，谁说了算？所谓权力，实质就是在说不清楚的情况下由谁来拍板决策的问题。(29)\n\u003e\n\u003e 如果这种说不清的情况很多，权力就一定会向个人集中，这也是各地区、各部门“一把手负责制”的根源之一，这种权力的自然集中可能会造成专权和腐败。\n\u003e\n\u003e 因为信息复杂，不可信的信息比比皆是，而权力和责任又高度个人化，所以体制内的规章制度无法完全取代个人信任。上级在提拔下级时，除考虑工作能力外，关键岗位上都要尽量安排信得过的人。\n\n◆ 第四节 激励相容\n\n\u003e 上级政府想做的事大概分两类，一类比较具体，规则和流程相对明确，成果也比较容易衡量和评价。另一类比较抽象和宽泛，比如经济增长和稳定就业，上级往往只有大致目标，需要下级发挥主动性和创造性调动资源去达成。对于这两类事务，事权划分是不同的。\n\u003e\n\u003e 激励相容原则要求给地方放权：不仅要让地方负责，也要与地方分享发展成果；不仅要能激励地方努力做好，还要能约束地方不要搞砸，也不要努力过头。做任何事都有代价，最优的结果是让效果和代价匹配，而不是不计代价地达成目标。若不加约束，地方政府要实现短期经济高速增长目标并不难，可以尽情挥霍手中的资源，大肆借债、寅吃卯粮来推高增长数字，但这种结果显然不是最优的\n\u003e\n\u003e 激励相容原则首先要求明确地方的权利和责任。我国事权划分的一大特点是“属地管理”：一个地区谁主管谁负责，以行政区划为权责边界。这跟苏联式计划经济从上到下、以中央部委为主调动资源的方式不同。\n\u003e\n\u003e 要逐步将社会治安、市政交通、农村公路、城乡社区事务等受益范围地域性强、信息较为复杂且主要与当地居民密切相关的基本公共服务确定为地方的财政事权……要逐步将义务教育、高等教育、科技研发、公共文化、基本养老保险、基本医疗和公共卫生、城乡居民基本医疗保险、就业、粮食安全、跨省（区、市）重大基础设施项目建设和环境保护与治理等体现中央战略意图、跨省（区、市）且具有地域管理信息优势的基本公共服务确定为中央与地方共同财政事权，并明确各承担主体的职责。\n\n◆ 第五节 招商引资\n\n\u003e 这里只要了解：地方政府是城市土地的所有者，为了招商引资发展经济，会把工业用地以非常优惠的价格转让给企业使用，并负责对土地进行一系列初期开发，比如“七通一平”（通电、通路、通暖、通气、给水、排水、通信，以及平整场地）。\n\n◆ 扩展阅读\n\n\u003e 我国实行分税制，按照中央和省的分税比例，企业所得税六成归中央，剩余部分由省、市、区县来分。企业所得税减免，一般都是减免企业所在地的地方留存部分。但对一些国家支持的行业，比如集成电路，企业的全部所得税都可以“三免三减半”。\n\n◆ 第二章 财税与政府行为\n\n\u003e 党的十八届三中全会通过了《中共中央关于全面深化改革若干重大问题的决定》，明确了财政的定位和功能：“财政是国家治理的基础和重要支柱，科学的财税体制是优化资源配置、维护市场统一、促进社会公平、实现国家长治久安的制度保障。”\n\u003e\n\u003e 而事权必然要求相应的财力支持，否则事情就办不好。所以从花钱的角度看，“事权与财力匹配”或者说“事权与支出责任匹配”这个原则，争议不大。但从预算收入的角度看，地方政府是否也应该有与事权相适应的收钱的权力，让“事权与财权匹配”，这个问题争议就大了。\n\n◆ 第一节 分税制改革\n\n\u003e 财政承包制下，交完了中央的，剩下的都是地方自己的，因此地方有动力扩大税收来源，大力发展经济。(2)一种做法就是大力兴办乡镇企业。乡镇企业可以为地方政府贡献两类收入。第一是交给县政府的增值税（增值税改革前也叫产品税）。企业只要开工生产，不管盈利与否都得交增值税，规模越大缴税越多，所以县政府有很强的动力做大、做多乡镇企业\n\u003e\n\u003e 乡镇企业为地方政府贡献的第二类收入是上缴的利润，主要交给乡镇政府和村集体作为预算外收入。\n\u003e\n\u003e 财政包干造成了“两个比重”不断降低：中央财政预算收入占全国财政预算总收入的比重越来越低，而全国财政预算总收入占GDP的比重也越来越低（图2-2）。不仅中央变得越来越穷，财政整体也越来越穷。\n\u003e\n\u003e 这段故事我上课时经常讲，但很多学生不太理解为何谈判如此艰难：只要中央做了决策，地方不就只有照办的份儿吗？“00后”一代有这种观念，不难理解。一方面，经过分税制改革后多年的发展，今天的中央政府确实要比20世纪80年代末和90年代初更加强势；另一方面，公众所接触的信息和看到的现象，大都已经是博弈后的结果，而缺少社会阅历的学生容易把博弈结果错当成博弈过程。\n\n◆ 第二节 土地财政\n\n\u003e 另一方面，地方可以增加预算外收入，其中最重要的就是围绕土地出让和开发所产生的“土地财政”。\n\u003e\n\u003e 所以在分税制改革后的头些年，地方政府在财政支出上向招商引资倾斜（如基础设施建设、企业补贴等），而民生支出（教育、医疗、环保等）相对不足。(16)\n\u003e\n\u003e 我国实行土地公有制，城市土地归国家所有，农村土地归集体所有。农地要转为建设用地，必须先经过征地变成国有土地，然后才可以用于发展工商业或建造住宅（2019年《中华人民共和国土地管理法》修正案通过，对此进行了改革，详见第三章），所以国有土地的价值远远高于农地。\n\u003e\n\u003e 1998年发生了两件大事，城市土地的真正价值才开始显现。第一是单位停止福利分房，逐步实行住房分配货币化，商品房和房地产时代的大幕拉开。1997—2002年，城镇住宅新开工面积年均增速为26%，五年增长了近4倍。第二是修订后的《中华人民共和国土地管理法》开始实施，基本上锁死了农村集体土地的非农建设通道，规定了农地要想转为建设用地，必须经过征地后变成国有土地，这也就确立了城市政府对土地建设的垄断权力。(\n\u003e\n\u003e 一方面，各地都补贴工业用地，大力招商引资，推动了制造业迅猛发展；另一方面，随着工业化和城市化的发展，大量新增人口涌入经济发达地区，而这些地方的住宅用地供给却不足，房价自然飞涨，带动地价飞涨，土地拍卖的天价“地王”频出\n\u003e\n\u003e 虽说工业用地和商住用地都由地方政府垄断，但工业企业可以落地的地方很多，所以在招商引资竞争中地方政府很难抬高地价。商住用地则不同，主要服务本地居民，土地供应方的垄断力量更强，更容易抬高地价。\n\n◆ 第三节 纵向不平衡与横向不平衡\n\n\u003e 分税制改革之后，中央和省分成，省也要和市县分成。可因为上级权威高于下级，所以越往基层分到的钱往往越少，但分到的任务却越来越多，出现了“财权层层上收，事权层层下压”的局面。\n\u003e\n\u003e 农村税费改革降低了农民负担，但也让本就捉襟见肘的基层财政维持起来更加艰难，所以之后的改革就加大了上级的统筹和转移支付力度。\n\u003e\n\u003e 其一，是把农村基本公共服务开支纳入国家公共财政保障范围，由中央和地方政府共同负担。\n\u003e\n\u003e 其二，是在转移支付制度中加入激励机制，鼓励基层政府达成特定目标，并给予奖励。\n\u003e\n\u003e 从这来看，我一直觉得温州是人富而政府穷，其实不是个例，甚至在外省更加严重总体来看，分税制改革后，基层财政出现了不少困难，引发了一系列后续改革，最终涉及了财税体制的层级问题。到底要不要搞扁平化，学发达国家搞三级财政？是不是每个省都应该搞？对于相关改革效果和未来方向，目前仍有争议。\n\u003e\n\u003e 总体来看，分税制改革后，基层财政出现了不少困难，引发了一系列后续改革，最终涉及了财税体制的层级问题。到底要不要搞扁平化，学发达国家搞三级财政？是不是每个省都应该搞？对于相关改革效果和未来方向，目前仍有争议。\n\u003e\n\u003e 专项转移支付约占转移支付总额的四成，一般以“做项目”的形式来分配资金，专款专用，可以约束下级把钱花在上级指定的地方，但在实际操作中，这种转移支付加大了地区间的不平等。(36)经济情况越好、财力越雄厚的地区，反而可能拿到更多的专项转移支付项目，原因有三。第一，上级分配项目时一般不会“撒胡椒面儿”，而是倾向于集中财力投资大项目，并且交给有能力和条件的地区来做，所谓“突出重点，择优支持”。第二，2015年之前，许多项目都要求地方政府提供配套资金，只有有能力配套的地方才有能力承接大项目，拿到更多转移支付。(37)第三，项目审批过程中人情关系在所难免。很多专项资金是由财政部先拨款给各部委后再层层下拨，所以就有了“跑部钱进”的现象，而经济发达地区往往与中央部委的关系也更好。(38)\n\n◆ 结语\n\n\u003e 所以土地真正的力量还不在“土地财政”，而在以土地为抵押而撬动的银行信贷与其他各路资金。“土地财政”一旦嫁接了资本市场，加上了杠杆，就成了“土地金融”，能像滚雪球般越滚越大，推动经济飞速扩张，也造就了地方政府越滚越多的债务，引发了一系列宏观经济问题。\n\n◆ 第三章 政府投融资与债务\n\n\u003e 所以就有了买一个城市的房产就是持有一个城市的股票的观点地方政府还可以把与土地相关的未来收入资本化，去获取贷款和各类资金，将“土地财政”的规模成倍放大为“土地金融”。\n\u003e\n\u003e 地方政府还可以把与土地相关的未来收入资本化，去获取贷款和各类资金，将“土地财政”的规模成倍放大为“土地金融”。\n\n◆ 第一节 城投公司与土地金融\n\n\u003e 法律规定，地方政府不能从银行贷款，2015年之前也不允许发行债券，所以政府要想借钱投资，需要成立专门的公司。(2)这类公司大都是国有独资企业，一般统称为“地方政府融资平台”。这个名称突出了其融资和负债功能，所以经济学家和财经媒体在谈及这些公司时，总是和地方债务联系在一起。但这些公司的正式名称可不是“融资平台”，而大都有“建设投资”或“投资开发”等字样，突出自身的投资功能，因此也常被统称为“城投公司”。\n\n◆ 第二节 地方政府债务\n\n\u003e 这种明显违规的操作容易查处，但更重要的是那些没有明显违规举债却把钱投资到了没效益的项目上的操作，这类行为难以确定和监管。\n\n◆ 第三节 招商引资中的地方官员\n\n\u003e 几年前，我参加中部某市的招商动员大会，有位招商业绩不错的干部分享心得：“要对招商机会有敏感度，要做一个执着的跟踪者，不能轻言放弃。要在招商中锻炼自己，做到‘铜头、铁嘴、顺风耳、橡皮腰、茶壶肚、兔子腿’。”铜头，是指敢闯、敢创造机会；铁嘴，是指能说会道，不怕磨破嘴皮；顺风耳和兔子腿，指消息灵通且行动敏捷；茶壶肚，指能喝酒、能社交。\n\u003e\n\u003e 要理解腐败和经济发展之间的关系，关键是要理解不同腐败类型的不同影响。腐败大概可以分为两类。第一类是“掠夺式”腐败，比如对私营企业敲诈勒索、向老百姓索贿、盗用挪用公款等，这类腐败对经济增长和产权保护极其有害。随着我国各项制度和法制建设的不断完善、各种监督技术的不断进步，这类腐败已大大减少。\n\u003e\n\u003e 第二类腐败是“官商勾连共同发财式”腐败。比如官员利用职权把项目批给关系户企业，而企业不仅要完成项目、为官员贡献政绩，也要在私下给官员很多好处。这类腐败发生在招商引资过程中，而相关投资和建设可以促进经济短期增长，所以腐败在一段时期内可以和经济增长并存。但从经济长期健康发展来看，这类腐败会带来四大恶果。其一，长期偏重投资导致经济结构扭曲，资本收入占比高而劳动收入占比低，老百姓收入和消费增长速度偏慢。第七章会讨论这种扭曲。其二，扭曲投资和信贷资源配置，把大量资金浪费在效益不高的关系户项目上，推升债务负担和风险。第六章会讨论这种风险。其三，权钱交易扩大了贫富差距。第五章会分析不平等对经济发展的影响。其四，地方上可能形成利益集团，不仅可能限制市场竞争，也可能破坏政治生态，出现大面积的“塌方式腐败”。党的十八大以来，中央数次强调党内决不允许搞团团伙伙、拉帮结派、利益输送，强调构建新型政商关系，针对的就是这种情况。\n\n◆ 第四章 工业化中的政府角色\n\n\u003e 经济学的数学模型和统计数据不是讲道理的唯一形式，也不一定是最优形式，具体的案例故事常常比抽象的道理更有力量，启发更大。(1)\n\n◆ 第一节 京东方与政府投资\n\n\u003e 行政手段造成的扭曲往往只有行政力量才能破解，但这并不意味着政府就一定该帮助国内企业进入某个行业，关键还要看国内市场规模。在一个只有几百万人口的小国，政府若投资和补贴国内企业，这些企业无法利用国内市场的规模经济来降低成本，必须依赖出口，那政府的投入实际上是在补贴外国消费者。但在我国，使用液晶屏幕的很多终端产品比如电视和手机，其全球最大的消费市场就在国内，所以液晶显示产业的外溢性极强。若本国企业能以更低的价格生产（不一定非要有技术优势，能够拉低国际厂商的漫天要价也可以），政府就可以考虑扶持本国企业进入，这不仅能打破国际市场的扭曲和垄断，还可以降低国内下游产业的成本，促进其发展。(15)\n\u003e\n\u003e 一旦行业集聚形成，企业自身的规模经济效应就会和行业整体的规模经济效应叠加，进一步降低运输和其他成本。\n\u003e\n\u003e 这就好比学生学习写论文，不自己动手研究、动手做、动手写，只靠阅读别人的东西，理解永远只能停留在表面，停留在知识消费的层次，不可能产出新知。就算全天下的论文和书籍都摆在面前，一个人也不会自动成为科学家。\n\u003e\n\u003e 强调自主创新不是提倡闭关锁国。当然没必要所有事情都亲力亲为，况且贸易开放也是学习的捷径，和独立自主并不矛盾。(20)\n\u003e\n\u003e 新兴制造业在地理上的集聚效应很强，因为扎堆生产可以节约原材料和中间投入的运输成本，而且同行聚集在一起有利于知识和技术交流，外溢效应很强。因此产业集群一旦形成，自身引力会不断加强，很难被外力打破\n\u003e\n\u003e 但在产业发展早期，究竟在哪个城市形成产业集群，却有很多偶然因素。(27)大部分新兴制造业对自然条件要求不高，不会特别依赖先天自然资源，而且我国基础设施发达，物流成本低，所以一些内陆的中心城市虽然没有沿海城市便利，但条件也不是差很多。这些城市若能吸引一些行业龙头企业落户，就有可能带来一大片相关企业，在新兴产业的发展中占得一席之地，比如合肥的京东方和郑州的富士康等。\n\n◆ 第二节 光伏发展与政府补贴\n\n\u003e 从光伏产业的发展来看，政府的支持和补贴与企业成功不存在必然的因果关系。欧美日等先进国家不仅起步早、政府补贴早，而且企业占据技术、原料和设备优势，在和中国企业的竞争中还借助了“双反”等一系列贸易保护政策，但它们的企业最终衰落，纷纷退出市场。无论是补贴也好、贸易保护也罢，政策最多可以帮助企业降低一些财务风险和市场风险，但政府不能帮助企业克服最大的不确定性，即在不断变化的市场中发展出足够的能力和竞争优势。\n\u003e\n\u003e 像我国这样的大国，要应对的国际局势变幻比小国更加复杂，所以不断扩大和稳定国内市场，才是行业长期发展的基础。另一方面，若地方政府利用行政手段阻碍落后企业破产，就会阻碍优胜劣汰和效率提升，加剧产能过剩的负面影响。\n\u003e\n\u003e 市场经济的根本优势是可以不断试错，在竞争中优胜劣汰。(45)能保持竞争性的产业政策，与只扶持特定企业的政策相比，效果往往更好。(46)\n\u003e\n\u003e 所以现在政策偏向扶持专精特新了~尤其是，我国地方政府有强烈的“大项目”偏好，会刺激企业扩张投资。企业一旦做大，就涉及就业、稳定和方方面面的利益，不容易破产重组。这在曾经的光伏巨头——江西赛维的破产重整案中表现得淋漓尽致。\n\u003e\n\u003e 所以产业政策要有退出机制，若效率低的企业不能退出，“竞争性”就是一句空话。“退出机制”有两层含义。第一是政策本身要设计退出机制。比如光伏的“标杆电价”补贴，一直在降低，所有企业都非常清楚补贴会逐渐退出，平价上网时代终会来临，所以有动力不断提升效率和降低成本。第二是低效企业破产退出的渠道要顺畅。这不仅涉及产业政策，也涉及更深层次的要素配置市场化改革。如果作为市场主体和生产要素载体的企业退出渠道不畅，要素配置的市场化改革也就难以深化。然而“破产难”一直是我国经济的顽疾。一方面，债权银行不愿走破产程序，因为会暴露不良贷款，无法再掩盖风险；另一方面，地方政府也不愿企业（尤其是大企业）走破产程序，否则职工安置和民间借贷等一系列矛盾会公开化。在东南沿海等市场化程度较高的地区，破产程序相对更加规范。\n\n◆ 第三节 政府产业引导基金\n\n\u003e 出钱的人叫“有限合伙人”（limited partner，以下简称LP），管钱和投资的人叫“普通合伙人”（general partner，以下简称GP）。LP把钱交给GP投资和运作，同时付给GP两种费用：一种是基本管理费。一般是投资总额的2%，无论亏赚，每年都要交。另一种是绩效提成，行话叫“carry”。若投资赚了钱，GP要先偿还LP的本金和事先约定的基本收益（一般为8%），若还有多余利润，GP可从中提成，一般为20%。\n\u003e\n\u003e 与地方政府投资企业的传统方式相比，产业引导基金或投资基金有三个特点。第一，大多数引导基金不直接投资企业，而是做LP，把钱交给市场化的私募基金的GP去投资企业\n\u003e\n\u003e 这些政策出台前后，上海和深圳的交易所也做了很多改革，拓宽了上市渠道。2004年和2009年，中小企业板和创业板分别在深交所开板。2013年，新三板扩容全国。2019年，科创板在上交所开市，并试行注册制。国内上市渠道拓宽后，改变了过去股权投资机构“两头在外”（海外募资，海外上市、退出）的尴尬格局。\n\u003e\n\u003e 而“十三五”关于发展战新产业的规划也鼓励地方以产业链和创新协同发展为途径，发展特色产业集群，带动区域经济转型，形成创新经济集聚发展新格局。\n\n◆ 第一节 房价与居民债务\n\n\u003e 房地产常被称作“经济周期之母”，根源就在于其内在的供需矛盾：一方面，银行可以通过按揭创造几乎无限的新购买力；而另一方面，不可再生的城市土地供给却有限。这对矛盾常常会导致资产泡沫与破裂的周期循环，是金融和房地产不稳定的核心矛盾。而房地产不仅连接着银行，还连接着千家万户的财富和消费，因此影响很大。\n\u003e\n\u003e 我国房价和居民债务的上涨虽然也会引发很多问题，但不太可能突发美国式的房贷和金融危机。首先，我国住房按揭首付比例一般高达30%，而不像美国在金融危机前可以为零，所以银行风险小。除非房价暴跌幅度超过首付比例，否则居民不会违约按揭，损失掉自己的首付。\n\u003e\n\u003e 其次，住房按揭形成的信贷资产，没有被层层嵌套金融衍生品，在金融体系中来回翻滚，规模和风险被放大几十倍。\n\u003e\n\u003e 再次，由于资本账户管制，外国资金很少参与我国的住房市场。综上所述，像美国那样由房价下跌引发大量按揭违约，并触发衍生品连锁雪崩，再通过金融市场扩散至全球的危机，在我国不太可能会出现。\n\n◆ 第二节 不平衡与要素市场改革\n\n\u003e 若人口不能自由流动，被限制在农村或经济落后地区，那人与人之间的收入差距就会拉大，地区和城乡间的收入差距也会拉大。目前，我国人口流动依然受限，以地方政府投资为主推动的城市化和经济发展模式是重要因素之一。重土地轻人，民生支出不足，相关公共服务（教育、医疗、养老等）供给不足，不利于外来人口在城市中真正安家落户，不利于农村转移劳动力在城市中谋求更好的发展。地方政府长期倚重投资，还会导致收入分配偏向资本，降低劳动收入占比，对中低收入人群尤其不利。\n\u003e\n\u003e 2017年，中央政府提出，“在租赁住房供需矛盾突出的超大和特大城市，开展集体建设用地上建设租赁住房试点”。(27)这是一个体制上的突破，意味着城市政府对城市住宅用地的垄断将被逐渐打破。2019年，第一批13个试点城市选定，既包括北、上、广等一线城市，也包括沈阳、南京、武汉、成都等二线城市。(28)同年，《土地管理法》修正案通过，首次在法律上确认了集体经营性建设用地使用权可以直接向市场中的用地者出让、出租或作价出资入股，不再需要先行征收为国有土地。农村集体经营性用地与城市国有建设用地从此拥有了同等权能，可以同等入市，同权同价，城市政府对土地供应的垄断被打破了。\n\u003e\n\u003e 户籍制度改革近两年开始加速。2019年，发改委提出：“城区常住人口100万—300万的Ⅱ型大城市要全面取消落户限制；城区常住人口300万—500万的Ⅰ型大城市要全面放开放宽落户条件，并全面取消重点群体落户限制。超大特大城市要调整完善积分落户政策，大幅增加落户规模、精简积分项目，确保社保缴纳年限和居住年限分数占主要比例。……允许租赁房屋的常住人口在城市公共户口落户。”(31)\n\u003e\n\u003e 城市化的核心不应该是土地，应该是人。要实现地区间人均收入均衡、缩小贫富差距，关键也在人。\n\u003e\n\u003e 2020年4月发布的《中共中央　国务院关于构建更加完善的要素市场化配置体制机制的意见》（以下简称《意见》），全面阐述了包括土地、劳动力、资本、技术等生产要素的未来改革方向。针对土地，《意见》强调“建立健全城乡统一的建设用地市场……制定出台农村集体经营性建设用地入市指导意见”。针对劳动力，要求“深化户籍制度改革。推动超大、特大城市调整完善积分落户政策，探索推动在长三角、珠三角等城市群率先实现户籍准入年限同城化累计互认。放开放宽除个别超大城市外的城市落户限制，试行以经常居住地登记户口制度。建立城镇教育、就业创业、医疗卫生等基本公共服务与常住人口挂钩机制，推动公共资源按常住人口规模配置。”总的改革方向，就是让市场力量在各类要素分配中发挥更大作用，让资源更加自由流动，提高资源利用效率。\n\n◆ 第三节 经济发展与贫富差距\n\n\u003e 收入差距不可能完全消除，但社会也无法承受过大的差距所带来的剧烈冲突，因此必须把不平等控制在可容忍的范围之内。影响不平等容忍程度的因素有很多，其中最重要的是经济增速，因为经济增速下降首先冲击的是穷人收入。不妨想象正在排队的两队人，富人队伍前进得比穷人快，但穷人队伍也在不停前进，所以排队的穷人相对来说比较有耐心。但如果穷人的队伍完全静止不动，哪怕富人队伍的前进速度也减慢了，困在原地的穷人也会很快失去耐心而骚动起来。这种现象被称为“隧道效应”（tunnel effect），形容隧道中两条车道一动一静时，静的那条的焦虑和难耐。(40)\n\u003e\n\u003e 经济学中有一条非常有名的“库兹涅茨曲线”，宣称收入不平等程度会随着经济增长先上升而后下降，呈现出“倒U形”模式。这条在20世纪50年代声名大噪的曲线，其实不过是一些欧美国家在“二战”前后那段特殊时期中的特例。一旦把时间拉长、样本扩大，数据中呈现的往往不是“倒U形”，而是贫富差距不断起起伏伏的“波浪形”。(43)造成这些起落的因素很多，既有内部的也有外部的，既有经济的也有政治的。并没有什么神秘的经济力量会自动降低收入不平等，“先富带动后富”也不会自然发生，而需要政策的干预。不断扩大的不平等会让社会付出沉重的代价，必须小心谨慎地对待。(44)\n\n◆ 结语\n\n\u003e 我国的城市化大概可以分为三个阶段。第一阶段是1994年之前，乡镇企业崛起，农民离土不离乡，城市化速度不快。第二阶段是1994年分税制改革后，乡镇企业式微，农民工进城大潮形成。这个阶段的主要特征是土地的城市化速度远远快于人的城市化速度，土地撬动的资金支撑了大规模城市建设，但并没有为大多数城市新移民提供应有的公共服务。第三个阶段是党的十八大以后，随着一系列改革的陆续推行，城市化的重心开始逐步从“土地”向“人”转移。\n\u003e\n\u003e 所以城市化需要转型，以人为本，为人们提供必要的住房、教育、医疗等公共资源。\n\n◆ 第二节 债台为何高筑：欧美的教训\n\n\u003e 债务源于人性：总想尽早满足欲望，又对未来盲目乐观，借钱时总觉得将来能还上。但人性亘古不变，债务周期却有起有落，每一次起伏都由特定的外部因素推动，这些因素会引发乐观情绪、刺激人们借债，也会增加资金供给、为借债大开方便之门。\n\u003e\n\u003e 2018年，中美双边贸易逆差约4 000亿美元，也就是说美国需要从全世界借入4 000亿美元来为它从中国额外的进口买单，其中最主要的债主就是中国和其他东亚国家。\n\u003e\n\u003e 特里芬困境，或特里芬悖论、特里芬难题[1]。是一种理论：当一个国家的货币同时作为国际储备货币时，有可能造成国内短期经济目标和国际长期经济目标的利益冲突。这困境最早是由比利时裔美国经济学家罗伯特·特里芬在1960年代提出。他指出，当外国想持有该国货币（全球储备货币）时，该国必须愿意提供额外货币供应，以满足世界对于这个“储备”货币的需求（外汇储备），从而导致贸易赤字。\n\n使用国家的货币（如美元）作为全球储备货币，导致国家的货币政策和全球货币政策之间的紧张关系。这反映在根本的国际收支失衡，特别是经常收支：有些目标需要美元总体流出美国，而有些则需要美元总体流入美国。同等程度的货币流入和流出不能同时发生。\n\n特里芬困境通常用来表述美元在布雷顿森林体系下作为储备货币的问题，或更普遍的使用任何国家的货币作为国际储备货币的问题。“特里芬悖论”\n\n◆ 第三节 中国的债务与风险\n\n\u003e 所以如果优良的抵押物（住房和土地）越来越多，或者有政府信用担保的企业越来越多，那银行就有动力不断扩大信贷规模。\n\u003e\n\u003e 银行是金融体系核心，规模大，杠杆高，又涉及千家万户的储蓄，牵一发动全身，所以受严格监管。若某房地产企业愿意用10%的利息借钱，银行想借，但我国严格限制银行给房企的贷款量，怎么办？银行可以卖给老百姓一个理财产品，利息5%，再把筹来的钱委托给信托公司，让信托公司把钱借给房企。在这笔“银信合作”业务中，发行的理财产品不算银行储蓄，委托给信托公司的投资不算银行贷款，所以这笔“表外业务”就绕开了对银行的监管，是一种“影子银行”业务。\n\u003e\n\u003e 此外，银行理财产品虽然表面上不在银行资产负债表中，银行既不保本也不保息，但老百姓认为银行要负责，而银行也确实为出问题的产品兜过底。这种刚性兑付的压力加大了银行和金融机构的风险。\n\n◆ 第四节 化解债务风险\n\n\u003e 我国目前的货币政策比较谨慎，国务院和央行都数次明确表态不搞“大水漫灌”，“不搞竞争性的零利率或量化宽松政策”。(41)主要原因可能有二：第一，政府不愿看到宽松的货币政策再次推高房价，“房住不炒”是个底线原则；第二，货币政策治标不治本，无法从根本上解决债务负担背后的经济增速放缓问题，因为这是结构性的问题，是地方政府推动经济发展的模式问题。\n\n◆ 第七章 国内国际失衡\n\n\u003e 这些巨大的成功背后，也隐藏着两重问题。第一是内部经济结构失衡：重生产、重投资，相对轻民生、轻消费，导致与巨大的产能相比，国内消费不足，而消化不了的产品只能对外输出。这就带来了第二个问题：国外需求的不稳定和贸易冲突。过去20年，世界制造业中我国的占比从5%上升到28%，对应的是“七国集团”占比从62%下降到37%，而所有其他国家占比几乎没有变化（图7-1）。这背后不仅是中国经济面貌翻天覆地的变化，也是发达国家经济结构的巨大变化。面对剧烈调整，出现贸易冲突甚至贸易战，一点也不奇怪。\n\n◆ 第一节 低消费与产能过剩\n\n\u003e 虽然房价上涨会增加有房者的财富，理论上可能刺激消费，降低储蓄，但大多数房主只有一套房，变现能力有限，消费水平主要还是受制于收入，房价上升的“财富效应”并不明显。所以整体上看，房价上升拉低了消费，提高了储蓄。(6)\n\u003e\n\u003e 居民消费不足不仅是因为储蓄率高，能省，也是因为确实没钱。从21世纪初开始，在整个经济蛋糕的分配中，居民收入的份额就一直在下降，最多时下降了10个百分点，之后又反弹回来5个百分点（图7-3）。\n\u003e\n\u003e 针对居民收入占比过低的问题，党的十九大提出要“提高就业质量和人民收入水平”，并明确了如下原则：“破除妨碍劳动力、人才社会性流动的体制机制弊端，使人人都有通过辛勤劳动实现自身发展的机会。完善政府、工会、企业共同参与的协商协调机制，构建和谐劳动关系。坚持按劳分配原则，完善按要素分配的体制机制，促进收入分配更合理、更有序。鼓励勤劳守法致富，扩大中等收入群体，增加低收入者收入，调节过高收入，取缔非法收入。坚持在经济增长的同时实现居民收入同步增长、在劳动生产率提高的同时实现劳动报酬同步提高。拓宽居民劳动收入和财产性收入渠道。履行好政府再分配调节职能，加快推进基本公共服务均等化，缩小收入分配差距。”\n\u003e\n\u003e 虽然从会计核算角度讲，投资确实可以提升当下的GDP数字，但若投资形成的资产不能提高生产率、带来更高的收入，不能成为未来更高的消费，这种投资就没有形成实质性的财富，就是浪费。\n\u003e\n\u003e 当然，国内和国际是一体两面，国内失衡会导致国际失衡，而国际失衡反过来也可以导致国内失衡。我国国内失衡，生产多消费少，必须向外输出剩余。但反过来看，美国人大手支出，高价向我国购买，我国的相应资源也会从本国消费者向出口生产企业转移，以满足外国需求，这就加剧了国内的消费和生产失衡。\n\n◆ 第二节 中美贸易冲突\n\n\u003e 然而在民粹主义和反全球化情绪爆发的年代，讲道理没人听。失业的原因有很多，技术进步、公司管理不善、市场需求变化等。但如今不少美国人，似乎普遍认为“全球化”才是祸根，“贸易保护”才是良方。\n\u003e\n\u003e 而从制造业环节切入全球产业链分工，也是非常正确的方式，因为制造业不仅有学习效应，还有很强的集聚效应和规模效应。\n\u003e\n\u003e 在A股市场上，早有所谓的“果链概念”，包括制造iPhone后盖的蓝思科技、摄像头模组的欧菲光、发声单元的歌尔股份、电池的德赛电池等上市公司。\n\n◆ 第三节 再平衡与国内大循环\n\n\u003e 要提高居民收入，就要继续推进城市化，让人口向城市尤其是大城市集聚。虽然制造业是生产率和科技进步的主要载体，但从目前的技术发展和发达国家的经验看，制造业的进一步发展吸纳不了更多就业。\n\u003e\n\u003e 所以解决就业和提高收入必须依靠服务业的大发展，而这只能发生在人口密集的城市中。不仅传统的商铺和餐馆需要人流支撑，新兴的网约车、快递、外卖等都离不开密集的人口。要继续推进城市化，必须为常住人口提供相应的公共服务，让他们在城市中安居乐业。这方面涉及的要素市场改革，包括户籍制度和土地制度的改革，\n\u003e\n\u003e 世上从来没有抽象的、畅通无阻的市场。市场从建立到完善，其规模和效率都需要逐步提升，完善的市场本就是经济发展的结果，而不是前提。我国疆域广阔、人口众多，建立和打通全国统一的商品和要素市场，实现货物和人的互联互通，难度不亚于一次小型全球化，需要多年的建设和制度磨合。\n\n◆ 第八章 总结：政府与经济发展\n\n\u003e 正如在本书开篇引用的哈佛大学经济史家格申克龙的话：“一套严格的概念框架无疑有助于厘清问题，但也经常让人错把问题当成答案。社会科学总渴望发现一套‘放之四海而皆准’的方法和规律，但这种心态需要成熟起来。不要低估经济现实的复杂性，也不要高估科学工具的质量。”\n\u003e\n\u003e 强调政府的作用，当然不是鼓吹计划经济。过去苏联式的计划经济有两大特征。第一是只有计划，否认市场和价格机制，也不允许其他非公有制成分存在。第二是封闭，很少参与国际贸易和全球化。如今这两个特点早已不复存在，硬谈中国为计划经济，离题万里。\n\n◆ 第一节 地区间竞争\n\n\u003e 在工业化进程中搞地方竞争，前提是大多数地区的工业基础不能相差太远，否则资源会迅速向占绝对优势的地区集聚，劣势地区很难发展起来。\n\u003e\n\u003e “官场+市场”的竞争体制，可以帮助理解我国经济的整体增长，但这种体制的运行效果，各地差异很大。官员或政府间的竞争，毕竟不是市场竞争，核心差别有三。第一，缺乏真正的淘汰机制。地方政府就算不思进取，也不会像企业一样倒闭。政绩不佳的官员虽然晋升机会可能较少，但只要不违法乱纪，并不会因投资失败或经济低迷而承担个人损失。第二，绝大多数市场竞争是“正和博弈”，有合作共赢、共同做大蛋糕的可能。而官员升迁则是“零和博弈”，晋升位置有限，甲上去了，乙就上不去。所以在地区经济竞争中会产生地方保护主义，甚至出现“以邻为壑”的恶性竞争现象。第三，市场和公司间的竞争一般是长期竞争，延续性很强。但地方官员任期有限，必须在任期内干出政绩，且新官往往不理旧账，因此会刺激大干快上的投资冲动，拉动地区GDP数字快速上涨，不惜忽视长期风险和债务负担。\n\n◆ 第二节 政府的发展与转型\n\n\u003e 当国民收入增长时，财政支出会以更大比例增长。随着人均收入水平的提高，政府支出占GNP的比重将会提高，这就是财政支出的相对增长，这一思想是瓦格纳提出的，又被后人归纳为瓦格纳法则。瓦格纳法则\n\u003e\n\u003e 华盛顿共识（Washington Consensus），1989年所出现的、一整套针对拉美国家和东欧转轨国家的、新自由主义的政治经济理论。是社会主义转向资本主义社会的最初级版本。当华盛顿共识逐渐走向失败，宏观经济理论界提出了与此相对的北京共识。美国国际经济研究所的约翰·威廉姆森（John Williamson）对拉美国家的国内经济改革提出了已与上述各机构达成共识的10条政策措施，称作华盛顿共识。\n\n该共识包括十个方面：  \n①加强财政纪律，压缩财政赤字，降低通货膨胀率，稳定宏观经济形势；  \n②把政府开支的重点转向经济效益高的领域和有利于改善收入分配的领域（如文教卫生和基础设施）；  \n③开展税制改革，降低边际税率，扩大税基；  \n④实施利率市场化；  \n⑤采用一种具有竞争力的汇率制度；  \n⑥实施贸易自由化，开放市场；  \n⑦放松对外资的限制；  \n⑧对国有企业实施私有化；  \n⑨放松政府的管制；  \n⑩保护私人财产权。华盛顿共识\n\n\u003e 从国防到社会治安，从基础设施到基本社会保障，都要花钱，所以有效的政府必须要有足够的收入。可收税从来都不容易，征税和稽查能力也需要长期建设，不断完善。就拿征收个人所得税来说，政府要有能力追踪每个人的各种收入，能核实可以抵扣的支出，能追查和惩处偷税漏税行为。这需要强大的信息追踪和处理能力。即便在以个人所得税为最主要税种的欧美发达国家，足额收税也是个难题。\n\u003e\n\u003e 在更加复杂的大国比如中国，两种状况都存在。既有在国际竞争中脱颖而出的杰出企业，也有各种骗补和寻租的低效企业。这种结果上的差异，源于各国和各地政商关系的差异。所谓强力政府，不仅在于它有能力和资源支持企业发展，也在于它有能力拒绝对企业提供帮助。(15)\n\n◆ 第三节 发展目标与发展过程\n\n\u003e 在我国，可行的政策空间和演变路径受三大制度约束：农村集体所有制、城市土地公有制、户籍制度。\n\u003e\n\u003e 可行的政策不仅受既有制度的约束，也受既有利益的约束。政策方案的设计，必须考虑到利益相关人和权力持有者的利益。既要提高经济效率，也要保证做决策的人或权力主体的利益不受巨大损害，否则政策就难以推行。(21)可行的经济政策是各种利益妥协的结果，背后是各国特殊的政治体制和议程。在这个过程中，不仅激励相容的机制重要，文化的制约也重要。比如政治经济学中有个重要概念叫“精英俘获”（elite capture），一个例子就是地方政治精英被地方利益集团俘获，损害民众利益\n\u003e\n\u003e 另一个例子是自由贸易和保护主义的冲突。支持自由贸易的概念和理论，几乎算是经济学中最强有力的逻辑，但往往也突破不了现实利益的枷锁。只要学过经济学，都知道比较优势和自由贸易能让国家整体得益。但整体得益不等于让每个人都得益。从理论上讲，即便有人受损，也该支持自由贸易，因为整体得益远大于部分损失，只要从受益方那里拿一点利益出来，就足够补偿受损方且有余。但在现实中，补偿多少？怎么补偿？往往涉及复杂的政治博弈。补偿可能迟迟落实不到位，最终是受益者得益越来越多，而受损者却屡遭打击。虽说平均值是变好了，但那些受损的人的生活不是理论上的平均数字，他们会为了自己的利益而反抗和行动，这是保护主义的根源。(22)\n\u003e\n\u003e 改革方向和改革过程是两回事。就算每个人都对改革方向和目的有共识（事实上不可能），但对改革路径和步骤也会有分歧。什么事先办，什么事后办，不容易决定。每一步都有人受益、有人受损，拼命争取和拼命抵制的都大有人在。\n\u003e\n\u003e 经济发展必然要改变旧有的生活方式，重新分配利益，所以必然伴随着矛盾和冲突。政府的关键作用之一，就是调控改变速度的快慢。社会变化过程快慢之间，对身处其中的人而言，感受天差地别。对于环境的变化，人们需要时间去适应。人不是机器部件，不可能瞬间调整，也没有人能一直紧跟时代，所以稳定的改革过程要留下足够的时间和资源去缓冲。这种“渐进性改革”中的各种缓冲机制，往往会拖低效率，所以常常被解读为“扭曲”和“资源错配”。但任何成功的转型过程都离不开缓冲机制。\n\n◆ 结语\n\n\u003e 无论如何，经济学的主要作用仍是发现和提出问题，而解决问题的具体方案只能在实践中摸索和产生。学术的这一“提问”作用不应被夸大，也不应被贬低。世事复杂，逻辑和理论之外的不可控因素太多，所以具体问题的解决方案，只能在实践中不断权衡、取舍、调整、改进。但发现和提出好的问题，是解决问题的第一步，且“提问”本身，往往已蕴含了对解决思路的探索。切中要害的问题，必然基于对现实情况的深刻理解。因此，无论是理论家还是实践者，“实事求是”和“具体问题具体分析”都是不会过时的精神。\n\n◆ 点评\n\n\u003e 推荐引用结语:生活过得好一点，比大多数宏伟更宏伟。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E8%8A%B1%E5%9B%AD%E5%AF%BC%E8%A7%88":{"title":"🍀 花园导览","content":"\n# 🍀 花园导览\n\n[[🌐 前端索引]]  \n[[∑ 微信读书]]  \n[[英语学习]]  \n[[问题思考框架]]\n\n# 其他不错的[[数字花园]]\n","lastmodified":"2023-09-18T14:54:47.658455075Z","tags":null},"/-%E8%AE%A1%E7%AE%97%E4%B9%8B%E9%AD%82":{"title":"《 计算之魂 》","content":"\n# 《 计算之魂 》\n\n## Meatdata\n\n- author： [[吴军]]\n- link：\n- tag：\n- date: [[2022-01-15]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E8%AF%BB%E4%B9%A6%E6%98%AF%E4%B8%80%E8%BE%88%E5%AD%90%E7%9A%84%E4%BA%8B":{"title":"《 读书是一辈子的事 》","content":"\n# 《 读书是一辈子的事 》\n\n## Meatdata\n\n- author： [[樊登]]\n- link：[读书是一辈子的事-樊登-微信读书](https://weread.qq.com/web/reader/bf132d405e130ebf124a2cdka87322c014a87ff679a21ea)\n- tag：\n- date: [[2022-01-11]]\n- Notes:\n\n## 总结\n\n- 如何战胜抑郁症\n\t1. 锻炼身体。\n\t2. 拥有家人和朋友的支持。\n\t3. 接受心理咨询和治疗，\n\t4. 接受心理咨询和治疗，\n\t5. 进行放松和冥想，\n\t6. 保持充足的营养。我们需要吃鱼、牛油果、坚果、浆果，这些东西都会给我们带来充足的营养。\n\t7. 远离酒精和毒品。酒精和毒品在短期之内能够让你很亢奋，但是它是一种饮鸩止渴的方法，而且它会使你需求的阈值变得越来越高。\n\t8. 服用处方药。服用处方药是被证明有效的方法。\n\t9. 参加互助小组。\n\t10. 拥有宗教和精神信仰。当你有了精神信仰之后，就会有人帮你承担这些精神压力。\n\t11. 投身慈善事业。投身慈善事业所带来的最大好处是，它能够给你带来生活的意义和价值\n- 《我的情绪为何总被他人左右》把不良情绪分了四类，并且告诉我们这些不良情绪是怎么来的。\n\t- 过分烦躁。我发现有时候天气不好，我的一些微信群里就没有别的主题了，有人就在里边一直抱怨天气。当空气不透明时，有人心情就不好，这引发的就是过分烦躁。你完全可以放轻松点儿，反正你也改变不了天气。\n\t- 过分生气，就是对他人表示戒备\n\n\t\t\u003e 有一次，我在飞机上遇到一个人。空姐对他说：“先生，麻烦您把这个行李箱放到上边去。”这个人就突然暴发了，在飞机上大喊：“你一个服务员，还敢要求我！”\n\n\t- 过分抑郁，就是干什么事都没精打采、一蹶不振。\n\t- 过分内疚，就是觉得一切事都是因为自己，例如，总在想要不是自己当年做那个事，就不至于这样。\n- 三种最常见的病态思维模式，也就是三种最大错误的B。\n\t- 第一种错误的B就是恐怖化。我们总喜欢把一件事想得特别严重。\n\t- 第二种错误的B，叫作应该化。事情发生了之后，很多人总觉得自己应该做得更好。\n\t- 第三种错误的B叫作合理化。这是一种弱反应，比如不去感觉，只是试图否认一些事情，即使是对我们自己。比如让情绪走向另一个极端，不允许自己产生任何反应。\n- 如何摆脱被情绪化控制\n- 让我们假设一个生活场景，你发怒了，或者你担忧了、睡不着觉了。这时候，你应该怎么办？一共四步。\n- 第一步是反思，为什么会有C，找那个错误的B，审视一下B。要从三个角度来审视：一个是关于自己的角度，一个是关于他人的角度，还有一个是关于当下这种关系的角度。\n- 第四步——做一个更好的选择。\n\n## 闪念\n\n- 第二章在讲抑郁症的时候，举了很多生活中的例子，这需要一双善于观察的眼睛和更多的社交，希望我以后也能在一个实体卡片下写下很多身边的故事。\n- 第二章用的读书笔记方法就是， 先讲什么是抑郁症，再讲书中的例子，在讲身边的例子，再总结一下\n- 读书 是为了解决生活中实际的问题！\n\n## 常青笔记\n\n- [[为什么要读书]]\n- [[《 幸福的方法 》]]\n- [[ 《 我的情绪为何总被他人左右 》]]\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86":{"title":"《 金字塔原理 》","content":"\n# 《 金字塔原理 》\n\n#input\n\n## Meatdata\n\n- author： [[芭芭拉·明托]]\n- link：\n- tag：\n- date: [[2022-04-30]]\n- Notes:\n\n## 读前准备\n\n- 副标题开始，思考。表达和解决问题的逻辑分别是什么？\n- 我想要更好的写作，能从这本书得到什么？\n- 我们应该怎么去寻找和解决问题？\n- 为什么会被称之为经典？记录下三个啊哈时刻\n\n## 总结\n\n- [[金字塔原理读后感]]\n\n## 闪念\n\n- 人的大脑只能记住 7 ± 2 的项目，事物，所以我们可以对超过这个数量的事进行分类后 记忆\n- 自上而下，结论先行，如果不预先告诉观众逻辑关系，观众就可能会去汇总共同点，造成理解的难度\n- 总分分分分，由多个三个概括性句子组成的段落，要同一思想\n- 采用总分分分，不仅写的时候流畅，给别人讲解和阅读的时候都方便理解\n- 演绎法论述和归纳法论述\n- 纵向的疑问-回答式对话，横向的演绎或归纳推理、讲故事式的序言\n\n### 为什么要用金字塔结构\n\n### 组织思想基本上只有 4 种逻辑 顺序\n\n- 演绎顺序：大前提、小前提、结论\n- 时间顺序：第一第二第三\n- 结构顺序：波士顿、纽约、华盛顿\n- 程度顺序：最重要、次重要，等等\n\n### 怎么构建金字塔\n\n#### 自上而下法\n\n1. 画出主题方框 -确定 主题\n2. 设想主要疑问  \n\t确定读者，思考能回答读者那些疑问？否则跳 4\n3. 写出对疑问的回答\n4. 说明背景  \n\t将讨论的主题和‘‘背景’’相结合，做出第一个关于该主题的不会引起争议的表述\n5. 指出冲突\n\t\n6. 检查 “主要疑问” 和“答案”\n\n#### 自下而上思考\n\n1. 列出你要表达的所有思想要点\n2. 找出各要点之间的逻辑关系\n3. 得出结论\n\n### 序言\n\n文章的序言通常会采用讲故事的形式，也就是说序言应当想介绍读者熟悉的某些“背景”，说明发生的“冲突”，并由此引发读者的“疑问”，然后针对该 “疑问”给出“答案”。\n\n序言要采用讲故事的形式，是为了让读者抛开其他思想，专注于你的话题  \n冲突就是推动“故事”情结发展的因素，并且必须引发读者的“疑问”  \n“背景-冲突-疑问-解决方案”的结构\n\n要在合适时机给出关键句，让读者的思想和你拉齐\n\n#### 常见模式:\n\n文章的目的一般是为了回答以下 4 类问题\n\n1. 我们应该做什么？\n2. 我们应该如何做\n3. 我们是否应该这么做\n4. 为什么会发生这种情况\n\n常见的 4 种序言 模式\n\n1. 发出指令式 （针对“我们应该做什么”或 \"我们应该如何做\"）\n\t- 背景 = 我们打算做 X\n\t- 冲突-需要你们做 Y\n\t- 疑问- 我们如何做 Y  \n  或者\n     - 背景 = 你要做 X\n\t- 冲突- 必须按 Y 方式来做\n\t- 疑问- Y 方式是啥\n2. 请求支持式（针对“我们是否应该这样做”）\n3. 解释做法式（针对“我们应该如何做”）\n\t- 背景 = 必须做 X\n\t- 冲突-还没做好做 X 的准备\n\t- 疑问- 如何做好准备\n4. 比较选择式（针对“我们应该做什么”）  \n\t\t- 背景 = 我们希望做 X\n\t- 冲突-我们有不同的执行方案\n\t- 疑问- 哪一种比较合理\n\n### 演绎推理和归纳推理\n\n演绎推理非常繁琐，因此我建议在关键句层次尽量避免使用演绎法，转而用归纳法取代。\n\n#### 外展 推理\n\n外展推理指的是现提出一个假设，然后寻找支持该假设的信息。一旦获得了支持假设的信息，这以推理过程又变成了归纳推理\n\n归纳推理比演绎推理难的多，因为归纳推理需要更多地运用创造性思维。进行归纳推理时，大脑首先要发现若干事物（实现、事件、事实）的共性，然后将其归结到一起，加以说明。\n\n### 应用逻辑顺序\n\n大脑的分析活动分为以下三种：\n\n1. 确定前因后果关系\n2. 将整体分割为 部分\n3. 将类似事务归为一组\n\n#### 时间顺序\n\n最容易的理解的一种逻辑顺序，它要按照行动的顺序，依次表述达到某一结果必须采取的行动。\n\n#### 结构顺序\n\n当你使用示意图、地图、图画或照片想象某事物时的顺序、\n\n写作时必须先构思文章的结构，否则你可能根本不知道自己已经写得一塌糊涂。按照结构写作，便于及时发现错误和遗漏。\n\n#### 程度顺序\n\n也称重要性顺序。这是你对一组因为具有某种共同特点而聚集在一起的事物进行陈述或分析时采用的顺序，\n\n在罗列出一系列原因的时候，我们要思考各要点是否有相似之处，进行归纳分类总结之后，检查逻辑顺序，可以帮我们写出更清晰明了的文章或者建议。\n\n### 概括各组实现\n\n金字塔原理的规则\n\n- 位于金字塔结构每一个层次的思想，都必须是对其下一层次思想的提炼、概括\n\n每一个思想都必须与其同组的其他思想互斥，而且每组中的思想对于上一层概括它们的思想而言，都必须完全穷尽。\n\n在判断某组思想是否完全穷尽时，我们必须非常明确地指出期望这组行动实现的结果或达到的目标，目标不一定总是可以用数字表达，但必须有某种明确的方式判断。\n\n条理清晰地表达行动性思想绝不是一件容易的事，需要艰苦地思考。但是，如果不这样做，就会给读者造成极大的阅读困难。因此我们需要用一下步骤完成这一艰难的过程：先用明确的词语、语句表述各项行动、步骤、流程等、然后区分出不同的抽象层次，再直接从各行动、步骤、流程等总结、概括出行动的结果\n\n寻找各结论之间的共性，要分为三步走\n\n- 第一步，列出可能值得思考的思想\n- 第二步，通过找出思想之间的共同点，证明这些思想确实属于同一 类\n- 第三步，提出一个新思想\n\n大多数人都止于第一步。\n\n### 界定问题\n\n判断问题是否存在，通常要看经过努力得到的结果，与希望得到的结果之间是否存在差距。由特定背景导致的特定结果成为非期望结果 R1。\n\n界定问题的框架需要先回答以下三个问题：\n\n- 发生了什么事 （ 背景： 切入点/序幕 + 困扰 / 困惑）\n- 我们不愿看到什么？ （ 非期望结果，现状 R1）\n- 我们想要什么？ （期望结果，目标，R2）\n\n### 结构化的分析问题\n\n分析问题的标准流程是：  \n收集信息 =\u003e 描述发现 =》得出结论 =》提出方案\n\n试图收集某一领域一切可以找到的资料，等所有事实和资料齐备后才开始分析的方式是低效的。效的方法是建立诊断框架和逻辑树，用来分析和引导思维，这样做不仅能提高解决问题的效率，还江南花了构建成金字塔结构、呈现分析结果的工作\n\n序列分析法：\n\n1. 是否有问题？\n2. 问题在哪里\n3. 为什么存在？\n4. 我们能做什么？\n5. 我们应该做什么\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89":{"title":"","content":"","lastmodified":"2023-09-18T14:54:44.114437371Z","tags":null},"/-%E9%BB%91%E5%AE%A2%E5%A2%9E%E9%95%BF":{"title":"《 黑客增长 》","content":"\n# 《 黑客增长 》\n\n## Meatdata\n\n- author： [美]肖恩·埃利斯，[美]摩根·布朗\n- link：[增长黑客-肖恩·埃利斯 摩根·布朗-微信读书](https://weread.qq.com/web/reader/0c8326e05e12740c876a134)\n- tag： #工具书\n- date: [[2021-11-25]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5":{"title":"《 JavaScript设计模式与开发实践 》","content":"\n# 《 JavaScript设计模式与开发实践 》\n\n## Meatdata\n\n- author：\n- link：\n- tag：\n- date: [[2022-11-27]]\n- Notes:\n\n## 读前准备\n\n## 总结\n\n### 有以下几种设计模式\n\n- [[单例模式]]\n- [[策略模式]]\n- [[代理模式]]\n- [[迭代器模式]]\n- [[发布—订阅模式]]\n- [[命令模式]]\n- [[组合模式]]\n- [[模板方法模式]]\n- [[享元模式]] 优化大量重复创建类的时候，可以节省很多内存\n- [[职责链模式]]\n- [[中介者模式]]\n- [[装饰者模式]]\n- [[状态模式]]\n- [[适配器模式]]\n\n### 几种设计原则\n\n- [[单一职责原则]]\n- [[最少知识原则]]\n- [[开放—封闭原则]]\n- [[接口和面向接口编程]]\n- [[代码重构]]\n\n### 静态类型和动态类型语言\n\n编程语言按照数据类型大体可以分为两类，一类是静态类型语言，另一类是动态类型语言。  \n 静态类型语言优点:\n\n 1. 在编译时就能发现类型不匹配的错误，编辑器可以帮助我们提前避免程序在运行期间有可能发生的一些错误\n 2. 能更容易的针对程序进行优化  \n缺点：\n1. 不够自由\n2. 需要写更多的代码\n\n动态语言的优点：\n\n1. 能用更少的代码实现功能，让程序员能专注业务逻辑  \n缺点:\n1. 太过自由，不好定位问题\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 有一天这个爱好者决定重新回到学校去攻读电子学学位，来让自己的才能得到真实的认可。随着课程的展开，  \n这个爱好者突然发现课程内容都似曾相识。似曾相识的并不是术语或者表述的方式，而  \n是背后的概念。\n- 有很多模式的类图和结构确实很相似，但这不太重要，辨别模式的关键是这个模式出  \n现的场景，以及为我们解决了什么问题。\n- 多态的思想实际上是把“做什么”和“谁去做”分离开来，要实现这一点，归根结底先要消除类型之间的耦合关系。\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/-WeRead":{"title":"∑ WeRead","content":"","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null},"/20%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%B9%A0%E6%B3%95":{"title":"20 小时学习法","content":"\n# 20 小时学习法\n\n第一步、找 10 本书\n\n1. 上豆瓣网，搜索要学习的书\n2. 找到评价最高的 3 本书\n3. 通过“买过这本书的人，还买过哪本”的方法，再选 5 本 最后，加 2 本不畅销，但明显系统性强的书  \n\n第二步、大量泛读  \n\n 1. 1 5 分钟看自序，5 分钟看目录  \n 2. 15 分钟泛读：略过故事，略过案例，略过证明；标注概念，标注模型，标注公式，标注核心观点。  \n 3. 5 分钟简单回顾  \n\n第三步、建立模型  \n\n 1. 好好睡一觉  \n 2. 给自己最清醒的 3 小时，建立模型。  \n 3. 把标注的概念、模型、公式，写在即时贴上，贴到白板上，再用白板笔和板擦，建立、修正他们之间的关联，逐渐形成系统模型。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93":{"title":"2020 总结 | 小胖 - 现在的努力都是为了弥补过去","content":"\n# 2020 总结 | 小胖 - 现在的努力都是为了弥补过去\n\n写下这篇年终总结的时间已经是2021年的第一个工作日，也是我在现在这家公司的最后一天了。\n\n## 关于工作\n\n今年疫情被困在家，外包是没有工资的，全靠公司发放最低补贴1650，好不容易熬过两个月，返杭复工，没过两个月外派集体撤场，出去尝试面试，愿意给面试的小公司基本都会给offer，但是没有一个中大型公司愿意给面试机会，我陷入了迷茫和自我怀疑。\n\n我问自己，你还想在小公司\u0026外包兜兜转转多久?  \n女票说，你要向我证明你的能力啊！\n\n  那段时间大概是今年最焦虑的时间了，以至于决心不再呆外包的我在外包公司问我：有个短期项目需要驻场你去吗？后思考了一下午就决定去了。\n\n  再给自己4-6个月时间，一定要跳出外包进入中大厂 !\n\n## 关于学习\n\n两年外包时间过得真的很快，可能是确实喜欢着前端这份工作，没有被繁忙的业务占据所有的时间，上班学习的效率特别高（大概这就是 劳动等于换取工资，摸鱼才等于赚钱~）\n\n  前两年我给自己的要求是把基础打牢，去年大概有半年时间都会花在看掘金上，半年看了大概4000篇文章，但是知识不成体系，所以开始希望自己能进行系统的学习总结，像类似红宝书，小黄书，掘金的小册，极客时间的专栏今年看了有个十几二十本的样子了。\n\n  另外还有开课吧的全栈课，早早聊大会等等，只能说 还挺焦虑的。今年会静下来想想我到底想要什么样的方向。\n\n  动手能力很重要，像基本的cli，组件库，错误监控系统，代码规范这些都有去实践做一些demo，然后选择了错误监控系统进行了深入的迭代和更新，观看了早早聊大会的监控专题，进行查漏补缺，并且运行到最近的一个项目中。最近也希望自己能将性能指标也加入到系统中，并能产出分析建议列表等更多功能，将知识完整的串联成一个体系。\n\n  外包最大的问题是，很多会议你无法参加，需求全靠二手消息理解，这也导致了我面试时业务面的表现很一般，今年给自己的期望就是能多多思考业务，补全自己的短板。\n\n## 关于面试\n\n可以说为了面试我准备了半年，但我没有面试后记录面试题的习惯，所以也没有面经产出。\n\n  总结几点做的不好的点：\n\n1. 平时没有去面试，导致把滴滴和网易放在最开始面，状态没调整过来，不然还是挺有机会的\n2. 戒骄戒躁，也许是因为基础面基本都能过，先前面试有点飘了，一定要谦虚\n3. 没回答上的问题回去一定要多看看，后面的面试大概率还会问。\n4. 不够成熟，面试经常笑嘻嘻，仿佛聊家常\n\n两年外包经验和大专学历 , 让我在那两周的面试中受的煎熬远不止这么简单，别人都是到hr面就稳了，我是经常挂hrbp面，但是也请相信，程序员的立身之本还是技术，也很感谢愿意给我offer的两家公司。\n\n## 关于理财\n\n今年年初宅在家里闲着无聊看了十几本书，也算是入了理财的坑。  \n这两年股市行情不错，今年定投收益率也有20+% ， 但无奈先前没有储蓄的习惯，所以收获其实也就一般。  \n但千万不要把行情好当成自己的技术好，老老实实选好方向，长期持有，积累更多的本金，做一个价值投资者。\n\n## 关于其他碎碎念\n\n- 其实游戏对我的干扰也挺大的，希望今年能尽量戒了吧（先让我上次荣耀啊）\n- 运动方面是惰性完胜，去年回去过年跟女朋友说开春就恢复运动（我也没说哪年开春TAT），被说了一年了，但是也确实因为久坐和缺少运动，有点腰间盘突出了，所以这次一定！\n- 读书是希望自己能读48本的，但是只有疫情在家的时候读了10本左右，差评\n- 感谢前同事愿意介绍妹妹给还是外包的我，在一起一年多的时间，是我的压力也是我的动力，明年希望能给她一个家。\n- 看到了PDD女孩的消息，一定要对自己好一点。\n\n## 展望2021\n\n- [ ] 保持每周一本(非技术书)的频率，一年读完48本书\n- [ ] 计算机基础的完整学习\n- [ ] 恢复跑步计划，一周三次以上\n- [ ] 旅游至少两次，骑行，爬山\n- [ ] 见丈母娘并得到认可\n- [ ] 将更多demo落地到实际中\n\n## 总结\n\n今年这一年真的是经历了太多太多，经历了疫情，裁员，继续选择外包沉淀基础，然后到现在成功跳入中厂，对比去年或者是今年上半年也算实现了double的目标，最重要的还是跳出外包这一步，我相信未来会越来越顺利。\n\n## 输出平台\n\n[2020 总结 | 小胖 - 现在的努力都是为了弥补过去 · 语雀](https://www.yuque.com/morningscott/summary/snswci)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/2022-%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93":{"title":"2022 季度总结","content":"\n# 2022 季度总结\n\n陈杰-下半年绩效总结\n\n1. 优化新建分群，通过将 DOM 渲染前置，缓存接口等操作 将新建分群副本打开从 3-5 秒优化到现在基本秒开。\n2. 从 vite 迁移到 muji,进行构建速度优化，初次构建速度提升 12 倍以上，二次构建速度提升 100 倍左右，热更新速度从 1000ms 到 10ms\n3. 抽离微信推送预览，表情插入框，动态参数图片组件,漏斗列表,营销任务分群等 5 个业务组件,复用 10 次以上，减少 20 人日以上重复开发\n4. 新建营销任务副本，帮助快速新建营销任务\n5. 预览功能，降低微信发送错误信息概率\n6. 抽离营销任务详情页为 JSON，可通过配置快速更改页面\n7. 按时保质保量的完成了人车匹配，SPM 漏斗，报警等需求功能的上线\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/2023-%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93":{"title":"2023 年中总结","content":"\n目标对齐\n\n1. 12月 30 号完成交付\n2. 沉淀出一个产品\n\n好的地方  \n项目管理比较合理\n\n不足之处  \n前期 prd 需求不够明确，没有 UI，造成了不少页面的返工  \n太着急了，没有从整体的维度去看，前期对项目没有进行梳理，对组件的抽离不够  \n团队比较安静\n\n展望\n\n1. 高级感， 前端一些动效（或者自建一个组件库\n2. 前端低代码\n3. 如何与 AI 结合\n4. 前端错误监控系统\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/5-Why":{"title":"例子","content":"\n丰田有一套方法论叫做精益思想，**五个 Why，就是对任何一个现象、任何一个问题、任何一个需求和任何一个想法，想看清背后的真实动机，你得不断问为什么，至少问 5 次。**\n\n# 例子\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615150810.png)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/5W1H":{"title":"5W1H","content":"\n# 5W1H\n\n5W+1H：是对选定的项目、工序或操作，都要从原因（何因 Why）、对象（何事 What）、地点（何地 Where）、时间（何时 When）、人员（何人 Who）、方法（何法 How）等六个方面提出问题进行思考。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615165751.png)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/AGI":{"title":"AGI","content":"\n自主智能体可以被设计用于做任何事情，从管理社交媒体账户、投资市场到制作最好的儿童读物。\n\n实现自主智能体所需的编程技术和 AI 是非常现实且极其新颖的。许多开源项目，诸如 [[AutoGPT]]、BabyAGI 和 Microsoft 的 Jarvis，在 AI 社区、Github 上都很流行。\n\n## 自主智能体式怎么工作的\n\n以下是一个自主智能体的通用框架：\n\n- 初始化目标：定义 AI 的目标；\n- 任务创建：AI 检查其记忆中最近完成的 X 个任务（如果有），然后使用它的目标和最近完成的任务的环境来生成新任务列表；\n- 任务执行：AI 自主执行任务；\n- 内存存储：任务和执行结果存储在矢量数据库中；\n- 反馈收集：AI 以外部数据或 AI 内部对话的形式收集对已完成任务的反馈。此反馈结果将用于通知自适应过程循环的下一次迭代；\n- 新任务生成：人工智能根据收集到的反馈和内部对话生成新任务；\n- 任务优先级：人工智能通过审查目标并查看最后完成的任务来重新确定任务列表的优先级；\n- 任务选择：AI 从优先列表中选择最靠前的任务，然后按照步骤 3 中的描述继续执行它们；\n- 迭代：AI 在连续循环中重复步骤 4 到 8，使系统能够根据新信息、反馈和不断变化的需求进行调整。\n\n### 示例 1：**社交媒体管理器自主智能体**\n\n- 初始化目标：设置初始参数，例如目标受众、社交媒体平台、内容类别和发布频率；\n- 数据收集：收集有关过去社交媒体帖子、用户互动和平台特定趋势的数据。这可能包括点赞、分享、评论和其他参与度指标；\n- 内容分析：分析收集到的数据，以确定与目标受众相关的模式、热门话题、主题标签和影响者。此步骤可能涉及自然语言处理和机器学习技术，以理解内容及其上下文；\n- 内容创建：根据分析，生成内容创意并创建适合平台和受众偏好的社交媒体帖子。这可能涉及使用 AI 生成文本、图像或视频，以及合并用户生成的内容或来自其他来源的精选内容；\n- 日程规划：根据平台具体的趋势、受众活动和所需频率确定发布每条内容的最佳时间。相应地安排帖子；\n- 性能监控：根据参与度指标（例如点赞、分享、评论和点击率）跟踪每个帖子的表现。如果可能，收集用户反馈以进一步完善对受众偏好的理解；\n- 迭代和改进：分析性能数据和用户反馈以确定需要改进的地方。更新内容策略、创建和计划流程以纳入这些见解。反复执行步骤 2-7 以不断完善社交媒体管理系统并随着时间的推移提高其有效性。\n\n### **示例 3：教授数学的自主智能体**\n\n这里还会有设计用于教授孩子们数学的自主智能体。\n\n\u003e 「这是一个具有很大探索空间的突破性范式。尽管早期实验限制了智能体搜索查询，但我们将看到大范围的研究和辅助项目为自主智能体配备新的工具。而每套工具都将显著地扩展其潜在用例。」  ——Pete Huang，The Neuron Daily AI 时事通讯创始人\n\n- 初始目标：确定孩子当前的数学技能水平并设置个性化的学习路径以帮助他们提高；\n- 数据收集：通过评估、互动和反馈收集有关孩子的学习方式、学习过程和学习表现的信息；\n- 上下文分析：分析收集到的数据，以确定孩子的优势、劣势、学习偏好，以及影响孩子进步的所有外部因素；\n- 任务生成：根据孩子的需求和学习路径生成辅导任务，例如选择合适的练习题，提供讲解，或提供现实生活中的例子和应用；\n- 任务优先级：根据辅导任务对孩子学习和技能发展的潜在影响对辅导任务进行排序，找到挑战性与参与感之间的平衡；\n- 任务执行：执行最高优先级的任务，根据需要调整辅导方法和内容传递，以最大限度地提高孩子的学习掌握度和参与度；\n- 绩效监测：通过跟踪关键绩效指标 (KPI) 评估辅导的有效性，例如学习目标的进展情况、数学技能的提高以及孩子的参与度和满意度；\n- 反馈循环：持续监测孩子的表现，并根据新数据和见解更新上下文分析、任务生成和任务优先级排序步骤。根据需要调整初始目标和学习路径，以更好地支持孩子的数学技能发展；\n- 迭代和改进：分析孩子的表现并根据新数据和见解更新上下文分析、任务生成和任务优先级排序步骤。根据需要调整初始目标和学习路径，以更好地支持孩子的数学技能发展。反复执行步骤 2-9，以不断完善教育管理系统并随着时间的推移提高其有效性；\n\n这种自主智能体循环类型系统概述了教学中数学导师自适应帮助和指导孩子学习体验的过程，重点是根据孩子的需要和进步不断改善并提供个性化指导方案。\n\n## **如何构建和使用自主智能体**\n\n构建自主智能体有几个不同的选择。\n\n- 自己构建：看看我之前提供的框架，然后从头开始构建一切的旅程吧！这并不像听起来那么可怕。推荐使用的软件解决方案有 OpenAI 的 GPT-4、Pinecone 矢量数据库和 LangChain 的框架。\n- [[Auto-GPT]]：这是一个流行的开源选项，由 Toran Richards 创建。它包括连接到互联网、使用应用程序、长期和短期记忆等选项。\n- [[BabyAGI]]：另一个流行的开源选项，由 Yohei Nakajima 创建。虽然这个还没有连接到互联网，但它的代码不到 200 行，非常简练。\n- Microsoft 的 [[Jarvis]]：与 Auto-GPT 和 BabyAGI 非常相似，但更强大，由 Microsoft 和 HuggingFace 提供。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/AI":{"title":"AI","content":"\n# AI\n\n# 导航\n\n ai.sk1.cc  \n [AI 导航](https://ai.dreamthere.cn/)\n\n# 好用的 AI 工具\n\n1. 智能写作 Cohesive.so\n2. Logo大师 Logomaster.ai\n3. [究极设计](https://link.zhihu.com/?target=http%3A//Diagram.com)\n4. 代码走天下 Codepal.ai\n5. 智能搜索 Gptgo.ai\n6. [resumA.I. 简历美化](http://ResumAI.com)\n7. [ReviewGPT - Make Your Writing Awesome, AI-Powered](https://reviewgpt.net/)\n\n[Meshy | Create 3D Game Assets with Generative AI](https://www.meshy.ai/) ：2D 图片 转 3D\n\n二维码工具 https:/qrcode.antfu.me/  \nblog https://antfu.me/posts/ai-qrcode https://antfu.me/posts/ai-qrcode-refine\n\n# 图片生成\n\n1. 海艺：[SeaArt-海艺](https://www.seaart.ai/s/k5Wj9D \"SeaArt-海艺\") 最接近MJ，并且也能调用SD的模型\n2. liblibai：[LiblibA哩布哩布AI-在线stablediffusion免费生图](https://www.liblibai.com/sd \"LiblibA哩布哩布AI-在线stablediffusion免费生图\") 最接近SD，并且站内模型允许下载到本地，没魔法时可作为C站平替\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Advanced-Slides":{"title":"Advanced Slides","content":"\n#幻灯片\n\nAdvanced Slides 是 Obsidian 的开源插件，允许您在 Obsidian 中创建基于[eveal.js](https://revealjs.com/)的演示文稿。使用此工具，任何能够在 Obsidian 中创建笔记的人也可以创建漂亮的演示文稿。\n\n和 web ppt 有点像，但是感觉会更好用一点，毕竟我的笔记都在 Obsidian 里\n\n## 参考链接\n\n- [Obsidian 插件（二）：Advanced\\_Slides 的使用 - Kenny\\_LZK - 博客园](https://www.cnblogs.com/liuzhongkun/p/17096534.html)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Airbnb":{"title":"Airbnb","content":"\n# Airbnb\n\n爱彼迎是一家有温度的公司，在遭遇疫情的时候，CEO 自己亲手写了一封信告诉大家公司的困境，并果断调整业务，一次性裁员，不给剩余员工留下随时可能被裁的恐慌，让其专注于工作，得以起死回生，成功上市。\n\n# 参考资料\n\n[Airbnb 遇到疫情黑天鹅怎么办](https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==\u0026mid=2650726574\u0026idx=1\u0026sn=a32740c53fec834ff8984026bfa1a21d\u0026chksm=bec02efd89b7a7eb632ce59b7f05c51e034b28e7c96a2bf7a6ee484e1ef7c91fa03fde7e8b1e\u0026from=industrynews\u0026version=4.1.6.6020\u0026platform=win#rd)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Angular":{"title":"Angular","content":"\n# Angular\n\nAngular 最初的设计是针对大型应用进行的，上手成本较高，因为开发者需要掌握一些对前端开发来说较陌生的概念，其中包括依赖注入、模块化、脏检查、AOT 等设计。\n\n## 依赖注入\n\n在项目中，依赖注入体现为：项目提供了这样一个注入机制，其中有人负责提供服务、有人负责消耗服务，通过注入机制搭建了提供服务与消费服务之间的接口。对于消费者来说，无须关心服务是否已经被创建并初始化，依赖注入机制会保证服务的可用性。\n\n在这样的机制下，开发者只需要关注如何使用服务，至于这个服务内部的实现是怎样的、它是什么时候被初始化的、它又依赖了怎样的其他服务，都交给了依赖注入机制来处理，不需要操心。\n\n## 模块化组织\n\nAngular 模块把组件、指令和管道打包成内聚的功能块，每个模块聚焦一个特性区域、业务领域、工作流或通用工具。\n\n## 脏检查\n\n什么是脏检查呢？在 Angular 中，触发视图更新的时机来自常见的事件如用户交互（点击、输入等）、定时器、生命周期等，大概的过程如下：\n\n1. 在上述时机被触发后，Angular 会计算数据的新值和旧值是否有差异；\n2. 若有差异，Angular 会更新页面，并触发下一次的脏检查；\n3. 直到新旧值之间不再有差异，或是脏检查的次数达到设定阈值，才会停下来。\n\n## AOT 编译和 JIT 编译\n\n我们先来介绍下 AOT 编译和 JIT 编译。\n\n- [[JIT 编译]]：在浏览器中运行时编译，视图需要花很长时间才能渲染出来，导致运行期间的性能损耗。\n- AOT 编译（预编译）：在构建时编译，使得页面渲染更快，可提高应用性能。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Another-Quicker-Switcher":{"title":"Another Quicker Switcher","content":"\n快捷键cmd + option + o，相比自带的，支持更多内容搜索和丰富自定义选项。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/ArrayBuffer":{"title":"使用","content":"\n# 使用\n\n```JavaScript\nconst bufferArrary = [137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,1,0,0,0,1,1,3,0,0,0,37,219,86,202,0,0,0,6,80,76,84,69,0,0,255,128,128,128,76,108,191,213,0,0,0,9,112,72,89,115,0,0,14,196,0,0,14,196,1,149,43,14,27,0,0,0,10,73,68,65,84,8,153,99,96,0,0,0,2,0,1,244,113,100,166,0,0,0,0,73,69,78,68,174,66,96,130];\nconst array = Uint8Array.from(bufferArrary);\nconst blob = new Blob([array], {type: 'image/png'});\nconst form = new FormData();\nform.append('file', blob, '1.png');\naxios.post('http://localhost:7787/files', form)\n```\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Astro":{"title":"定位","content":"\n# 定位\n\n这一点其实挺困扰初学者的，因为 Astro 既自创了类似于`.vue`、`.jsx`文件的  `.astro`  语法，又提供了像 Next.js 里面各种运行时的能力，比如约定式路由、构建优化、SSR 等等。\n\n但实际上它给自己的定位非常清晰，即  `content-focused`  应用开发框架，换句话说，就是重内容、轻交互场景下的上层研发框架，比如大多数电商网站、文档站、博客站、证券网站等等。\n\n你可以将 Astro 理解为一个垂直场景下的`Next.js`，但它可以在它适用的领域里面可以胜过其它所有竞品(如`Next.js`、`Remix`、`Vuepress`  等)，这是它能够做起来的重要原因。\n\n# 优势\n\nAstro 的主要优势包括如下几点:\n\n- [[Islands 架构]]，解决传统 SSR/SSG 框架的全量 hydration 问题，做到尽可能少的 Client 端 JS 的开销，甚至是 0 JS。\n- 学习成本低。`.astro`  语法和传统的  `.jsx`  和  `.vue`  非常相似，对于新手前端来说也比较容易掌握。\n- 使用灵活。对于页面的开发，你既可以使用官方的`.astro`  语法，也同样可以使用  `.md`、`.vue`、`.jsx`  语法，也就是说，你可以自由选择其它前端框架的语法来开发，甚至可以在一个项目中同时写 Vue 组件和 React 组件！\n- 构建迅速。底层构建体系基于 Vite 以及 Esbuild 实现，项目启动速度非常快。\n\n# 相比 [[SSR]]\n\n相比于传统 SSR 中的全量 hydration，Islands 模式可以实现局部(partial) hydration，从而优化 JS 的体积，减少网络传输的成本和 JS 运行时的开销。\n\n在 Astro 中，默认所有的组件都是静态组件\n\n优势：\n\n1. Astro 相比 [[Next.js]]可以大幅度减少 JS 代码的体积(90% 以上)，同时页面的运行时性能也提升了 30% 以上。\n2. 除了 React，也支持其它的众多前端框架；\n3. 同时支持 SSR 和 SSG，而 Remix 不支持 [[SSG]]\n\n# 对比 React 18 的 Selection Hydration 特性\n\nReact 18 提供了  `renderToPipeableStream` API，真正实现了 SSR 场景下的  `Selection Hydration`，主要有如下的几个特点:\n\n- 在完整的 HTML 渲染之前就可以进行组件的 hydrate，而不用等待 HTML 的内容发送完毕\n- hydration 可中断。比如页面中有两个组件: Sidebar 和 Comment，当这个部分的 HTML 发送至浏览器时，React 打算开始对 Sidebar 组件进行 hydrate:\n\n两者存在着非常大的区别:\n\n- 从渲染框架上来看， `Selection Hydration`  依附于具体框架的实现，而  `Partial Hydration`  可以做到框架无关，即使是 Vue、Solid 的项目也可以做到  `Partial Hydration`。\n- 从客户端执行的 JS 总量来看， `Partial Hydration`  可以做到加载部分组件的 JS 代码，而  `Selection Hydration`  仍然需要加载和执行全量的 JS 代码。\n- 从服务端和客户端的交互来看，  `Selection Hydration`  严重依赖于流式(Streaming)渲染，服务端需要加上  `transfer-encoding: chunked`  的响应头，而  `Partial Hydration`  没有这个限制。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Auto-GPT":{"title":"Auto-GPT","content":"","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Automa":{"title":"Automa","content":"\n暂时没发现能用的地方\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/B%E7%AB%99%E8%A7%86%E9%A2%91%E5%B5%8C%E5%85%A5":{"title":"B 站视频嵌入","content":"\n# B 站视频嵌入\n\n先直接看一下成品\n\n\u003e \u003cdiv style=\"position: relative; padding: 30% 45%;\"\u003e\n\u003e\n\u003e \u003ciframe style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\" src=\"[https://player.bilibili.com/player.html?aid=76053337\u0026](https://www.bilibili.com/read/cv6775208#);bvid=[BV11J41127DF](https://www.bilibili.com/video/BV11J41127DF?from=articleDetail)\u0026cid=130096191\u0026page=1\u0026as_wide=1\u0026high_quality=1\u0026danmaku=0\" frameborder=\"no\" scrolling=\"no\"\u003e\n\u003e\n\u003e \u003c/iframe\u003e\n\u003e\n\u003e \u003c/div\u003e\n\n稍微解释一下上面代码的含义：\n\n- page -\u003e  起始下标为 1 (默认值也是为 1)\n- as_wide -\u003e  是否宽屏 【1: 宽屏, 0: 小屏】\n- high_quality -\u003e  是否高清 【1: 高清(最高 1080p) / 0: 最低视频质量(默认)】\n- danmaku -\u003e  是否开启弹幕 【1: 开启(默认), 0: 关闭】\n- allowfullscreen -\u003e allowfullscreen= \"ture\"  允许全屏，使用该参数可以在浏览器中全屏播放\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Babel":{"title":"Babel","content":"\n## Babel的原理\n\n## AST抽象语法树\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Better-Command-Palette":{"title":"Better Command Palette","content":"\n快捷键cmd + option + p，相比自带的，支持基于标签tag的搜索和其他丰富的自定义选项。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Brew":{"title":"Brew 安装","content":"\n# Brew 安装\n\n### vim\n\n```vim\ntouch xxx // 创建文件\ncd.. // 返回上一级\n:wq! // 保存并强制退出\n\n```\n\n### uninstall\n\nhttps://raw.githubusercontent.com/Homebrew/install/master/uninstall\n\n```JavaScript\n#!/usr/bin/ruby\n\nSTDERR.print \u003c\u003cEOS\nWarning: The Ruby Homebrew installer is now deprecated and has been rewritten in\nBash. Please migrate to the following command:\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n\nEOS\n\nKernel.exec \"/bin/bash\", \"-c\", '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"'\n```\n\n然后将网页上的内容保存下来，存储为 uninstall 的文件名后\n\nchmod 755 uninstall\n\n./uninstall\n\n之后输入密码，卸载完成。\n\n### install\n\nhttps://raw.githubusercontent.com/Homebrew/install/master/install\n\n```JavaScript\n#!/usr/bin/ruby\n\nSTDERR.print \u003c\u003cEOS\nWarning: The Ruby Homebrew installer is now deprecated and has been rewritten in\nBash. Please migrate to the following command:\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n\nEOS\n\nKernel.exec \"/bin/bash\", \"-c\", '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"'\n```\n\n还是把网页内容保存下来，命名为 brew_install 文件名\n\nchmod 755 brew_install\n\n./brew_insatll\n\n输入密码，坐等安装完成。\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/Bun":{"title":"Bun","content":"\n# Bun\n\nBun 不仅是一个专注性能与开发者体验的全新 JavaScript 运行时，还是一个快速的、全能的工具包，可用于运行、构建、测试和调试JavaScript和TypeScript代码，无论是从单个文件还是完整的全栈应用。\n\n# 参考链接\n\n- [Bun 1.0 正式发布，爆火的前端运行时，速度遥遥领先！ - 掘金](https://juejin.cn/post/7277387014046335010)\n","lastmodified":"2023-09-18T14:54:47.438453963Z","tags":null},"/CDN":{"title":"CDN","content":"\n# CDN\n\n因为信号传输都是要经过链路层，而这一层受限物理的限制无法突破光速，当你想要从杭州请求到北京的接口，那么物理直线距离就超过一千多千米，就算排除掉所有的干扰因素，一次也会超过 7ms。\n\n所以就出现了 CDN，他在全国各地都增设一个缓存点，每个请求都会寻找最近的 CDN 点进行数据请求。从而提高数据请求速度\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/CPI":{"title":"CPI","content":"\n# CPI\n\nCPI是指消费者物价指数（Consumer Price Index），用于衡量一定时期内消费者购买一篮子商品和服务的价格变动情况。CPI的升降代表了物价的涨跌情况，当CPI上升时，表示物价上涨，而CPI下降则表示物价下跌。\n\n通常和 PPI 一起来看\n\nCPI 正常会有增长，也叫通胀，代表消费上涨，如果降低的话说明发生了通缩\n\n适度的通胀可以刺激消费，因为货币会贬值，物价上涨不如消费出去，如过度的通胀会导致市场无法预测 如津巴布韦一样\n\n通缩的话，老百姓会倾向于优先储蓄，投资，而对消费则会再观望一下，期待继续降价。但是，过度的通缩可能导致经济衰退，因为企业利润下降，投资减少，失业率上升。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/CSRF":{"title":"CSRF","content":"\n# CSRF\n\nCSRF 攻击：陌生链接不要随便点\n\nCSRF 英文全称是**Cross-site request forgery**,所以又称为“ **跨站请求伪造** ”，是指黑客引  \n诱用户打开黑客的网站，在黑客的网站中，利用用户的登录状态发起的跨站请求。简单来讲，  \n**CSRF 攻击就是黑客利用了用户的登录状态，并通过第三方的站点来做一些坏事。**\n\n### 自动发起 GET 请求\n\n当页面被加载时，浏览器会自动发起资源请求\n\n```html\n\u003cimg src=\"https://xxxx.com/session?user=xxx\u0026psw=xxx\" /\u003e\n```\n\n### 自动发起 POST 请求\n\n```html\n\u003cform id=\"hacker-form\"\u003e\u003c/form\u003e\n\u003cscript\u003e\n\tdocument.getElementById(\"hacker-form\").submit();\n\u003c/script\u003e\n```\n\n通过表单自动提交 POST 请求\n\n### 引诱客户点击链接\n\n### 如何防止 CSRF 攻击\n\n发起 `CSRF` 攻击的三个必要条件：\n\n- 第一个，目标站点一定要有 `CSRF` 漏洞；\n- 第二个，用户要登录过目标站点，并且在浏览器上保持有该站点的登录状态；\n- 第三个，需要用户打开一个第三方站点，可以是黑客的站点，也可以是一些论坛。\n\n要避免发生 `CSRF 攻击`，通常有以下几种途径：\n\n1. **充分利用好 `Cookie` 的 `SameSite` 属性**\n\n- **Strict** 最为严格。如果 SameSite 的值是 Strict, 那么浏览器会完全禁止第三方 Cookie。\n- **Lax** 相对宽松一点。在跨站点的情况下，从第三方站点的链接打开和从第三方站点提交 Get  \n  方式的表单这两种方式都会携带 Cookie。但如果在第三方站点中使用 Post 方法，或者通  \n  过 img、iframe 等标签加载的 URL,这些场景都不会携带 Cookie。\n- 而如果使用 **None** 的话，在任何情况下都会发送 Cookie 数据。\n\n2. **验证请求的来源站点**\n\n服务器的策略是优先判断 **Origin**,如果请求头中没有包含 `Origin` 属性，再根据实际情况判断是否使用 **Referer** 值。  \nOrigin 属性只包含了域名信息，并没有包含具体的 URL 路径，这是 Origin 和 Referer 的一个主要区别。  \n在这里需要补充一点，Origin 的值之所以不包含详细路径信息，是有些站点因为安全考虑，不想把源站点的详细路径暴露给服务器。\n\n3. **CSRF Toekn**  \n   服务器生成一个随机字符串，在之后的请求都携带上\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome":{"title":"原理学习","content":"\n# 原理学习\n\n[[Chrome架构]]  \n[[EventLoop |浏览器 EventLoop]]  \n[[Chrome关键渲染路径 ]]  \n[[Chrome问题]]  \n[[V8 ]]  \n[[前端安全 |浏览器安全问题]]  \n[[浏览器存储]]  \n[[Chrome性能分析]]\n\n# 其他\n\n[[Chrome 常用快捷键汇总]]  \n[[Chrome插件]]\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome%E5%85%B3%E9%94%AE%E6%B8%B2%E6%9F%93%E8%B7%AF%E5%BE%84":{"title":"关键渲染路径","content":"\n浏览器页面加载过程中，可以分为以下阶段：\n\n1. 网络请求，服务端返回 HTML 内容；\n2. 浏览器一边解析 HTML，一边进行页面渲染；\n3. 解析到外部资源，会发起 HTTP 请求获取，加载 Javascript 代码时会暂停页面渲染；\n4. 根据业务代码加载过程，会分别进入页面开始渲染、渲染完成、用户可交互等阶段；\n5. 页面交互过程中，会根据业务逻辑进行逻辑运算、页面更新。  \n\n从结构上来说，浏览器主要包括了八个子系统：用户界面、浏览器引擎、渲染引擎、网络子系统、JavaScript 解释器、XML 解析器、显示后端、数据持久性子系统。\n\n# 关键渲染路径\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173633.png)\n\n关键渲染路径就是将 HTML, CSS, JavaScript 文件转化成漂亮页面的过程\n\n## DOM 生成\n\n为什么要构建 DOM 树呢？**这是因为浏览器无法直接理解和使用 HTML，所以需要将 HTML 转换为浏览器能够理解的结构——DOM 树**。\n\n浏览器会遵守一套定义完善的步骤来处理 HTML 并构建 DOM：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173701.png)\n\n### 第一步：转换\n\n浏览器从磁盘或网络读取 HTML 的原始字节，并根据文件的指定编码（例如 UTF-8）将它们转换成字符，\n\n```HTML\n3C 62 6F 64 79 3E 48 65 6C 6C =\u003e \u003chtml\u003e\n\n\u003chead\u003e... \u003c/head\u003e\n\n\u003cbody\u003e\n```\n\n### 第二步: Token 化\n\n将字符串转换成 Token，例如：“ `\u003chtml\u003e` ”、“ `\u003cbody\u003e` ”等。Token 中会标识出当前 Token 是“开始标签”或是“结束标签”亦或是“文本”等信息。\n\n```HTML\n\u003chtml\u003e\n\n\u003chead\u003e... \u003c/head\u003e\n\n\u003cbody\u003e\n```\n\n↓\n\n`StartTag: html` 、 `StartTag: head` 、 `..` 、 `EndTag: head` 、 `StartTag: body`  \n其内部实现是通过维护一个栈，遇到 start 压入栈，遇到 end 弹出，节点与节点之间的关系通过标签的闭合辨别，比如两个相同标签的 start 和 end 内的元素都是其子元素。\n\n### 第三步：生成节点对象并构建 DOM\n\n事实上，构建 DOM 的过程中，不是等所有 Token 都转换完成后再去生成节点对象，而是一边生成 Token 一边消耗 Token 来生成节点对象。换句话说，每个 Token 被生成后，会立刻消耗这个 Token 创建出节点对象，这些对象分别定义他们的属性和规则。\n\n因为 HTML 标记定义的就是不同标签之间的关系，这个关系就像是一个树形结构一样  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173727.png)\n\n## 样式计算\n\n样式计算的目的是为了计算出 DOM 节点中每个元素的具体样式，这个阶段大体可分为三步来完成。\n\n### 1. 把 CSS 转换为浏览器能够理解的结构\n\nCSS 样式来源主要有三种：\n\n- 通过 link 引用的外部 CSS 文件\n- `\u003cstyle\u003e` 标记内的 CSS\n- 元素的 style 属性内嵌的 CSS\n\n和 HTML 文件一样，浏览器也是无法直接理解这些纯文本的 CSS 样式，所以**当渲染引擎接收到 CSS 文本时，会执行一个转换操作，将 CSS 文本转换为浏览器可以理解的结构——styleSheets**。\n\n\u003e Bytes → characters → tokens → nodes → CSSOM\n\n只需要在控制台中输入 document.styleSheets，然后就看到如下图所示的结构：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173748.png)\n\n### 2. 转换样式表中的属性值，使其标准化\n\n**需要将所有值转换为渲染引擎容易理解的、标准化的计算值**，这 个过程就是属性值标准化。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173802.png)\n\n### 3. 计算出 DOM 树中每个节点的具体样式\n\n#### CSS 的继承规则\n\n**CSS 继承就是每个 DOM 节点都包含有父节点的样式**。\n\n#### **CSS 的层叠规则**\n\n**层叠是 CSS 的一个基本特征，它是一个定义了如何合并来自多个源的属性值的算法。它在 CSS 处于核心地位，CSS 的全称“层叠样式表”正是强调了这一点**。\n\n### 注意\n\n不完整的 CSS 是无法使用的，因为 CSS 的每个属性都可以改变 CSSOM。所以必须等 CSSOM 构建完毕才能进入到下一个阶段，哪怕 DOM 已经构建完，它也得等 CSSOM，然后才能进入下一个阶段。\n\n**所以，CSS 的加载速度与构建 CSSOM 的速度将直接影响首屏渲染速度，因此在默认情况下 CSS 被视为阻塞渲染的资源。**\n\n另外，而 JavaScript 引擎在解析 JavaScript 之前，是不知道 JavaScript 是否操纵了 CSSOM 的，所以渲染引擎在遇到 JavaScript 脚本时，不管该脚本是否操纵了 CSSOM，都会执行 CSS 文件下载，解析操作，再执行 JavaScript 脚本。\n\n所以说 **JavaScript 脚本是依赖样式表**的，这又多了一个阻塞过程。\n\n现在，我们有 DOM 树和 DOM 树中元素的样式，但这还不足以显示页面，因为我们还不知道 DOM 元素的几何位置信息。**那么接下来就需要计算出 DOM 树中可见元素的几何位置，我们把这个计算过程叫做布局**。\n\n### 1. 创建渲染树\n\n为了构建渲染树，浏览器大体上完成了下面这些工作：\n\n- 遍历 DOM 树中的所有可见节点，并把这些节点加到布局中；\n- 而不可见的节点会被布局树忽略掉，如 head 标签下面的全部内容，再比如 body.p.span 这个元素，因为它的属性包含 dispaly:none，所以这个元素也没有被包进布局树。\n\n### 2. 布局计算\n\n#### 现在的布局计算 LayerTree\n\n因为页面中有很多复杂的效果，如一些复杂的 3D 变换、页面滚动，或者使用 z-indexing 做 z 轴排序等，为了更加方便地实现这些效果，**渲染引擎还需要为特定的节点生成专用的图层，并生成一棵对应的图层树**（LayerTree）。\n\n##### 那么需要满足什么条件，渲染引擎才会为特定的节点创建新的层呢?\n\n###### **第一点，拥有层叠上下文属性的元素会被提升为单独的一层。**\n\n- 档根元素（ `\u003chtml\u003e` ）；\n- [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position) 值为 `absolute` （绝对定位）或 `relative` （相对定位）且 [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index) 值不为 `auto` 的元素；\n- [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position) 值为 `fixed` （固定定位）或 `sticky` （粘滞定位）的元素（沾滞定位适配所有移动设备上的浏览器，但老的桌面浏览器不支持）；\n- flex ([`flexbox`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/flexbox)) 容器的子元素，且 [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index) 值不为 `auto` ；\n- grid ([`grid`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid)) 容器的子元素，且 [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index) 值不为 `auto` ；\n- [`opacity`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/opacity) 属性值小于 `1` 的元素（参见 [the specification for opacity](http://www.w3.org/TR/css3-color/#transparency)）；\n- [`mix-blend-mode`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/mix-blend-mode) 属性值不为 `normal` 的元素；\n- 以下任意属性值不为 `none` 的元素：\n  - [`transform`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform)\n  - [`filter`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter)\n  - [`perspective`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/perspective)\n  - [`clip-path`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path)\n  - [`mask`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/mask) / [`mask-image`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/mask-image) / [`mask-border`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/mask-border)\n- [`isolation`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/isolation) 属性值为 `isolate` 的元素；\n- [`-webkit-overflow-scrolling`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-overflow-scrolling) 属性值为 `touch` 的元素；\n- [`will-change`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/will-change) 值设定了任一属性而该属性在 non-initial 值时会创建层叠上下文的元素（参考[这篇文章](http://dev.opera.com/articles/css-will-change-property/)）；\n- [`contain`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/contain) 属性值为 `layout` 、 `paint` 或包含它们其中之一的合成值（比如 `contain: strict` 、 `contain: content` ）的元素。\n\n###### **第二点，需要剪裁（clip）的地方也会被创建为图层。**\n\n```JavaScript\n      div {\n          width: 200;\n          height: 200;\n          overflow: auto;\n          background: gray;\n      }\n```\n\n出现这种裁剪情况的时候，渲染引擎会为文字部分单独创建一个层，如果出现滚动条，滚动条也会被提升为单独的层\n\n#### 下一代布局计算 LayoutNG\n\n在执行布局操作的时候，会把布局运算的结果重新写回布局树中，所以布局树既是输入内容也是输出内容，这是布局阶段一个不合理的地方，因为在布局阶段并没有清晰地将输入内容和输出内容区分开来。针对这个问题，Chrome 团队正在重构布局代码，下一代布局系统叫 LayoutNG，试图更清晰地分离输入和输出，从而让新设计的布局算法更加简单。\n\n## 图层绘制\n\n渲染引擎实现图层的绘制，会把一个图层的绘制拆分成很多小的**绘制指令**，然后再把这些指令按照顺序组成一个待绘制列表，\n\n## 栅格化（raster）操作\n\n绘制列表只是用来记录绘制顺序和绘制指令的列表，而实际上绘制操作是由渲染引擎中的合成线程来完成的。\n\n在有些情况下，有的图层可以很大，比如有的页面你使用滚动条要滚动好久才能滚动到底部，但是通过视口，用户只能看到页面的很小一部分，所以在这种情况下，要绘制出所有图层内容的话，就会产生太大的开销，而且也没有必要。\n\n基于这个原因，**合成线程会将图层划分为图块（tile）**，\n\n然后**合成线程会按照视口附近的图块来优先生成位图，实际生成位图的操作是由栅格化来执行的。所谓栅格化，是指将图块转换为位图**。而图块是栅格化执行的最小单位。\n\n通常，栅格化过程都会使用 GPU 来加速生成，使用 GPU 生成位图的过程叫快速栅格化，或者 GPU 栅格化，生成的位图**被保存在 GPU 内存中**。\n\nGPU 操作是运行在 GPU 进程中，如果栅格化操作使用了 GPU，那么最终生成位图的操作是在 GPU 中完成的，这就涉及到了跨进程操作。渲染进程把生成图块的指令发送给 GPU，然后在 GPU 中执行生成图块的位图，并保存在 GPU 的内存中。\n\n## 合成和显示\n\n一旦所有图块都被光栅化，合成线程就会生成一个绘制图块的命令——“DrawQuad”，然后将该命令提交给浏览器进程。\n\n浏览器进程里面有一个叫 viz 的组件，用来接收合成线程发过来的 DrawQuad 命令，然后根据 DrawQuad 命令，将其页面内容绘制到内存中，最后再将内存显示在屏幕上。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173813.png)\n\n综合上图，我们总结下渲染进程的流程：\n\n1. 渲染引擎将 HTML 内容转化成可以读懂的**DOM 结构**\n2. 将 CSS 文件转化成**styleSheets**，计算出 DOM 节点样式\n3. 合并生成**layoutTree**\n4. 按照不同的层叠上下文进行分层，创建不同图层\n5. 把一个图层的绘制拆分成很多小的**绘制指令**并将其提交到合成线程\n6. 合成线程将图层分成**图块**，并在**光栅化线程池**中将图块转换成位图。\n7. 生成绘制命令-“**DrawQuad**”，发送到浏览器进程\n8. viz 组件将内容绘制到内存，并显示到显示器上\n\n## 重绘、重排和合成\n\n### 重排\n\n如果你通过 JavaScript 或者 CSS 修改元素的几何位置属性，例如改变元素的宽度、高度等，那么浏览器会触发重新布局，解析之后的一系列子阶段，这个过程就叫**重排**。无疑，**重排需要更新完整的渲染流水线，所以开销也是最大的**。\n\n### 重绘\n\n如果修改了元素的背景颜色，那么布局阶段将不会被执行，因为并没有引起几何位置的变换，所以就直接进入了绘制阶段，然后执行之后的一系列子阶段，这个过程就叫**重绘**。相较于重排操作，**重绘省去了布局和分层阶段，所以执行效率会比重排操作要高一些**。\n\n### 合成\n\n如果你更改一个既不要布局也不要绘制的属性，渲染引擎将跳过布局和绘制，只执行后续的合成操作，我们把这个过程叫做**合成**。\n\n使用 CSS 的 transform 来实现动画效果，这可以避开重排和重绘阶段，直接在非主线程上执行合成动画操作。这样的效率是最高的，因为是在非主线程上合成，并没有占用主线程的资源，另外也**避开了布局和绘制**两个子阶段，所以**相对于重绘和重排，合成能大大提升绘制效率**。‘如果采用了 GPU，那么合成的效率会非常高。\n\n**需要重点关注的是，合成操作是在合成线程上完成的，这也就意味着在执行合成操作时，是不会影响到主线程执行的**。\n\n#### 如何利用合成优化\n\n使用 will-change，这段代码就是提前告诉渲染引擎 box 元素将要做几何变换和透明度变换操作，这时候渲染引擎会将该元素单独实现一帧，等这些变换发生时，渲染引擎会通过合成线程直接去处理变换，这些变换并没有涉及到主线程，这样就大大提升了渲染的效率。**这也是 CSS 动画比 JavaScript 动画高效的原因**。\n\n```css\n.box {\n\twill-change: transform, opacity;\n}\n```\n\n详细例子查看：[will-change-code](https://github.com/chelseachen007/writeCode/tree/master/css/will-change)\n\n### [[Performance]]\n\n### 总结\n\nCSSOM 会阻塞渲染，只有当 CSSOM 构建完毕后才会进入下一个阶段构建渲染树。\n\n通常情况下 DOM 和 CSSOM 是并行构建的，但是当浏览器遇到一个 `script` 标签时，DOM 构建将暂停，直至脚本完成执行。但由于 JavaScript 可以修改 CSSOM，所以需要等 CSSOM 构建完毕后再执行 JS。\n\n[\u003c深入了解现代浏览器\u003e](https://juejin.cn/post/6900850262689185800#heading-2)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome%E6%8F%92%E4%BB%B6":{"title":"Chrome插件","content":"\n# Chrome插件\n\n- [[Trancy]],AI加持的翻译软件，多了个训练的功能，试试能不能替代掉 `YouTube™ 双字幕`和`沉浸式翻译` 两个插件\n- [[Tampermonkey]]，必备插件，各种无视限制解除\n- `uBlock Origin`，必备插件，去除广告\n - [[沉浸式翻译]]，很好用的全文翻译，双语显示阅读，最重要的是免费\n - [[沙拉查词]]，词库多，同步方便\n - `LastPass`， 必备，保存密码\n - `ChatGPTBox`, gpt插件，可以总结网页内容，也有翻译功能\n - `Douban Book+`： 查询豆瓣评分\n - `flomoplus`，快速保存闪念到 flomo\n - `Grammarly`， 用来纠正语法错误，如果要英文写作还是很有作用的\n - `iTab新标签页` ，自定义 tab 页，比谷歌默认的好点\n - `MetaMask`，以太钱包\n - `OctoLinker`，忘了干嘛用的了😰\n - `Octotree`，github 的目录树 不用一个一个点过去了\n - `React Developer Tools`\n - `RSSHub Radar`，寻找 RSS 订阅地址，可以和 [[RSS]] 阅读器结合，完善自己的阅读信息流\n - `Save to Notion`, 保存切片到 notion，收集书籍、电影、网站等信息都挺快\n - `Video Speed Controller` ，控制一些没有进度条的视频速度，可以设置一些常用倍数\n - `YouTube™ 双字幕`，对字幕翻译，看一些英语视频比较方便\n - `简悦` ，买了永久版，但是我的稍后读习惯属实不行\n - `夸克网盘-网页嗅探`，可以快速保存网络资源到夸克网盘\n - `微信读书助手`，浏览公众号、听书、一键组队、导出备份笔记，开始导出到 Obsidian，但是后面发现了[[Obsidian WeRead Plugin]]\n - [[Automa]]： 自动化插件\n\n# 插件开发\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome%E6%9E%B6%E6%9E%84":{"title":"Chrome 架构","content":"\n# Chrome 架构\n\n多线程可以并行处理任务，但是线程是不能单独存在的，它是由进程来启动和管理的。那什么又是进程呢？  \n**一个进程就是一个程序的运行实例。** 详细解释就是，启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220714140041.png)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome%E9%97%AE%E9%A2%98":{"title":"Chrome问题","content":"\n# Chrome问题\n\n接下来开始极客时间《浏览器工作原理与实践》阅读，在这之前，搜集一些问题，让我们带着问题来阅读。\n\n## 从输入 URL 到页面加载的过程\n\n这一道题不断深入可以完善自己的前端知识体系！\n\n1. 浏览器构建请求头，准备发送请求\n2. 检查有无本地缓存 =\u003e引申 [[HTTP 缓存]]\n3. 无缓存，开始 DNS 查询，从本地目录开始查找缓存一直到根目录 =\u003e 引申 [[DNS]] 查询 =\u003e 如果请求协议是 [[HTTPS]]，那么还需要建立 `TLS` 连接。 // 准备 IP 地址和端口\n4. 查询到 IP 后，检查 TCP 队列是否已满，浏览器限定同时存在 6 个连接\n5. 建立 TCP 连接，开始 3 次握手\n6. 开始数据传输，到后台处理完毕，结束传输，开始 4 次挥手\n7. 浏览器接受到数据，通过 Content-Type 区分，如果是`下载类型`就交给浏览器的下载管理器结束本次导航，如果是 `HTML` ，浏览器进程`提交文档`到渲染进程开始渲染\n\n   `Chrome` 的默认策略是，每个标签对应一个渲染进程。但**如果从一个页面打开了另一个新页面，而新页面和当前页面属于同一站点的话，那么新页面会复用父页面的渲染进程**。官方把这个默认策略叫 `process-per-site-instance`。\n\n8. 渲染阶段\n   1. DOM 生成\n   2. 样式计算\n   3. 布局阶段\n   4. 生成 LayerTree [《层叠上下文》](https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context)\n\n## 了解跨域吗，一般什么情况会导致跨域\n\n跨域，是指浏览器不能执行其他页面的脚本，触发了浏览器的同源策略，是一种针对 Js 的安全策略。\n\n同源策略，是指域名，协议和端口均相同，同源策略限制了 ajax 请求发送，js 对象和 DOM 读取以及 Cookie 和 local 等的访问\n\n## 浏览器的 EventLoop 了解吗\n\n浏览器有一个主线程进行通过一个 for 循环不断进行事件执行然后退出，另外维护了一个消息队列，遵循先进先出的策略，当 for 循环执行完一个事件，就将队头的事件推入 for 循环执行。在消息队列中维护的事件就是宏任务事件，为了处理一些高优先级的事件，浏览器又在每个宏任务中维护了一个微任务列表，他的执行时间介于一个主函数执行结束之后，下一个宏任务之前。常见的微任务有 mutationOberserver 和 Promise.\n\n## requestAnimationFrame 属于宏任务还是微任务\n\n## 浏览器是怎么渲染的\n\n## 如何根据浏览器渲染机制加快首屏速度\n\n## 回流和重绘是什么？如何避免回流和重绘\n\n重排，它需要重新根据 CSSOM 和 DOM 来计算布局树，这样生成一幅图片时，会让整个渲染流水线的每个阶段都执行一遍，如果布局复杂的话，就很难保证渲染的效率了。  \n重绘因为没有了重新布局的阶段，操作效率稍微高点，但是依然需要重新计算绘制信息，并触发绘制操作之后的一系列操作。  \n为了提升每帧的渲染效率，Chrome 引入了分层和合成的机制\n\n## 什么是 GPU 加速，如何使用 GPU 加速，GPU 加速的缺点\n\nwill-change\n\n## 了解 V8 的垃圾回收吗\n\nV8 的垃圾回收 分为 栈内回收和堆内回收，栈保存简单变量，堆保存对象这种复杂变量\n\n栈内回收比较简单，就函数执行上下文出栈后，指针下移，V8 就会进行变量回收\n\n堆回收，V8 将回收区域分成 新生代 和 老生代 通过不同的回收策略进行回收\n\n首先是新生代，他采用了标记-整理的方式，V8 将新生代分成 空闲区域和对象区域，采用 Savger 算法，业技术当对象被访问到就进行标记，当空间快满时就进行一次整理，将已标记的变量复制到对象区域，并清理空闲区域，同时将两个区域互换，实现可循环。当一个变量被标记两次以上或者太大，就会进入到老生代。\n\n老生代，采用的是标记清理方式，因为这里的对象都比较大，所以复制会很消耗性能，所以，这里会选取一个根元素进行遍历，没被标记的就会被视作垃圾数据，标记完成后不做清理，而是向一端移动，然后清理边界之外的垃圾元素\n\n然后并行标记， 使用空闲时间进行清理和整理操作\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB":{"title":"Chrome 常用快捷键汇总","content":"\n# Chrome 常用快捷键汇总\n\n尽量和[[Obsidian常用的快捷键及作用]] 一样  \n\n[[Chrome]]\n\n- `command + W` 关闭标签页\n- `command + N` 新建窗口\n- `command + shift + T` 打开上一个关闭的标签页\n\n# [[Video Speed Controller]]\n\n- `cmd + -` 倍数-0.1，和[[vidhub]]的改成一致\n- `cmd + =` 倍数 + 0.1\n- `R` 重置到 1\n- `G` 倍数到 1.8  \n\n [[简悦]]  \n\n - `DD` 加入到稍后读\n - `option + B` 打开稍后读\n - `AA` 进入阅读模式\n\n[[Trancy]]\n\n- `option + E` 全页面翻译\n\n[[RSSHub Radar]]\n\n- `command + i` 发现 rss 订阅\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Chrome-DevTools-Protocol":{"title":"Chrome DevTools Protocol","content":"\n# Chrome DevTools Protocol\n\n[Chrome DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/?fileGuid=xxQTRXtVcqtHK6j8)允许第三方对基于 Chrome 的网站进行检测、调试、分析等操作。\n\n也就是说，我们可以自行开发工具，通过 Chrome DevTools Protocol 来获取 Chrome 中网站运行的性能数据。\n\n当我们打开 Chrome DevTools 的时候，浏览器内核 Chromium 本身会作为一个服务端，它会通过 WebSocket 与 Chrome DevTools 进行通信，过程如下：\n\n1. DevTools 将作为客户端，与作为服务端的 Chromium 建立连接；\n2. DevTools 通过 HTTP 获取 HTML、JavaScript 和 CSS 资源，并进行加载；\n3. 资源加载后，DevTools 会建立与浏览器的 WebSocket 连接；\n4. Chrome DevTools Protocol 基于 WebSocket，它利用 WebSocket 建立连接 DevTools 和浏览器内核的快速数据通道。\n\n也就是说，DevTools 和浏览器内核的数据通信，是通过 Chrome DevTools Protocol 来完成。同样的，当我们通过 DevTools 从 Windows、Mac 或 Linux 计算机远程调试 Android 设备上的实时内容时，使用的也是该协议。\n\nChrome DevTools Protocol 具有与浏览器的许多不同部分（例如页面、Service Worker 和扩展程序）进行交互的 API。该协议把不同的操作划分为了不同的域（domain），每个域负责不同的功能模块，比如 `DOM`、`Debugger`、`Network`、`Console` 和 `Performance` 等，可以理解为 DevTools 中的不同功能模块。\n\n对于如何使用该协议，其实已有针对这个协议封装出不同语言的库，包括 Node.js、Python、Java 等，可以在 [awesome-chrome-devtools](https://github.com/ChromeDevTools/awesome-chrome-devtools#chrome-devtools-protocol?fileGuid=xxQTRXtVcqtHK6j8) 这个项目中找到。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Claude":{"title":"Claude","content":"\n据官方介绍，Claude 的核心模型经由训练，目标是变得有用、诚实和无害。此外 Claude 更能理解和接受自然语言，和它对话无需复杂的技巧，可以轻松得到详细且易于理解的答案。它目前有两种型号 Claude-v1 和 Claude Instant：\n\n① Claude-v1：功能强大的模型，可以处理复杂的对话、生成创意内容和详细说明。\n\n② Claude Instant：更快更便宜的模型，可以处理偏随意的对话，对文本进行分析和摘要以及根据文档进行问答。\n\n与 ChatGPT 等大型语言模型一样，Claude 的应用场景非常广泛，信息搜索、内容总结摘要、写作协助、创意生成、问答、编程这些任务它都能轻松完成。目前 Claude 已经被应用在多个知名产品中，比如知识笔记工具 Notio AI 就是用 Claude 协助用户进行智能写作，国外问答社区 Quora 也在自己的 AI 聊天应用程序 Poe 中置入了 Claude。\n\n## 怎么使用\n\nSlack-Claude 官方网址： [www.anthropic.com/claude-in-slack](https://link.uisdc.com/?redirect=http%3A%2F%2Fwww.anthropic.com%2Fclaude-in-slack)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/CodeReview":{"title":"CodeReview","content":"\n# CodeReview\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Configurable":{"title":"","content":"","lastmodified":"2023-09-18T14:54:44.050437083Z","tags":null},"/Context":{"title":"Context","content":"\n# Context\n\n## 使用\n\n```javascript\nconst AppContext = React.createContext()\nconst { Provider, Consumer } = AppContext\n\n\n//Provider\n\u003cProvider value={title: \"this.state.title, content: this.state.content}\u003e\"\n  \u003cTitle /\u003e\n  \u003cContent /\u003e\n \u003c/Provider\u003e\n\n//Consumer\n\u003cConsumer\u003e\n  {value =\u003e \u003cdiv\u003e{value.title}\u003c/div\u003e}\n\u003c/Consumer\u003e\n```\n\n#### 过时的 Context\n\n- **代码不够优雅**\n- 如果组件提供的一个 Context 发生了变化，而中间父组件的 shouldComponentUpdate 返回 false，**那么使用到该值的后代组件不会进行更新**。使用了 Context 的组件则完全失控，所以基本上没有办法能够可靠的更新 Context。[这篇博客文章](https://medium.com/@mweststrate/how-to-safely-use-react-context-b7e343eff076)很好地解释了为何会出现此类问题，以及你该如何规避它。 ——React 官方\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/CssMinimizerPlugin":{"title":"CssMinimizerPlugin","content":"\n[官方文档](https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/)\n\n## 主要作用\n\n`css`压缩的规则\n\n- 删除注释\n- 属性简写，如色彩值为`#ffffff`简写就是`#fff`，长度为`0`可不带单位\n- 属性合并，例如`margin: 10px 10px`合并为`margin: 10px`\n- 等等等等  \n\nwebpack 默认自带的minimizer压缩 ,可能会出现一些配置上的冲突。例如，两者都尝试压缩 CSS 文件，可能会导致冲突或重复的操作。  \n与[[MiniCssExtractPlugin]]配合，将 css 拆分，减少单个文件的加载压力  \ncss 的 [[tree-shaking]] 通过[[purgecss-webpack-plugin]]来实现\n\n## webpack5 js 压缩冲突\n\n在webpack5中，不需要手动引入uglify插件，只需配置`mode`为`production`就可以压缩js代码。  \n但是，如果用了`css-minimizer-webpack-plugin`插件去压缩css文件，js的压缩就会失效。\n\n### 解决方法\n\n使用`terser-webpack-plugin`插件去压缩js代码\n\n```javascript\nconst TerserPlugin = require(\"terser-webpack-plugin\");\n\nnew TerserPlugin({ test: /\\.js$/})\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DApp":{"title":"DApp","content":"\n# DApp\n\nDApp 是一个构建于开放的、去中心化的、点对点的基础设施之上的 Web 应用程序。  \nDApp 至少包含：\n\n- 位于区块链之上的智能合约\n- Web 前端用户界面\n\n除此之外，很多 DApp 还包括其他的去中心化组件，比如：\n\n- 去中心化（P2P 形式）的存储协议和平台·\n- 去中心化（P2P 形式）的消息协议和平台\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DDOS":{"title":"DDOS","content":"\n# DDOS\n\nDDOS 攻击指的是所有使服务器崩溃的手段\n\n常见的有：\n\n- 高并发请求\n- SYN Flood\n- HTTP Flood\n- …等等\n\n防范手段：\n\n- 备份网站\n- 使用阿里云等运营商服务器\n- 带宽扩容+CDN 增加攻击成本\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DH":{"title":"DH","content":"\n# DH\n\nDH 体系, 大致意思就有很多历史，纠缠成了现在这一个\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DIKW%E6%A8%A1%E5%9E%8B":{"title":"Data","content":"\n它代表了知识管理的四个层级，也是学习的四个层次，分别是：Data（数据），Information（信息），Knowledge（知识），以及 Wisdom（智慧）。\n\n# Data\n\n比如一个名词，你只是知道了有这么个名词 但是还没有了解到他的信息\n\n# Information\n\n比如知道了他是什么，但是没有深入了解\n\n# Knowledge\n\n深入的去问了自己，他是谁提出的，内容完善了吗？等等问题 。由点到面的过程\n\n# Wisdom\n\n非常简单。当你在生活中，遇到一些现象时，能想到「它跟认知资源有关」，能准确地抽象出基本的模型，用认知资源来理解、解释这些现象.\n\n\n[[有效的读书方式]]","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DLL-%E6%89%93%E5%8C%85":{"title":"DLL 打包","content":"\n### DLL 打包\n\n在使用`webpack`进行打包时候，对于依赖的第三方库，比如`vue`，`vuex`等这些不会修改的依赖，我们可以让它和我们自己编写的代码分开打包，这样做的好处是每次更改我本地代码的文件的时候，`webpack`只需要打包我项目本身的文件代码，而不会再去编译第三方库。\n\n那么第三方库在第一次打包的时候只打包一次，以后只要我们不升级第三方包的时候，那么`webpack`就不会对这些库去打包，这样的可以快速的提高打包的速度。其实也就是`预编译资源模块`。\n\n#### DllPlugin\n\n`DLLPlugin` 插件是在一个额外独立的`webpack`设置中创建一个只有`dll`的`bundle`，也就是说我们在项目根目录下除了有`webpack.config.js`，还会新建一个`webpack.dll.js`文件。\n\n`webpack.dll.js`的作用是把所有的第三方库依赖打包到一个`bundle`的`dll`文件里面，还会生成一个名为 `manifest.json`文件。该`manifest.json`的作用是用来让 `DllReferencePlugin` 映射到相关的依赖上去的。\n\n#### DllReferencePlugin\n\n这个插件是在`webpack.config.js`中使用的，该插件的作用是把刚刚在`webpack.dll.js`中打包生成的`dll`文件引用到需要的预编译的依赖上来。\n\n`vendor-manifest.json`文件就是一个第三方库的映射而已。\n\n```JavaScript\n//* webpack.dll.js\n\nconst path = require(\"path\");\nconst webpack = require(\"webpack\");\nmodule.exports = {\n  mode: \"production\",\n  entry: {\n    vendors: [\"lodash\"],\n  },\n  output: {\n    filename: \"[name].dll.js\",\n    path: path.resolve(__dirname, \"../dll\"),\n    library: \"[name]\",\n  },\n  plugins: [\n    new webpack.DllPlugin({\n      name: \"[name]\",\n      path: path.resolve(__dirname, \"../dll/[name].manifest.json\"),\n    }),\n  ],\n};\n```\n\n```JavaScript\n// webpack.config.base.js\nconst AddAssetHtmlWebpackPlugin = require('add-asset-html-webpack-plugin')\nconst webpack = require('webpack')\n\nconst files = fs.readdirSync(path.resolve(__dirname, \"../dll\"));\nfiles.forEach((file) =\u003e {\n  if (/.*\\.dll.js/.test(file)) {\n    plugins.push(\n      new AddAssetHtmlWebpackPlugin({\n        filepath: path.resolve(__dirname, \"../dll\", file),\n      })\n    );\n  }\n  if (/.*\\.manifest.json/.test(file)) {\n    plugins.push(\n      new webpack.DllReferencePlugin({\n        manifest: path.resolve(__dirname, \"../dll\", file),\n      })\n    );\n  }\n});\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DM-i%E8%B6%85%E7%BA%A7%E6%B7%B7%E5%8A%A8":{"title":"DM-i 超级混动","content":"\n# DM-i 超级混动\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220809154556.png)\n\nM-i 超级混动是以电为主的混动技术，具备快、省、静、顺、绿等多重优势；亏电油耗低至 3.8L/百公里，可油可电综合续航里程突破 1200 公里，百公里加速时间比同级别燃油车快 2-3 秒；在提供无限接近纯电动车驾驶体验的同时，更无续航焦虑和充电焦虑。\n\n目前主流发动机热效率最多能做到 40%，但 DM-i 插混专用 1.5L 发动机却达到了 43.04%，突破了现阶段的技术极限，看似仅仅 3%的差距，对于内燃机而言就好比人类百米短跑，每提升 0.1 秒都是一种突破。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DNS":{"title":"DNS","content":"\n# DNS\n\nDNS 解析过程会进行递归查询，分别依次尝试从以下途径，按顺序地获取该域名对应的 IP 地址。\n\n1. 浏览器缓存\n2. 系统缓存（用户操作系统 Hosts 文件 DNS 缓存）\n3. 路由器缓存\n4. 互联网服务提供商 DNS 缓存（联通、移动、电信等互联网服务提供商的 DNS 缓存服务器）\n5. 根域名服务器\n6. 顶级域名服务器\n7. 主域名服务器\n\nDNS 解析过程会根据上述步骤进行递归查询，如果当前步骤没查到，则自动跳转到到下一步骤通过下一个 DNS 服务器进行查找。如果最终依然没找到，浏览器便会将页面响应为打开失败。\n\n除此之外，我们在前后端联调过程中也常常需要配置 HOST，这个过程便是修改了浏览器缓存或是系统缓存。通过将特定域名指向我们自身的服务器 IP 地址，便可以实现通过域名访问本地环境、测试环境、预发布环境的服务器资源。\n\n那为什么需要配置域名 HOST，而不直接使用 IP 地址进行访问呢？这是因为浏览器的[[同源策略]]会导致跨域问题。\n\n\n# [[安全 DNS]]","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Dao":{"title":"Dao","content":"\n为什么大家都抢着去做，因为你早点去做你就可以去创立规则，一些有利于自己的规则\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/DeFi":{"title":"DeFi","content":"","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Deno":{"title":"Deno","content":"\n# Deno\n\nDeno[22] 创建于 2018 年，是一个简单、现代、安全的 JavaScript 和 TypeScript 的运行时，Deno 使用 V8[23] 的同时，并以 Rust 构建。它试图取代 Node.js ，由 Node.js 的原作者创建。虽然它是在 2018 年创建的，但直到 2020 年 5 月才达到[24] v1.0[25] 。\n\nDeno 的 linter、code formatter 和文档生成器是使用 [[SWC]] 构建的[26] 。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Docker":{"title":"Docker","content":"\n# Docker\n\n## 软件\n\n- [OrbStack](https://orbstack.dev/)：Mac 应用软件，在图形界面管理 Docker 容器，据称速度比官方的 Docker Desktop 快得多。\n\n## Docker 简介\n\n### **Docker 镜像**\n\n是一种 UnionFS（联合文件系统），是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下.\n\n镜像同时也很小，因为我们 pull 的镜像剔除了无用的东西，只是一个精简功能版的镜像\n\n下载是一层一层下载，这样便于共享资源。\n\n### **Docker 容器数据卷**\n\n卷就是目录或文件，存在于一个或多个容器中，由 docker 挂载到容器，但不属于联合文件系统，因此能够绕过 Union File System 提供一些用于持续存储或共享数据的特性，卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此 Docker 不会在容器删除时删除其挂载的数据卷。\n\ndockerfile 也就是添加 容器数据卷的一种方式\n\n[[dockerfile]]\n\n### 优势\n\n| **特性**   | **容器**           | **虚拟机** |\n| ---------- | ------------------ | ---------- |\n| 启动       | 秒级               | 分钟级     |\n| 硬盘使用   | 一般为 MB          | 一般为 GB  |\n| 性能       | 接近原生           | 弱于       |\n| 系统支持量 | 单机支持上千个容器 | 一般几十个 |\n\n## 流程整理\n\n```cmd\ndocker search nginx\ndocker pull nginx\ndocker images\ndocker run -it -p 8080:8080 nginx\ndocker ps\ndocker stop ff6\n```\n\n[[Docker 安装]]  \n[[docker 优化]]\n\n## Docker Compose\n\nDocker Compose 是 docker 提供的一个命令行工具，用来定义和运行由多个容器组成的应用。\n\n使用 compose，我们可以通过 YAML 文件声明式的定义应用程序的各个服务，并由单个命令完成应用的创建和启动。\n\n```yaml\nversion: \"3.1\"\nservices:\n  nginx:\n    restart: always\n    #　image是指定服务的镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取镜像。\n    image: nginx\n    ports:\n      - 8091:80\n    #挂载一个目录或者一个已存在的数据卷容器，可以直接使用 [HOST:CONTAINER]格式，或者使用[HOST:CONTAINER:ro]格式，后者对于容器来说，数据卷是只读的，可以有效保护宿主机的文件系统。\n    volumes:\n      - ./nginx/conf.d/:/etc/nginx/conf.d\n      - ./frontend/dist/:/var/www/html/\n      - ./static/:/static/\n  app-pm2:\n    container_name: app-pm2\n    #构建容器\n    #服务除了可以基于指定的镜像，还可以基于一份Dockerfile，在使用up启动时执行构建任务，构建标签是build，可以指定Dockerfile所在文件夹的路径。Compose将会利用Dockerfile自动构建镜像，然后使用镜像启动服务容器。\n    build: ./backend\n    ports:\n      - \"3000:3000\"\n```\n\n### 启动\n\n```cmd\ndocker-compose up\n// or\ndocker-compose up -d\n```\n\n## 配置镜像\n\n```JavaScripton\n{\n  \"registry-mirrors\": [\n\"https://registry.docker-cn.com\",\n\"http://hub-mirror.c.163.com\",\n\"https://docker.mirrors.ustc.edu.cn\",\n\"http://dockerhub.azk8s.cn/\" ],\n  \"insecure-registries\": [],\n  \"debug\": true,\n  \"experimental\": false\n}\n```\n\n[[docker 常用命令]]\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Docker-%E5%AE%89%E8%A3%85":{"title":"Docker 安装","content":"\n## Docker 安装\n\n```JavaScript\n# apt升级\nsudo apt-get update\n\n# 添加相关软件包\napt-get install apt-transport-https\napt-get install ca-certificates curl software-properties-common\n\n# 下载软件包的合法性，需要添加软件源的 GPG 密钥\ncurl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add\n\n# source.list 中添加 Docker 软件源\nsudo add-apt-repository\n\"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu  \n$(lsb_release -cs)   \nstable\"\n\n# 安装 Docker CE\nsudo apt-get update\nsudo apt-get install docker-ce\n\n# Helloworld测试\ndocker run hello-world\n\n```\n\n### 安装 node\n\n```cmd\n# 安装nvm\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n\n# 将nvm作为环境变量\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n\n#安装最新版 node\nnvm install node\n\n#安装pm2\nnpm i pm2 -g\n```\n\n### 自动化部署 CI/CD\n\n```dockerfile\n# dockerfile\n# build stage\nFROM node:lts-alpine as build-stage\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n# production stage\nFROM nginx:stable-alpine as production-stage\nCOPY --from=build-stage /app/dist /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```\n\n逐行解析配置：\n\n- FROM node:lts-alpine as build-stage：基于 node `lts-alpine` 版本镜像，并通过构建阶段命名，将有 node 环境的阶段命名为 `build-stage`（包含 alpine 的镜像版本相比于 latest 版本更加小巧，更适合作为 docker 镜像使用）\n- WORKDIR /app：将工作区设为 /app，和其他系统文件隔离\n- COPY package\\*.json ./：拷贝 package.json/package-lock.json 到容器的 /app 目录\n- RUN npm install：运行 `npm install` 在容器中安装依赖\n- COPY . .：拷贝其他文件到容器 /app 目录，分两次拷贝是因为保持 node_modules 一致\n- RUN npm run build：运行 `npm run build` 在容器中构建\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/EPR%E4%BD%AF%E8%B0%AC":{"title":"EPR 佯谬","content":"\n# EPR 佯谬\n\n一个母粒子分裂成向相反方向飞开去的两个小粒子 A 和 B，它们理论上具有相反的自旋，但在没有观察之前，照量子派的讲法，它们的自旋是处在不确定的叠加态中的，而 [[阿尔伯特·爱因斯坦]] 则坚持从分离的那一刻起，A 和 B 的状态就都是确定了的。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/EPR%E6%A3%80%E9%AA%8C":{"title":"EPR 检验","content":"\n# EPR 检验\n\n进入 80 年代，法国奥赛理论与应用光学研究所（Institut d'Optique Théorique et Appliquée, Orsay Cédex）里的一群科学家准备第一次在精确的意义上对 EPR 作出检验，领导这个小组的是阿莱恩·阿斯派克特（AlainAspect）。  \n法国人用钙原子作为光子对的来源，他们把钙原子激发到一个很高的量子态，当它落回到未激发态时，就释放出能量，也就是一对对光子。实际使用的是一束钙原子，但是可以用激光来聚焦，使它们精确地激发，这样就产生了一个强信号源。阿斯派克特等人使两个光子飞出相隔约 12 米远，这样即使信号以光速在它们之间传播，也要花上 40 纳秒（ns）的时间。光子经过一道闸门进入一对偏振器，但这个闸门也可以改变方向，引导它们去向两个不同偏振方向的偏振器。如果两个偏振器的方向是相同的，那么要么两个光子都通过，要么都不通过，如果方向不同，那么理论上说（按照爱因斯坦的世界观），其相关性必须符合贝尔不等式。为了确保两个光子之间完全没有信息的交流，科学家们急速地转换闸门的位置，平均 10ns 就改变一次方向，这比双方之间光速来往的时间都要短许多，光子不可能知道对方是否通过了那里的偏振器。作为对比，我们也考察两边都不放偏振器，以及只有一边放置偏振器的情况，以消除实验中的系统误差。  \n![https://res.weread.qq.com/wrepub/epub_25622039_274](https://res.weread.qq.com/wrepub/epub_25622039_274)  \n那么，现在要做的事情，就是记录两个光子实际的协作程度。如果它符合贝尔不等式，则爱因斯坦的信念就得到了救赎，世界恢复到独立可靠、客观实在的地位上来。反之，则我们仍然必须认真地对待玻尔那看上去似乎神秘莫测的量子观念。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Emerald-Wallet":{"title":"Emerald Wallet","content":"\n# Emerald Wallet\n\nEmerald Wallet 被设计用于与以太坊经典（ETC）区块链配合使用，但也与其他基于以太坊的区块链兼容。它是一个开源桌面应用程序，可在 Windows、Mac 和 Linux 下运行。Emerald Wallet 可以运行完整节点或连接到公共远程节点，以“轻模式”工作。它还有一个配套工具，可以从命令行执行所有操作。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Engineer_Jest":{"title":"Jest 学习","content":"\n# Jest 学习\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Eslint":{"title":"Eslint","content":"\n## ESLint\n\n```JavaScript\nnpm i --save-dev eslint\n\n\u003e eslint --init\n\n? How would you like to configure ESLint? Answer questions about your style\n// 是否校验 Es6 语法\n? Are you using ECMAScript 6 features? Yes\n// 是否校验 Es6 模块语法\n? Are you using ES6 modules? Yes\n// 代码运行环境，Browser 指浏览器\n? Where will your code run? Browser\n// 是否校验 CommonJs 语法\n? Do you use CommonJS? Yes\n// 是否校验 JSX 语法\n? Do you use JSX? Yes\n// 是否校验 React 语法\n? Do you use React? Yes\n// 首行空白选择 Tab 键还是 Space\n? What style of indentation do you use? Tabs\n// 字符串使用单引号 'string' 还是双引号 \"string\"\n? What quotes do you use for strings? Double\n// 操作系统\n? What line endings do you use? Windows\n// 每行代码结尾是否校验加分号\n? Do you require semicolons? Yes\n// 以 .js 格式生成配置文件\n? What format do you want your config file to be in? JavaScript\n// 因为要校验 Reac 语法，所以这里需要下载一个 React 语法规则的包\nInstalling eslint-plugin-react@latest\n```\n\noff\" 或 0 - 关闭规则\n\n\"warn\" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)\n\n\"error\" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)\n\n```JavaScript\n// http://eslint.org/docs/user-guide/configuring\n// .eslintrc.js\nmodule.exports = {\n  //此项是用来告诉eslint找当前配置文件不能往父级查找\n  root: true,\n  //此项是用来指定eslint解析器的，解析器必须符合规则，babel-eslint解析器是对babel解析器的包装使其与ESLint解析\n  parser: 'babel-eslint',\n  parserOptions: {\n    sourceType: 'module'\n  },\n  env: {\n    browser: true,\n   // \"node\": true,\n    //\"commonjs\": true,\n    //\"es6\": true,\n    //\"amd\": true\n  },\n  // https://github.com/feross/standard/blob/master/RULES.md#javascript-standard-style\n  // 此项是用来配置标准的js风格，\n  extends: 'standard',\n   // 此项是用来提供插件的，插件名称省略了eslint-plugin-，\n  plugins: [\n    'html'\n  ],\n  // add your custom rules here\n  'rules': {\n    'prettier/prettier': ['error'],// [error,wran,off]\n    // allow paren-less arrow functions\n    'arrow-parens': 0,\n    // allow async-await\n    'generator-star-spacing': 0,\n    // allow debugger during development\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\n    \"no-irregular-whitespace\": 0,//不能有不规则的空格\n    \"no-mixed-operators\": 0,\n    \"sort-vars\": 0,//变量声明时排序\n    \"prefer-const\": 0,//首选const\n    \"newline-after-var\": 0,//变量声明后是否需要空一行\n    \"quotes\": [0, \"single\"],//引号类型 `` \"\" ''\n    \"quote-props\":[0, \"always\"],//对象字面量中的属性名是否强制双引号\n    \"array-bracket-spacing\": [2, \"never\"],//是否允许非空数组里面有多余的空格\n    \"arrow-spacing\": 0,//=\u003e的前/后括号\n    \"spaced-comment\": 0,//注释风格要不要有空格什么的\n    \"eol-last\": 0,//文件以单一的换行符结束\n    \"no-extra-semi\": 0,//禁止多余的冒号\n    \"no-inline-comments\": 0,//禁止行内备注\n    \"no-else-return\": 0,//如果if语句里面有return,后面不能跟else语句\n    \"comma-dangle\": [0, \"never\"],//对象字面量项尾不能有逗号\n    \"comma-spacing\": 0,//逗号前后的空格\n    \"func-names\": 0,//函数表达式必须有名字\n    \"guard-for-in\": 0,//for in循环要用if语句过滤\n    \"handle-callback-err\": 0,//nodejs 处理错误\n    \"space-after-keywords\": [0, \"always\"],//关键字后面是否要空一格\n    \"space-before-blocks\": [0, \"always\"],//不以新行开始的块{前面要不要有空格\n    \"max-len\": [0, 80, 4],//字符串最大长度\n    \"no-unneeded-ternary\":0,\n    \"camelcase\": 'off',\n    '@typescript-eslint/camelcase': 0,\n    \"no-self-assign\": 0,\n    \"no-delete-var\": 1,//不能对var声明的变量使用delete操作符\n    \"no-div-regex\": 1,//不能使用看起来像除法的正则表达式/=foo/\n    \"indent\": [2, 4],//缩进风格\n    \"semi-spacing\": [2, {\"before\": false, \"after\": false}],//分号前后空格\n    \"no-dupe-keys\": 2,//在创建对象字面量时不允许键重复 {a:1,a:1}\n    \"no-duplicate-case\": 2,//switch中的case标签不能重复\n    \"comma-style\": [2, \"last\"],//逗号风格，换行时在行首还是行尾\n    \"no-ex-assign\": 2,//禁止给catch语句中的异常参数赋值\n    \"no-extend-native\": 2,//禁止扩展native对象\n    \"no-extra-bind\": 2,//禁止不必要的函数绑定\n    \"no-extra-boolean-cast\": 2,//禁止不必要的bool转换\n    \"no-extra-parens\": 2,//禁止非必要的括号\n    \"eqeqeq\": 2,//必须使用全等\n    \"no-implied-eval\": 2,//禁止使用隐式eval\n    \"no-inner-declarations\": [2, \"functions\"],//禁止在块语句中使用声明（变量或函数）\n    \"no-invalid-regexp\": 2,//禁止无效的正则表达式\n    \"no-invalid-this\": 2,//禁止无效的this，只能用在构造器，类，对象字面量\n    \"no-dupe-args\": 2,//函数参数不能重复\n    \"valid-typeof\": 2,//必须使用合法的typeof的值\n    \"no-with\": 2,//禁用with\n    \"semi\": [2, \"always\"],//语句强制分号结尾\n    \"key-spacing\": [2, { \"beforeColon\": false, \"afterColon\": true }],//对象字面量中冒号的前后空格\n  }\n}\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/EventLoop":{"title":"EventLoop","content":"\n# EventLoop\n\n## 宏任务\n\n我们都知道 JS 是单线程的,我们按照代码顺序写入主线程,然后主线程再依次执行。但是浏览器是多个线程合作运行的,并不是执行之前统一安排好的。所以浏览器的主线程通过一个事件循环机制,**可以接受并执行新的任务**。我们可以通过一个 for 循环语句来监听是否有新的任务,可以在线程运行过程中,等待用户输入的数字,等待过程中线程处于暂停状态,一旦接收到用户输入的信息,那么线程会被激活,然后执行相加运算,最后输出结果。然后一直循环执行。\n\n那么我们如何实现按序的将任务添加到 for 循环中呢,那么答案就是**消息队列**\n\n**消息队列是一种数据结构,可以存放要执行的任务**。它符合队列“**先进先出**”的特点,也就是说**要添加任务的话,添加到队列的尾部；要取出任务的话,从队列头部去取**。\n\n### 页面使用单线程的缺点\n\n**第一个问题是如何处理高优先级的任务。**\n\n因为 DOM 变化非常频繁,如果每次发生变化的时候,都直接调用相应的 JavaScript 接口,那么这个当前的任务执行时间会被拉长,从而导致**执行效率的下降**。\n\n如果将这些 DOM 变化做成异步的消息事件,添加到消息队列的尾部,那么又会影响到监控的实时性,因为在添加到消息队列的过程中,可能前面就有很多任务在排队了。\n\n这也就是说,如果 DOM 发生变化,采用同步通知的方式,会影响当前任务的**执行效率**；如果采用异步方式,又会影响到**监控的实时性**\n\n#### 第二个是如何解决单个任务执行时长过久的问题\n\n因为所有的任务都是在单线程中执行的,所以每次只能执行一个任务,而其他任务就都处于等待状态。如果其中一个任务执行时间过久,那么下一个任务就要等待很长时间。\n\n### 宏任务列表\n\n- 渲染事件（如解析 DOM、计算布局、绘制）；\n- 用户交互事件（如鼠标点击、滚动页面、放大缩小等）；\n- JavaScript 脚本执行事件；\n- 网络请求完成、文件读写完成事件。\n\n### setTimeout\n\nsetTimeout 返回一个 id，而**clearTimeout 函数** 接受需要取消的定时器的 ID\n\n#### 注意事项\n\n1. 如果当前任务执行时间过久,会影延迟到期定时器任务的执行\n2. 如果 setTimeout 存在嵌套调用,那么系统会设置最短时间间隔为 4 毫秒\n3. 未激活的页面,setTimeout 执行最小间隔是 1000 毫秒\n4. 延时执行时间有最大值\n\n`Chrome`、`Safari`、`Firefox`都是以 32 个 bit 来存储延时值的,32bit 最大只能存放的数字是 2147483647 毫秒,这就意味着,如果 setTimeout 设置的延迟值大于 2147483647 毫秒（大约 24.8 天）时就会溢出,这导致定时器会被立即执行.\n\n5. 如果被 setTimeout 推迟执行的回调函数是某个对象的方法,那么该方法中的 this 关键字将指向全局环境,而不是定义时所在的那个对象。\n\n### requestAnimationFrame\n\nrequestAnimationFrame 提供一个原生的 API 去执行动画的效果,它会在一帧（一般是 16ms）间隔内根据选择浏览器情况去执行相关动作。\n\n## 微任务\n\n为了解决消息队列的种种问题,浏览器引入了微任务。**微任务可以在实时性和效率之间做一个有效的权衡**。\n\n每个宏任务都有一个微任务列表,在宏任务的执行过程中产生微任务会被添加到该列表中。**执行时机是在主函数执行结束之后、当前宏任务结束之前。**\n\n在现代浏览器里面,产生微任务有两种方式:\n\n第一种方式是使用 MutationObserver 监控某个 DOM 节点,然后再通过 JavaScript 来修改这个节点,或者为这个节点添加、删除部分子节点,当 DOM 节点发生变化时,就会产生 DOM 变化记录的微任务。\n\n第二种方式是使用 Promise,当调用 Promise.resolve() 或者 Promise.reject() 的时候,也会产生微任务。\n\n### [[MutationObserver]]\n\n### [[Promise]]\n\n### [[await]]\n\n## 与 Node 环境的 EventLoop 区别\n\n\u003e *在 node 11 版本中，node 下 Event Loop 已经与浏览器趋于相同*\n\n### 循环阶段\n\n1. timers：执行满足条件的 setTimeout、setInterval 回调。\n2. I/O callbacks：是否有已完成的 I/O 操作的回调函数，来自上一轮的 poll 残留。\n3. idle，prepare：可忽略\n4. poll：等待还没完成的 I/O 事件，会因 timers 和超时时间等结束等待。\n5. check：执行 setImmediate 的回调。\n6. close callbacks：关闭所有的 closing handles，一些 onclose 事件。\n\n```ruby\n   ┌───────────────────────┐\n┌─\u003e│        timers         │\u003c————— 执行 setTimeout()、setInterval() 的回调\n│  └──────────┬────────────┘\n|             |\u003c-- 执行所有 Next Tick Queue 以及 MicroTask Queue 的回调\n│  ┌──────────┴────────────┐\n│  │     pending callbacks │\u003c————— 执行由上一个 Tick 延迟下来的 I/O 回调（待完善，可忽略）\n│  └──────────┬────────────┘\n|             |\u003c-- 执行所有 Next Tick Queue 以及 MicroTask Queue 的回调\n│  ┌──────────┴────────────┐\n│  │     idle, prepare     │\u003c————— 内部调用（可忽略）\n│  └──────────┬────────────┘\n|             |\u003c-- 执行所有 Next Tick Queue 以及 MicroTask Queue 的回调\n|             |                   ┌───────────────┐\n│  ┌──────────┴────────────┐      │   incoming:   │ - (执行几乎所有的回调，除了 close callbacks 以及 timers 调度的                                                    回调和 setImmediate() 调度的回调，在恰当的时机将会阻塞在此阶段)\n│  │         poll          │\u003c─────┤  connections, │\n│  └──────────┬────────────┘      │   data, etc.  │\n│             |                   |               |\n|             |                   └───────────────┘\n|             |\u003c-- 执行所有 Next Tick Queue 以及 MicroTask Queue 的回调\n|  ┌──────────┴────────────┐\n│  │        check          │\u003c————— setImmediate() 的回调将会在这个阶段执行\n│  └──────────┬────────────┘\n|             |\u003c-- 执行所有 Next Tick Queue 以及 MicroTask Queue 的回调\n│  ┌──────────┴────────────┐\n└──┤    close callbacks    │\u003c————— socket.on('close', ...)\n   └───────────────────────┘\n```\n\n### setTimeout 与 setImmediate 的顺序\n\nNode 并不能保证 timers 在预设时间到了就会立即执行，因为 Node 对 timers 的过期检查不一定靠谱，它会受机器上其它运行程序影响，或者那个时间点主线程不空闲。比如下面的代码，setTimeout() 和 setImmediate() 都写在 Main 进程中，但它们的执行顺序是不确定的：\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/FCP":{"title":"FCP","content":"\n# FCP\n\nFCP（First Contentful Paint），首次内容绘制标记浏览器渲染来自 DOM 第一位内容的时间点，该内容可能是文本、图像、SVG 甚至元素。测试加载速度的体验，页面最主要的内容何时呈现\n\n首屏统计的方式一直在变，起初是通过记录 window. Performance. Timing 中的 domComplete 与 domLoading 的时间差来完成，但这并不具备交互意义，现在通常是记录初次加载并绘制内容的时间。\n\n**为了提供良好的用户体验，网站应该努力将首次内容绘制控制在**1.8 秒**或以内。**\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/FID":{"title":"FID","content":"\n **FID (First Input Delay) 首次输入延迟**，指用户首次输入到页面响应的时间。我们都知道第一印象的重要性，网站亦是如此。首次输入延迟会成为用户对网站很重要的第一印象，决定用户有可能成为忠实用户或者弃之而去。值得注意的是，FID 仅关注用户离散的操作，如点击，轻击，按键等，其他交互如滚动和缩放，并不是 FID 关注的，因为通常浏览器会用一个单独的线程来处理它们。\n\n## 参考链接\n\n- [First Input Delay 首次输入延迟 (FID)](https://web.dev/fid/#measure-fid-in-javascript)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/FP":{"title":"FP","content":"\nFP指页面加载完成后,用户尚未与页面产生交互时,会错误识别出用户操作的情况。这种错误识别会导致不必要的网络请求或JavaScript执行,增加了无效工作量,影响页面性能。  \n\nFP侧重于用户体验,[[FCP]]侧重于加载速度,分别关注交互性和速度这两个重要方面。\n\n[[TTI]]衡量页面可完全交互的时间,即页面加载完成并且主线程空闲时的时间点。而 FP 则关注首次可交互时间，\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/FPS":{"title":"计算方式","content":"\n# 计算方式\n\n```js\nlet lastTime = performance.now();\nlet frame = 0;\nlet lastFameTime = performance.now();\nconst loop = (time) =\u003e {\n\tconst now = performance.now();\n\tlastFameTime = now;\n\tframe++;\n\tif (now \u003e 1000 + lastTime) {\n\t\tlet fps = Math.round(frame / ((now - lastTime) / 1000));\n\t\tframe = 0;\n\t\tlastTime = now;\n\t\tconsole.log(fps);\n\t}\n\twindow.requestAnimationFrame(loop);\n};\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Fiber":{"title":"Fiber","content":"\n## Fiber\n\n```JavaScript\n/**\n * fiber架构\n * type: 标记类型\n * key: 标记当前层级下的唯一性\n * child : 第一个子元素 fiber\n * sibling ： 下一个兄弟元素 fiber\n * return： 父fiber\n * node： 真实dom节点\n * props：属性值\n * base: 上次的节点 fiber\n * effectTag: 标记要执行的操作类型（删除、插入、更新）\n */\n```\n\n除了一些继承下来的属性，讲几个关键点\n\nsibling ： 下一个兄弟元素 fiber，类似于链表结构，按同级元素一个链接一个，实现同级元素的快速插入、删除  \nchild : 第一个子元素的 fiber，支持向下递归  \nreturn： 父 fiber，\n\n![20180428113734143](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/OvTceYi45lyZNuR.png)\n\n类似于这也一个个小的 Fiber，相互链接构成了一棵完整的 fiber Tree\n\n[[Fiber 和 Generator的异同]]\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/FileReader":{"title":"FileReader","content":"\n# FileReader\n\n[FileReader](https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader)   对象允许 Web 应用程序 `异步读取` 存储在用户 `计算机上的文件`（或 `原始数据缓冲区` ）的内容，使用  `File`  或  `Blob 对象` 指定要读取的文件或数据。\n\n其中 File 对象，可以是来自用户在一个  `\u003cinput\u003e 元素`上选择文件后返回的  `FileList`，也可以来自`拖放`操作生成的  `DataTransfer 对象`，还可以是来自在一个 HTMLCanvasElement 上执行 mozGetAsFile() 方法后返回结果。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Flux":{"title":"Flux","content":"\n# Flux\n\n2014 的 Facebook F8 大会上提出了一个观点，MVC 更适用于**小型应用**，但在面向大型前端项目时，MVC 会使项目**足够复杂**，即每当添加新的功能，系统复杂度就会疯狂增长。如下图所示，Model 与 View 的关联是错综复杂的，很难理解和调试，尤其是 Model 与 View 之间还存在**双向数据流动**。  \n[MVC 数据流](https://s0.lgstatic.com/i/image/M00/8B/E8/CgqCHl_hvXiARE1qAAGLIgEVr84635.png)\n\n这对于接手老代码的人来说是个令人头疼的难题，因为他们害怕承担风险，所以不敢轻易修改代码。这也正是 [[MVC]] 模式被 Facebook 抛弃的原因。\n\n所以他们提出了一种基于** [[状态管理方案#单向数据流 |单向数据流]] **的架构。如下图所示：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220705164108.png)\n\n具体的流程是这样的，Store 存储了视图层所有的数据，当 Store 变化后会引起 View 层的更新。如果在视图层触发 Action，比如点击一个按钮，当前的页面数据值会发生变化。Action 会被 Dispatcher 进行统一的收发处理，传递给 Store 层。由于 Store 层已经注册过相关 Action 的处理逻辑，处理对应的内部状态变化后，会触发 View 层更新。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Formily":{"title":"带着问题","content":"\n# 带着问题\n\n- 我为什么要用 Formily\n  - 用响应式处理数据，性能好\n  - 可以准确的更新联动数据\n  - 动态渲染能力\n  - 可以跨端 （vue，react）\n- 用 Formily 有什么优缺点\n  - 缺点：有一定上手成本\n- 如何避免缺点\n- 有遇到什么坑吗？\n\n# Formily 原理\n\n![基础架构图](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220704200051.png)  \n![数据流向](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220704200455.png)\n\n## Observe\n\n是一个[[高阶组件]], 接受一个组件，返回一个组件\n\n```js\nconst obj = observable({\ncount:1\n})\n\nconst Page = observer(()=\u003e{\nreturn  ()\n})\n```\n\n```js\n\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/GC%E7%9A%84%E5%8F%91%E5%B1%95%E5%92%8C%E7%BB%86%E8%8A%82":{"title":"GC 的发展和细节","content":"\n# GC 的发展和细节\n\n[https://v8.dev/blog](https://v8.dev/blog)  \nhttps://v8.dev/blog/free-garbage-collection  \nhttps://v8.dev/blog/orinoco-parallel-scavenger  \nhttps://v8.dev/blog/trash-talk  \nhttps://v8.dev/blog/high-performance-cpp-gc  \nhttps://v8.dev/blog/oilpan-library\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/GRW":{"title":"GRW","content":"\n# GRW\n\nGRW 的主要假定是，任何系统，不管是微观还是宏观的，都不可能在严格意义上孤立，也就是和外界毫不相干。它们总是和环境发生着种种交流，为一些随机（stochastic）的过程所影响。这些随机的物理过程——不管它们实质上到底是什么——会随机地造成某些微观系统，比如一个电子的位置，从一个弥漫的叠加状态变为在空间中比较精确的定域（实际上就是哥本哈根口中的“坍缩”）。尽管对单个粒子来说，这种过程发生的可能性是如此之低——按照他们原本的估计，平均要等上 1016 秒，也就是近 10 亿年才会发生一次。所以从整体上看，微观系统基本上处于叠加状态是不假的，但这种定域过程的确偶尔发生，我们把这称为一个“自发的定域过程”（spontaneous localization）。GRW 有时候也称为“自发定域理论”。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Github-Copilot":{"title":"Github Copilot","content":"\n# Github Copilot\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Gzip":{"title":"Gzip","content":"\nGzip 压缩背后的原理，是在一个文本文件中找出一些重复出现的字符串、临时替换它们，从而使整个文件变小。根据这个原理，文件中代码的重复率越高，那么压缩的效率就越高，使用 Gzip 的收益也就越大。反之亦然。\n\n## 如何配置\n\n大多数Linux发行版默认已经安装了gzip模块。\n\n```nginx\nuser www-data;\nworker_processes auto;\npid /run/nginx.pid;\n\nevents {\n  worker_connections 768;\n}\n\nhttp {\n## 主要是这段\n  gzip on;\n  ## 配置压缩级别；级别范围是1-9,数字越大压缩比越高,但消耗的CPU也越多。\n  gzip_comp_level 6;\n  ## 配置压缩的文件类型\n  gzip_types text/plain text/css text/xml application/json application/javascript application/x-javascript;\n  ## 只压缩大于指定字节数的文件:\n  gzip_min_length 1024;\n\nCache-Control: max-age=31536000\nExpires: Thu, 31 Dec 2037 23:55:55 GMT\n\n  server {\n    listen 80;\n    server_name example.com;\n\n    location / {\n      root   /var/www/example.com;\n      index  index.html index.htm;\n    }\n\n  }\n\n}\n```\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTMLCSS-%E4%B8%93%E9%A2%98":{"title":"HTML/CSS 专题","content":"\n# HTML/CSS 专题\n\n[[不限制方式绘制一个三角形状]]\n## HTML DOCTYPE 标签有什么用\n\n1. 确定文档的类型：DOCTYPE 标签告诉浏览器使用哪个 HTML 标准来解析文档，以确保文档在不同浏览器中显示一致。\n2. 提供浏览器正确的解析模式：DOCTYPE 标签还会触发不同的浏览器渲染模式，如标准模式、准标准模式或怪异模式，以保证文档在不同浏览器中的渲染效果一致。\n3. 帮助开发者编写符合规范的 HTML：DOCTYPE 标签可以作为一种规范，帮助开发者编写符合标准的 HTML 代码，避免使用过时的或不被支持的标签和属性。\n4. 提高网页加载性能：DOCTYPE 标签的正确使用可以提高网页的加载性能，因为浏览器可以根据文档类型来优化解析和渲染过程。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP%E5%8F%91%E5%B1%95%E5%8F%B2":{"title":"HTTP 发展史","content":"\n# HTTP 发展史\n\nHTTP 协议在我们的生活中随处可见，打开手机或者电脑，只要你上网，不论是用 iPhone、Android、 Windows 还是 Mac，不论是用浏览器还是 App，不论是看新闻、短视频还是听音乐、玩游戏，后面总会有 HTTP 在默默为你服务。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174026.png)\n\n## 史前时期\n\n2020 世纪 60 年代，美国国防部高等研究计划署（ARPA）建立了 ARPA 网，它有四个分布在各地的节点，被认为 是如今互联网的“始祖”。  \n然后在 70 年代，基于对 ARPA 网的实践和思考，研究人员发明出了著名的 TCP/IP 协议。由于具有良好的分层 结构和稳定的性能，TCP/IP 协议迅速战胜其他竞争对手流行起来，并在 80 年代中期进入了 UNIX 系统内核， 促使更多的计算机接入了互联网。\n\n## 创世纪\n\n**蒂姆·伯纳斯-李（Tim Berners-Lee）** 在 1989 年发表了一个论文,确立了三项关键技术。\n\n- URI：即统一资源标识符，作为互联网上资源的唯一身份；\n- HTML：即超文本标记语言，描述超文本文档；\n- HTTP：即超文本传输协议，用来传输超文本。\n\n基于他们，就可以把 `超文本` 系统完美的运行在互联网上,这个系统被称之为 **“万维网”（World Wide Web）**\n\n## HTTP/0.9\n\n只有 `GET` 请求获取 HTML 文档，并且在响应请求之后立即关闭连接。\n\nHTTP/0.9 虽然很简单，但它作为一个“原型”，充分验证了 Web 服务的可行性，而“简单”也正是它的优点，蕴含了进化和扩展的可能性，因为：  \n**“把简单的系统变复杂”，要比“把复杂的系统变简单”容易得多。**\n\n## HTTP/1.0\n\n因为多媒体技术( `JPEG`、 `MP3` 等相继发明)的发展,网名推动 HTTP 快速发展，并在 1996 年正式发布了 `HTTP/1.0` 。\n\n- 增加了 HEAD、POST 等新方法；\n- 增加了响应状态码，标记可能的错误原因；\n- 引入了协议版本号概念；\n- 引入了 HTTP Header（头部）的概念，让 HTTP 处理请求和响应更加灵活；\n- 传输的数据不再仅限于文本。\n\n但 **HTTP/1.0 并不是一个“标准”**，只是记录已有实践和模式的一份参考文档，不具有实际的约束力，相当于 一个“备忘录”。\n\n## HTTP/1.1\n\n浏览器大战之后，HTTP 协议成为一个“正式的标准”，而不是一份可有可无的“参考文档”,少了很多学术气息，更加接地气了。\n\nHTTP/1.1 主要的变更点有：\n\n- 增加了 `PUT`、 `DELETE` 等方法\n- 允许数据分块（chunked）,支持大文件的上传\n- 强制要求 HOST 头，让互联网主机托管成为了可能\n- 增加了缓存管理\n- 明确了连接管理，支持长连接(connection:keep-alive)\n- 引入了客户端 Cookie、安全机制\n\n这次标准的确定，成为了我们日常使用的 HTTP。\n\n### 主要问题\n\nHTTP/1.1**对带宽的利用率却并不理想**\n\n#### TCP 的慢启动\n\n一旦一个 TCP 连接建立之后，就进入了发送数据状态，刚开始 TCP 协议会采用一个非常慢的速度去发送数据，然后慢慢加快发送数据的速度，直到发送数据的速度达到一个理想状态，我们把这个过程称为慢启动。\n\n#### **同时开启了多条 TCP 连接，那么这些连接会竞争固定的带宽。**\n\n在下载过程中，当发现带宽不足的时候，各个 TCP 连接就需要动态减慢接收数据的速度。这样就会阻塞关键资源的下载\n\n#### **队头阻塞的问题。**\n\nHTTP/1.1 中使用持久连接时，虽然能**公用一个 TCP 管道**，但是在一个管道中同一时刻只能处理一个请求，在当前的请求没有结束之前，其他的请求只能处于阻塞状态。这意味着我们不能随意在一个管道中发送请求和接收内容。\n\n## [[HTTPS]]\n\nHTTPS 是为了解决 HTTP 安全问题的一个新协议，由“**HTTP over HTTP** ”变成了“ **HTTP over SSL/TLS**”，让 HTTP 运行在了安全的 SSL/TLS 协议上， 收发报文不再使用 Socket API，而是调用专门的安全接口。\n\n## [[HTTP 2]]\n\n## [[HTTP 3]]\n\n---\n\n参考资料\n\n[《透视 HTTP 协议》](https://time.geekbang.org/column/intro/100029001)\n\n[《HTTP 世界观》](https://mp.weixin.qq.com/s?__biz=MzAxOTAzNjUwMg==\u0026mid=2448541703\u0026idx=1\u0026sn=164f1fb3e503f2e50ca6f5a97a7f119c\u0026chksm=8fc8483eb8bfc1288b14aed0739425c2b31ce8e679a81ab0ffd8f1690c35c3032e0ecea73ab6\u0026scene=126\u0026sessionid=1589430279\u0026key=ad1327b1c72241bf0ec91b57b52b52d6ead79c4dec3bb5ea1b9cf66dca50c9c27f5ddbfa2322fa04e2d68709954e2bb3e18c1af617ff2ac527a5ef9ebd9cac0d5ef977ef159d3959fa5954a561640d1c\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=62090070\u0026lang=zh_CN\u0026exportkey=ATCMwpFbvaf56KD%2BcqI7xHA%3D\u0026pass_ticket=DXKQiIl5eK%2BQt%2FmJHshlzwb8%2FTplkfJw6KRjxgfWB401dxQScVrscRWHXWr5DgV2)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP%E9%97%AE%E9%A2%98":{"title":"Http 灵魂之问","content":"\n# Http 灵魂之问\n\n把 HTTPS,HTTP 缓存，以及 HTTP 发展历史抽出来，剩余的将会用灵魂之问的方式复习和深入。\n\n## TCP/IP 网络分层模型是怎样分层的？\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174047.png)\n\nTCP/IP  四层网络分层，自下往上分别是**链路层，网络互联层，传输层，应用层**  \n另外值得一提的是，七层网络分层，**物理层**，数据链路层，网络互联层，传输层，**会话层**，**表示层**和应用层  \n**IP 在网络互联层**  \n**TCP 在传输层**，另一个比较有名的是 UDP  \nHTTP 协议就是应用层的一个协议，其他常见的还有 FTP,SMTP 等等\n\n## TCP 的三次握手和四次挥手简单说一下\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174055.png)\n\n这是一次请求的抓包信息，可以清晰的看出流程  \n三次握手流程：  Client -\u003e SYN -\u003e Server Server -\u003e SYN/ACK -\u003e Client Client -\u003e ACK -\u003e Server  后确认建立连接 数据传输完毕开始\n\n4 次挥手：  \nClient -\u003e FIN -\u003e Server Server -\u003e ACK -\u003e Client Server -\u003e FIN -\u003e Client Client -\u003e ACK -\u003e Server -\u003e CLOSED Client -\u003e 2MSL 的时间 -\u003e CLOSED  关闭连接\n\n#### 为什么连接的时候是三次握手，关闭的时候却是四次握手？\n\n因为当 Server 端收到 Client 端的 SYN 连接请求报文后，可以直接发送 SYN+ACK 报文。其中 ACK 报文是用来应答的，SYN 报文是用来同步的。  \n但是关闭连接时，当 Server 端收到 FIN 报文时，很可能并不会立即关闭 SOCKET，所以只能先回复一个 ACK 报文，告诉 Client 端，\"你发的 FIN 报文我收到了\"。只有等到我 Server 端所有的报文都发送完了，我才能发送 FIN 报文，因此不能一起发送。故需要四步握手。\n\n#### 为什么 TIME_WAIT 状态需要经过 2MSL(最大报文段生存时间)才能返回到 CLOSE 状态？\n\n虽然按道理，四个报文都发送完毕，我们可以直接进入 CLOSE 状态了，但是我们必须假象网络是不可靠的，有可以最后一个 ACK 丢失。所以 TIME_WAIT 状态就是用来重发可能丢失的 ACK 报文。在 Client 发送出最后的 ACK 回复，但该 ACK 可能丢失。Server 如果没有收到 ACK，将不断重复发送 FIN 片段。所以 Client 不能立即关闭，它必须确认 Server 接收到了该 ACK。Client 会在发送出 ACK 之后进入到 TIME_WAIT 状态。Client 会设置一个计时器，等待 2MSL 的时间。如果在该时间内再次收到 FIN，那么 Client 会重发 ACK 并再次等待 2MSL。所谓的 2MSL 是两倍的 MSL(Maximum Segment Lifetime)。**MSL 指一个片段在网络中最大的存活时间**，2MSL 就是一个发送和一个回复所需的最大时间。如果直到 2MSL，Client 都没有再次收到 FIN，那么 Client 推断 ACK 已经被成功接收，则结束 TCP 连接。\n\n#### 为什么不能用两次握手进行连接？\n\n三次握手是为什么确认两方都已经做好发送数据的准备，并开始协商初始序列号。如果只有两次握手，可能会导致死锁的发生\n\n## 什么是 HTTP 协议？\n\nHTTP 中文名 **超文本传输协议**，HTTP 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。是一个建立在 TCP/IP 之上的协议。\n\n## HTTP 的特点？HTTP 有哪些缺点？\n\n#### 特点\n\n##### 灵活可扩展  \n\n报文里的各个组成部分都没有做严格的语法语义限制，可以由开发者任意定制。 传输形式多样，不仅仅可以传输文本，还能传输图片、视频等任意数据，非常方便。\n\n##### 可靠传输  \n\nTCP 本身是一个“可靠”的传输协议，所以 HTTP 自 然也就继承了这个特性，能够在请求方和应答方之间“可靠”地传输数据。\n\n##### 无状态\n\n服务器和客户端建立在互不知情的情况，没有上下文\n\n##### 请求-应答  \n\n采用的是一收一发的应答模式，\n\n#### 缺点：\n\n##### 明文\n\n给了你可读性同时也给你黑客施展的空间\n\n##### 不安全\n\n缺乏'身份验证’和'完整性验证',所以之后出现了 HTTPS\n\n##### 性能  \n\n“请求-应答”模式则加剧了 HTTP 的性能问题，这就是著名的“队头阻塞”， 当顺序发送的请求序列中的一个请求因为某种原因被阻塞时，在后面排队的所有请求也一并被阻塞，会导致客户端迟迟收不到数据。\n\n## HTTP 如何处理大文件的传输？\n\n#### 数据压缩  \n\n客户端带着`Accept-Encoding` 头字段，里面是浏览器支持的压缩格式列表，例如 gzip、deflate、br 等  \n但是 gzip 等压缩算法通常**只对文本文件**有较好的压缩率，而图片、音频视频等多媒体数据本身就已经是高度压缩的。\n\n#### 分块传输  \n\n当响应头里出现  “**Transfer-Encoding: chunked**”时，就是告诉你这不是一个完整的文件，分成了很多块（和 content-length 相斥）\n\n#### 范围请求  \n\n相当于客户端的‘化整为零’ ，需要服务端在响应头放入 ‘**Accept-Ranges: bytes **’ 请求头**Range**是 HTTP 范围请求的专用字段，格式是“**bytes=x-y **”，其中的 x 和 y 是以字节为单位的数据范围（偏移量）。\n\n## GET 和 POST 有什么区别？\n\n- 从**语义**的角度，GET 去取数据，POST 是操作数据 从**缓存**的角度，GET 请求**会被浏览器主动缓存**下来，留下历史记录，而 POST 默认不会。  \n- 从**编码**的角度，GET 只能进行 URL 编码，**只能接收 ASCII**字符，而 POST 没有限制。  \n- 从**参数**的角度，GET 一般**放在 URL** 中，因此不安全，POST **放在请求体**中，更适合传输敏感信息。  \n- 从**幂等性**的角度，**GET 是幂等的**，而 POST 不是。(幂等表示执行相同的操作，结果也是相同的) 从**TCP**的角度，GET 请求会把请求报文一次性发出去，而 POST 会分为两个 TCP 数据包，首先发 header 部分，如果服务器响应 100(continue)， 然后发 body 部分。(火狐浏览器除外，它的 POST 请求只发一个 TCP 包)\n\n## 说一说你对 CDN 的理解？\n\n**CDN（Content Delivery Network）就是内容分发网络。**\n\n##### 概念\n\n在我们传输过程中是无法突破光速和距离等限制的，而 CDN 就是为了解决这个问题而诞生的。CDN 投⼊了大笔资金，在全国、乃⾄全球的各个大枢纽城市都建立了机房，部署了大量拥有⾼存储⾼带宽的节点，构建了⼀个专用网络。 CDN 各站点作为源站的‘**缓存代理**’，对内容进行分发，采取了‘就近原则’，省去了长途跋涉时间，实现网络加速。\n\n##### DNS 负载均衡  \n\n主要的依据有这么⼏个：\n\n1. 看用户的 IP 地址，查表得知地理位置，找相对最近的边缘节点；\n1. 看用户所在的运营商网络，找相同网络的边缘节点；\n1. 检查边缘节点的负载情况，找负载较轻的节点；\n1. 其他，比如节点的“健康状况”、服务能⼒、带宽、响应时间等\n\n##### CDN 的缓存代理  \n\n这里就有两个 CDN 的关键概念：“**命中**”和“**回源**”。 “命中”就是指用户访问的资源恰好在缓存系统里，可以直接返回给用户； “回源”则正相反，缓存里没有，必须用代理的方式回源站取。\n\n参考资料\n\n[《（建议精读）HTTP 灵魂之问，巩固你的 HTTP 知识体系》](https://juejin.im/post/5e76bd516fb9a07cce750746)\n\n[《那些年与面试官交手过的 HTTP 问题》](https://mp.weixin.qq.com/s?__biz=MzA4ODUzNTE2Nw==\u0026mid=2451047001\u0026idx=1\u0026sn=834dd557bfd7a17474160e1b9dabaa61\u0026chksm=87c41b49b0b3925f0c070805081b4d31e67102494ef13a67fa90703fe90163f4a30863740ad1\u0026scene=126\u0026sessionid=1589504806\u0026key=4e333be95d49052e1f11ee9da220b52b57490eb00100cd8d5045b490e6d4d5ddf15eb3db707cf3dad4d44f78a81d8938a9f2beb4a939c843d411c3105e3bb2ef27df06d03efd749011cd090b6689aa5e\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=62090070\u0026lang=zh_CN\u0026exportkey=AR9z47HYlG2H7%2FupvVk7mdg%3D\u0026pass_ticket=nIUSlRULH3TFN2mDV2SSBaQYKIyaMrOCbtMrC6lM%2B0qUQIdAeKleY5ZXCAWStcTE)\n\n[《透视 HTTP 协议》](https://time.geekbang.org/column/intro/100029001)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP-%E6%8A%A5%E6%96%87":{"title":"HTTP 报文","content":"\n# HTTP 报文\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173938.png)\n\n## 其他请求头\n\n- **Upgrade ：** 升级为其他协议（websocket 为 101）\n- **Range：** 实体的字节范围请求\n- **Location：** 命令客户端重定向的 URI\n- **ETag：** 能够表示资源唯一资源的字符串\n\n## 请求方法\n\n### HTTP/1.1\n\n规定了八种方法，单词都必须是大写的形式：\n\n1. GET：获取资源，可以理解为读取或者下载数据；\n2. HEAD：获取资源的元信息；\n3. POST：向资源提交数据，相当于写入或上传数据；\n4. PUT：类似 POST；\n5. DELETE：删除资源；\n6. CONNECT：建立特殊的连接隧道；\n7. OPTIONS：列出可对资源实行的方法；\n8. TRACE：追踪请求-响应的传输路径\n\n## 请求状态\n\n### 1××\n\n1×× 类状态码属于提示信息，是协议处理的中间状态，实际能够用到的时候很少我们偶尔能够见到的是\n\n- **“101 Switching Protocols”**。它的意思是客户端使用 Upgrade 头字段，要求在 HTTP 协议的基础上改成其他的协议继续通信，比如 **WebSocket**。而如果服务器也同意变更协议，就会发送状态码 101，但这之后的数据传输就不会再使用 HTTP 了。\n\n### 2××\n\n2×× 类状态码表示服务器收到并成功处理了客户端的请求\n\n- “**200 OK**”是最常见的成功状态码，表示一切正常，服务器如客户端所期望的那样返回了处理结果，如果 是非 HEAD 请求，通常在响应头后都会有 body 数据。\n- “**204 No Content** ”是另一个很常见的成功状态码，它的含义与“200 OK”基本相同，但**响应头后没有 body 数据**。所以对于 Web 服务器来说，正确地区分 200 和 204 是很必要的。\n- “**206 Partial Content**”是 HTTP 分块下载或断点续传的基础，在客户端发送“范围请求”、要求获取资源的 部分数据时出现，它与 200 一样，也是服务器成功处理了请求，但 body 里的数据不是资源的全部，而是其中 的一部分\n\n### 3××\n\n3×× 类状态码表示客户端请求的资源发生了变动，客户端必须用新的 URI 重新发送请求获取资源，也就是通 常所说的“重定向”，包括著名的 301、302 跳转。\n\n- “**301 Moved Permanently**” 俗称“**永久重定向**”，含义是此次请求的资源已经不存在了，需要改用改用新 的 URI 再次访问\n- “**302 Found**”，俗称“**临时重定向**”，意思是 请求的资源还在，但需要暂时用另一个 URI 来访问。\n- “**304 Not Modified**”是一个比较有意思的状态码，它用于 If-Modified-Since 等条件请求，表示资源未修改，用于缓存控制。它不具有通常的跳转含义，但可以理解成“重定向已到缓存的文件”（即“**缓存重定向**”）。\n\n### 4××\n\n4×× 类状态码表示客户端发送的请求报文有误，服务器无法处理，它就是真正的“错误码”含义了。\n\n- “**400 Bad Request**”是一个通用的错误码，表示**请求报文有错误**，但具体是数据格式错误、缺少请求头还 是 URI 超长它没有明确说，只是一个笼统的错误\n- “**403 Forbidden**”实际上不是客户端的请求出错，而是表示**服务器禁止访问资源**。原因可能多种多样，例 如信息敏感、法律禁止等，如果服务器友好一点，可以在 body 里详细说明拒绝请求的原因\n- “**404 Not Found**”可能是我们最常看见也是最不愿意看到的一个状态码，它的原意是**资源在本服务器上未找到**，所以无法提供给客户端。但现在已经被“用滥了”，只要服务器“不高兴”就可以给出个 404，而我 们也无从得知后面到底是真的未找到，还是有什么别的原因，某种程度上它比 403 还要令人讨厌\n- **405** Method Not Allowed：**不允许使用某些方法操作资源**，例如不允许 POST 只能 GET；\n- **406** Not Acceptable：**资源无法满足客户端请求的条件**，例如请求中文但只有英文；\n- **408** Request Timeout：**请求超时**，服务器等待了过长的时间；\n- **409** Conflict：多个请求发生了冲突，可以理解为**多线程并发时的竞态**；\n- **413** Request Entity Too Large：请求报文里的 **body 太大**；\n- **414** Request-URI Too Long：请求行里的 **URI 太大**；\n- **429** Too Many Requests：**客户端发送了太多的请求**，通常是由于服务器的限连策略；\n- **431** Request Header Fields Too Large：**请求头某个字段或总体太大**\n\n### 5××\n\n5×× 类状态码表示客户端请求报文正确，但服务器在处理时内部发生了错误，无法返回应有的响应数据，是 服务器端的“错误码”。\n\n- “**500 Internal Server Error** ”与 400 类似，也是一个通用的错误码，**服务器究竟发生了什么错误我们是不知道的**。不过对于服务器来说这应该算是好事，通常不应该把服务器内部的详细信息，例如出错的函数调用栈 告诉外界。虽然不利于调试，但能够防止黑客的窥探或者分析。\n- “**501 Not Implemented**”表示**客户端请求的功能还不支持**，这个错误码比 500 要“温和”一些，和“即将 开业，敬请期待”的意思差不多，不过具体什么时候“开业”就不好说了。\n- “**502 Bad Gateway**”通常是**服务器作为网关或者代理时返回的错误码**，表示服务器自身工作正常，访问后端服务器时发生了错误，但具体的错误原因也是不知道的。\n- “**503 Service Unavailable **”表示**服务器当前很忙，暂时无法响应服务**，我们上网时有时候遇到的“网络服 务正忙，请稍后重试”的提示信息就是状态码 503。\n\n## 重定向是 301 和 302\n\n因为 301 会在浏览器中有缓存，所以服务端就没办法知道有多少用户是通过这个短链访问的，在现如今什么数据都可以分析一波的时代，这些数据的缺失，就失去了分析活动的能力。所以一般都通过 302 进行重定向，便于记录使用的数据，稍微增加点 Server 的压力。\n\n---\n\n## 参考链接\n\n[《 HTTP 协议完全解析 》](https://juejin.im/post/5c629c7c518825622f12da14#heading-40)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP-%E7%BC%93%E5%AD%98":{"title":"HTTP 缓存","content":"\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220719124949.png)\n\n- 1）首先检查是否存在 Service Worker Cache，没命中或不存在则进行下一步\n- 2）检查内存中是否存在资源，存在的话直接加载(from memory - 200)。\n- 3）如果内存没有，择取从硬盘获取，存在且没过期的话直接加载(from disk - 200)，过期了直接向服务器发送请求获取资源。如果资源没更新，服务器返回 304，浏览器从硬盘缓存中获取资源，并更新`过期时间/Etag/Last-Modified`。如果资源更新了则获取最新的资源，并通过 HTTP 请求将资源返回，重新缓存资源并更新`过期时间/Etag/Last-Modified`。\n- 4）如果硬盘也没有，那么会向后端发送 HTTP 网络请求。\n- 5）加载到的资源缓存到硬盘和内存，并更新资源的`过期时间/Etag/Last-Modified`。\n\n`Service Worker Cache` 具有较高的优先级，数据控制更为复杂，操作自由度最高； `Memory Cache` 更多的强调了一种缓存存储方式和浏览器内存缓存策略； `HTTP Cache` 相对于 `Memory Cache` 根据存储方式的不同也能叫做 `Disk Cache`，它依赖于整个 HTTP 缓存校验流程 (强缓存和协商缓存)，并通过校验来最终确定何时从缓存读取，何时从服务器更新资源；Push Cache 资料较少，应用得不多，暂时只做介绍。\n\n# HTTP 缓存\n\nHTTP 缓存对性能优化的重要性不言而喻，只要命中缓存就不需要重新加载一遍文件，js 执行时间相比下载时间要快的多，如果能优化下载时间，用户体验会提升很多\n\nHTTP 缓存可以分为：\n\n1. 强缓存\n2. 协商缓存\n\n## 强缓存\n\n强缓存优先级较高，HTTP 会优先判断是否命中强缓存。那么 HTTP 是怎么判断的呢。\n\n强缓存是利用 HTTP 头中的 `Expires` 和 `Cache-Control` 两个字段来控制的。强缓存中，当请求再次发出时，浏览器会根据其中的 `expires` 和 `cache-control` 判断目标资源是否“命中”强缓存，若命中则直接从缓存中获取资源，**不会再与服务端发生通信**。\n\n### Expires\n\n```javascript\n //Expires\n expires: Wed, 11 Sep 2019 16:12:18 GMT\n```\n\n`expires` 是一个时间戳 通过对比时间戳来决定是否命中强缓存  \n但 `expires` 是有问题的，它最大的问题在于对“**本地时间**”的依赖。如果服务端和客户端的时间设置可能不同，或者我直接手动去把客户端的时间改掉，那么 `expires` 将无法达到我们的预期。\n\n### Cache-Control\n\n```javascript\n // Cache-Control\n Cache-Control:max-age=10\n```\n\nHTTP1.1 新增了 **Cache-Control**  \n在 Cache-Control 中，我们通过 max-age 来控制资源的有效期。max-age 不是一个时间戳，而是一个时间长度。\n\n- **max-age**：单位是秒，缓存时间计算的方式是距离发起的时间的秒数，超过间隔的秒数缓存失效\n- **no-cache**：不使用强缓存，需要与服务器验证缓存是否新鲜\n- **no-store**：顾名思义就是不使用任何缓存策略。每次访问资源，浏览器都必须请求服务器，并且，服务器不去检查文件是否变化，而是直接返回完整的资源。\n- **private**：专用于个人的缓存，中间代理、CDN 等不能缓存此响应\n- **public**：响应可以被中间代理、CDN 等缓存\n- **must-revalidate**：只要过期就必须回源服务器验证，\n- **proxy-revalidate**：只要求代理的缓存过期后必须验证，客户端不必回源，只验证到代理这个环节就行了\n- **s-maxage** :限定在代理上能够存多久\n- **no-transform**：代理有时候会对缓存下来的数据做一些优化，比如把图片生成 png、webp 等几种格式，方便今后的请求处理。 `no-transform` 就会禁止这样做\n\n### Pragma\n\nPragma 只有一个属性值，就是 no-cache ，效果和 Cache-Control 中的 no-cache 一致，不使用强缓存，需要与服务器验证缓存是否新鲜，在 3 个头部属性中的优先级最高。\n\n## 协商缓存\n\n当浏览器的强缓存失效的时候或者请求头中设置了不走强缓存，并且在请求头中设置了 `If-Modified-Since` 或者 `If-None-Match` 的时候，会将这两个属性值到服务端去验证是否命中协商缓存，如果命中了协商缓存，会返回 304 状态，加载浏览器缓存，并且响应头会设置 `Last-Modified` 或者 `ETag` 属性。\n\n### Last-Modified/If-Modified-Since\n\n```javascript\n//client\nIf-Modified-Since: Fri, 27 Oct 2017 06:35:57 GMT\n//Server\nLast-Modified: Fri, 27 Oct 2017 06:35:57 GMT\n```\n\n即最后修改时间。在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。\n\n第二次发起请求的时候，请求头会带上上一次响应头中的 `Last-Modified` 的时间，并放到 `If-Modified-Since` 请求头属性中，服务端根据文件最后一次修改时间和 `If-Modified-Since` 的值进行比较，如果相等，返回 304 ，并加载浏览器缓存。\n\n缺点：\n\n- 由于 Last-Modified 修改时间是 GMT 时间，只能精确到秒，如果文件在 1 秒内有多次改动，服务器并不知道文件有改动，浏览器拿不到最新的文件\n- 如果服务器上文件被多次修改了但是内容却没有发生改变，服务器需要再次重新返回文件。\n\n### ETag\n\n`ETag` 就是为了解决 `Last-Modified` 无法解决高频修改文件缓存问题，可以称他为 **文件指纹**。\n\n`Etag` 是由服务器为每个资源生成的唯一的标识字符串，这个标识字符串是基于文件内容编码的，只要文件内容不同，它们对应的 `Etag` 就是不同的，反之亦然。因此 `Etag` 能够精准地感知文件的变化。\n\nETag 还有`强` 、`弱`之分。\n\n`强 ETag` 要求资源在字节级别必须完全相符，`弱 ETag` 在值前有个“W/”标记，只要求资源在语义上没有变化，但内部可能会有部分发生了改变（例如 HTML 里的标签顺序调整，或者多了几个空格）。\n\n缺点：\n\n- 显而易见， `ETag`需要去检查文件字节变化，然后生成 hash 字符串，增加了运算成本。\n\n```javascript\n//client\nIf-None-Match: W/\"2a3b-1602480f459\"\n//Server\nETag: W/\"2a3b-1602480f459\"\n```\n\n**Etag 在感知文件变化上比 Last-Modified 更加准确，优先级也更高。当 Etag 和 Last-Modified 同时存在时，以 Etag 为准。**\n\n## 整体流程\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173924.png)\n\n当浏览器再次访问一个已经访问过的资源时，它会这样做：\n\n1. 看看是否命中强缓存，如果命中，就直接使用缓存了。（express 和 Cache-Control:max-age）\n2. 如果没有命中强缓存，就发请求到服务器检查是否命中协商缓存。（if-last-modify 和 Etag）\n3. 如果命中协商缓存，服务器会返回 304 告诉浏览器使用本地缓存。\n4. 否则，返回最新的资源。\n\n## 缓存位置\n\n当强缓存命中或者协商缓存中服务器返回 304 的时候，会从本地取，那么本地缓存在哪里呢\n\n浏览器中的缓存位置有以下 4 种，按优先级分别是：\n\n- Service Worker\n- Memory Cache\n- Disk Cache\n- Push Cache\n\n### Service Worker\n\nService Worker 是一种独立于主线程之外的 Javascript 线程。它脱离于浏览器窗体，因此无法直接访问 DOM。这样独立的个性使得 Service Worker 的“个人行为”无法干扰页面的性能，这个“幕后工作者”可以帮我们实现 `离线缓存`、`消息推送` 和 `网络代理` 等功能。其中的离线缓存就是 `Service Worker Cache`。[[Service Worker]] 同时也是 [[PWA]] 的重要实现机制\n\nPS：大家注意 Server Worker 对协议是有要求的，必须以 **https** 协议为前提。\n\n### Memory Cache 和 Disk Cache\n\n`Memory Cache` 顾名思义，就是将资源缓存到内存中，等待下次访问时不需要重新下载资源，而直接从内存中获取。读取内存中的数据肯定比磁盘快,内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。 一旦我们关闭 Tab 页面，内存中的缓存也就被释放了。  \n`Disk Cache` 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 `Memory Cache` 胜在容量和存储时效性上。\n\n| ---            | memory cache                       | disk cache                        |\n| -------------- | ---------------------------------- | --------------------------------- |\n| 相同点         | 只能存储一些派生类资源文件         | 只能存储一些派生类资源文件        |\n| 不同点         | 退出进程时数据会被清除             | 退出进程时数据不会被清除          |\n| 存储资源-scale | 一般脚本、字体、图片会存在内存当中 | 般非脚本会存在内存当中，如 css 等 |\n\n- 比较大的 JS、CSS 文件会直接被丢进磁盘，反之丢进内存\n- 内存使用率比较高的时候，文件优先进入磁盘\n\n### Push Cache\n\n`推送缓存` 是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。它只在会话（Session）中存在，一旦会话结束就被释放，并且缓存时间也很短暂，在 Chrome 浏览器中只有 5 分钟左右，同时它也并非严格执行 HTTP 头中的缓存指令。\n\n## 用户操作对缓存的影响\n\n### 地址栏输入地址\n\n优先查找`Disk Cache`看是否有匹配，没有则发送网络请求\n\n### F5 刷新\n\n优先查找 `Memory Cache` 然后再去匹配 `Disk Cache`。不走强缓存但是\n\n### CTRL+F5 刷新\n\n不使用缓存\n\n## 缓存场景\n\n对于大部分的场景都可以使用强缓存配合协商缓存解决，但是在一些特殊的地方可能需要选择特殊的缓存策略\n\n对于**某些不需要缓存的资源**，可以使用 Cache-control: **no-store** ，表示该资源不需要缓存  \n对于**频繁变动的资源**，可以使用 Cache-Control: **no-cache 并配合 ETag 使用**，表示该资源已被缓存，但是每次都会发送请求询问资源是否更新  \n对于代码文件来说，通常使用 Cache-Control: max-age=31536000 并配合策略缓存使用，然后对文件进行指纹处理，一旦文件名变动就会立刻下载新的文件\n\n---\n\n## 参考资料\n\n[《前端性能相关》](http://47.98.159.95/my_blog/perform/001.html#%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98)\n\n[《图解 HTTP 缓存》](https://juejin.im/post/5eb7f811f265da7bbc7cc5bd)\n\n[《前端也要懂的 HTTP 缓存》](https://juejin.im/post/5b70edd4f265da27df0938bc#heading-7)\n\n[《HTTP 缓存和浏览器的本地存储》](https://segmentfault.com/a/1190000020086923)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP-2":{"title":"HTTP 2","content":"\n# HTTP 2\n\nHTTP 成为标准后，一家独大了十多年。直至 Chrome 开发出自己的浏览器，推出新的 `SPDY协议` 并应用在自己的浏览器上。这倒逼 HTTP 以 [[SPDY 协议]] 为基础推出 HTTP 2 。\n\n在性能改善上做出了很多努力：\n\n- 变成二进制协议。\n- 废弃 1.1 中的管道，引入了**二进制分帧层**,实现了多路复用,解决了队头堵塞问题\n\nHTTP/2 使用了多路复用技术，可以将请求分成一帧一帧的数据去传输，这样带来了一个额外的好处，就是当收到一个优先级高的请求时，比如接收到 JavaScript 或者 CSS 关键资源的请求，服务器可以暂停之前的请求来优先处理关键资源的请求。\n\n- 使用头部压缩算法，减少数据传输量（开发了“HPACK”算法，在客户端和服务器建立“字典”，用索引号表示重复的字符串，还采用哈夫曼编码来压缩整数和字符串，可以达到 **50%~90%** 的⾼压缩率。 ）\n- 设置请求的优先级\n- 增强了安全性（为了区分“加密”和“明文”这两个不同的版本，HTTP/2 协议定义了两个字符串标识符：“h2”表示加密的 HTTP/2，“h2c”表示明文的 HTTP/2，多出的那个字⺟“c”的意思是“clear text”）\n- `服务器推送`  允许浏览器发送一个请求后，服务器主动向浏览器推送与这个请求相关的`资源`，这样浏览器就不用发起后续请求去获取一些`资源`。但是`Chrome106`版本禁用了，改为`103状态码`；\n  - 服务器推送时，客户端的特点：\n    - 客户端可以缓存推送的资源\n    - 客户端可以拒收推送过来的资源\n    - 服务器可以按照优先级推送资源\n\n# 如何升级成 HTTP 2\n\n## 前置条件\n\n- web server 和浏览器是否支持HTTP/2或HTTP/3\n- 因为HTTP/2和HTTP/3建立在 [[TLS]]上，所以需要升级成[[HTTPS]]\n- 确保HTTP/1.1的兼容性。即使启用了HTTP/2或HTTP/3,也需要保证老的客户端仍能通过HTTP/1.1访问网站。\n\n1. 对服务器进行配置,启用HTTP/2或HTTP/3支持。对于nginx来说,需要启用ngx_http_v2_module模块。Apache需要启用mod_http2模块。\n\n## nginx 启用\n\n1. 确保[[nginx]]版本在1.9.5或以上,低于这个版本需要重新编译来启用HTTP/2支持。\n2. 获取SSL证书并开启HTTPS服务。可以使用免费证书或付费证书,并在nginx配置文件中正确配置。\n3. 在nginx配置文件中添加对http2的支持:\n\n```zsh\n## nginx.config\n##  在nginx配置文件中添加对http2的支持:\nlisten 443 ssl http2;\n\nhttp2_max_field_size 4k;\nhttp2_max_header_size 16k;\nhttp2_max_requests 100;\n\n## 支持服务端推送\nhttp2_push /style.css;\nhttp2_push /js/main.js;\n```\n\n 再重启 nginx 即可、 nginx -s reload\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTP-3":{"title":"HTTP 3","content":"\n# HTTP 3\n\nHTTP/2 只解决了应用层的队头堵塞问题，但 TCP 协议仍然会有**因为包丢失而造成的堵塞**。随着丢包率的增加，HTTP/2 的传输效率也会越来越差。有测试数据表明，当系统达到了 2% 的丢包率时，HTTP/1.1 的传输效率反而比 HTTP/2 表现得更好。\n\n### 为什么不升级 TCP\n\n- **中间设备的僵化**\n\n中间设备有很多种类型，并且每种设备都有自己的目的，这些设备包括了路由器、防火墙、NAT、交换机等。它们通常依赖一些很少升级的软件，这些软件使用了大量的 TCP 特性，这些功能被设置之后就很少更新了。\n\n- **操作系统**\n\n[[TCP]] 协议都是通过操作系统内核来实现的，应用程序只能使用不能修改。通常操作系统的更新都滞后于软件的更新，因此要想自由地更新内核中的 TCP 协议也是非常困难的。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174038.png)\n\n所以 Chrome 决定革自己的命，使用 `UDP` 协议。 `UDP` 是⼀个简单、不可靠的传输协议，但是正是因为它简单，不需要建连和断连，通信成本低，也就非常灵活、⾼效，“可塑性”很强。 所以，**QUIC** 就选定了 `UDP` ，在它之上把 TCP 的那⼀套连接管理、拥塞窗⼝、流量控制等“搬”了过来，“去其糟粕，取其精华”，打造出了⼀个全新的可靠传输协议，可以认为是“**新时代的 TCP**”。\n\n- **实现了类似 TCP 的流量控制、传输可靠性的功能**。虽然 UDP 不提供可靠性的传输，但 [[QUIC]] 在 [[UDP]] 的基础之上增加了一层来保证数据可靠性传输。它提供了数据包重传、拥塞控制以及其他一些 TCP 中存在的特性。\n- **集成了 TLS 加密功能**。目前 QUIC 使用的是 TLS1.3，相较于早期版本 TLS1.3 有更多的优点，其中最重要的一点是减少了握手所花费的 RTT 个数。\n- **实现了 HTTP/2 中的多路复用功能**。和 TCP 不同，QUIC 实现了在同一物理连接上可以有多个独立的逻辑数据流\n- **实现了快速握手功能。** 由于 QUIC 是基于 UDP 的，所以 QUIC 可以实现使用 0-RTT 或者 1-RTT 来建立连接\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/HTTPS":{"title":"HTTPS","content":"\n# HTTPS\n\n我们使用 HTTP 传输的内容很容易被中间人窃取、伪造和繁改，通常我们把这种攻击方式称为**中间人攻击**。\n\n## 什么是 HTTPS\n\n“明文”和“不安全”仅凭 HTTP 自身是无力解决的，需要引入新的 HTTPS 协议，从“**HTTP over HTTP** ”变成了“ **HTTP over SSL/TLS**”，让 HTTP 运行在了安全的 SSL/TLS 协议上， 收发报文不再使用 Socket API，而是调用专门的安全接口。\n\n通常我们认为，如果通信过程具备了四个特性，就可以认为是“安全”的，这四个特性是：`机密性`、`完整性`，`身份认证`和`不可否认`。\n\n## HTTPS 和 HTTP 有什么区别\n\n1. `HTTPS` 在 `TCP/IP` 的基础上，增加了一层 `SLL/TCL` 进行安全验证，使报文能够加密传输\n2. `HTTP` 建立简单，只需要经过三次握手即可进行报文传输，`HTTPS` 在之后还需要进行 `SSL/TLS` 握手\n3. `HTTP` 的端口号是 **80** ，`HTTPS` 则是**443**\n4. HTTPS 需要向 CA(证书权威机构)申请数字证书，来保证服务器的身份是可信的。\n\n## SLL/TLS 又是如何进行加密的呢\n\n加密是针对安全的 4 个特性进行的逐层加密。\n\n### 机密性\n\n实现机密性最常用的手段就是**加密**，就是把消息用某种方式转化成乱码。  \n**明文** 通过 **加密算法** ==\u003e **密文**  \n使用 **秘钥** 还原 **明文** 的过程叫 **解密**\n\n按照秘钥的使用方式,可以分成两大类：对称加密和非对称机密;\n\n#### 对称加密\n\n加密和解密使用的都是同一个秘钥。只要保证了秘钥的安全，整个通信过程就可以说具有机密性了  \n目前常用的对称加密算法只有 `AES` 和 `ChaCha20`。\n\n#### 加密分组模式\n\n对称算法还有一个“**分组模式**”的概念，它可以让算法用**固定长度的密钥加密任意长度的明文**，把小秘密 （即密钥）转化为大秘密（即密文）。\n\n最新的分组模式被称为 AEAD，在加密的同时增加了认证的功能，常用的是`GCM`、`CCM`和`Poly1305`。  \n把上面这些组合起来，就可以得到 TLS 密码套件中定义的对称加密算法。  \n举个栗子，AES128-GCM，意思是密钥长度为 128 位的 AES 算法，使用的分组模式是 GCM；ChaCha20-Poly1305 的意思是 ChaCha20 算法，使用的分组模式是 Poly1305。\n\n#### 非对称加密\n\n在讲对称加密的时候也提到了，需要保证秘钥的安全。那么我们应该如何交换这个秘钥？\n\n非对称加密，它有两个秘钥，**公钥** 和 **私钥** ，公钥可以公开给任何人使用，而私钥必须严格保密。  \n非对称加密可以解决“密钥交换”的问题。网站秘密保管私钥，在网上任意分发公钥，你想要登录网站只要用公钥加密就行了，密文只能由私钥持有者才能解密。而黑客因为没有私钥，所以就无法破解密文.\n\n非对称加密算法的设计要比对称算法难得多，在 TLS 里只有很少的几种，比如 `DH`、`DSA`、`RSA`、`ECC` 等。\n\n- RSA：它的安全性基于“ **整数分解** ”的数学难题，使用两个超大素数的乘积作为生成密钥的材料，\n- ECC：基于“ **椭圆曲线离散对数** ”的数学难题，使用特定的曲线方程和基点生成公钥和私钥，子算法 ECDHE 用于密钥交换，ECDSA 用于数字签名\n\n比起 RSA，ECC 在安全强度和性能上都有明显的优势\n\n#### 混合加密\n\n非对称加密虽然实现了机密性，但因为基于数学难题，运算速度很慢，抛弃了速度,所以在 TLS 中采用了混合加密的方式。\n\n混合加密方式：用随机数产生对称算法使用的“**会话密钥** ”（session key），再用公钥加密。因为会话密钥很短，通常只有 16 字节或 32 字节，所以慢一点也无所谓。然后对方拿到 “**会话密钥** ” 再用私钥解密，这就完成了对称秘钥交换。\n\n### 完整性\n\n#### 摘要算法\n\n摘要算法近似地理解成一种特殊的压缩算法，它能够把任意长度的数据“压缩”成固定长度、而且 独一无二的“摘要”字符串，就好像是给这段数据生成了一个数字“指纹”，是一种单向的加密算法。\n\n我们日常工作常用的`MD5`、`SHA-1`就是摘要算法\n\n目前 TLS 推荐使用的是 SHA-1 的后继者：SHA-2。\n\n#### 完整性\n\n摘要算法保证`数字摘要`和`原文`是完全等价的。所以，我们只要在原文后附上它的摘要，就能够保证数据的完整性。  \n如果黑客在中间哪怕改动了一个标点符号，摘要也会完全不同，网站计算比对就会发现消息被窜改，是不可信的。\n\n但是，真正的完整性必须要建立在机密性之上，在混合加密系统里用会话密钥加密**消息**和**摘要**\n\n### 数字签名\n\n数字签名是为了解决通信两端的信任问题。  \n它通过将非对称加密里的“**私钥** ”，使用私钥再加上摘要算法，就能够实现“**数字签名**”，同时实现“**身份认证**”和“**不可否认**”。\n\n签名和公钥一样完全公开，任何人都可以获取。但这个签名只有用私钥对应的公钥才能解开，拿到摘要后， 再比对原文验证完整性，就可以像签署文件一样证明消息确实是你发的。\n\n### 数字证书和 CA\n\n**CA** （Certificate Authority，证书认证机构），具有极高的可信度，由它来给各个公钥签名，用自身的信誉来保证公钥无法伪造， 是可信的。\n\nCA 对公钥的签名认证也是有格式的，不是简单地把公钥绑定在持有者身份上就完事了，还要包含`序列号`、 `用途`、`颁发者`、`有效时间`等等，把这些打成一个包再签名，完整地证明公钥关联的各种信息，形成“**数字证书**”（Certificate）。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174317.png)\n\n小一点的 CA 可以让大 CA 签名认证，但链条的最后，也就是 **Root CA** ，就只能自己证明 自己了，这个就叫“**自签名证书** ”（Self-Signed Certificate）或者“**根证书** ”（Root Certificate）。你必须相信，否则整个证书信任链就走不下去了。\n\n总结为以下三点：\n\n1. 申请数字证书是**不需要提供私钥**的，要确保私钥永远只能由服务器掌握；\n2. 数字证书最核心的是 CA 使用它的私钥生成的数字签名；\n3. 内置 CA 对应的证书称为根证书，根证书是最权威的机构，它们自己为自己签名，我们把这称为自签名证书。\n\n#### 证书体系的弱点\n\n如果 CA 失误或者被欺骗，签发了错误的证书，虽然证书是真的，可它代表的网站却是假的。  \n还有一种更危险的情况，CA 被黑客攻陷，或者 CA 有恶意，因为它（即根证书）是信任的源头，整个信任链里的所有证书也就都不可信了。\n\n#### 密码套件\n\nTLS 的密码套件命名非常规范，格式很固定。基本的形式是“`密钥交换算法`+`签名算法`+`对称加密算法`+`分组模式` +`摘要算法`\n\n举个栗子:server suite : ECDHE-RSA-AES256-GCM-SHA384  \nserver suite 意思是：“**握手时使用 `ECDHE 算法`进行密钥交换，用 `RSA` 签名和身份认证，握手后的通信使用 `AES` 对称算法，密钥长度 256 位，分组模式是 `GCM`，摘要算法 `SHA384` 用于消息认证和产生随机数。**”\n\n## 连接过程解析\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174336.png)\n\n### TSL1.2\n\n1. TCP3 次握手\n2. “**Client Hello**\" 里面有：客户端的 `版本号`、`支持的密码套件`，`随机数（Client Random)`\n3. \"**Server Hello**\" ,对版本号，选择一个密码套件，返回一个 `随机数（Server Random）`\n4. \"**Server Certificate**\" 把证书也发给了客户端。\n5. \"**Server Key Exchange**\" ,发送 `公钥（Server Params）`和`私钥签名认证`\n6. \"**Server Hello Done** \" 服务器表示信息发完了\n\n这样第一个消息往返就结束了（两个 TCP 包），结果是客户端和服务器通过明文共享了三个信息：`Client Random`、`Server Random` 和 `Server Params`\n\n7. \"**Client Key Exchange**\" 发送 `公钥（Client Params）`\n\n- **Change Cipher Spec**\n\n客户端和服务器将 `公钥（Server Params）` 和 `公钥（Client Params）`使用 **ECDHE 算法**一阵算，算出一个新的随机数 “**Pre-Master**，\n\n再使用`Client Random`、`Server Random` 和`Pre-Master`生成用于加密会话的主密钥“**Master Secret**”\n\n8. Client “**Change Cipher Spec**”，计算出主秘钥\n9. Client “**Finished **” 把之前所有发送的数据做个摘要，再加密一下，等待服务器验证\n10. Server “**Change Cipher Spec**”，计算出主秘钥\n11. Server “**Finished **” 双方都验证加密解密 OK，握手正式结束\n\n### TSL1.3\n\n因为密码套件大幅度简化，也就没有必要再像以前那样走复杂的协商流程了。TLS1.3 压缩了以前 的“Hello”协商过程，删除了“Key Exchange”消息，把握手时间减少到了“1-RTT”，效率提高了一倍。\n\n- 首先浏览器向服务端发送 **Client -random**、 **可使用的对称密码套件和非对称加密套件**、\n- 服务器端保存 Client-random，并返回 **server-random**、**选择的密码套件**、**公钥**(这里加上 CA 发送的是数字证书)、**密钥交换算法的公钥**(**Server Params**)\n- 浏览器拿到数据后，也生成一个**Client Param** ,对 **Client -random** 和 **server-random** **,Server Params**,**Client Params**使用 **ECDHE 算法** 生成 **Pre-master**，并使用**公钥加密**发送给服务器\n\npre-master 是经过公钥加密之后传输的，所以黑客无法获取到 pre-master，这样黑客就无法生成密钥，也就保证了黑客无法破解传输过程中的数据了\n\n- 服务器收到后，使用私钥解密并验证合法性，至此，两边就都可以通过 **cilent-random** 和 **server-random** 、 **Pre-master** 三个共同随机数生成**对称秘钥**(**Master Secret**)进行加密传输了\n\n```JavaScript\nmaster_secret = PRF(\n  pre_master_secret,\n  \"master\tsecret\",\n  ClientHello.random + ServerHello.random\n);\n```\n\n这里的“PRF”就是伪随机数函数，它基于密码套件里的最后一个参数，\n\n## 双向认证\n\n上面说的是“**单向认证**” 握手过程，只认证了服务器的身份，而没有认证客户端的身份。这是因为通常单向认证通过后已经建立了安全通信，用账号、密码等简单的手段就能够确认用户的真实身份。\n\n但为了防止账号、密码被盗，有的时候（比如网上银行）还会使用 U 盾给用户颁发客户端证书，实现“ **双向认证**”，这样会更加安全。  \n双向认证的流程也没有太多变化，只是在“**Server Hello Done** ”之后，“**Client Key Exchange Client**”之前，客户端要发送“ **Client Certificate**”消息，服务器收到后也把证书链走一遍，验证客户端的身份。\n\n## 常见问题\n\n### 客户端如何验证证书的合法性\n\n操作系统和浏览器等在安装时候就预装了 CA(证书机构)列表，服务商在使用 https 前，会向 CA 请求颁发签名，在建立 https 连接的时候，浏览器会查看证书签名颁发机构是否在 CA 列表，如果是表示可以信任。\n\n具体是，服务端生成密钥对(k1,k2)， 将实体信息以及 k1 发送给 CA，获取证书，CA 对签名内容 hash 生成消息摘要，CA 用自己私钥 k2-CA 对消息摘要加密，生成签名，浏览器在校验时，获取到相应 CA 的公钥（预装），对签名解密，获取消息摘要，同时通过相同的 hash 函数对证书消息 hash 生成摘要，两者对比，如果相同则信任\n\n### 为什么要证书\n\n客户端和服务端会使用双方的公钥生成一个随机数**Pre-Master**，然后再使用三个随机数生成传输使用的主密钥，如果中间人冒充，对两边的公钥进行伪造，则后面的加密都将无效，而 CA 就用于保证，你获得的公钥确实是你要访问的可靠网站的公钥，而不是别人冒充的。\n\n### HTTP 传输消息都是明文的，黑客完全可以作为中间人劫持消息，再利用 ECDHE 算法，这样不就能破解密钥了吗？\n\nECDHE 算法利用了椭圆曲线和离散对数等思想，按照当下的计算机算力，很难在短时间进行破解。且每次握手时生成的都是一对临时的公钥和私钥，这样就保证每次的密钥对也不同。\n\n即使大费力气破解了一次的密钥，之前的历史消息也不会受到影响，保证了前向安全。\n\n### 为什么要是三个随机数\n\nTLS 的设计者不信任客户端或服务器伪随机数的可靠性，为了保证真正 的“完全随机”“不可预测”，把三个不可靠的随机数混合起来，那么“随机”的程度就非常高了，足够让 黑客难#\n\n### 为什么使用 HTTPS 了，公司还能知道访问了哪些网站\n\n这是因为 HTTPS 采用的 TLS 连接，TLS 虽然会建立安全的信息通信，但是在握手初期，信息都是明文的。我们在学习 TLS的时候看到只传输了`版本号`、`支持的密码套件`，`随机数（Client Random)`。但其实，还有 `SNI`等一些服务器信息\n\n那么，握手过程为什么要包含`SNI`呢？\n\n这是因为，当多个网站托管在一台服务器上并共享一个`IP`地址，且每个网站都有自己的`SSL`证书时，那就没法通过`IP`地址判断客户端是想和哪个网站建立`TLS`连接，此时就需要**域名信息**辅助判断。\n\n那么应该如何避免呢？\n\nTLS 1. 3 有一个扩展[Encrypted ClientHello](https://link.juejin.cn/?target=https%3A%2F%2Fblog.cloudflare.com%2Fencrypted-client-hello%2F \"https://blog.cloudflare.com/encrypted-client-hello/\")，用于加密`Client Hello`消息中的`SNI`等信息。  \n\n开启`ECH`需要同时满足：\n\n- 服务器支持`TLS`的`ECH`扩展\n- 客户端支持`ECH`\n\n还有一种是[[安全 DNS]]\n\n---\n\n# 参考资料\n\n- [《透视 HTTP 协议》](https://time.geekbang.org/column/intro/100029001)\n- [《feiker 的 https 笔记》](https://www.notion.so/https-0f8409f5e5324b1ea59139cc773c0c3b)\n- [《硬核！30 张图解 HTTP 常见的面试题》](https://mp.weixin.qq.com/s?__biz=MzU2MzM2NzU0NA==\u0026mid=2247485331\u0026idx=1\u0026sn=3290686db857491af5bf1afc4ff5e516\u0026chksm=fc5a1c84cb2d959275f6e6358905f712abe2c7564e08d7b8458c10586541242660f347afa915\u0026mpshare=1\u0026scene=1\u0026srcid=\u0026sharer_sharetime=1590368862394\u0026sharer_shareid=156d5dbafdee46be3487cf570e2c5b5f\u0026key=86794a6e80bbe8028320b404246a03249c7490bf30f4b3e5fd60624c6f17619e7b289ce5a28d714e92b9575e3019f287116f947faa9ac01a1391b39679887386068bda0d8c93413f97fedb135ee843ad\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=6209007b\u0026lang=zh_CN\u0026exportkey=AZVguo6IOZ4Lo9Jnqu%2BZh%2F4%3D\u0026pass_ticket=MJmGQMNd0o3fOqvJiPVouOXMm4%2FEWRnv7HGmY%2FVXMFPp9YPPHNWzl7zIBwMwJkKj)\n- [《深入揭秘 HTTPS》](https://zhuanlan.zhihu.com/p/22142170)\n- [《完全图解 HTTPS》](https://juejin.im/post/5c441073e51d455226654d60#heading-8)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Hooks":{"title":"Hooks","content":"\n# Hooks\n\n### hooks 简介\n\n### Hook 使用规则\n\nHook 就是 JavaScript 函数，但是使用它们会有两个额外的规则：\n\n- 只能在**函数最外层**调用 Hook。不要在循环、条件判断或者子函数中调用。\n- 只能在 **React 的函数组件**中调用 Hook。不要在其他 JavaScript 函数中调用。（还有一个地方可以调用 Hook —— 就是自定义的 Hook 中，我们稍后会学习到。）\n\n#### useSatate\n\n### useEffect\n\n#### 副作用\n\n你之前可能已经在 React 组件中执行过数据获取、订阅或者手动修改过 DOM。我们统一把这些操作称为“副作用”，或者简称为“作用”。\n\n`useEffect` 就是一个 Effect Hook，给函数组件增加了操作副作用的能力。它跟 [[类组件]] 中的 `componentDidMount`、`componentDidUpdate` 和 `componentWillUnmount` 具有相同的用途，只不过被合并成了一个 API。\n\n[[在 useEffect 中请求数据]]\n\n### useMemo\n\n把“创建”函数和依赖项数组作为参数传入 `useMemo`，它仅会在某个依赖项改变时才重新计算 memoized 值。这种优化有助于避免在每次渲染时都进行高开销的计算。\n\n```JavaScript\nconst memoizedValue = useMemo(() =\u003e computeExpensiveValue(a, b), [a, b]);\n```\n\n### useCallback\n\nuseCallback 跟 useMemo 比较类似，但它返回的是缓存的函数。\n\n```JavaScript\nconst memoizedCallback = useCallback(\n  () =\u003e {\n    doSomething(a, b);\n  },\n  [a, b],\n);\n```\n\n使用场景是：有一个父组件，其中包含子组件，子组件接收一个函数作为 props；通常而言，如果父组件更新了，子组件也会执行更新；但是大多数场景下，更新是没有必要的，我们可以借助 useCallback 来返回函数，然后把这个函数作为 props 传递给子组件；这样，子组件就能避免不必要的更新。\n\nuseEffect、useMemo、useCallback 都是自带闭包的。也就是说，每一次组件的渲染，其都会捕获当前组件函数上下文中的状态 (state, props)，所以每一次这三种 hooks 的执行，反映的也都是当前的状态，你无法使用它们来捕获上一次的状态。对于这种情况，我们应该使用 ref 来访问。\n\n### UseLayoutEffect\n\nuseLayoutEffect 的函数签名与 useEffect 相同。  \n在源码中，它们调用的是同一个函数。\n\n- useEffect 先调用 mountEffect，再调用 mountEffectImpl；\n- useLayoutEffect 会先调用 mountLayoutEffect，再调用 mountEffectImpl。\n\n#### 运用效果\n\n从运用效果上而言，useEffect 与 useLayoutEffect 两者都是**用于处理副作用**，这些副作用包括改变 DOM、设置订阅、操作定时器等。在函数组件内部操作副作用是不被允许的，所以需要使用这两个函数去处理。\n\n#### 不同点\n\n在 React 社区中最佳的实践是这样推荐的，大多数场景下可以直接使用**useEffect**，但是如果你的代码引起了页面闪烁，也就是引起了组件突然改变位置、颜色及其他效果等的情况下，就推荐使用**useLayoutEffect**来处理。那么总结起来就是如果有直接操作 DOM 样式或者引起 DOM 样式更新的场景更推荐使用 useLayoutEffect。\n\n标记为 HookLayout 的 effect 会在所有 的 DOM 变更之后同步调用，所以可以使用它来读取 DOM 布局并同步触发重渲染。但既然是同步，就有一个问题，计算量较大的耗时任务必然会造成阻塞，所以这就需要根据实际情况酌情考虑了。\n\n## [[高阶组件]]\n\n# [[Vue 和 react 的 hooks 区别]]\n\n# 参考链接\n\n[useHooks - Easy to understand React Hook recipes](https://usehooks.com/)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/IGBT":{"title":"IGBT","content":"\n# IGBT\n\n在 IGBT 芯片这项核心技术的研发应用上，比亚迪半导体解决了“卡脖子”技术难题。IGBT 因设计门槛高、制造技术难、投资大，被业内称为新能源汽车核心技术的“珠穆朗玛峰”，中高端 IGBT 的核心技术此前很多都掌握在国外厂商手里。比亚迪在车规级 IGBT 芯片设计、晶圆制造、晶圆测试等多方面工艺均有不少自主研发的技术。在 IGBT 领域，比亚迪半导体 2019、2020 连续两年在新能源乘用车电机驱动器厂商中全球排名第二，国内厂商中排名第一，市场占有率达 19%，仅次于英飞凌。\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/INKP":{"title":"INKP","content":"\nINKP 是L 先生原创的一个知识管理方法，意为 收集（Inbox）- 概念（Note） - 主题（Knowledge） - 项目（Project）。\n\n![L 先生的 2023 知识管理系统](https://mmbiz.qpic.cn/mmbiz_png/yWXmuSFeCk2jyKBBRKtBMFuYwkX5RG1iaZr7Xic7icVyXNaGfvxHickS7F7LBZkBKo8S6cARBbYTSEag9uZF3zL3bg/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1)\n","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/Image-auto-upload-Plugin":{"title":"Image auto upload Plugin","content":"","lastmodified":"2023-09-18T14:54:47.446454003Z","tags":null},"/IntersectionObserver":{"title":"IntersectionObserver","content":"\n# IntersectionObserver\n\n## LazyLoad\n\n```js\n(function lazyLoad() {\n\tconst imageToLazy = document.querySelectorAll(\"img[data-src]\");\n\n\tconst loadImage = function (image) {\n\t\timage.setAttribute(\"src\", image.getAttribute(\"data-src\"));\n\n\t\timage.addEventListener(\"load\", function () {\n\t\t\timage.removeAttribute(\"data-src\");\n\t\t});\n\t};\n\n\tconst intersectionObserver = new IntersectionObserver(function (\n\t\titems,\n\t\tobserver\n\t) {\n\t\tconsole.log(items);\n\n\t\titems.forEach(function (item) {\n\t\t\tif (item.isIntersecting) {\n\t\t\t\tloadImage(item.target);\n\n\t\t\t\tobserver.unobserve(item.target);\n\t\t\t}\n\t\t});\n\t});\n\n\timageToLazy.forEach(function (image) {\n\t\tintersectionObserver.observe(image);\n\t});\n})();\n```\n\n# 参考阅读\n\n- [IntersectionObserver - Web API 接口参考 | MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver)\n- [如何判断元素是否在可视区域内呢？然后搞一些事情 - 掘金](https://juejin.cn/post/7006521586836570126)\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/Islands-%E6%9E%B6%E6%9E%84":{"title":"优缺点","content":"\nIslands 架构模型早在 2019 年就被提出来了，并在 2011 年被 Preact 作者`Json Miller`  在 Islnads Architecture[3]  一文中得到推广。这个模型主要用于 SSR (也包括 SSG) 应用，我们知道，在传统的 SSR 应用中，服务端会给浏览器响应完整的 HTML 内容，并在 HTML 中注入一段完整的 JS 脚本用于完成事件的绑定，也就是完成 hydration (注水) 的过程。当注水的过程完成之后，页面也才能真正地能够进行交互。\n\n那么当应用的体积逐渐增大时，需要在客户端执行的 JS 脚本也会越来越多，这也意味着 TTI(可交互时间) 指标越来越高:  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20221221143224.png)  \n为了解决这个问题，Islands 架构将页面拆分为各自独立的组件，包含`静态组件`和`可交互组件`，如下图的例子所示：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20221221143238.png)  \n可以清楚的看到，一个页面中只有部分的组件交互，那么对于这些可交互的组件，我们可以并行地执行 hydration 过程，因为组件之间是互相独立的。\n\n而对于静态组件，即不可交互的组件，我们可以让其不参与 hydration 过程，直接复用服务端下发的 HTML 内容。\n\n可交互的组件就犹如整个页面中的孤岛(Island)，因此这种模式叫做 Islands 架构\n\n# 优缺点\n\n他比较适合**对首屏渲染速度、TTI 要求高，但整体页面交互不复杂**的场景，比如：\n\n- 电商页面\n- 博客\n- 文档\n\n对于**重交互性**的`Web`应用（比如**后台管理系统**、**社区**），更适合传统的`SSR`方案（比如`Next.js`）或`CSR`方案（直接使用前端框架）。\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JS%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%B5%8B":{"title":"类型检测","content":"\n# 类型检测\n\n## 基本类型和引用类型\n\nJS 有两种类型，分别是基本类型和引用类型。\n\n基本数据类型:\n\n1. Number\n2. Boolean\n3. String\n4. undefined\n5. null\n6. Symbol(ES6 新增 表示唯一值)\n\n引用数据类型：  \n统称 `Object` 对象,包括对象`Object`、数组 `Array` 和函数 `Function`\n\n值得一提的是基本类型存储在栈中（stack），引用类型将在栈中存储了指针，并将指针指向堆中实体的实际地址。\n\n## 如何判断是什么类型\n\n[[typeof]]\n\n[[instanceof]]\n\n### constructor\n\n**constructor** 是每个构造函数都会有的属性，但可想而知 `Null` 和 `undefined` 没有构造函数 所以无法判断，另外在类的原型在重写过程中容易把 `constructor` 覆盖掉，所以这种检测结果是不稳定的\n\n[[toString]]\n\n## 总结\n\n`typeof` 适合用来判断基本类型  \n`instanceof` 和 `constructor` 虽然也能判断类型，但是弊端比较多不推荐使用  \n最后，`toString` 大法好\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JS-%E5%B8%A6-async-%E5%92%8C-defer-%E7%9A%84%E5%8C%BA%E5%88%AB":{"title":"JS 带 async 和 defer 的区别","content":"\ndefer 与 async，普通的脚本是会阻塞浏览器解析的，但是可以加上 defer 或 async 属性，这样脚本就变成异步了，可以等到浏览器解析完毕后再执行\n\n注意，defer 和 async 是有区别的： **defer 是延迟执行，而 async 是异步执行。**\n\n简单的说（不展开）：\n\n- `async` 是异步执行，异步下载完毕后就会执行，不确保执行顺序，一定在 `onload` 前，但不确定在 `DOMContentLoaded` 事件的前或后\n- `defer` 是延迟执行，在浏览器看起来的效果像是将脚本放在了 `body` 后面一样（虽然按规范应该是在 `DOMContentLoaded` 事件前，但实际上不同浏览器的优化效果不一样，也有可能在它后面）\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JSX":{"title":"JSX","content":"\n# JSX\n\n在回答问题之前，我首先解释下什么是 JSX 吧。JSX 是一个 JavaScript 的语法扩展，结构类似 XML。\n\nJSX 主要用于声明 React 元素，但 React 中并不强制使用 JSX。即使使用了 JSX，也会在构建过程中，通过 Babel 插件编译为 React.createElement。所以 JSX 更像是 React.createElement 的一种语法糖。\n\n所以从这里可以看出，React 团队并不想引入 JavaScript 本身以外的开发体系。而是希望通过合理的关注点分离保持组件开发的纯粹性。\n\nJSX 语法糖允许前端开发者使用我们最为熟悉的类 HTML 标签语法来创建虚拟 DOM，在降低学习成本的同时，也提升了研发效率与研发体验。\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JWT":{"title":"JWT","content":"\n# JWT\n\n## session\n\n本来 session 是一个抽象概念，开发者为了实现中断和继续等操作，将 user agent 和 server 之间一对一的交互，抽象为“会话”，进而衍生出“会话状态”，也就是 session 的概念。\n\n而 cookie 是一个实际存在的东西，http 协议中定义在 header 中的字段。可以认为是 session 的一种后端无状态实现。\n\n服务端执行 session 机制时候会生成 session 的 id 值，这个 id 值会发送给客户端，客户端每次请求都会把这个 id 值放到 http 请求的头部发送给服务端，而这个 id 值在客户端会保存下来，保存的容器就是 cookie，因此当我们完全禁掉浏览器的 cookie 的时候，服务端的 session 也会不能正常使用。\n\n## Token\n\n- session 要求**服务端存储信息**，并且根据 id 能够检索，而 token 不需要（因为信息就在 token 中，这样实现了服务端无状态化）。在大规模系统中，对每个请求都检索会话信息可能是一个复杂和耗时的过程。但另外一方面服务端要通过 token 来解析用户身份也需要定义好相应的协议（比如 JWT）。\n- session 一般通过 cookie 来交互，而 token 方式更加灵活，可以是 cookie，也可以是 header，也可以放在请求的内容中。不使用 cookie 可以带来跨域上的便利性。\n- token 的生成方式更加多样化，可以由第三方模块来提供。\n- token 若被盗用，服务端无法感知，cookie 信息存储在用户自己电脑中，被盗用风险略小。\n\n### 优点\n\n- 可扩展性好 应用程序分布式部署的情况下，session 需要做多机数据共享，通常可以存在数据库或者 redis 里面。而 jwt 不需要。\n- 无状态 jwt 不在服务端存储任何状态。RESTful API 的原则之一是无状态，发出请求时，总会返回带有参数的响应，不会产生附加影响。用户的认证状态引入这种附加影响，这破坏了这一原则。另外 jwt 的载荷中可以存储一些常用信息，用于交换信息，有效地使用 JWT，可以降低服务器查询数据库的次数。\n\n### 缺点\n\n- **安全性**：由于 jwt 的 payload 是使用 base64 编码的，并没有加密，因此 jwt 中不能存储敏感数据。而 session 的信息是存在服务端的，相对来说更安全。\n- **jwt 太长**。所有的数据都被放到 JWT 里，如果还要进行一些数据交换，那载荷会更大，http 请求的 Header 可能比 Body 还要大。\n- **一次性**。 状态无法修改，想要修改必须签发一个新的 jwt\n  - 重新签发后，导致旧的 jwt 仍然能登录，但拿到的信息是过时的，这就**需要服务端进行额外的逻辑**，比如设置黑名单，签发新的后把旧的拉入黑名单\n  - 续签。在 redis 中单独为每个 jwt 设置过期时间，每次访问时刷新 jwt 的过期时间。\n\n**可以看出想要破解 jwt 一次性的特性，就需要在服务端存储 jwt 的状态。但是引入 redis 之后，就把无状态的 jwt 硬生生变成了有状态了，违背了 jwt 的初衷。而且这个方案和 session 都差不多了。**\n\n## JWT(JSON WEB TOKEN) 原理解析\n\n1. Bearer Token 包含三个组成部分：令牌头、payload、哈希\n\n```JavaScript\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoidGVzdCIsImV4cCI6MTU2NzY5NjEzNCwiaWF0Ij\noxNTY3NjkyNTM0fQ.OzDruSCbXFokv1zFpkv22Z_9AJGCHG5fT_WnEaf72EA\n```\n\ney 开头表示 使用 base64 加密，可以反向解密得出临牌头和 payload\n\n第三个 . 是使用 前两个 base64 加密算法加密得出的签名\n\n```JavaScript\nverify: key =\u003e {\n            const ary = token.split('.')\n            const hmac = crypto.createHmac('SHA256', key).update(ary[0] + '.' + ary[1]).digest('base64');\n            return hmac === ary[2] + '='\n}\n```\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JavaScript%E9%97%AE%E9%A2%98":{"title":"JavaScript 专题","content":"\n# JavaScript 专题\n\n[[判断数组的方法？]]\n\n## 前端模块化发展了解吗\n\n最先有的是 CommonJS，为了是让 JS 可以运行在浏览器之外，得到了 NodeJS 的完美支持，但是因为浏览器同步加载文件会造成性能问题，所以 AMD 和 CMD 作为异步加载的规范诞生了，他们很类似，但是 AMD 推崇**依赖前置，提前执行**，CMD 则推崇**依赖就近，延迟执行**。但是，ES6 的 module 通过静态编译实现比 ComonJS 更佳的性能，借鉴了 AMD 的异步却拥有更高的灵活度，所以我们应该拥抱 ESmodule，现代的 snowPack 和 Vite 都是通过静态编译大幅度提升了打包速度。\n\n## 解决 0.1 + 0.2 !=0.3\n\n产生原因：js 中的数字是采用双精度 64 位浮点数存储，计算使用二进制，呈现结果时才会转换成十进制，当十进制小数的二进制表示的有限数字超过 52 位时，在 JavaScript 里是不能精确存储的，这时候就存在舍入误差\n\n```JavaScript\n//0.1+0.2==0.3\nfunction FixAdd(nums1, nums2) {\n  return (nums1 * 1000 + nums2 * 1000) / 1000;\n}\nfunction FixAdd(nums1, nums2) {\n  return (nums1 + nums2).toFixed(1);\n}\n```\n\n## this 指向\n\n## 如何在控制台获取到原生dom的方法\n\n1. 使用`document.getElementById(id)`\n2. 使用`document.getElementsByClassName(className)`\n3. 使用`document.getElementsByTagName(tagName)`\n4. 使用`document.querySelector(selector)`\n5. 使用`document.querySelectorAll(selector)`\n\n## 下一道幸运题目\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/JavaScript-%E4%BB%A3%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B":{"title":"JavaScript 代码的执行流程","content":"\n# JavaScript 代码的执行流程\n\n**实际上变量和函数声明在代码里的位置是不会改变的，而且是在编译阶段被 JavaScript 引擎放入内存中**。\n\n## 编译阶段\n\n1. **变量提升部分的代码。**\n2. **执行部分的代码。**\n\n经过编译后，会生成两部分内容：**执行上下文（Execution context）**和**可执行代码**。\n\n### 变量提升（Hoisting）\n\n**所谓的变量提升，是指在 JavaScript 代码执行过程中，JavaScript 引擎把变量的声明部分和函数的声明部分提升到代码开头的“行为”。变量被提升后，会给变量设置默认值，这个默认值就是我们熟悉的 undefined。**\n\n#### 解决变量提升\n\nES6 通过引入 let、 const 创建一个块级作用域，解决的变量提升造成的种种问题。\n\n实现：在词法环境内部，维护了一个小型栈结构，栈底是函数最外层的变量，进入一个作用域块后，就会把该作用域块内部的变量压到栈顶；当作用域执行完成之后，该作用域的信息就会从栈顶弹出。\n\n## 执行阶段\n\n**执行上下文是 JavaScript 执行一段代码时的运行环境**，比如调用一个函数，就会进入这个函数的执行上下文，确定该函数在执行期间用到的诸如 this、变量、对象以及函数等。\n\n但有以下三种情况时，会出现执行上下文:\n\n1. 当 JavaScript 执行全局代码的时候，会编译全局代码并创建全局执行上下文，而且在整个页面的生存周期内，全局执行上下文只有一份。\n2. 当调用一个函数的时候，函数体内的代码会被编译，并创建函数执行上下文，一般情况下，函数执行结束之后，创建的函数执行上下文会被销毁。\n3. 当使用 eval 函数的时候，eval 的代码也会被编译，并创建执行上下文。\n\n在执行 JavaScript 时，可能会存在多个执行上下文,js 通过一个 **栈** 进行管理\n\n在执行上下文创建好后，JavaScript 引擎会将执行上下文压入栈中，通常把这种用来管理执行上下文的栈称为**执行上下文栈**，又称**调用栈**。\n\n**原始类型的数据值都是直接保存在“栈”中的，引用类型的值是存放在“堆”中的**。但是闭包中的变量是保存在堆中的。\n\n也就是栈底永远会是全局上下文，遵循着先进后出的机制。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174250.png)\n\n### 作用域链\n\n每个执行上下文的变量环境中，都包含了一个外部引用，用来指向外部的执行上下文，我们把这个外部引用称为**outer**。如果在当前的变量环境中没有查找到，那么 JavaScript 引擎会继续在 outer 所指向的执行上下文中查找。我们把这个查找的链条就称为**作用域链**。动态作用域\n\n### 词法作用域\n\n在 JavaScript 执行过程中，其作用域链是由词法作用域决定的。\n\n**词法作用域就是指作用域是由代码中函数声明的位置来决定的，所以词法作用域是静态的作用域，通过它就能够预测代码在执行过程中如何查找标识符。**\n\n**词法作用域是代码阶段就决定好的，和函数是怎么调用的没有关系**。\n\n### 闭包\n\n闭包其实无处不在，这次 携带着代码讲解下\n\n```JavaScript\nfunction foo() {\n  var myName = \" 极客时间 \";\n  let test1 = 1;\n  const test2 = 2;\n  var innerBar = {\n    getName: function() {\n      console.log(test1);\n      return myName;\n    },\n    setName: function(newName) {\n      myName = newName;\n    },\n  };\n  return innerBar;\n}\nvar bar = foo();\nbar.setName(\" 极客邦 \");\nbar.getName();\nconsole.log(bar.getName());\n```\n\n**根据词法作用域的规则，内部函数 getName 和 setName 总是可以访问它们的外部函数 foo 中的变量**，所以当 innerBar 对象返回给全局变量 bar 时，虽然 foo 函数已经执行结束，但是 getName 和 setName 函数依然可以使用 foo 函数中的变量 myName 和 test1。\n\n而这个变量保存的地方，别人都无法访问到，是一个 setName 和 getName 函数的专属背包，我们把这个背包称之为 foo 函数的**闭包**\n\n定义：**在 JavaScript 中，根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中，我们就把这些变量的集合称为闭包。比如外部函数是 foo，那么这些变量的集合就称为 foo 函数的闭包**。\n\n#### 闭包原理\n\n```JavaScript\nfunction foo() {\n  var d = 20;\n  return function inner(a, b) {\n    const c = a + b + d;\n    return c;\n  };\n}\nconst f = foo();\n```\n\n在执行全局代码时，V8 会将全局执行上下文压入到调用栈中，然后进入执行 foo 函数的调用过程，这时候 V8 会为 foo 函数创建执行上下文，执行上下文中包括了变量 d，然后将 foo 函数的执行上下文压入栈中，foo 函数执行结束之后，foo 函数执行上下文从栈中弹出，这时候 foo 执行上下文中的变量 d 也随之被销毁。\n\n所以正常的处理方式应该是 foo 函数的执行上下文虽然被销毁了，但是 inner 函数引用的 foo 函数中的变量却不能被销毁，那么 V8 就需要为这种情况做特殊处理，需要保证即便 foo 函数执行结束，但是 foo 函数中的 d 变量依然保持在内存中，不能随着 foo 函数的执行上下文被销毁掉。\n\nV8 引入预解析器，比如当解析顶层代码的时候，遇到了一个函数，那么预解析器并不会直接跳过该函数，而是**对该函数做一次快速的预解析**，其主要目的有两个：\n\n1. 判断当前函数是不是存在一些语法上的错误\n2. 检查函数内部是否引用了外部变量，**如果引用了外部的变量，预解析器会将栈中的变量复制到堆中**\n\n#### 闭包是怎么回收的\n\n如果引用闭包的函数是一个全局函数，那么闭包会一直存在到页面关闭。但如果这个闭包不在使用的话，就会造成内存泄露。\n\n如果引用闭包的函数是个局部变量，等函数销毁后，在下次 JavaScript 引擎执行垃圾回收时，判断闭包这块内容如果已经不再被使用了，那么 JavaScript 引擎的垃圾回收器就会回收这块内存。\n\n### This\n\n**this 是和执行上下文绑定的**，也就是说每个执行上下文中都有一个 this。\n\n- 全局上下文中的 this 就指向 **window**\n- 函数执行上下文中的 this\n  - **在全局环境中调用一个函数，函数内部的 this 指向的是全局变量 window。**\n  - **通过一个对象来调用其内部的一个方法，该方法的执行上下文中的 this 指向对象本身。**\n\n[[this 指针的绑定]]\n\n#### this 缺点\n\n- 嵌套函数中的 this 不会从外层函数中继承\n  - **ES6 中的箭头函数来解决**\n  - **声明一个变量 self 用来保存 this**\n- 普通函数中的 this 默认指向全局对象 window\n- 严格模式 ，其函数的执行上下文中的 this 值是 undefined\n- call、apply、bind\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/Jaxx":{"title":"Jaxx","content":"\n# Jaxx\n\nJaxx 是一个支持多平台和多币种的钱包，可以运行在 Android、iOS、Windows、Mac 和 Linux 等操作系统。这款钱包对于新手来说是个不错的选择，因为它的设计目标就是简单和易于使用。Jaxx 既可以是移动钱包也可以是桌面钱包，取决于实际安装环境。\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/KPT-%E5%A4%8D%E7%9B%98%E6%B3%95":{"title":"KPT复盘法","content":"\n# KPT复盘法\n\n- K（Keep）：有哪些方法后面需要继续保持；\n- P（Problem）：在这次项目中，遇到了哪些问题？\n- T（Test）：有什么想法可以在下次中进行测试，尝试改进？\n\n总结和复盘的区别：  \n\n- 总结主要分析成功或失败的原因；\n- 复盘不仅可以分析成功失败的原因，还能够通过假设的推演，找到不同的方法和可能性。\n\n\n","lastmodified":"2023-09-18T14:54:47.450454024Z","tags":null},"/Keccak-256":{"title":"Keccak-256","content":"\n# Keccak-256\n\nKeccak-256 是 2007 年由 NIST 在 SHA-3 密码学哈希函数竞赛中提出的。Keccak 胜出并最终在 2015 年成为 FIPS 202 标准。\n\n然而，在以太坊的开发过程中，NIST 标准并没有完全确定。在标准化过程完成后，NIST 调整了 Keccak 中的一些参数，意在提升它的性能。与此同时，Edward Snowden 披露的政府文档中揭示，NIST 可能受到美国国家安全部门的影响，有意地弱化了 Dual_EC_DRBG 随机数生成器标准，在这个随机数生成器中加入了后门。这导致了公众对变更提案的强烈抵制，并极大地延缓了对应的 SHA-3 标准化进程。因此，以太坊基金会决定实现由发明者提出的最原始的 Keccak 算法，而不是在以太坊中使用经过 NIST 修改的 SHA-3 标准。\n\n## 怎么判断\n\n最简单的办法是采用测试矢量，用一个给定输入的已知结果来判断。用于测试哈希函数最通用的方法是使用空的输入。如果使用哈希函数计算输入的空字符串的哈希值，应该得到如下结果：\n\n```\nKeccak256(\"\") = c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 SHA3(\"\") = a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a\n```\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/L%E5%85%88%E7%94%9F%E7%9A%84%E5%86%99%E4%BD%9C%E8%AF%BE":{"title":"L先生的写作课","content":"\n# L先生的写作课\n\n# 概论：一切从用户思维开始\n\n### 我们平时看到一篇\n\n![信息接收漏斗](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220608211827.png)\n\n写作，就是跟读者的大脑争夺注意力和心智资源\n\n## 用户思维\n\n1. 一切从用户出发\n2. 为用户提出价值\n\n### 从用户角度出发\n\nTips：写作时减少【我】的使用，把我的角度变成你的角度\n\n### 为用户提出价值\n\n看用户对象使用不同的文案，用户洞察  \n**所谓价值就是，你能提供的和用户需要的产生的交叉**\n\n读者（受众）的时间比你更重要，一旦他对你投入了时间和注意力，就必须要让他能获得超额的回报\n\n### 基础四问\n\n- 读者想要什么？\n- 替代品是什么？\n- 我能提供什么？\n- 能使读者如何？\n\n送礼模型\n\nTips：不断问自己，我想告诉读者的「关键信息」是什么？，这样可以避免自己「迷失」在自我意识过剩之中  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220610071933.png)\n\n## 差异三角\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220609211802.png)\n\n找跨界的方法：把所有的技能列出来，看如何排列组合  \n细化的核心：找场景\n\n#### 我能提供什么\n\n回忆你的优势，每个人的时间都是相等的，在你不经意间你肯定有某些方面花了比别人更多的世界\n\n- 回忆起你得到表扬和赞赏的场景，是因为什么事？\n- 朋友、同事、网友们，经常会在什么场合下主动找你帮忙？\n- 你做什么事情时，会更加自信，觉得自己能做得比别人好？\n\n##### 7C 模型\n\n产品模式 7C 模型\n\n- Combine 整合\n- Courier 速递\n- Communicate 沟通\n- Choose 筛选\n- Convenience 便捷\n- contact 联结\n- Create 创造\n\n# 选题：如何提高文章的传播力？\n\n试着找到一件特别的事情  \n或者去做件特别的事情  \n**为今天赋予意义**\n\n比如：记录今天新学了个菜  \n记录之前的进步，就像爱需要学习中一样，记录对方的改变\n\n一篇好的文章同样需要  \n一个强有力的观点  \n**来为它赋予意义**\n\nTips：写作前，不妨问自己一句话  \n如果读者想把它分享给别人，他（她）会说些什么？  \n**找到一个令别人愿意传播的理由，用它来引领你的文章**\n\n例子：“几个有效提高工作效率的方法” =\u003e \"几个适合普通人零基础上手的工作效率小技巧\" =\u003e “好的方法，哪需要什么自律”\n\n## 冲击力的四要素\n\n1. 新鲜，同样的知识，你用新的名词，新的角度仍然能给人带来冲击\n2. 生动，你能调动的感官越多，你能感受到的印象就越强烈\n3. 颠覆，大脑会认为跟我固有认知不同的东西，那一定是重要的东西\n4. 强烈， “最大的不同” 和“有一个不同\n\n## 有情感共鸣的\n\n## 怎么样的观点，才会使比人更愿意传播\n\n我们为什么会传播/转发/分享一样东西？ 为了表达自我，惠及他人\n\n[[自我不一致理论]]  \n谁掌握了 [[结构洞]]，就拥有了利用信息去获取收益的权利\n\n社交货币：通过传播信息，来占据社交信息链中的上游从而获得竞争优势和优越感\n\n好的观点，来源于和预期的 博弈\n\n[[前景理论]]，寻找对比，  \n[[博弈思维]]  \n[[博弈论]]  \n[[卡诺模型]]  \n基本需求：不要有广告、不要有错别字  \n写作前，使用 [[乔哈里窗格]] 进行思考\n\n## 怎么去找到超预期的观点\n\n一切观点都是基于已有 素材  \n在已有素材向上思考就有：[[正反合]]和[[拔高层次]]  \n水平方向： [[逆向思维]]、[[挑战常识]]、  \n向下思考： [[5 Why]] 和 [[沉默的螺旋]]\n\n# 概念：如何用网络和节点去思考？\n\n组块：把零散的信息整合成一个整体来记忆，达到节省认知空间的目的  \n[[吃青蛙]]\n\n1）每一个节点都是一个明确的概念  \n2）尽量保证概念的自由度和唯一性  \n3）联系可以任意构筑，只要能够形成命题即可\n\n概念图\n\n1. 它是… （特质）\n2. 它有… （结构）\n3. 它属于… （分类）\n4. 它能… （功能）\n\n[[激活扩散]]  \n拆解本质特征，会形成一个钩子\n\n拆解[[概念图]]  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220615162732.png)\n\n# 结构：让写作像搭积木一样轻松\n\n一步步降低不确定性  \nWYH 理论： What why How\n\n可预知性：对一段信息的可预知性决定了这段信息的接收效率\n\n先给读者抛出很多可能性，在读者不堪重负时，抛出一个线索，让可能性收束成几种，就会给读者造成强烈的冲击感。\n\n给予对方「预知」，可以降低存储认知的心智储备  \n[[黄金圈理论]]，先强调 What ，就是给别人可预知性\n\n但是课程中，把 What 隐藏在中间可以加强读者对知识点的记忆。另外从不确定性到确定性，也能给读者留下更安心，更深刻的印象。可预知性的方向应用\n\n## 文章的框架\n\n[[《 金字塔原理 》]]\n\n1. 进行分类讲解\n2. 如果一个要点需要 4 个以上，多分几类\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220622120527.png)\n\n1. 总结\n2. 拆分\n3. 要点\n\n向上总结，向下拆分  \n横向要点，不重不漏\n\n![ 框架 1 ](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220622121054.png)  \n![框架2](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220622121108.png)\n\n### 如何转折\n\n![埋设路标](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220622121417.png)\n\n### 文章的 架构\n\n- 总分（ 简单，方便读者理解）\n- 对比 （素材存在二元对立结构（对错，新旧等 ））\n- 递进\n- 顺序\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/LCP":{"title":"LCP","content":"\n[最大内容绘制](https://web.dev/lcp) (LCP) 是[核心 Web 指标](https://web.dev/vitals/)中的一项指标，用于测量可视区域中最大内容元素变为可见的时间点。该项指标可用于确定页面主要内容在屏幕上完成渲染的时间点。\n\n导致 LCP 不佳的最常见原因是：\n\n- 缓慢的服务器响应速度。您首先需要做的是改进服务器处理内容的方式和位置。可以使用[[TTFB]]来含量\n- 阻塞渲染的 JavaScript 和 CSS\n- 缓慢的资源加载速度\n- 客户端渲染\n\n## 如何测量\n\n```js\nimport {onLCP} from 'web-vitals';  \n  \n// 当 LCP 可用时立即进行测量和记录。  \nonLCP(console.log);\n```\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Langchain":{"title":"Langchain","content":"\n# Langchain\n\nLangChain 是一个框架，用于开发由 LLM 驱动的应用程序。可以简单认为是 LLM 领域的 Spring，以及开源版的 ChatGPT 插件系统。核心的 2 个功能为：\n\n1）可以将 LLM 模型与外部数据源进行连接。\n\n2）允许与 LLM 模型与环境进行交互，通过 Agent 使用工具。  \n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230802185553.png)\n\n## 企业部署\n\n一个很好的企业私有 AI 部署框架\n\n企业部署的难点在\n\n- 开源模型企业私用还行，但如果要商业化，基本要找开源方合作，像清华的项目合作要两百万\n- 隐私的话，私有化部署不会调取远程接口\n- 但是服务端部署的算力要求也会很高\n- 要有大量的结构化数据，不然注定会不好用\n\n# 参考链接\n\n- [向量脉络：一个开源的无代码 AI 工作流+本地知识库软件 - 少数派](https://sspai.com/post/79916)\n- [DLAI - Learning Platform Beta](https://learn.deeplearning.ai/langchain-chat-with-your-data/lesson/1/introduction) 啊啊啊啊 英文太差了  \n- [LangChain：打造自己的LLM应用 | 京东云技术团队 ](https://my.oschina.net/u/4090830/blog/10092363)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Lerna":{"title":"Lerna","content":"\n# Lerna\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20221220114622.png)\n\n您可以大胆想象，九头龙的每只龙头都在帮您管理着一个子项目，而您只需要骑在龙身上发号施令的场景，这基本上就是我们使用 Lerna 时的直观感受。\n\n当多个子项目放在一个代码仓库，并且子项目之间又相互依赖时，我们面临的棘手问题有两个：\n\n1. **如果我们需要在多个子目录执行相同的命令，我们需要手动进入各个目录，并执行命令**；\n2. **当一个子项目更新后，我们只能手动追踪依赖该项目的其他子项目，并升级其版本**。\n\n# 基本配置\n\n在项目根目录使用  `npx lerna init`  初始化后，我们的根目录会新增一个  `lerna.json`  文件, 并修改成\n\n```\n{\n  \"packages\": [\"packages/*\"],\n  \"npmClient\": \"yarn\",\n  \"version\": \"independent\",\n  \"useWorkspaces\": true,\n}\n```\n\n# 命令使用\n\nLerna 提供了很多 CLI 命令以满足我们的各种需求，但根据 2/8 法则，您应该首先关注以下这些命令：\n\n- `lerna bootstrap`：等同于  `lerna link` + `yarn install`，用于创建符合链接并安装依赖包；\n- `lerna run`：会像执行一个 for 循环一样，在所有子项目中执行 npm script 脚本，并且，它会非常智能的识别依赖关系，并从根依赖开始执行命令；\n- `lerna exec`：像  `lerna run`  一样，会按照依赖顺序执行命令，不同的是，它可以执行任何命令，例如 shell 脚本；\n- `lerna publish`：发布代码有变动的 package，因此首先您需要在使用 Lerna 前使用  `git commit`  命令提交代码，好让 Lerna 有一个 baseline；\n- `lerna add`：将本地或远程的包作为依赖添加至当前的 monorepo 仓库中，该命令让 Lerna 可以识别并追踪包之间的依赖关系，因此非常重要；\n\n## Lerna 高级命令\n\n除了上面介绍到的常用命令外，Lerna 还提供了一些参数满足我们更灵活的需求，例如：\n\n- `--concurrency \u003cnumber\u003e`：参数可以使 Lerna 利用计算机上的多个核心，并发运行，从而提升构建速度；\n- `--scope '@mono/{pkg1,pkg2}'`：`--scope`  参数可以指定 Lerna 命令的运行环境，通过使用该参数，Lerna 将不再是一把梭的在所有仓库中执行命令，而是可以精准地在我们所指定的仓库中执行命令，并且还支持示例中的模版语法；\n- `--stream`：该参数可使我们查看 Lerna 运行时的命令执行信息；\n\n# 本地发布\n\n您可能想要亲自体验一把使用 Lerna 管理/发布 monorepo 项目的感觉。可是很快您会发现，将示例代码发布到真实世界的 npm 仓库并非一个好主意，这多少有些令人沮丧，但是别担心，您可以使用[[Verdaccio]] 在本地创建一个 npm 仓库作为代理，然后尽情体验 Lerna 的种种强大之处。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Lighthouse":{"title":"Lighthouse","content":"\n# Lighthouse\n\n谷歌开源的自动化分析工具\n\n## 使用方法\n\n使用\n\n```cmd\nnpm install -g lighthouse\nlighthouse --locale=zh https://www.google.com  // 默认移动端\nlighthouse --locale=zh https://www.google.com --view --emulated-form-factor=desktop // 桌面端\n```\n\n## 内部架构和工作原理\n\nLighthouse 的组成部分主要包括四个：驱动（Driver）、收集器（Gatherers）、审查器（Audits）和报告（Report），如图所示。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220630163832.png)\n\n可以看到，Lighthouse 的具体工作过程为：\n\n1. 当网站页面开始加载之后，Lighthouse 会使用驱动（Driver）通过 Chrome DevTools Protocol 获取页面的性能数据；\n2. 驱动（Driver）获取到的数据会被收集器（Gatherers）进行收集，并输出被称为 Artifact 的结果；\n3. Artifact 会作为审查器（Audits）的输入，审查器会对其运行测试，然后分配通过/失败/得分的结果；\n4. 审查的结果给到报告（Report），对各个部分进行加权和统计得到面向用户的报告（如最佳实践），并将该报告渲染给用户。\n\n如果你希望短时间内对你的网站进行较全面的评估，可以使用 Lighthouse 来跑一下分数，确定大致的优化方向。但 Lighthouse 不能用于运行时的性能分析，也无法给到最佳实践以外更多的数据和建议。\n\n而 [[Performance]] 面板则可以弥补 LightHouse 的不足。\n\n## ![[网站性能衡量标准]]\n\n强烈建议用 lighthouse 跑一遍自己的网站，里面的链接才是精华，另外可以看看 Googel 的开发者网站，要不是我不懂英文就看完了。\n\n# 参考资料\n\n- [掘金小册](https://juejin.im/books)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Linter":{"title":"usage","content":"\n格式和风格的笔记。它可以用来格式化YAML标签、别名、数组和元数据、脚注;标题;空格;数学块;常规标记内容，如列表、斜体和粗体样式;以及使用自定义规则选项。\n\n# usage\n\n要检测当前文件，运行lint the current file(默认为Ctrl+Alt+L)。  \n要整理所有文件，请运行整理仓库中的所有文件。  \n要检测当前文件夹中的所有文件运行lint当前文件夹中的所有文件此操作包括所有  \n子文件夹。  \n你也可以在文件夹列表中右键单击一个文件夹，然后从选项中选择“lint folder”。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Luna":{"title":"Luna","content":"\n[# Luna 暴跌事件全复盘](https://mp.weixin.qq.com/s/N4-d7CdKYBmxzkMWPdyHUw)\n\n### Luna 是怎么崩的？\n\n之所以大家想要大量购买 UST，其中很重要的一个诱惑因素就是 Anchor 给出的 20%的存款利率，因此实际上大量的 UST（传说有 70%以上）都趴在 Anchor 吃利息上并没有在流通，是通过不断燃烧的 Luna 为 UST 注入了流动性，从而让 UST 价格维持稳定。  \n但这背后的问题是，**一旦大家开始突然疯狂抛售此前趴着没动的 UST 换回 Luna 时，就将会造成 UST 价格的脱锚，同时市场上的 Luna 供应量大增导致 Luna 价格的下降。**而当 Luna 价格持续下跌，市值接近或者小于 UST 时，大家就开始恐慌并大量卖掉 UST。这时候，**死亡螺旋**就会开始，造成的后果就是 Luna 和 UST 全部跌进深渊。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Mac%E5%BF%AB%E6%8D%B7%E9%94%AE":{"title":"Mac快捷键","content":"\n## 全屏\n\n`fn + F` 全屏\n\n## utools\n\n`control + B ` : 超级剪切板（改键  \n`option + Space`: 打开utools\n\n## 截图\n\nCommand 十 shift 十 3 截取全屏  \nCommand 十 shift 十 4 截取部分屏幕  \nCommand 十 shift 十 5 选择窗口截取还能录制\n\n## 切换 app\n\n按住 command 十 tab  \n切换的时候直接关掉 command + tab 同时滑到那个 按住 q 不放手\n\n## 关闭 app\n\n按住 command+ q 可以直接退出  \n如果一直转圈太慢了，可以 option 十 command 十 q 強制退出  \ncomment + option + etc 可以強制呼出強退面板\n\n## 多窗口切换\n\nCommand + 1/2/3/4 可以切换視图内的各个面板  \nCommand 十 W 可以立即关闭当前面板\n\n## 访达模式\n\nCommand + 1/2/3/4 可以切换视图中的显示模式，上看或图标看  \nCommand 十 t 可以打开相同的一个页面  \nCommand +n 可以打开同页面的新窗口  \n以上的也可以用于浏览器\n\n## 浏览器中的快速鍵\n\nCommand + L 直接定位到 URL  \nCommand + option +左右可以快速看左面右面标签  \ncontrol + tab 可以看左到右\n\n## 看文档和文字\n\n- 去除文本格式粘贴 command 十 optiont 十 shift 十 V 当然提前要 command+c\n- Command +control 十空格快速表情\n\n## 桌面操作\n\n- Command 十 f3 快速桌面\n- Control 十左／右可以切换多个桌面\n- Control 十上可以呼出调动中心\n- Control 十下可以看所有应用程序窗口\n\n## 向下检索，向上检索\n\ncommand +g 和 shift + command 十 g\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Mediabuy":{"title":"Mediabuy","content":"\n# Mediabuy\n\n从字面意义上讲，我自己的理解就是通过广告联盟买下一个广告位，来投放自己的广告，例如从A联盟拿到了offer，然后放到B流量平台来推广获取流量，流量平台的展示方式一般为cpc，打一个比方，一个offer的pay out 为2.5刀，B平台cpc（每次点击费用）为0.03刀，100个点击中，有两个转化，那么盈利就是2.5*2-.0.03*100=2,你就从中赚取了2刀，浅显的理解，欢迎大家补充！\n\n直译就是媒体购买，通俗的理解就是付费流量购买，通过付费的方式购买流量来推广商家的链接，赚取佣金和流量费用支出中的利差。  \n我们去年这门课卖两万，而且卖得非常好，今天我就把整个项目逻辑免费带给生财有术的各位圈友。  \n对于一个新手，如果去购买流量，一般会踩两个坑：\n\n1,流量平台的流量质量无法把握。  \n2,广告联盟支付信誉不清楚。\n\n而这个项目，我要说的是，首先流量是Goog的搜索流量，广告联盟虽然有很多有信誉又好的广告联盟，我们一般用Biweekly支付的Awin广告联盟来说明。\n\n## 项目原理\n\n前面铺垫了这么多，其实要做的非常简单。\n\n1,准备一个Google Adst的帐号，个人开户或者代理商开户均可。  \n2,注册一个广告联盟的帐号，找到有大体量品牌词的广告。  \n3,申请到广告利用Google Ads,出价他们的品牌词，但是广告链接是你自己的即可。  \n很多朋友会问了，此方法不是违规的吗？这句话对，也不对，国外有很多商家，允许你出价他们的品牌词，而且一定可以出价他们竞争对手的品牌词。\n\n其次，为什么单价这么低？因为你是出价品牌词，品牌词实际谷歌出价是无限接近于零，也是免费，所以只要你设置 没问题，单价到0.01完全没有问题，如果你了解各个国家的汇率，这个0.01是当地货币的0.01，比如港币的0.01港币，成本远小于美元的0.01美元。\n\n# 参考文章\n\n[聊聊我对Google Cash的一点个人看法 - 飞书云文档](https://viuejh8h99y.feishu.cn/docx/I8QLdxyXYoJWBOxaQSbczLY5nOc)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/MetaMask":{"title":"MetaMask","content":"\n# MetaMask\n\nMetaMask 是一个基于浏览器扩展的钱包，它运行在你的 Web 浏览器（Chrome、Firefox、Opera 或 BraveBrowser）中。使用这个钱包和进行各项测试都很容易，它可以链接多种以太坊节点和测试区块链。\n\n## 使用\n\n“正版”MetaMask 具有如下特征：\n\n- 在浏览器地址中显示的插件 ID 是 nkbihfbeogaeaoehlefnkodbefgpgknn·\n- 由 https://metamask.io发布·\n- 有超过 1400 个用户评论·\n- 有超过 1000000 个用户\n\n### 创建钱包\n\n设定密码后，MetaMask 会为你生成一个钱包，并且显示包含了 12 个英文单词的助记词（图 2-3）。这些助记词可用在所有的兼容钱包上以进行钱包恢复。如果你的 MetaMask 甚至是你的电脑出问题了，只需要这 12 个单词就可以完成钱包恢复，不需要之前设定的密码。\n\n**把这 12 个助记词备份在两张纸上。把这两张纸放置在相隔较远的两个位置。** 这两张纸的价值等同于你在以太坊钱包内保存的数字货币的价值。如果他人获得了这 12 个词，就可以窃取你的数字货币。\n\n### 切换网络\n\n默认情况下，MetaMask 会尝试连接到主网络。另外的几个网络包括公开的测试网络、用户自己选择的以太坊节点，或者运行在本机之上的私有以太坊区块链：\n\n- **以太坊主网**：以太坊的主网络，完全公开，承载了真实的以太币，以及真实的价值和交易。\n- **Ropsten 测试网络**：以太坊的公开测试区块链网络，在这个网络上的以太币没有任何价值。\n- **Kovan 测试网络**： 以太坊的公开测试区块链网络，使用 Aura 协议和权威证明（PoA federated signing）方式的共识机制。在这个网络上的以太币没有任何价值。只有 Parity 客户端支持这个测试网络。其他的以太坊客户端在权威证明时使用稍后提到的 Clique 协议。\n- **Rinkeby 测试网络**：另一个以太坊的公开测试区块链网络，使用 Clique 协议和权威证明（PoA federated signing）方式的共识机制。在这个网络上的以太币没有任何价值。\n- **Localhost 8545** ：通过浏览器连接到本机上运行的以太坊节点。这个节点可以是以太坊公共区块链（无论是主网还是测试网络）的一部分，也可以是一个完全私有的测试网络。\n- **自定义 RPC** ：允许把 MetaMask 连接到任何一个兼容 Geth PRC 接口的节点。这个节点可以是公开或者私有的区块链的一部分。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Midjourney":{"title":"Midjourney","content":"\n# Midjourney\n\n# 学习资料\n\n- [知识库简介 - 飞书云文档](https://zukyagt80y.feishu.cn/wiki/HavKwyV80iSVgLklvBIcRq1OngS)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Mobx":{"title":"Mobx","content":"\n# Mobx\n\nMobx 是通过监听数据的属性变化，直接在数据上更改来触发 UI 的渲染。是不是一听就非常“Vue”。那 Mobx 的监听方式是什么呢？\n\n- 在 Mobx 5 之前，实现监听的方式是采用 Object.defineProperty；\n- 而在 Mobx 5 以后采用了 Proxy 方案。\n\naction, makeObservable, observable, runInAction, toJS\n\n## makeAutoObservable 详解\n\n`makeAutoObservable(target, overrides?, options?)`\n\n- `target`：将目标对象中的属性和方法设置为 Observable State 和 Action\n- `overrides`：覆盖默认设置，将  `target`  对象中的某些属性或方法设置为普通属性\n  - 因为并不是所有的属性或方法都需要转化\n  - `overrides`  对象中的  `key`  是需要覆盖的属性或方法的名称，`value`  为  `false`  的会被设置成普通属性\n- `options`：配置对象\n\n# 踩坑\n\n- 在 store 初始化的时候，如果需要数据能够响应式绑定，需要在初始化的时候，给默认值，不能设置为 undefined 或者 null，这样子的话，数据是无法实现响应式的\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/MutationObserver":{"title":"MutationObserver","content":"\nMutationObserver\n\n#### Mutation Event\n\n2000 年的时候引入了 Mutation Event, Mutation Event 采用了**观察者的设计模式**,当 DOM 有变动时就会立刻触发相应的事件,这种方式属于同步回调。\n\n采用 Mutation Event 解决了实时性的问题,因为 DOM 一旦发生变化,就会立即调用 JavaScript 接口。但也正是这种实时性造成了严重的性能问题,因为每次 DOM 变动,渲染引擎都会去调用 JavaScript,这样会产生较大的性能开销。\n\n#### MutationObserverAPI\n\nMutationObserver 的作用是监控某个 DOM 节点\n\nMutationObserver 将响应函数改成异步调用,可以不用在每次 DOM 变化都触发异步调用,而是等多次 DOM 变化后,**一次触发异步调用**,并且还会使用一个数据结构来记录这期间所有的 DOM 变化。这样即使频繁地操纵 DOM,也不会对性能造成太大的影响。\n\n如果采用 setTimeout 创建宏任务来触发回调的话,那么实时性就会大打折扣,因为上面我们分析过,在两个任务之间,可能会被渲染进程插入其他的事件,从而影响到**响应的实时性**。\n\nMutationObserver 采用了“**异步 + 微任务**”的策略。\n\n- 通过**异步**操作解决了同步操作的**性能问题**；\n- 通过**微任务**解决了**实时性的问题**。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/MyEtherWallet":{"title":"MyEtherWallet","content":"\n# MyEtherWallet\n\nMyEtherWallet 是一个基于网页的钱包，它运行在浏览器之内。它有很多成熟的功能，我们会在后续的实验中多次用到这个钱包。``\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/NAPI":{"title":"NAPI","content":"\n# NAPI\n\nRust 与 Node.js 的整合比其他低级语言更好。\n\nnapi-rs 允许你用 Rust 构建预编译的 Node.js add-ons 。它为交叉编译（cross-compilation）和向 NPM 发布本地二进制文件提供了一个开箱即用的解决方案，不需要 `node-gyp` 或使用 `postinstall` 。\n\n相应的，你也能轻松构建一个被 Node.js 侧直接调用的 [[Rust]] 模块，而不需要像 [[esbuild]] 那样创建一个子进程。\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/NAS":{"title":"NAS","content":"\n# NAS\n\n## 别人的发展经历\n\n\u003e 其实我从没想过有一天自己会特地组台服务器放在家里，现在想来一切的源头应该是几年前买的那台明基 W1120 投影仪。\n\u003e\n\u003e 因为那台投影仪不带系统，所以我额外给它配了个芝杜 Z9S 当电视盒子。本来用的好好的，但是某一天我突然觉得每次看个电视都要按两次开机键并把顶灯关了着实是太麻烦了，于是我入坑了智能家居。玩了一阵子智能家居之后实在是受不了国内厂商各自为战，每家一个 APP 的折磨，于是我买了个树莓派玩起了 HomeAssistant。玩了一阵子树莓派之后觉得把它一天开到晚就当个智能家居控制中心实在是浪费，于是我又买了个硬盘盒顺便用它玩起了 pt 下载。玩到最后小小的树莓派已经完全满足不了我的需求了，相较于省电，果然还是性能更加重要，于是挣扎许久还是买了块二手的超微 X11SCA-F 工作站主板配了台家庭服务器。\n\n入坑要想明白自己的需求，跟大公司网盘比起来\n\n1. 没有多地备份，或者多个备份需要加钱\n2. 界面不会有大公司的好用\n3. 需要自己折腾\n4. 折腾的钱可以买 10 年以上的会员\n\n但是如果把安全性和稳定性看的比较重要，那就比较值得折腾\n\n## 一些建议\n\n- 只使用机械硬盘。固态硬盘虽然快，但是单位容量价格高，且损坏后基本没有找回数据的可能。机械硬盘存储数据的可靠性高，损坏后数据还有抢救的机会，长时间断电也能保证数据安全。\n- 只使用 4T 容量的垂直式企业盘。垂直式比叠瓦式机械硬盘更可靠，企业盘除了声音大之外基本没啥缺点。只用 4T 容量的硬盘一是因为性价比高；二是因为容量太大的话单盘备份或重建的时间过长，容易发生其他意外；三是因为服务器盘位多，不需要精打细算。\n- 不启用硬盘停转功能。一是因为偶尔要用数据的时候不想等待，二是觉得频繁启停比较伤硬盘。\n- 除了 RAID 1 之外不组任何的磁盘阵列。许多人喜欢组 RAID 5 之类的阵列，但如果不追求万兆网络传输的话，完全没有组的必要。\n- 热数据盘满了就整理备份。\n\n# 参考链接\n\n[一个月测试 7 种音乐服务，我在建立数播系统的过程中遇到了哪些坑？ - 少数派](https://sspai.com/post/80051)  \n[用免费开源的方案，搭建可离线、跨平台的私有播客订阅管理 - 少数派](https://sspai.com/post/79917)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/NFT":{"title":"NFT","content":"\n# NFT\n\nNFT 本质是个软件协议。软件协议的价值，不在于其个体孤立的特性，而本质在于未来有多少节点采纳接入这个软件协议，它能形成的网络有多大  \n\n**NFT 的价值不是在于和它绑定的艺术作品本身，而是在于这个作品背后的社区认同，和社区网络未来发展的潜力。**  \n\n对于那些说 NFT 无法触摸，是空气的指责，回应其实也很简单：三十年前互联网刚出来时，域名不也看似是空气吗？\n\n## 为什么有价值\n\n### 解决了传统收藏的鉴别问题\n\n传统艺术收藏界，长期被膺品的问题所困扰。纽约大都会博物馆的馆长曾经被问到，”你觉得墙上挂的这些艺术品，有多少可能是假的？”。他回答，“我也不知道”。Netflix 2020年推出的纪录片，\"让你看：关于艺术膺品的真实故事” (Made you look: A true story about fake art) 里面讲到，纽约一个女骗子，从 1994年开始，花钱请一个来自中国的姓钱的街头画家，仿制名家作品，一幅仿作支付不到九千美元，再花言巧语编故事，转手卖给大的艺术品经销商。假画给收藏者造成的终极损失，累积达八千万美元。有165年传承的艺术品经销老店 Knodeler 也因此于 2011年关门倒闭。很多买家苦主相信 Knodeler 是骗局的合谋，控告 Knodeler 高管的各种官司，折腾到 2016年才算告一段落。这离 1994年第一幅假画进入市场，一晃就是二十二年了。\n\nNFT 能保证这个链条是完整的。\n\n### 解决了转账速度和效率的问题\n\n从加州时间三月二十五号早上七点半 PplPleasr 在推特上宣布的拍卖，到加州时间三月二十六号星期五晚上九点半左右完成转账和交割，只花了三十八个小时。\n\n对于传统金融从业者而言，国际电汇通常都要一到两个工作日，周末也不开放。更何况陌生人一起集资做事，如何保证资金安全，也是个大问题。\n\n### **原来无法传承的消费行为，通过无法篡改的公开记录和加密算法的产权确认能力，变成一个可以传承的具有资产属性的事物**。\n\n比如说对于某个你支持的公益事业，原来你的心理预算只是捐赠一百块钱，但如果可以通过加入购买 NFT 的 DAO 的形式参与，并且有能力随时退出，你可能愿意出十倍甚至百倍的价钱。对于接受捐赠者，一百块和一千块的区别，就是资金链断裂和大干一场的区别\n\n但是如果都可退出，那还算捐赠吗？  \n但是有一点就是如果捐赠，就是对背后算法的认可，也就是对[[Dao]]的认可，这又不会因为后来个人意志的更改。\n\n### 数据公开，详细，难造假\n\n区块链上的电商平台，无法隐藏/独占关键的交易数据和用户地址。这是和传统电商平台的一个本质区别。这种公开性和精细度是传统金融根本无法做到的。传统电商有各种极为复杂的造假刷单的花招，但在区块链上，造假要支付不菲的 gas 费用, 刷单的数据也更容易被分析而识破，\n\n### 精准互动\n\n原创者可以追踪自己的 NFT 作品的归属，通过智能合约设定，自动给新主人空投各种 token 福利，增进和社区的互动。\n\n商家则可以根据每个地址的交易数据和 NFT 的属性，给其画像，判断这个地址的购买力，购买兴趣，给其空投 token, 给予它某种商品或者服务的优惠。\n\n比现在的广告画像投递会更精准，避免资源错配的现象\n\n# 学习资料\n\n- [生财有术·精华帖索引工具2.0](https://search01.shengcaiyoushu.com/docx/NFDKd9t54ofMyVxSzmtcne66nyf)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Next.js":{"title":"Next.js","content":"\n# Next.js\n\n# 学习资料\n\n[Next.js小记 - 哔哩哔哩](https://www.bilibili.com/read/cv20992052)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Notion":{"title":"Notion","content":"\n# Notion\n\n这么多引用，居然没有写一个字= = 先占个位\n\n### 生活的乐趣\n\n这个数据库用来存放我读过的工具书、小说，看过的电影、纪录片，玩过的游戏，等等。\n\n通常会使用`Save to Notion` 存入自己想看或者已经看完书籍或者电影，打上标签，这样以后找下一本想读的话就比较方便了。\n\n同样，朋友推荐的书和电影，打算找时间看的，我也会把它添加到这里，然后新增一个排序：已读的在底部，未读的在顶部。\n\n- [小胖的阅读空间](https://www.notion.so/chelsechen/c43dea2de200460298485541aa0544b3)\n\n### **工具资源库**\n\n这个数据库用来存放各种各样的软件和工具，具体比较简单，就不多说了。\n\n### 产出文章\n\n相当于可以做一个项目管理，管理不同平台输出的文章，以及更改进度。现在用不到先 mark\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/OKR":{"title":"OKR","content":"\n# OKR\n\n[字节的 OKR](https://mp.weixin.qq.com/s/DKlAbQDM18UANZQjvUh_Cg)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/OKR%E6%BA%90%E4%BA%8E%E8%8B%B1%E7%89%B9%E5%B0%94%E5%92%8C%E8%B0%B7%E6%AD%8C%E7%9A%84%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E5%88%A9%E5%99%A8":{"title":"《 OKR：源于英特尔和谷歌的目标管理利器 》","content":"\n# 《 OKR：源于英特尔和谷歌的目标管理利器 》\n\n# 元数据\n\n\u003e [!abstract] OKR：源于英特尔和谷歌的目标管理利器\n\u003e - ![ OKR：源于英特尔和谷歌的目标管理利器|200](https://weread-1258476243.file.myqcloud.com/weread/cover/45/YueWen_910544/t7_YueWen_910544.jpg)\n\u003e - 书名： OKR：源于英特尔和谷歌的目标管理利器\n\u003e - 作者： 保罗 R.尼文 本·拉莫尔特\n\u003e - 简介： 为帮助您更好理解和有效实施OKR，在这本详尽的操作指南中，两位权威专家将带领您一探究竟，从20世纪80年代OKR起源于英特尔说起，到Flipkart、GoNoodle和TaxSlayer这类创新型企业如何借助OKR发挥竞争优势……通过鼓励员工设置很有挑战的目标并执行，OKR成功地帮助团队和员工重新思考并充分发挥其潜能。本书涵盖了成功实施OKR的所有步骤，以及确保OKR能持续开展的长效机制。另外，本书还探讨了近期常见的OKR软件解决方案。工具无疑可以帮助组织更好地推进OKR，但应仔细评估它们和您组织的适配度，对此，本书为您提供了20个自检问题以帮助您做好相关选型评估。\n\u003e - 出版时间 2017-07-01 00:00:00\n\u003e - ISBN： 9787111572879\n\u003e - 分类： 经济理财-管理\n\u003e - 出版社： 机械工业出版社\n\n# 高亮划线\n\n## 第1章 OKR简介\n\n- 📌 在MBO系统中，目标应当被设定得非常有挑战性，这样即使员工（或组织）竭尽全力，也只能有一半的成功机会。当每个人都努力地去超越自己的现有水平时，结果一定会不同凡响，哪怕这意味着有一半概率会失败。如果你想要你和你的下属达到巅峰绩效，这种目标设定机制就尤其重要。 ^910544-8-5167-5295\n    - ⏱ 2022-04-01 10:57:31\n\n## OKR是什么\n\n- 📌 德鲁克有一句名言：“最严重的错误，并非由错误的答案造成。真正危险的事，是问了错的问题。”[插图]当你检查OKR结果时，真正挑战你的应该是你如何才能超越那些数字本身。你应该像一个人类学家那样，深入思考它们对你而言意味着什么，从而让你能发掘出振奋人心的问题，帮助你找到未来的突破口。当OKR被严谨和规范地执行时，这一思考框架的作用会更加突出。 ^910544-9-1255-1579\n    - ⏱ 2022-04-01 11:05:09\n- 📌 （1）以季度（或者其他预先规定的周期）为单位刷新OKR；（2）仔细确认结果达成情况；（3）如有必要，持续修正现行战略和商业模式；（4）结果导向。 ^910544-9-1763-1934\n    - ⏱ 2022-04-01 11:05:29\n\n# 读书笔记\n\n# 本书评论\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Obsidain-%E7%9F%A5%E8%AF%86%E5%BA%93%E5%8F%91%E5%B8%83%E6%96%B9%E6%A1%88":{"title":"Obsidain 知识库发布方案","content":"\n# Obsidain 知识库发布方案\n\n不详细的写了，详细参考这位网友： [001_部署Obsidian静态知识库网站](https://ob.tianzhongs.ml/001_%e9%83%a8%e7%bd%b2Obsidian%e9%9d%99%e6%80%81%e7%9f%a5%e8%af%86%e5%ba%93%e7%bd%91%e7%ab%99)  \n果然偷懒是不行的，想要升级下库来着 这个网友怎么消失了  \n\n[obsidian 目前最完美的免费发布方案 - 渐进式教程](https://garden.oldwinter.top/obsidian-%E7%9B%AE%E5%89%8D%E6%9C%80%E5%AE%8C%E7%BE%8E%E7%9A%84%E5%85%8D%E8%B4%B9%E5%8F%91%E5%B8%83%E6%96%B9%E6%A1%88-%E6%B8%90%E8%BF%9B%E5%BC%8F%E6%95%99%E7%A8%8B)\n\n# 记录一下重要的信息\n\n## 父仓库 workflow\n\n```yaml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - hugo\n\n  workflow_dispatch:\n\njobs:\n  deploy:\n    runs-on: ubuntu-22.04\n    steps:\n      - uses: actions/checkout@v2\n        with: \n          token: ${{ secrets.TOKEN }}  #这里是添加的token，不用设置，需要在仓库中添加TOKEN，$代表的是调用刚才添加的环境变量，所以不需要设置\n          submodules: 'true'\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: config1 \n        run: rm -rf content/.obsidian content/cedict_ts.u8 content/Extras/Templates  \u0026\u0026 mv content/*.md content/Atlas \u0026\u0026 find content/ -name \"*.md\" | xargs -I file  mv -f file content \u0026\u0026  mv content/AboutTheGarden.md content/_index.md \n\n      - name: config2\n        run: \"ls content/ \u0026\u0026 grep -lr --null 'title' content/* | xargs -0 sed -i -E -r 's/title: \"\"(.*)/title: \\\"\\\\1\\\"/g'\"\"\"\n\n      - name: config3 \n        run: rm -rf content/*.md-E\n\n\n      - name: Build Link Index\n        uses: jackyzha0/hugo-obsidian@v2.18\n        with:\n          index: true\n          input: content\n          output: assets/indices\n          root: .\n\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.96.0'\n          extended: true\n\n      - name: Build\n        run: hugo --minify --debug\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n          publish_branch: master  # deploying branch\n          cname: www.baidu.com   #修改成你的域名\n\n```\n\n## 子仓库提交更新父仓库\n\n```yaml\nname: Send submodule updates to parent repo\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  update:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          repository: zhangsan/dg3 # 设置你用户名/发布仓库的仓库名,作用是将子模块更新到父仓库dg3\n          token: ${{ secrets.TOKEN }}\n          # 把子模块打开\n          submodules: 'true'\n\n      - name: Pull \u0026 update submodules recursively\n        run: |\n          git submodule update --init --recursive\n          git submodule update --recursive --remote          \n      - name: Commit\n        run: |\n          git config user.email \"提交的邮箱，一般是你github的邮箱\" #修改\n          git config user.name \"你的名称\" #修改\n          git add --all\n          git commit -m \"Update submodules\" || echo \"No changes to commit\"\n          git push          \n\n```\n\n[[ 本库自动同步到 github]]\n\n## 讨论区\n\n放弃了 gittalk 使用了[giscus](https://giscus.app/zh-CN)  \n按顺序填完将iframe 嵌入到相关的 html 即可\n\n# 踩的一些坑\n\n- 第一行如果是 `-` 会导致构建失败\n- 目前不支持 iframe\n- 标题不能有`'` 、`\"` 等标点符号\n- [gittalk的坑](https://blog.misec.top/archives/2018810gitalk-error#:~:text=Error%3A-Validation-Failed-%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E5%B0%B1%E6%AF%94%E8%BE%83%E5%A4%8D%E6%9D%82%E4%BA%86%EF%BC%8C%E9%83%A8%E5%88%86%E6%96%87%E7%AB%A0%E7%9A%84%E8%AF%84%E8%AE%BA%E5%8C%BA%E4%BC%9A%E6%8A%A5Error%3A-Validation-Failed%2C%E5%85%B7%E4%BD%93%E5%8E%9F%E5%9B%A0%E6%98%AF%E7%94%B1%E4%BA%8E,Github-%E9%99%90%E5%88%B6-labal-%E9%95%BF%E5%BA%A6%E4%B8%8D%E8%83%BD%E8%B6%85%E8%BF%87-50%E5%BC%95%E8%B5%B7%E7%9A%84%EF%BC%8C%E8%AF%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%9D%A5%E8%87%AAGitalk%E9%A1%B9%E7%9B%AE%E4%BB%93-Issues115%EF%BC%8C%E9%80%9A%E8%BF%87MD5%E5%8A%A0%E5%AF%86ID%E6%9D%A5%E7%BC%A9%E7%9F%ADlabal%E9%95%BF%E5%BA%A6%E3%80%82)\n- 会有obsidian中`[[]]`但是生成的页面中没有链接的样式，可能是框两边有空格\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Obsidian":{"title":"Obsidian 是什么","content":"\n# Obsidian 是什么\n\n# [[Obsidian常用的快捷键及作用]]\n\n# 优缺点\n\n## 优点\n\n- 本地存储, 不用担心信息泄露 ^c7c3e1\n- 纯 MD 写作，方便日后迁移\n- [[双向链接]]，做笔记的神器\n- 类似 Vscode 的插件功能，功能可以无限扩展\n- 可以进行分窗创作\n\n## 缺点\n\n- 无移动端/手机端 （这个对我来说不是刚需\n- 暂不支持 typora 式的所见即所得（不过 CSS 样式能解决部分问题，或者用 Ctrl + E 快速切换编辑和预览模式） （2022 年已经支持\n- 云同步、通过网页发布笔记需要付费（同步$4/月，也有免费的替代方案，需要自己折腾（比如用 git 或者 坚果云） （也通过 git 和 [[Obsidain 知识库发布方案]]解决了\n- 粒度没有[[Roam research]]和[[logseq]]细\n\n  \u003e 如果你想要免费的方案，可以考虑用 gitee page 加上我这个模板， [Jackiexiao/foam-mkdocs-template](https://github.com/jackiexiao/foam-mkdocs-template) 需要自己折腾一下\n\n# 插件\n\n[[Obsidian插件]]  \n[历经一年，我保留了这些 Obsidian 插件 - 经验分享 - Obsidian 中文论坛](https://forum-zh.obsidian.md/t/topic/390)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8A%E4%BD%9C%E7%94%A8":{"title":"Obsidian常用的快捷键及作用","content":"\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230707100145.png)\n\n- `cmd + J` 锁定\n- `cmd + ]` 折叠右边栏\n- `cmd + [` 折叠左边\n- `cmd + N `新建笔记\n- `cmd + H` 新建/打开今天的日记\n- `cmd + M` 插入模板\n- `cmd + G` 打开图谱\n- `cmd + shift + C` 改键 ，Note Rectore 本来的 content only\n- `option + R` 改键，取 random 首字母\n- `cmd + T` 左右分屏\n\n## **核心三件套**\n\n- cmd + p：呼出命令面板\n    - 换成了[[Better Command Palette]]插件，快捷键cmd + option + p，相比自带的，支持基于标签tag的搜索和其他丰富的自定义选项。\n- cmd + o：呼出文件快速切换面板\n    - 换成了[[Another Quicker Switcher]]插件，快捷键cmd + option + o，相比自带的，支持更多内容搜索和丰富自定义选项。\n- cmd + shift + f：呼出全库全文搜索面板\n    - 换成了[[Omnisearch]]插件，快捷键cmd + option + f。除了中文短语组成的整句不高亮，需要加英文双引号\"，例如搜索`\"整句不高亮`。其他方面比自带搜索好用。\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian%E6%8F%92%E4%BB%B6":{"title":"Obsidian 插件","content":"\n# Obsidian 插件\n\n## 强烈推荐\n\n- [[Obsidian Linter]]:格式化，自动生成 yaml 表头\n- [[Obsidian Text Generator]]\n- [[Obsidian  Commander]] ：通过在任何地方添加命令来定制您的工作空间，创建宏和增强您的移动工具栏。\n- [[Obsidian Smart Connections]]: 基于笔记的 AI 聊天插件\n- [[Obsidian WeRead Plugin]]\n- [[Better Command Palette]], 替换自带的 command+p\n- [[Another Quicker Switcher]]， 替换自带的 command+o\n- [[Omnisearch]]插件，快捷键cmd + option + f。除了中文短语组成的整句不高亮，需要加英文双引号\"，例如搜索`\"整句不高亮`。其他方面比自带搜索好用。\n- `Obsidian Git`: 用 Git 备份 Obsidian 笔记库的插件。\n- `Editor Syntax Highlight`: 在代码中显示语法高亮的插件。\n- [[Obsidian Dynamic Highlights]]:高亮作用，而且支持设置正则表达式匹配字符的高亮样式，甚至你可以在你希望的字符前边加上一个 icon 来标注这个字符的特殊性。\n- `Privacy Glasses`:在直播或者录像的时候可以保留隐私。\n- [[Obsidian Projects]]:Obsidian 中实现的可编辑数据库（基于文件夹）\n- [[Obsidian Tasks]]: #状态/todo 看着还不错，有空用一下\n\n## 外观美化类\n\n- [[Supercharged Links]]\n  - 作用：给特定标签、文件夹或属性的双链，加上颜色或图标。例如我给#MOC这个标签加上地图的emoji 🗺，有利于我快速定位。\n   - 评价：没有它，数字花园是单一的，有了它，数字花园是多彩的。\n- `style settings`：各种页面美化css相关的个性化定制，都靠它，是没有核心插件名分的真核心插件。\n- [[Obsidian Link Favicon]]:作用就是提供外部链接的 icon，例如 github 相关的链接的前边加上一个章鱼猫 icon。\n- [[Obsidian Admonition]]: 让预览模式变得好看\n- [[Minimal Settings]] :Minimal 主题的设置插件，仅面向 Minimal 主题\n- [[Obsidian Hider]]: 隐藏 UL 元素（如工具提示、状态栏等）的插件。\n\n## 编辑增强类\n\n- [[Obsidian Auto Link Title]]: 自动获取链接的标题\n- [[Paste URL into selection]]: 当你的剪切板中存在 URL，而且你选中了一段文字后在粘贴的话，你就可以自动将其转化为 `[](URL)` 这样的格式。\n- [[Obsidian Templater]]:模板？增强插件，可以做到一切可以用 JS 实现的功能的模板插件\n- [[Obsidian Quickadd]] :新一代的快速裁剪、添加或命令顺序执行插件\n- [[Obsidian Outliner]]:增强 Obsidian 的大纲体验，方便操作大纲。\n- copy block link : 快速添加块链接\n\n## 普通增强类\n\n- [[Obsidian DataView]]: Obsidian Star 最多的插件，可视化\n- [[Obsidian Pandoc]]:增强 Obsidian 的导出体验，可以利用 Pandoc 导出 docx、LaTeX 等文件。\n- [[Obsidian Calendar]]:日历插件。\n- [[Obsidian Settings Search]]:用于在设置面板上直接搜索设置。\n- [[Obsidian Tag Wrangler]] :重命名、合并、切换和搜索标签的插件\n- [[Obsidian Readwise Official]]:用于同步 Readwise 上标注的内容，不可或缺的插件之一。\n- [[Obsidian Hotkey Helper]] :用于快速在设置面板中修改快捷键。\n- `Reading Time`: 在状态栏中显示当前笔记的阅读时间的插件。\n\n## 特殊功能类\n\n- [[Obsidian Spaced Repetition]]:间隔复习插件，用于在 Obsidian 中实现间隔复习。\n- [[Obsidian Memos]]:类 Flomo 插件。\n- [[Obsidian Kanban]]:最简单而且少标记符的本地 markdown 看板\n- [[Obsidian Excalidraw Plugin]]:绘图插件\n\n## 未在使用\n\n- `Reveal Active File Button`: 在文件资源管理器中添加一个按钮，用于显示当前活动文件的插件\n- `Annotator`: 用于阅读和注释 PDF 和 EPUB 文件的插件。\n- `Note Refactor`: 将笔记内容提取为新笔记的插件。\n- `Quick Explorer`: 执行文件资源管理器操作（并查看当前文件路径）的插件。\n- `Mind Map`: 将 Markdown 笔记显示为思维导图的插件。\n- `Checklist`: 将所有文件中的清单列表整合到单个视图中的插件。\n- `Natural Language Dates`: 基于自然语言创建日期链接的插件。\n- `Ozan's Image in Editor Plugin`: 在编辑器中查看图片、Transclusions 和 iFrames 的插件。\n- `Day Planner`: 一个用于日程规划和管理番茄工作法定时器的插件。\n- `Copy button for code blocks`: 为代码块添加复制按钮的插件。\n- `CodeMirror Options`: 增强 Obsidian 的桌面编辑模式，包括所见即所得的实时预览、语法高亮等特性的插件。\n- `Media Extended BiliBili Plugin`: 提供高级 bilibili 视频支持的插件。\n- `Workbench`: 保留知识材料的工作台的插件。\n- `Code Block Enhancer`: 增强 Obsidian 的 Markdown 代码块，提供复制按钮、行号、语言名称提示等功能的插件。\n- `Gallery`: 以交互式卡片形式显示图片的插件。\n- `Jump to link`: 通过快捷键在当前文档中打开链接的插件。\n- `Embedded Code Title`: 在代码块中嵌入标题的插件。\n- `Auto Pair Chinese Symbol`: 自动匹配中文符号的插件。\n- [[Advanced Slides]]\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Admonition":{"title":"Obsidian Admonition","content":"\n# Obsidian Admonition\n\n# 参考链接\n\n- [Obsidian 插件之 Admonition - 知乎](https://zhuanlan.zhihu.com/p/391252867)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Obsidian-Commander":{"title":"Obsidian Commander","content":"\n# Obsidian Commander\n\n可以在侧边栏、顶部栏、编辑区等地方配置一个个按钮，也可以组合一串命令\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Obsidian-DataView":{"title":"DataView","content":"\n# DataView\n\n可以根据 table 生成一些表单，如果需要样式，需要根据主题变换\n\nDataview 主要由 annotation 和 querying 两大组件构成。下面说下这两类组件的用法。\n\n\n# 参考链接\n\n- [Obsidian 插件之 Dataview - 知乎](https://zhuanlan.zhihu.com/p/373623264)\n- [[Obs＃26] Dataview外挂: 制作索引笔记利器；动态查询笔记资料\\_哔哩哔哩\\_bilibili](https://www.bilibili.com/video/BV1dQ4y1r7WW/?vd_source=a930d80dde6abe687e6523994d230143)\n","lastmodified":"2023-09-18T14:54:47.454454044Z","tags":null},"/Obsidian-Dynamic-Highlights":{"title":"Obsidian Dynamic Highlights","content":"\n# Obsidian Dynamic Highlights\n\n为了加个图标，要几百行代码，好像也不太好呀\n\n# 参考链接\n\n- [Obsidian 插件之 Dynamic Highlights - 知乎](https://zhuanlan.zhihu.com/p/570980578)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Link-Favicon":{"title":"Obsidian Link Favicon","content":"","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Linter":{"title":"Obsidian Linter","content":"\n设置文档\n\n- [rules.md](https://github.com/platers/obsidian-linter/blob/master/docs/rules.md)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Outliner":{"title":"Obsidian Outliner","content":"","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Projects":{"title":"Obsidian Projects","content":"\n# Obsidian Projects\n\n适合做[[P.A.R.A]]中的 P 的分类，有 Table、Board、Calendar、Gallery 多种展现方式，不过现在笔记还没有分项目，以后成体系了可以深入用一下\n\n# 参考链接\n\n- [Obsidian 插件之 Obsidian Projects - 知乎](https://zhuanlan.zhihu.com/p/574949855)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Quickadd":{"title":"Obsidian Quickadd","content":"\n# Obsidian Quickadd\n\nQuickAdd 常用于快递创建文件并设置一系列参数。\n\n# 参考链接\n\n- [Obsidian 插件之 QuickAdd - 知乎](https://zhuanlan.zhihu.com/p/386885976)\n- [QuickAdd | qileq](https://qileq.com/tool/obsidian/plugins/quickadd/)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Smart-Connections":{"title":"Obsidian Smart Connections","content":"\n# Obsidian Smart Connections\n\n这个插件可以用 chatgpt 的方式搜索自己的笔记库  \n默认用 shift+enter 发送  \n但是还是比较耗钱的，几千个 note 大概需要 1$ （一次性的\n\n后面提问就是正常的消费 ，所以还好\n\n提问的方式:在问题中包含:my,I,me,mine,our,ours,us,we （目前还不支持中文关键词，这点有点不方便\n\n[GitHub -Smart-connections](https://github.com/brianpetro/obsidian-smart-connections)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Templater":{"title":"Obsidian Templater","content":"\n## 模板使用场景[​](https://qileq.com/tool/obsidian/plugins/template/#%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF \"模板使用场景的直接链接\")\n\n只要工作和生活中经常会做的事，都可以尝试是否能使用模板来提高效率。正如上文所说，笔者目前（或曾经）在如下场合使用了模板：\n\n- 写作：将整体文章结构、导语、标题层次和结束语列好，每次知道自己要写多少内容，然后从素材库中挑选想法再加入到文章结构中。\n- 阅读：将微信读书和网络上需要精读的文章保留下来，形成了书籍模板和精读模板Ï\n- 日程表：将每日活动分为几类，点击日历会根据日程模板生成每天的日程框架。\n- 旅游行程：每次出去旅游做的攻略基本类似，如行程安排、机酒信息、当地美食与景点等。配合旅游物品备忘录，能保证整个行程井井有条。再加上旅游中拍的照片，方便往后回顾这些美好时间。\n- 目标和项目管理：笔者制作了目标模板和项目管理，将目标从时间（长期、中期、短期）、属性（工作目标还是生活目标）、重要程度等几个维度进行了管理，并将目标和项目关联起来。相比于专门的目标管理和项目管理而言，Obsidian 缺少了项目图形化（如甘特图）的展示和协作功能，比较适用于少量人的项目管理，不太适合多人项目管理。\n- 记录问题：将工作中解决的问题根据类别记录下来，问题模板分为问题背景、分析、解决方案三个标题。\n\n使用模板的好处一是避免了大量繁琐无趣的工作，其次是避免遗漏事项，而且模板修改简单，很容易升级迭代。在借助于模板记录笔记一段时间后，你会得到自己的阅读库、旅游回顾、私房菜单、问题库等等，如果再配合[[Obsidian DataView]] 的话，还能将这些仓库根据自己的需求以表格、列表等方式汇总展现出来。\n\n## 使用\n\n我设置的 `cmd + M`\n\n也可以使用[[Obsidian Quickadd]] 来直接创建文件并插入模板\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-Text-Generator":{"title":"Obsidian Text Generator","content":"\n# Obsidian Text Generator\n\ntemplate功能很好用，其实就是直接引用别人整理好的一系列prompts，能够向gpt模型提出更好的问题，得到更好的回答。\n\n[Obsidian 笔记助手 Text Generator](https://pepcn.com/gtd/obsidian-bi-ji-zhu-shou-text-generator)\n\n## 如何使用\n\n- 生成文本，快捷键：Ctrl + j\n- 生成文本并使用元数据，快捷键：Ctrl + Alt + j  \n需要笔记包含 --- 元数据 --- 的定义部分，对话请求会把当前获取的对话上下文和元数据一起发送到 GPT 来获得更匹配的生成内容。\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Obsidian-WeRead-Plugin":{"title":"Obsidian WeRead Plugin","content":"\n# Obsidian WeRead Plugin\n\n可以将微信读书里的划线、评论都以特定的格式导入到 Obsidian 中，方便后面书籍间的互相引用\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/OmniSearch":{"title":"OmniSearch","content":"\n# OmniSearch\n\n## 重要技巧\n\n作者并没有适配中文的长连词场景，输入长词不高亮，比如**禁手规则**，原因为：被识别成了禁手和规则两个词语，则会默认用 or 的规则搜索这 2 个词语。如果需要只匹配，加上双引号，搜索**`“禁手规则”`**  \n即可高亮，第二个引号可以省略。\n\n[Various Complements]插件同理，在匹配中文时，只能搜索词语或短语，不能直接搜索整句。\n\n可以在[Dataview]中调用获得搜索数据，词条加\"\"，则代表完全匹配搜索，不加则会按照中文分词依据分词进行匹配搜索。\n\n```js\nconst results = await omnisearch.search('降维打击')\nconst arr = dv.array(results).sort(r =\u003e r.score, 'desc')\ndv.table(['File', 'Score'], arr.map(o =\u003e [dv.fileLink(o.path), Math.round(o.score)]))\n```\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/OpenAI":{"title":"OpenAI","content":"\n\u003e 如果 OpenAI 持续走这条路，那很多行业和价值链条将被撼动，获胜的，将会是那些专注在差异化的、真正把事情做好的公司，而不是品牌上做得很好、砸了很多钱的公司。\n\u003e\n\u003e 接下来，ChatGPT 很快会成为需求的源头，品牌会不得不考虑适应 ChatGPT 的推荐方式，就像网站要适应谷歌的 SEO 一样。也许会有反抗者，自己用独特的、无法预测的方法来改变自己的产品，继续保持领先。\n\n**不过几乎可以肯定地是：这对消费者来说，肯定是好事儿。商品的价格将会变低，差异化的程度将会提升，也更容易被发掘。**\n\nOpenAI 将拥有互联网上最好的商业模式。\n\n## 开通卡片\n\n- [[Depay]] 这个虚拟卡的号段已经被封了，还我钱来 呜呜呜~~\n- [WildCard](https://bewildcard.com/phone-verify?code=KANG)\n\n  \u003e ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230710153814.png)\n\n- ios内购和礼品卡 ，目前最稳健的方法\n\n## 查询组织账单\n\n```curl\nnpx @ai-assist/openai-apilyzer --authorization 'Bearer \u003caccess_token\u003e' --organization 'org-\u003corganization\u003e'\n```\n\n## 自己的模型\n\n如果想要弄一个自己的模型，估计的上云，可以看一下这篇攻略[AWS GPU竞价实例：实现个人AI梦想的突破口](https://mp.weixin.qq.com/s/47DW9OBNOS0_fUxDAicARQ)\n\n## 更好的 prompt\n\n一是，ChatGPT 更擅长识别精确的计算机语言（后者会给出明确的输入、运算、输出指令等），所以你的表达要像“计算机语言”一样精确；二是，ChatGPT 更擅长识别专业性的语言（比如“股票市场的价格”更专业的表述是“股票价格”），这其实考验你的知识结构；三是，ChatGPT 更擅长识别英文。\n\n### 提示词模板\n\n也就是说，一个好的提示词是由：**立角色 + 述问题 + 定目标 + 补要求**，这四部分构成的！！\n\n1：**【立角色】指的是**：引导AI进入具体场景，为 AI 赋予行家身份。 （选填，最好都填，质量会高点  \n2：**【述问题】指的是**：告诉AI你的困惑，你的问题，以及为AI补充问题所需要的背景信息。  \n3：**【定目标】指的是**：告诉AI你的需求，你希望它为你做到什么。  \n4：**【补要求】指的是**：告诉AI，它的回答需要注意什么，或者你想让它以什么形式来回复你。 （\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230428153948.png)\n\n### [[吴恩达 chatGPT 提示语教程]]\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/P.A.R.A":{"title":"P.A.R.A","content":"\nTiago Frante 对如何组织笔记提出了一个框架，叫 P.A.R.A. 也就是 Projects, Areas, Resources, Archives. 这个框架主张把笔记分这四种不同的类型存放。\n\n- Projects 指的是正在做的项目，比如正在学习的某一门课，正在开发的某个产品。\n- Areas 指的是你感兴趣的领域，比如理财、编程、职业规划、商业等等。\n- Resources 指的是在未来可能会有用途的东西，我的理解是那些你可能会用到的，将来可以立刻作为参考的东西。\n- Archives 指的是你已经完成的项目。\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/PRPL-%E6%A8%A1%E5%BC%8F":{"title":"PRPL 模式","content":"\nPRPL 是四个英文单词的首字母缩写，它描述了一种可以提高网页加载速度和交互性的模式\n\n- **推送 (Push)**（或**预加载**）最重要的资源。\n- 尽快**渲染 (Render)** 初始路线。\n- **预缓存 (Pre-cache)** 剩余资产。\n- **延迟加载 (Lazy load)** 其他路线和非关键资产。\n\n## [[预加载关键资源]]\n\n\n## 尽快渲染初始路线\n\n找出[[FP]]渲染的关键元素，将会阻塞其渲染的 js 和 css 都通过 async 延后加载\n\n另一种改进 First Paint 的方法是在**服务器端渲染**页面的初始 HTML。[[SSR]]\n\n## 预缓存技术\n\n通过充当代理，**服务工作进程**可直接从缓存中获取资产，而不用在重复访问时从服务器获取。这不仅可以使用户在离线时使用您的应用程序，而且还可以在重复访问时加快页面的加载速度。\n\n没懂怎么用的\n\n## 延迟加载\n\n- 对大包进行拆分，预加载关键资源、延迟加载不重要的代码块，具体操作比如React.lazy和 vue 的懒加载，css 的话可以使用 js 延迟加载\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Passkey":{"title":"Passkey","content":"\n手机 App 早就做到了\"无密码登录\"，按一下指纹，或者人脸识别，就可以登录，完全不需要密码。\n\n具体来说，Passkey 之所以不要密码，因为采用了密钥登录。**网站不再保存用户密码，而是保存用户的公钥**。登录时，用户必须用自己的私钥，解开公钥加密的随机数，从而确认身份。\n\n这也意味着，用户要自己保存私钥。这是很麻烦的事情，因此 Passkey 协议的重点，就在于密钥的生成和保管彻底自动化了。\n\n**Passkey 要求用户必须配备一个\"身份管理器\"**（通常由操作系统提供），这个\"身份管理器\"负责生成密钥，然后公钥交给网站保存，私钥由它自己保存。  \n\n等到用户登录网站，需要私钥证明自己身份时，网站就要向用户选定的\"身份管理器\"发出请求。这时，\"身份管理器\"就会调用操作系统的指纹识别或者人脸识别，要求用户完成验证。如果用户通过了，\"身份管理器\"就允许用户使用保存在里面的私钥\n## 参考资料\n\n- [Passkeys - Threat modeling and implementation considerations | SlashID Blog](https://www.slashid.dev/blog/passkeys-security-implementation/)\n- [Clearing up some misconceptions about Passkeys - Stavros' Stuff](https://www.stavros.io/posts/clearing-up-some-passkeys-misconceptions/)\n- [Passkeys: What the Heck and Why? | CSS-Tricks - CSS-Tricks](https://css-tricks.com/passkeys-what-the-heck-and-why/)","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Performance":{"title":"Performance","content":"\n首先打开无痕模式\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173902.png)\n\n一般来说，我们需要分析和使用到 Performance 面板上的这些结果。\n\n- **FPS 图表**：当在 FPS 上方看到红色条形时，表示帧速率下降得太低，以至可能损害用户体验。\n- **CPU 图表**：CPU 图表的颜色对应于性能板的底部的 Summary 选项卡。\n- **火焰图**：火焰图直观地表示出了内部的 CPU 分析，横轴是时间，纵轴是调用指针，调用栈最顶端的函数在最下方；启用 JS 分析器后，火焰图会显示调用的每个 JavaScript 函数，可用于分析具体函数。\n- **Buttom-up**：此视图可以看到某些函数对性能影响最大，并能够检查这些函数的调用路径。\n\n具体要怎么定位某些性能瓶颈，可以参考[官方文档系列文章](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference?fileGuid=xxQTRXtVcqtHK6j8) ，\n\n除了上面标注的要学会看,还要认识几个时间节点\n\n[[网站性能衡量标准]]\n\n### performance 对象\n\nwindow.performance.timing  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230822171449.png)\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725173908.png)\n\n```JavaScript\ntiming: {\n    // 同一个浏览器上一个页面卸载(unload)结束时的时间戳。如果没有上一个页面，这个值会和fetchStart相同。\n\tnavigationStart: 1543806782096,\n\n\t// 上一个页面unload事件抛出时的时间戳。如果没有上一个页面，这个值会返回0。\n\tunloadEventStart: 1543806782523,\n\n\t// 和 unloadEventStart 相对应，unload事件处理完成时的时间戳。如果没有上一个页面,这个值会返回0。\n\tunloadEventEnd: 1543806782523,\n\n\t// 第一个HTTP重定向开始时的时间戳。如果没有重定向，或者重定向中的一个不同源，这个值会返回0。\n\tredirectStart: 0,\n\n\t// 最后一个HTTP重定向完成时（也就是说是HTTP响应的最后一个比特直接被收到的时间）的时间戳。\n\t// 如果没有重定向，或者重定向中的一个不同源，这个值会返回0.\n\tredirectEnd: 0,\n\n\t// 浏览器准备好使用HTTP请求来获取(fetch)文档的时间戳。这个时间点会在检查任何应用缓存之前。\n\tfetchStart: 1543806782096,\n\n\t// DNS 域名查询开始的UNIX时间戳。\n    //如果使用了持续连接(persistent connection)，或者这个信息存储到了缓存或者本地资源上，这个值将和fetchStart一致。\n\tdomainLookupStart: 1543806782096,\n\n\t// DNS 域名查询完成的时间.\n\t//如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等\n\tdomainLookupEnd: 1543806782096,\n\n\t// HTTP（TCP） 域名查询结束的时间戳。\n    //如果使用了持续连接(persistent connection)，或者这个信息存储到了缓存或者本地资源上，这个值将和 fetchStart一致。\n\tconnectStart: 1543806782099,\n\n\t// HTTP（TCP） 返回浏览器与服务器之间的连接建立时的时间戳。\n    // 如果建立的是持久连接，则返回值等同于fetchStart属性的值。连接建立指的是所有握手和认证过程全部结束。\n\tconnectEnd: 1543806782227,\n\n\t// HTTPS 返回浏览器与服务器开始安全链接的握手时的时间戳。如果当前网页不要求安全连接，则返回0。\n\tsecureConnectionStart: 1543806782162,\n\n\t// 返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的时间戳。\n\trequestStart: 1543806782241,\n\n\t// 返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的时间戳。\n    //如果传输层在开始请求之后失败并且连接被重开，该属性将会被数制成新的请求的相对应的发起时间。\n\tresponseStart: 1543806782516,\n\n\t// 返回浏览器从服务器收到（或从本地缓存读取，或从本地资源读取）最后一个字节时\n    //（如果在此之前HTTP连接已经关闭，则返回关闭时）的时间戳。\n\tresponseEnd: 1543806782537,\n\n\t// 当前网页DOM结构开始解析时（即Document.readyState属性变为“loading”、相应的 readystatechange事件触发时）的时间戳。\n\tdomLoading: 1543806782573,\n\n\t// 当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为“interactive”、相应的readystatechange事件触发时）的时间戳。\n\tdomInteractive: 1543806783203,\n\n\t// 当解析器发送DOMContentLoaded 事件，即所有需要被执行的脚本已经被解析时的时间戳。\n\tdomContentLoadedEventStart: 1543806783203,\n\n\t// 当所有需要立即执行的脚本已经被执行（不论执行顺序）时的时间戳。\n\tdomContentLoadedEventEnd: 1543806783216,\n\n\t// 当前文档解析完成，即Document.readyState 变为 'complete'且相对应的readystatechange 被触发时的时间戳\n\tdomComplete: 1543806783796,\n\n\t// load事件被发送时的时间戳。如果这个事件还未被发送，它的值将会是0。\n\tloadEventStart: 1543806783796,\n\n\t// 当load事件结束，即加载事件完成时的时间戳。如果这个事件还未被发送，或者尚未完成，它的值将会是0.\n\tloadEventEnd: 1543806783802\n}\n```\n\n通过以上数据，我们可以得到几个有用的时间\n\n```JavaScript\nDNS 查询耗时 ：domainLookupEnd - domainLookupStart\nTCP 链接耗时 ：connectEnd - connectStart\nrequest 请求耗时 ：responseEnd - responseStart\n解析 dom 树耗时 ： domComplete - domInteractive\n白屏时间 ：responseStart - navigationStart\ndomready 时间 ：domContentLoadedEventEnd - navigationStart\nonload 时间 ：loadEventEnd – navigationStart\n```\n\n### 关键性能指标\n\n```JavaScript\n//首包时间\nfirstbyte: timing.responseStart - timing.domainLookupStart\n\n//First Paint Time, 首次渲染时间 / 白屏时间\nfpt: timing.responseEnd - timing.fetchStart\n\n//Time to Interact，首次可交互时间\nTTI: timing.domInteractive - timing.fetchStart\n\n//HTML 加载完成时间， 即 DOM Ready 时间\nready: timing.domContentLoadedEventEnd - timing.fetchStart\n\n//页面完全加载时间\nload:timing.loadEventEnd - timing.fetchStart\n```\n\n\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Picgo":{"title":"PicGo","content":"\n特别好用的自动化图床\n\n# PicGo\n\n## 配置\n\n我只配置了[[阿里云 OSS]]，  \n在 Obsidian 中 与[[Image auto upload Plugin]]配合，可以实现复制图片后，自动上传图片到图床，并生成一个链接\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Pnpm":{"title":"Pnpm","content":"\n# Pnpm\n\nPnpm - performant npm，在 2017 年正式发布，定义为快速的，节省磁盘空间的包管理工具，开创了一套新的依赖管理机制，成为了包管理的后起之秀。\n\n## 内容寻址 CAS\n\n与依赖提升和扁平化的 node_modules 不同，pnpm 引入了另一套依赖管理策略：内容寻址存储。\n\n该策略会将包安装在系统的全局 store 中，依赖的每个版本只会在系统中安装一次。\n\n在引用项目 node_modules 的依赖时，会通过硬链接与符号链接在全局 store 中找到这个文件。为了实现此过程，node_modules 下会多出  `.pnpm`  目录，而且是非扁平化结构。\n\n- **硬链接 Hard link**：硬链接可以理解为**源文件的副本**，项目里安装的其实是副本，它使得用户可以通过路径引用查找到全局 store 中的源文件，而且这个副本根本不占任何空间。同时，pnpm 会在全局 store 里存储硬链接，不同的项目可以从全局 store 寻找到同一个依赖，大大地节省了磁盘空间。\n- **符号链接 Symbolic link**：也叫软连接，可以理解为**快捷方式**，pnpm 可以通过它找到对应磁盘目录下的依赖地址。\n\n```pagejson\nnode_modules\n├── .pnpm\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │       ├── A =\u003e \u003cstore\u003e/A@1.0.0\n│   │       └── B =\u003e ../../B@1.0.0\n│   ├── B@1.0.0\n│   │   └── node_modules\n│   │       └── B =\u003e \u003cstore\u003e/B@1.0.0\n│   ├── B@2.0.0\n│   │   └── node_modules\n│   │       └── B =\u003e \u003cstore\u003e/B@2.0.0\n│   └── C@1.0.0\n│       └── node_modules\n│           ├── C =\u003e \u003cstore\u003e/C@1.0.0\n│           └── B =\u003e ../../B@2.0.0\n│\n├── A =\u003e .pnpm/A@1.0.0/node_modules/A\n└── C =\u003e .pnpm/C@1.0.0/node_modules/C\n```\n\n![pnpm官方图片](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220707161624.png)\n\n## 优劣势\n\n由于链接的优势，pnpm 的安装速度在大多数场景都比 npm 和 yarn 快 2 倍，节省的磁盘空间也更多。\n\n但也存在一些弊端：\n\n1. 由于 pnpm 创建的 node_modules 依赖软链接，因此在不支持软链接的环境中，无法使用 pnpm，比如 Electron 应用。\n2. 因为依赖源文件是安装在 store 中，调试依赖或 patch-package 给依赖打补丁也不太方便，可能会影响其他项目\n3. 软链会导致一些 IDE 出现**死循环的 indexing 问题**。（随着 IDE 的优化，目前已经好了很多）\n4. 软链在不同操作系统的实现不太一样，且在非 SSD 的硬盘上，还是会有一定的磁盘 IO 损耗的。\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Prettier":{"title":"Prettier","content":"\n## Prettier\n\nVS Code 的 [Prettier - Code formatter](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n\n### 常用配置\n\n```JavaScript\n{\n    // tab缩进大小,默认为2\n    \"tabWidth\": 4,\n    // 使用tab缩进，默认false\n    \"useTabs\": false,\n    // 使用分号, 默认true\n    \"semi\": false,\n    // 使用单引号, 默认false(在jsx中配置无效, 默认都是双引号)\n    \"singleQuote\": false,\n    // 行尾逗号,默认none,可选 none|es5|all\n    // es5 包括es5中的数组、对象\n    // all 包括函数对象等所有可选\n    \"TrailingCooma\": \"all\",\n    // 对象中的空格 默认true\n    // true: { foo: bar }\n    // false: {foo: bar}\n    \"bracketSpacing\": true,\n    // JSX标签闭合位置 默认false\n    // false: \u003cdiv\n    //          className=\"\"\n    //          style={{}}\n    //       \u003e\n    // true: \u003cdiv\n    //          className=\"\"\n    //          style={{}} \u003e\n    \"jsxBracketSameLine\": false,\n    // 箭头函数参数括号 默认avoid 可选 avoid| always\n    // avoid 能省略括号的时候就省略 例如x =\u003e x\n    // always 总是有括号\n    \"arrowParens\": \"avoid\"\n}\n```\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Promise":{"title":"Promise","content":"\n# Promise\n\n#### 为什么会有 promise\n\n首先让我们来了解下,回调函数有什么缺点:\n\n1. 多重嵌套,导致**回调地狱**\n2. **代码跳跃,并非人类习惯的思维模式 ，代码逻辑不连续**\n3. 信任问题,你不能把你的回调完全寄托与第三方库,因为你不知道第三方库到底会怎么执行回调（多次执行）\n4. 第三方库可能没有提供错误处理\n5. 不清楚回调是否都是异步调用的（可以同步调用 ajax,在收到响应前会阻塞整个线程,会陷入假死状态,非常不推荐）\n\n为了兼容一些 promise 库,Promise 采用了一种鸭子模型（**如果它看起来像只鸭子,叫起来 像只鸭子,那它一定就是只鸭子**）来判断这个函数是不是一个 promise 函数,也就是判断.then()方法是否注册了 \"`fullfillment`\" 和 / 或 \"`rejection`\" 事件.\n\n代码跳跃则是通过事件穿透解决的，**但是也没有那么黑魔法，只不过是 then 默认参数就是把值往后传或者抛**\n\n```JavaScript\nonResolved = typeof onResolved === 'function' ? onResolved : function(value) {return value}\nonRejected = typeof onRejected === 'function' ? onRejected : function(reason) {throw reason}\n```\n\n#### [[promise 方法]]\n\n### [[手写 promise]]\n\n### Promise 技巧\n\n#### 出错时\n\n出错时,是用 throw new Error()还是用 return Promise.reject(new Error())呢？\n\n性能方面,throw new Error()会使代码进入 catch 块里的逻辑\n\n而使用 Promise.reject(new Error()),则需要构造一个新的 Promise 对象（里面包含 2 个数组,4 个函数：resolve/reject,onResolved/onRejected）,也会花费一定的时间和内存\n\n综上,我觉得在 Promise 里发现显式的错误后,用 throw 抛出错误会比较好,而不是显式的构造一个被 reject 的 Promise 对象。\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Promise-%E9%A2%98%E7%9B%AE":{"title":"Promise 题目","content":"\n# [[Promise]] 题目\n\n## 题目 1\n\n```JavaScript\nasync function async1 () {\n  console.log('async1 start');\n  setTimeout(() =\u003e {\n    console.log('timer1 start');\n  }, 500);\n  Promise.resolve().then((res) =\u003e {\n    console.log('promise1');\n  })\n  await async2();\n  setTimeout(() =\u003e {\n    console.log('timer1 end');\n  }, 500);\n  console.log('async1 end');\n}\n\nasync function async2 () {\n  setTimeout(() =\u003e {\n    console.log('timer2');\n  }, 1000);\n  Promise.resolve().then((res) =\u003e {\n    console.log('promise2');\n  })\n  console.log('async2');\n}\n\nasync1();\n\nconsole.log('start');\n```\n\n解：\n\n```JavaScript\nasync1 start\nasync2\nstart\npromise1\npromise2\nasync1 end\ntimer1  start\ntimer1 end\ntimer2\n```\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/QUIC":{"title":"QUIC","content":"\n# QUIC\n\n# 学习资料\n\n[# 图解 QUIC 连接](https://cangsdarm.github.io/illustrate/quic)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/README":{"title":"Obsidian","content":"\n# Obsidian\n\n我的知识库\n\n## Star History\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/RSS":{"title":"RSS","content":"\nRSS 阅读是一种把信息源筛选交回自己手里的一种方式，尽量使自己阅读一些高质量的信息源，走出算法的信息茧房。\n\n## rss 信息源\n\n- [GitHub - feeddd/feeds: 免费的公众号 RSS，支持扩展任意 APP](https://feeddd.org/feeds)\n- 油猴插件 rss+\n- [[RSSHub Radar]]\n- [[值得关注的信息源]]\n\n## rss阅读器\n\n- 目前使用的是 [Rss·Cafe — 建造自由内容生态](https://rss.cafe/),网页订阅 RSS，可以记录自己阅读过那些，信息源也比较丰富\n- [[RSS Reader]]\n- [[inoreader]]\n- 还有其他用过的# Feedbro Reader ，这是一个浏览器插件，页面比较简陋，但是可以检测页面是否有 RSS 订阅源，平时的阅读也都没什么问题\n\n### 对比文章\n\n- [抖音受害者的反思，如何像刷抖音一样地学习 - 少数派](https://sspai.com/post/75228)\n- [信息管理工具、RSS 阅读器、GitHub stars 管理、推文管理、自动记录浏览过的文章。](https://github.com/lcomplete/huntly)\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/RSS-Reader":{"title":"RSS Reader","content":"","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/RSSHub-Radar":{"title":"RSSHub Radar","content":"\n[Welcome to RSSHub!](https://rsshub.xiaopang.fun/)\n\n可以使用一些通用参数来进行过滤  \n[通用参数 | RSSHub](https://docs.rsshub.app/parameter.html)\n\n## 常用订阅链接\n\n### B 站 UP主 路由: \n\n`https://rsshub.xiaopang.fun/bilibili/user/video/:uid`\n\n参数:\n\n- `uid`, 必选 - 用户 id, 可在 UP 主主页中找到\n- `disableEmbed`, 可选 - 默认为开启内嵌视频, 任意值为关闭\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/Raindrop":{"title":"Raindrop","content":"\n新一代的书签管理工具，同时也支持稍后读\n\n## 优点\n\n- 相比[[简悦]]，有更加智能的打标签和分类系统\n- 能按文件夹分享 [[RSS]]，不过都是收藏过来的有必要吗。如果写周刊还挺好的\n\n## 缺点\n\n- 需要外网访问，对科学的要求比较高。\n- 用来访问书签的话，交互挺麻烦的：找个书签还要打开界面\n- 另外，**每月3 刀，年付28 刀**\n","lastmodified":"2023-09-18T14:54:47.458454064Z","tags":null},"/React":{"title":"react问题","content":"\nReact 的哲学是：React 是用 JavaScript 构建快速响应的大型 Web 应用程序的首选方式。\n\n初次接触 React 的同学会发现，开发 React 的思维模式是完全不同的，概念也极为简单。如果用一个非常简洁的公式来表达，那就是：\n\nView = fn(props)\n\n这个公式表达了给定相同的输入状态，函数总是会生成一致的组件。只有做到输入与输出恒定，那么它才是可测的。\n\n## 声明式\n\n声明式编程的优势在于直观，可以做到一目了然，也便于组合\n\n## 组件式\n\n组件化可以降低系统间功能的耦合性，提高功能内部的聚合性。对前端工程化及代码复用有极大的好处。React 组件化最大的区别在于没有使用模板进行编写，而是采用了声明式的 JSX。\n\n## 虚拟 DOM\n\n**1. 用 JavaScript 对象模拟 DOM 树，得到一棵虚拟 DOM 树。**  \n**2. 当页面数据变更时，生成新的虚拟 DOM 树，比较新旧两棵虚拟 DOM 树的差异。**  \n**3. 把差异应用到真正的 DOM 树上**\n\n虽然虚拟 DOM 解决了页面被频繁更新和渲染带来的性能问题，但传统虚拟 DOM 依然有以下性能瓶颈：\n\n- 在单个组件内部依然需要遍历该组件的整个虚拟 DOM 树；\n- 在一些组件整个模版内只有少量动态节点的情况下，这些遍历都是性能的浪费；\n- 递归遍历和更新逻辑容易导致 UI 渲染被阻塞，用户体验下降。\n\n对此，React 框架也有进行相应的优化：**使用任务调度来控制状态更新的计算和渲染**\n\n## 缺点\n\n它并没有提供完整的一揽子解决方案，在开发大型前端应用时，需要向社区寻找并整合解决方案。虽然一定程度上促进了社区的繁荣，但也为开发者在技术选型和学习适用上造成了一定的成本。\n\n## 为什么用 [[JSX]]\n\nReact 为什么使用 JSX？\n\n- JSX 。 JSX 并不会引入太多新的概念，它仍然是 JavaScript，就连条件表达式和循环都仍然是 JavaScript 的方式。\n- 模板语法、因为模板会有很多新概念，比如：v-if, v-show….\n- 模板字符串。代码结构变得更复杂了，而且开发工具的代码提示也会变得很困难。\n- Json。代码提示困难\n\n[[类组件]] 与[[函数组件]]  \n[[类组件和函数组件的区别]]\n\n## 组件分类\n\n- 把只作展示、独立运行、不额外增加功能的组件，称为哑组件，或无状态组件，还有一种叫法是** [[展示组件]] **；\n- 把处理业务逻辑与数据状态的组件称为[[有状态组件]]，或灵巧组件，灵巧组件一定包含至少一个灵巧组件或者展示组件。\n\n## 组件通信\n\n分成两种，一层或者多层的情况\n\n- 一层\n  - 父与子的情况下，因为 React 的设计实际上就是传递 Props 即可。\n  - 子与父的情况下，有两种方式，分别是回调函数与实例函数\n- 多层级间的数据通信\n  - 使用 React 的 [[Context]] API，最常见的用途是做语言包国际化。\n  - 使用全局变量与事件。全局变量通过在 Windows 上挂载新对象的方式实现，这种方式一般用于临时存储值，这种值用于计算或者上报，缺点是渲染显示时容易引发错误。\n  - 使用状态管理框架，比如 [[Flux]]、[[Redux]] 及 [[Mobx]]。优点是由于引入了状态管理，使得项目的开发模式与代码结构得以约束，缺点是学习成本相对较高。\n\n[[React 更新策略]]  \n[[React 18]]  \n[[Redux ]]  \n[[React发展]]  \n[[React 更新策略|React 更新策略]]  \n[[Hooks |React Hooks]]  \n[[《 前端面试宝典之 React 篇 》]]  \n[[深入浅出搞定React|深入浅出搞定React]]\n\n# [[react问题]]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React%E5%8F%91%E5%B1%95":{"title":"React 发展","content":"\n# React 发展\n\n## react16 的重大更新\n\n1. 采用了新的内核架构 Fiber\n2. 引入了 `getDerivedStateFromProps` 、 `getSnapshotBeforeUpdate` 及 `componentDidCatch` 等三个生命周期函数\n3. 将 `componentWillUpdate`、`componentWillReceiveProps` 和 `componentWillUpdate` 标记为不安全的方法。\n4. 全新的 Context API\n\n为什么要删除这三个生命周期\n\n# [[React 18]]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React%E9%97%AE%E9%A2%98":{"title":"React 问题","content":"\n# React 问题\n\n[[React的声明周期，对比15 16的区别]]  \n[[diff算法以及实现]]  \n[[Vue 和 React 差异|React 是什么样的框架，和 Vue 的对比]]  \n[[React的介绍以及原理实现]]\n\n[[setState 是同步更新还是异步更新]]  \n[[如何解释React的渲染过程]]  \n[[如何避免重复渲染]]  \n[[为什么useEffect 不能添加条件]]  \n[[为什么 hooks 不能写在顶层条件语句中]]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96":{"title":"React 性能优化","content":"\n# React 性能优化\n\nShouldComponentUpdate、PureComponent 及 React. Memo 可以提高性能的原因。\n\n## React 18\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-%E6%9B%B4%E6%96%B0%E7%AD%96%E7%95%A5":{"title":"React 更新策略","content":"\n[[为什么出现了lane]]\n\n# React 更新策略\n\n先对整体流程梳理一下，然后再进行详细分解\n\n![image-20200817143402217](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/8NKxJbSpwQjY7u9.png)\n\n### 什么会触发更新\n\n主动更新：render、forceUpdate、SetState、、UseEffect  \n被动更新：props 和 context 变化\n\n### window.requestIdleCallback()\n\n首先，React 通过使用了 window 一个新的 API 使任务队列可以在空闲时间进行视图更新，所以我们先来了解下一这个 API。\n\n**`window.requestIdleCallback()`**方法将在浏览器的空闲时段内调用的函数排队。这使开发者能够在主事件循环上执行后台和低优先级工作，而不会影响延迟关键事件，如动画和输入响应。函数一般会按先进先调用的顺序执行，然而，如果回调函数指定了执行超时时间`timeout`，则有可能为了在超时前执行函数而打乱执行顺序。\n\n你可以在空闲回调函数中调用 **`requestIdleCallback()`**，以便在下一次通过事件循环之前调度另一个回调。\n\n```JavaScript\nvar handle = window.requestIdleCallback(callback[, options])\n```\n\nreact 主要把到期时间分为两种：**异步任务到期时间**与**交互动作的到期时间**。在这之前需要了解一下一些重要的函数，react 的到期时间与系统的时间 ms 不是 1：1 的关系，低优先级异步任务的两个时间间隔相差不到 250ms（相当于 25 个单位的`到期时间`）的任务会被设置为同一个到期时间，交互 异步任务间隔为 100ms（10 个单位到期时间），因此减少了一些不必要的组件渲染，并且保证交互可以及时的响应。\n\n这里涉及一个时间计算公式\n\n`src\\react\\packages\\react-reconciler\\src\\ReactFiberExpirationTime.old.js`\n\n```JavaScript\n//整型最大数值，是V8中针对32位系统所设置的最大值\nexport const MAX_SIGNED_31_BIT_INT = 1073741823;\n//1073741822\nexport const Sync = MAX_SIGNED_31_BIT_INT;\nexport const Batched = Sync - 1;\n\nconst UNIT_SIZE = 10;\n//1073741821\nconst MAGIC_NUMBER_OFFSET = Batched - 1;\n\nfunction ceiling(num: number, precision: number): number {\n  return (((num / precision) | 0) + 1) * precision;\n}\n\nfunction computeExpirationBucket(\n  currentTime,\n  expirationInMs,\n  bucketSizeMs\n): ExpirationTime {\n  return (\n    MAGIC_NUMBER_OFFSET -\n    ceiling(\n      MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE,\n      bucketSizeMs / UNIT_SIZE\n    )\n  );\n}\n```\n\n#### 低优先级\n\n```JavaScript\nexport const LOW_PRIORITY_EXPIRATION = 5000;\nexport const LOW_PRIORITY_BATCH_SIZE = 250;\n```\n\n#### 高优先级\n\n```JavaScript\nexport const HIGH_PRIORITY_EXPIRATION = __DEV__ ? 500 : 150;\nexport const HIGH_PRIORITY_BATCH_SIZE = 100;\n```\n\nreact 低优先级 update 的 expirationTime 间隔是**25ms**，(同理高优先级的间隔为**10ms**) react 让两个相近（25ms 内）的 update 得到相同的 expirationTime，目的就是让这两个 update 自动合并成一个 Update，从而达到批量更新的目的，就像 LOW_PRIORITY_BATCH_SIZE 的名字一样，自动合并批量更新。\n\n#### 优先级怎么来\n\n`\\react\\packages\\react-reconciler\\src\\ReactFiberWorkLoop.old.js`\n\n```JavaScript\n//为fiber对象计算expirationTime\nexport function computeExpirationForFiber(\n  currentTime: ExpirationTime,\n  fiber: Fiber,\n  suspenseConfig: null | SuspenseConfig,\n): ExpirationTime {\n  ...\n  // Compute an expiration time based on the Scheduler priority.\n    switch (priorityLevel) {\n      case ImmediatePriority:\n        expirationTime = Sync;\n        break;\n      case UserBlockingPriority:\n        // TODO: Rename this to computeUserBlockingExpiration\n        // 高优先级\n        expirationTime = computeInteractiveExpiration(currentTime);\n        break;\n      case NormalPriority:\n      case LowPriority: // TODO: Handle LowPriority\n        // 低优先级执行函数\n        expirationTime = computeAsyncExpiration(currentTime);\n        break;\n      case IdlePriority:\n        expirationTime = Never;\n        break;\n      default:\n        invariant(false, 'Expected a valid priority level');\n    }\n  ...\n}\n```\n\nfiber 的 expirationTime 又来自 priorityLevel，\n\npriorityLevel 则来自用户的 UI 操作，不同的事件，带来三种不同的 priorityLevel。\n\n- DiscreteEvent 离散事件. 例如 blur、focus、 click、 submit、 touchStart. 这些事件都是离散触发的。 =\u003e **NormalPriority**\n- UserBlockingEvent 用户阻塞事件. 例如 touchMove、mouseMove、scroll、drag、dragOver 等等。这些事件会'阻塞'用户的交互。=\u003e **UserBlockingPriority**\n- ContinuousEvent 连续事件。例如 load、error、loadStart、abort、animationEnd. 这个优先级最高，也就是说它们应该是立即同步执行的，这就是 Continuous 的意义，是持续地执行，不能被打断。 =\u003e **ImmediatePriority**\n\n而悬停，则只为某个 fiber 带来第四种 priorityLevel——**LowPriority。**\n\n用户代码出现问题，被 catch 住时，出现第五种 priorityLevel——**IdlePriority。**\n\n注：箭头后面是推测 还没有找到根据\n\n### workLoop\n\n不断检查主线程是否有空闲，并开始下个任务的构建执行，然后进行提交 更新 DOM\n\n```JavaScript\nfunction workLoop(deadline) {\n  // deadline.timeRemaining() \u003e 1 是暂时写死的，详细的空闲情况参照上面的 ExpirationTime 分析\n  // !shouldYield()\n  while (nextUnitOfWork \u0026\u0026 deadline.timeRemaining() \u003e 1) {\n    // 执行下一个任务\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n  }\n\n  if (!nextUnitOfWork \u0026\u0026 wipRoot) {\n    commitRoot();\n  }\n  requestIdleCallback(workLoop);\n}\n```\n\n进行递归 fiber 协调，更新 fiber 结构\n\n```JavaScript\nfunction performUnitOfWork(fiber) {\n  // 1.执行当前任务\n  const { type } = fiber;\n  if (typeof type === \"function\") {\n    // todo\n    type.isReactComponent\n      ? updateClassComponent(fiber)\n      : updateFunctionComponent(fiber);\n  } else {\n    // h5标签\n    updateHostComponent(fiber);\n  }\n\n  // 2. 返回下一个任务\n  // 返回下一个任务原则： 1). 有子元素返回子元素\n  if (fiber.child) {\n    return fiber.child;\n  }\n  // 2) 如果没有子元素，找兄弟元素\n  let nextFiber = fiber;\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling;\n    }\n    nextFiber = nextFiber.return;\n  }\n}\n```\n\n对不同形式的组件分别处理，以下是类组件协调代码，核心是 **reconcileChildren**\n\n```JavaScript\nfunction updateClassComponent(fiber) {\n  const { type, props } = fiber;\n  let cmp = new type(props);\n  let vvnode = cmp.render();\n  const children = [vvnode];\n  reconcileChildren(fiber, children);\n}\n```\n\n协调 Fiber，首先要明白 Fiber 是一个 React 自己创造的数据结构\n\n#### [[Fiber]]\n\n#### **reconcileChildren**\n\n// TODO:\n\n**reconcileChildren** 也叫协调，对比每个层级 fiber 内容，为 fiber 打上 effectTag 记号：\n\n- UPDATE\n- DELETION\n- PLACEMENT\n\n然后等待提交后，进行对应的 DOM 操作\n\n#### UPDATE\n\n### 生命周期\n\n### V17.0 的启发式算法\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725143735.png)\n\nFiber 在我眼里是一种协调 diff 比对的一个调度算法，他通过 requestIdleCallback 来获取主线程的空闲时间来进行 diif 比对整个 fiber Tree，因为他是链表结构，所以可以在线程无空闲时间，将节点暂停等待下次空闲时间继续进行，直到更新到 rootWip，再 commitRoot 进行更新 DOM 节点。另外 他在空闲时间计算上引入了 优先级策略，使得高优先级的任务可以插队进行，一些异步任务可以延迟或者被打断，实现高效的页面更新。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F":{"title":"React 生命周期","content":"\n## React 生命周期\n\n```javascript\n\n// React 15\n\ncomponentWillReceiveProps()\nshouldComponentUpdate()\ncomponentWillMount()\ncomponentWillUpdate()\ncomponentDidUpdate()\ncomponentDidMount()\nrender()\ncomponentWillUnmount()\n\n```\n\n![1.png](https://s0.lgstatic.com/i/image/M00/5E/31/Ciqc1F-GZbGAGNcBAAE775qohj8453.png)\n\n组件的更新分为两种：一种是由父组件更新触发的更新；另一种是组件自身调用自己的 setState 触发的更新。\n\n\u003e **componentReceiveProps 并不是由 props 的变化触发的，而是由父组件的更新触发的**，这个结论，请你谨记。\n\n### React 16.3 的生命周期\n\n![Drawing 0.png](https://s0.lgstatic.com/i/image/M00/5D/D9/CgqCHl-FVVeAaMJvAAKXOyLlUwM592.png)\n\nReact 15 生命周期和 React 16.3 生命周期在挂载阶段的主要差异在于，**废弃了 componentWillMount，新增了 getDerivedStateFromProps**。\n\n**消失的 componentWillUpdate 与新增的 getSnapshotBeforeUpdate**\n\n区别在于 **getSnapshotBeforeUpdate 的返回值会作为第三个参数给到 componentDidUpdate**。**它的执行时机是在 render 方法之后，真实 DOM 更新之前**。在这个阶段里，我们可以**同时获取到更新前的真实 DOM 和更新前后的 state\u0026props 信息**。\n\n\u003e 这个生命周期的设计初衷，是为了“与 componentDidUpdate 一起，涵盖过时的 componentWillUpdate 的所有用例”（引用自 React 官网）。\n\n#### 为什么要去除掉 componentWillUpdate\n\n因为react 15是同步进行渲染，同步渲染的递归栈是非常深的，而且不能打断，这样就很容易一直占据着主线程，直到递归结束释放主线程**。在这个过程中，浏览器没有办法处理任何渲染之外的事情，会进入一种无法处理用户交互**的状态。因此若渲染时间稍微长一点，页面就会面临卡顿甚至卡死的风险。\n\n在 Fiber 机制下，**render 阶段是允许暂停、终止和重启的**。当一个任务执行到一半被打断后，下一次渲染线程抢回主动权时，这个任务被重启的形式是“重复执行一遍整个任务”而非“接着上次执行到的那行代码往下走”。**这就导致 render 阶段的生命周期都是有可能被重复执行的**。\n\n我们再来看看 React 16 打算废弃的是哪些生命周期：\n\n- componentWillMount；\n- componentWillUpdate；\n- componentWillReceiveProps。\n\n这些生命周期的共性，**就是它们都处于 render 阶段，都可能重复被执行**，而且由于这些 API 常年被滥用，它们在重复执行的过程中都存在着不可小觑的风险。\n\n[React 团队给出的这篇文章](https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.htmlÏ) 就帮助大家规避“误操作”来说是绰绰有余的。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-18":{"title":"React 18","content":"\n# React 18\n\n## Suspense\n\n可以“等待”目标 UI 加载，并且可以直接指定一个加载的界面（像是个 spinner），让它在用户等待的时候显示。\n\n```js\n\u003cSuspense fallback={\u003cSpinner /\u003e}\u003e\n\t\u003cComments /\u003e\n\u003c/Suspense\u003e\n```\n\n虽然 Suspense 在 React 16 中引入，主要用于代码拆分，并且与 React.lazy 已经存在了一段时间，但 React 18 引入了新的能力，使得 Suspense 能够处理数据获取。\n\n使用 Suspense，我们可以延迟组件的渲染直到满足特定条件，例如从远程源加载数据。同时，我们可以渲染一个占位组件来提示该组件仍在加载中。\n\nSuspense 真正的威力来自于它与 React 并发特性的深度集成。当一个组件被暂停（例如因为它仍在等待数据加载），React 不会空闲地等待组件接收数据。相反，它暂停了被挂起组件的渲染，并将重点转向其他任务。\n\n## 并发渲染\n\nReact 的视觉更新分为两个阶段：渲染阶段和提交阶段。React 的渲染阶段是一个纯计算阶段，在这个阶段中，React 元素与现有的 DOM 进行对比。这个阶段涉及创建一个新的 React 元素树，也被称为 \"虚拟 DOM\"，它实际上是实际 DOM 的轻量级内存表示。\n\n在渲染阶段，React 计算当前 DOM 与新的 React 组件树之间的差异，并准备必要的更新。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729160854.png)\n\n在渲染阶段之后是提交阶段。在这个阶段，React 将在渲染阶段计算出的更新应用到实际的 DOM 上。这包括创建、更新和删除 DOM 节点，最终渲染出新的 React 组件树。\n\n在传统渲染中，直到完成整个树的渲染任务，并将结果提交到 DOM 中，实现屏幕上组件的视觉更新。整个过程是不可中断的。\n\n也就是说，用户在 React 完成渲染并提交结果到 DOM 之前，尝试与应用程序进行交互时，会遇到无响应的用户界面。\n\nReact 18 引入了一种全新的并发渲染，它在后台运行。这个渲染为我们提供了一些方式来标记某些渲染为非紧急任务。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729161049.png)\n\n\u003e 在渲染低优先级组件（粉色）时，React 会让出主线程，以便检查是否有重要的任务。\n\n在这种情况下，React 将每 5ms 让出主线程，以检查是否有更重要的任务需要处理，例如用户输入，甚至是渲染另一个在当前对用户体验更重要的 React 组件。通过不断地让出主线程，React 可以使这样的渲染变得非阻塞，并优先处理更重要的任务。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729161119.png)  \n\n与每次渲染的单个不可中断任务不同，并发渲染器在低优先级组件的（重新）渲染过程中以 5ms 的间隔将控制权交还给主线程。\n\n此外，并发渲染器能够在后台 “并发” 地渲染多个版本的组件树，而不会立即提交结果。\n\n相较于同步渲染是一个全有或全无的计算过程， 并发渲染允许 React 暂停和恢复一个或多个组件树的渲染，以实现最优用户体验。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729161151.png)\n\n## Transitions\n\n通过将状态更新包裹在 startTransition 中，我们可以告诉 React 可以推迟或中断渲染，以优先处理更重要的任务，以保持当前用户界面的交互体验。\n\n```js\nimport { useTransition } from \"react\";\n\nfunction Button() {\nconst [isPending, startTransition] = useTransition();\nreturn (\n\u003cbutton\n  onClick={() =\u003e {\n    urgentUpdate();\n    startTransition(nonUrgentUpdate);\n}}\n\u003e\n...\n\u003c/button\u003e\n);\n}\n```\n\n我们可以将状态更新包裹在 startTransition 中。这告诉 React 该状态更新可能会导致对用户有干扰的视觉变化，因此 React 应该尽力保持当前 UI 的交互体验，在后台准备新状态而不立即提交更新。  \n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729161957.png)\n\n## React Server Components\n\n## Data Fetching\n\nReact 18 现在具有一个缓存函数，它可以记住包装函数调用的结果。如果在同一次渲染过程中使用相同的参数再次调用相同的函数，它将使用记忆化的值，无需再次执行该函数。\n\n```js\nimport { cache } from 'react' \n\nexport const getUser = cache(async (id) =\u003e {   \n  const user = await db.user.findUnique({ id })  \n  return user;\n}) \n\ngetUser(1) \ngetUser(1) // Called within same render pass: returns memoized result.\n```\n\n# 参考资料\n\n- [React 18 性能优化](https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==\u0026mid=2651264174\u0026idx=1\u0026sn=e7d6a7c0e03f6d00cb21d91e6447134f\u0026chksm=bd48cd2a8a3f443cb89c92ae843f5407bf659dc55e1b781cd8f555f839791246c20f774e5ab2#rd)\n\n# [[React 18 最佳实践]]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-18-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5":{"title":"React 18 最佳实践","content":"\nReact 18 最佳实践\n\n## 在组件外部声明CSS\n\n## 不要在其他组件中声明组件\n\n## 让子组件决定是否应该渲染\n\n## 使用 useCallback 和 useMemo\n\n- 使用 useCallback 防止函数重新创建\n- 使用 useCallback 防止依赖项更改\n- 使用 useCallback 防止 useEffect 触发\n- 不要将外部函数包装在 useCallback 中\n- 不要将 useMemo 与空依赖数组一起使用\n\n## useEffect 相关\n\n- 当不需要依赖项时，向 useEffect 添加空依赖项\n- 始终将所有依赖项添加到 useEffect 和其他 React Hooks\n\n## hooks\n\n- 不要在 If 语句中使用 Hook\n- return 后不使用 Hook\n\n## 当组件不应重新渲染时，使用 useRef 而不是 useState\n\n可以通过用 useRef 替换 useState 来优化组件渲染。来看下面的例子：\n\n```js\nimport { useEffect } from 'react'  \n  \nconst Component = () =\u003e {  \nconst [triggered, setTriggered] = useState(false)  \n  \nuseEffect(() =\u003e {  \nif (!triggered) {  \nsetTriggered(true)  \n// …  \n}  \n}, [triggered])  \n}\n```\n\n当运行上面的代码时，组件将在调用 setTriggered 时重新渲染。在这种情况下，触发状态变量可能是确保 effect 仅运行一次的一种方法。\n\n由于在这种情况下触发变量的唯一用途是跟踪函数是否已被触发，因此不需要组件渲染任何新状态。因此，可以将 `useState` 替换为 `useRef`，这样更新时就不会触发组件重新渲染。\n\n```js\nimport { useRef } from 'react'  \n  \nconst Component = () =\u003e {  \nconst triggeredRef = useRef(false)  \n  \nuseEffect(() =\u003e {  \nif (!triggeredRef.current) {  \ntriggeredRef.current = true  \n  \n// …  \n}  \n  \n}, [])  \n}\n```\n\n当使用 `useRef` 时，React 将在组件卸载并再次安装时重置其值。在这种情况下，就可以要使用 `useRef`。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-Native":{"title":"React Native","content":"\n# 推荐阅读\n\n- [Shopee SZ去中心化的 React Native 架构探索 - 掘金](https://juejin.cn/post/7221910537431793724)\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-Redux":{"title":"React Redux","content":"\n# React Redux\n\n[Redux](https://github.com/reactjs/redux) 官方提供的 React 绑定库。具有高效且灵活的特性。\n\n### 如何使用\n\n```JavaScript\n@connect(\n  // mapStateToProps\n  ({count}) =\u003e ({count}),\n  // mapDispatchToProps object | function\n  {\n    add: () =\u003e ({type: \"ADD\"})\n  }\n  // dispatch =\u003e {\n  //   let creators = {\n  //     add: () =\u003e ({type: \"ADD\"}),\n  //     minus: () =\u003e ({type: \"MINUS\"})\n  //   };\n  //   creators = bindActionCreators(creators, dispatch);\n\n  //   return {\n  //     dispatch,\n  //     ...creators\n  //   };\n  // }\n)\nclass ReactReduxPage extends Component {\n  render() {\n    const {count, dispatch, add} = this.props;\n    console.log(\"pr\", this.props);\n    return (\n      \u003cdiv\u003e\n        \u003ch3\u003eReactReduxPage\u003c/h3\u003e\n        \u003cp\u003e{count}\u003c/p\u003e\n        \u003cbutton onClick={() =\u003e dispatch({type: \"ADD\"})}\u003edispatch add\u003c/button\u003e\n        \u003cbutton onClick={add}\u003eadd\u003c/button\u003e\n      \u003c/div\u003e\n    );\n  }\n}\n```\n\n@connect 接受两个参数 `mapStateToProps`和 `mapDispatchToProps` 分别是 `state`和 `dispatch`的映射\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/React-Route":{"title":"React Route","content":"\n# React Route\n\nReact Router 路由的基础实现原理分为两种，如果是切换 Hash 的方式，那么依靠浏览器 Hash 变化即可；如果是切换网址中的 Path，就要用到 HTML5 History API 中的 pushState、replaceState 等。在使用这个方式时，还需要在服务端完成 historyApiFallback 配置。\n\n在 React Router 内部主要依靠 history 库完成，这是由 React Router 自己封装的库，为了实现跨平台运行的特性，内部提供两套基础 history，一套是直接使用浏览器的 History API，用于支持 react-router-dom；另一套是基于内存实现的版本，这是自己做的一个数组，用于支持 react-router-native。\n\nReact Router 的工作方式可以分为设计模式与关键模块两个部分。从设计模式的角度出发，在架构上通过 Monorepo 进行库的管理。Monorepo 具有团队间透明、迭代便利的优点。其次在整体的数据通信上使用了 Context API 完成上下文传递。\n\n在关键模块上，主要分为三类组件：第一类是  Context 容器，比如 Router 与 MemoryRouter；第二类是消费者组件，用以匹配路由，主要有 Route、Redirect、Switch 等；第三类是与平台关联的功能组件，比如 Link、NavLink、DeepLinking 等。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Readwise-Reader":{"title":"却带你","content":"\nReadwise Reader 还包含了 RSS 订阅，可以直接把它当作 RSS 阅读器，然后直接在上面做笔记。  \n如果保存了一个 YouTube 视频，它会把字幕显示出来，可以直接在字幕上划线做笔记。这些笔记会自动同步到 Logseq 里面。\n\n装了这个插件以后 可以在页面上记录浏览的文章和对其进行标注\n\n## 缺点\n\n价格还是有点贵的 7.99$/月， 简悦就相对便宜多了\n\n另外目前看对中文的支持不够好\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Redux":{"title":"Redux","content":"\n# Redux\n\nRedux 是 JavaScript 状态容器，提供可预测化的状态管理。\n\n## Redux 三大原则\n\n### 单一数据源\n\n整个应用的 state 被储存在一棵 **object tree** 中，并且这个 object tree 只存在于唯一一个 **store** 中。\n\n这让同构应用开发变得非常容易\n\n### State 是只读的\n\n唯一改变 state 的方法就是触发 **action**，**action** 是一个用于描述已发生事件的普通对象。\n\n### 使用纯函数来执行修改\n\n为了描述 action 如何改变 state tree ，你需要编写 **reducers**。\n\n这三大原则使 Redux 的调试工具实现了**时间回溯**功能，通过录制回放 Action，完整重现了整个应用路径，这在当时引发了不小的轰动。\n\n## 副作用\n\n真正可以解决副作用的方案主要分为两类：\n\n- 在 Dispatch 的时候有一个**middleware 中间件层**，拦截分发的**Action**并添加额外的复杂行为，还可以添加副作用；\n- 允许 Reducer 层直接处理副作用。\n\n## [[Redux 基础 API]]\n\n## [[Redux API分解实现]]\n\n接下来我们再通过实现几个中间件，加强下对 redux 中间件的理解。\n\n## Middleware\n\n首先我们从上面 applyMiddleware 实现中可以获得一些参数\n\n```JavaScript\nfunction xxx( store ) {\n  return (next) =\u003e (action) =\u003e {\n    console.log(next);\n    /*     dispatch(actions) {\n      currentState = reducer(currentState, actions);\n      currentListeners.forEach(listener =\u003e listener());\n    } */\n    console.log(action);\n    //  {type: \"MINUS\", payload: 100}\n\n    return  next(action);\n  };\n}\n```\n\n那么就可以开始写功能了\n\n#### thunk\n\nthunk 支持传入一个函数，只是把`dispatch` , `getState` 向下传递\n\n```JavaScript\nfunction thunk({ dispatch, getState }) {\n  return (next) =\u003e (action) =\u003e {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState);\n    }\n    return next(action);\n  };\n}\n```\n\n#### Promise\n\n支持 `dispatch`传入一个 Promise\n\n```JavaScript\nfunction promise({ dispatch }) {\n  return (next) =\u003e (action) =\u003e {\n    return isPromise(action) ? action.then(dispatch) : next(action);\n  };\n}\n```\n\n#### logger\n\n每次值改变的时候进行一次控制台输出\n\n```JavaScript\nfunction logger({ getState }) {\n  return (next) =\u003e (action) =\u003e {\n    console.log(next);\n    console.log(\"*******************************\");\n\n    console.log(action.type + \"执行了！\");\n\n    let prevState = getState();\n    console.log(\"prev state\", prevState);\n\n    const returnValue = next(action);\n    let nextState = getState();\n    console.log(\"next state\", nextState);\n\n    console.log(\"*******************************\");\n    return returnValue;\n  };\n}\n```\n\n## [[React Redux]]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Redux-%E5%9F%BA%E7%A1%80-API":{"title":"Redux 基础 API","content":"\n# Redux 基础 API\n\n### Action\n\n**Action** 是把数据从应用传到 store 的有效载荷。它是 store 数据的**唯一**来源。\n\n```JavaScript\nlet nextTodoId = 0\nexport const addTodo = text =\u003e ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n```\n\n### Reducer\n\n**Reducers** 指定了应用状态的变化如何响应 actions 并发送到 store 的，记住 actions 只是描述了*有事情发生了*这一事实，并没有描述应用如何更新 state。\n\n**reducer** 就是一个**纯函数**，接收旧的 state 和 action，返回新的 state。\n\n#### 纯函数\n\n1. 如果**函数**的调用参数相同，则永远返回相同的结果。它不依赖于程序执行期间 **函数** 外部任何状态或数据的变化，必须只依赖于其输入参数。\n2. 该 **函数** 不会产生任何可观察的副作用，例如网络请求，输入和输出设备或数据突变（mutation）\n\n所以 **永远不要**在 reducer 里做这些操作：\n\n1. 修改传入参数；\n2. 执行有副作用的操作，如 API 请求和路由跳转；\n3. 调用非纯函数，如 Date.now() 或 Math.random() 。\n\n#### 如何使用：\n\n```JavaScript\nconst todos = (state = [], action) =\u003e {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    default:\n      return state\n  }\n}\n\nexport default todos\n```\n\n### store\n\n**Store** 就是把它们联系到一起的对象。Store 有以下职责：\n\n- 维持应用的 state；\n- 提供 `getState()`方法获取 state；\n- 提供 `dispatch(action)`方法更新 state；\n- 通过 `subscribe(listener)`注册监听器;\n- 通过 `subscribe(listener)`返回的函数注销监听器。\n\n**Redux 应用只有一个单一的 store**。当需要拆分数据处理逻辑时，你应该使用 [reducer 组合](http://cn.redux.js.org/docs/basics/Reducers.html#splitting-reducers)而不是创建多个 store。\n\n举个例子：\n\n```JavaScript\nexport default class ReduxPage extends Component {\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() =\u003e {\n      // store state 改变\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  add = () =\u003e {\n    store.dispatch({ type: \"ADD\" });\n  };\n\n  asyAdd = () =\u003e {\n    store.dispatch((dispatch, getState) =\u003e {\n      setTimeout(() =\u003e {\n        dispatch({ type: \"ADD\" });\n        console.log(\"getState\", getState());\n      }, 1000);\n    });\n  };\n\n  promiseMinus = () =\u003e {\n    store.dispatch(\n      Promise.resolve({\n        type: \"MINUS\",\n        payload: 100,\n      })\n    );\n  };\n\n  render() {\n    return (\n      \u003cdiv\u003e\n        \u003ch3\u003eReduxPage\u003c/h3\u003e\n        \u003cp\u003e{store.getState()}\u003c/p\u003e\n        {/* \u003cp\u003e{store.getState().home}\u003c/p\u003e */}\n        \u003cbutton onClick={this.add}\u003eadd\u003c/button\u003e\n        \u003cbutton onClick={this.asyAdd}\u003easyAdd\u003c/button\u003e\n        \u003cbutton onClick={this.promiseMinus}\u003epromise minus\u003c/button\u003e\n      \u003c/div\u003e\n    );\n  }\n}\n```\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Redux-API%E5%88%86%E8%A7%A3%E5%AE%9E%E7%8E%B0":{"title":"Redux API 分解实现","content":"\n# Redux API 分解实现\n\n### createStore\n\n```JavaScript\nconst store = createStore(\n  countReducer,\n  applyMiddleware(thunk, logger, promise)\n);\n```\n\n从使用实例可以搭出函数框架\n\n```JavaScript\nexport default function createStore(reducer, enhancer) {\n  let currentState; // 选中的状态值，记录下方便获取\n  let currentListeners = []; // 选中的监听器,方便订阅和取消订阅\n  function getState() {}\n  function dispatch() {}\n  function subscribe() {}\n  return {\n    getState,\n    dispatch,\n    subscribe,\n  };\n}\n```\n\n然后依次实现\n\ngetState 比较简单 直接返回选中值即可\n\n```JavaScript\n  function getState() {\n    return currentState;\n  }\n```\n\ndispatch 函数只是在 reducer 中找到对应的函数执行以后，进行对视图的通知更新\n\n```JavaScript\n  // add = () =\u003e {\n  //     store.dispatch({ type: \"ADD\" });\n  //   };\n  function dispatch(actions) {\n    //将reducer执行一遍，获取变化后的值\n    currentState = reducer(currentState, actions);\n    // 发布订阅模式 都是通过一个数组进行遍历通知视图进行更新\n    currentListeners.forEach((listener) =\u003e listener());\n  }\n```\n\n订阅函数 subscribe 则是标准的发布订阅函数，记得返回一个取消订阅的函数\n\n```JavaScript\n  //订阅函数\n  function subscribe(fn) {\n    currentListeners.push(fn);\n    // 返回一个取消订阅函数\n    return () =\u003e (currentListeners = []);\n  }\n```\n\n最后执行一次 dispatch 进行默认值的设定\n\n```JavaScript\n  dispatch({ type: \"随机生成一段Type进行初始值设置\" });\n```\n\n### applyMiddleware\n\n顾名思义中间件，把 createStore 通过一轮 Middleware 增强一遍\n\n```JavaScript\n  if (enhancer) {\n    enhancer(createStore)(reducer);\n  }\n```\n\n这样我们就可以搭出如下框架\n\n```JavaScript\nexport default function applyMiddleware(...middlewares) {\n  return (createStore) =\u003e (reducer) =\u003e {\n    let store = createStore(reducer);\n    // 这是原版的dispatch，这个dispatch只能接受plain object，不能处理异步、promise\n    let dispatch = store.dispatch;\n\n    return {\n      ...store,\n      // 加强版的dispatch\n      dispatch,\n    };\n  };\n}\n```\n\n这里需要注意 ，我们传入了多个增强函数，需要一次执行增强同一个参数,like this\n\n将参数向下传递，进行加强后，继续向下传递\n\n```JavaScript\nfunction f1(arg) {\n  console.log(\"f1\", arg);\n  return arg;\n}\nfunction f2(arg) {\n  console.log(\"f2\", arg);\n  return arg;\n}\nfunction f3(arg) {\n  console.log(\"f3\", arg);\n  return arg;\n}\n\nconst res = f1(f2(f3(\"omg\")));\nconsole.log(\"res\", res); //sy-log\n// f3 omg\n// f2 omg\n// f1 omg\n// res omg\n```\n\n但是这么写不免繁琐，所以就有了\n\n### compose\n\n![[高阶函数#compose#redux 版本 同步函数]]  \n\n也叫函数合成，执行顺序是越后面越内层，也就是越早执行\n\n这样我们就可以开始使用中间件进行函数增强了\n\n```JavaScript\nexport default function applyMiddleware(...middlewares) {\n  return (createStore) =\u003e (reducer) =\u003e {\n    .....\n    const API = {\n      state: store.getState(),\n      dispatch: (actions, ...args) =\u003e store.dispatch(actions, ...args),\n    };\n    //将middlewares转化成 参数为 API 的函数数组\n    const middlewaresChain = middlewares.map((middleware) =\u003e middleware(API));\n    // 对 dispatch 进行增强\n    dispatch = compose(...middlewaresChain)(store.dispatch);\n\n    .....\n  };\n}\n```\n\n### combineReducers\n\n#### 用法改变\n\n```html\n\u003cp\u003e{store.getState()}\u003c/p\u003e\n=\u003e\n\u003cp\u003e{store.getState().home}\u003c/p\u003e\n```\n\n```JavaScript\nconst store = createStore(\n  // combineReducers用法\n  combineReducers({home: countReducer}),\n  applyMiddleware(thunk, logger, promise)\n);\n```\n\n**combineReducers** 辅助函数的作用是\n\n1. 把一个由多个不同 reducer 函数作为 value 的 object，\n2. *合并成一个最终的 reducer 函数，然后就可以对这个 reducer 调用 createStore。*\n\n#### 使用规则：\n\n- 每个传入 combineReducers 的 reducer 都需满足以下规则：\n- 所有未匹配到的 action，必须把它接收到的第一个参数也就是那个 state 原封不动返回。\n- 永远不能返回 undefined。当过早 return 时非常容易犯这个错误，为了避免错误扩散，遇到这种情况时 combineReducers 会抛异常。\n- 如果传入的 state 就是 undefined，一定要返回对应 reducer 的初始 state。根据上一条规则，初始 state 禁止使用 undefined。\n\n  使用 ES6 的默认参数值语法来设置初始 state 很容易，但你也可以手动检查第一个参数是否为 undefined。\n\n#### 实现：\n\n```JavaScript\nexport default function combineReducers(reducers) {\n  return function combination(state = {}, action) {\n    var hasChanged = false; // 做缓存的标记\n    var nextState = {};\n    // 循环reducer，如果是函数就进行执行\n    // 将执行完成的值，赋值给对象保存\n    for (let key in reducers) {\n      let reducer = reducers[key];\n      if (typeof reducer !== \"function\") {\n        break;\n      }\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      nextState[key] = nextStateForKey;\n     //判断值有没变化\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n     //判断有没新增state\n    hasChanged =\n      hasChanged || Object.keys(nextState).length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n```\n\nredux 内部的 API 我们已经全部实现了。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Roam-research":{"title":"Roam research","content":"\n缺点：\n\n1. 需要翻墙\n2. 界面是英文\n3. 价格比较贵\n\n优点：\n\n1. 粒度比较细\n2. 有插件库\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Rollup":{"title":"Rollup","content":"\n# Rollup\n\nRollup 诞生的目的并不是要与 Webpack 这样的工具全面竞争。它的初衷只是希望能够**提供一个高效的 ES Modules 打包器，充分利用 ES Modules 的各项特性，构建出结构扁平，性能出众的类库**。\n\nRollup 打包结果惊人的简洁，基本上就跟我们手写的代码一样。相比于 Webpack 大量的引导代码和一堆的模块函数，这里的输出结果没有任何多余代码，就是把打包过程中的各个模块按照依赖顺序，先后拼接到了一起。\n\n### 输出格式\n\n```JavaScript\n// ./rollup.config.js\n// 所有 Rollup 支持的格式\nconst formats = [\"es\", \"amd\", \"cjs\", \"iife\", \"umd\", \"system\"];\nexport default formats.map((format) =\u003e ({\n  input: \"src/index.js\",\n  output: {\n    file: `dist/bundle.${format}.js`,\n    format,\n  },\n}));\n```\n\n### 使用插件\n\n```JavaScript\n// ./rollup.config.js\nimport json from \"@rollup/plugin-json\";\nexport default {\n  input: \"src/index.js\",\n  output: {\n    file: \"dist/bundle.js\",\n    format: \"es\",\n  },\n  plugins: [json()],\n};\n```\n\n### 加载 NPM 模块\n\nRollup 默认只能够按照文件路径的方式加载本地的模块文件，对于 node_modules 目录中的第三方模块，并不能像 Webpack 一样，直接通过模块名称直接导入。\n\n```JavaScript\nimport resolve from '@rollup/plugin-node-resolve'\nexport default {\n  ...\n  plugins: [\n    resolve()\n  ]\n}\n```\n\n### 加载 CommonJS 模块\n\n由于 Rollup 设计的是只处理 ES Modules 模块的打包，所以如果在代码中导入 CommonJS 模块，默认是不被支持的\n\n```JavaScript\nimport commonjs from '@rollup/plugin-commonjs'\nexport default {\n  ...\n  plugins: [\n    commonjs()\n  ]\n}\n```\n\n### 优缺点\n\n优点\n\n- 输出结果更加扁平，执行效率更高；\n- 自动移除未引用代码；\n- 打包结果依然完全可读。\n\n但是它的缺点也同样明显：\n\n- 加载非 ESM 的第三方模块比较复杂；\n- 因为模块最终都被打包到全局中，所以无法实现 HMR；\n- 浏览器环境中，代码拆分功能必须使用 Require.js 这样的 AMD 库。\n\n总结一下：Webpack 大而全，Rollup 小而美。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Rome":{"title":"Rome","content":"\n# Rome\n\nRome 创建于 2020 年 8 月，包含 linter、compiler、bundler、test runner 以及其它东西，适用于 JavaScript、[[TypeScript |TypeScript]]、HTML、JSON、Markdown 和 CSS 。他们的目标是取代和统一整个前端开发工具链。它是由 [[Sebastian]] 创建的，他是 [[Babel]] 的创建者。\n\n那么，为什么要重写一切呢？\n\n\u003e 对 Babel 进行必要的修改，使其成为其他工具的可靠基础，这绝对需要对所有东西进行修改。这个架构与我在 2014 年学习解析器、 AST 和编译器时做出的最初设计选择是有紧密联系的。\n\u003e\n\u003e —— Sebastian（ Source] ）\n\nRome 目前是用 TypeScript 编写的，在 Node.js 上运行。但他们现在正致力于 用 [[Rust]] 重写 。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Rust":{"title":"Rust","content":"\n# Rust\n\nRust 帮助开发人员编写运行快并高效利用内存的软件。它是 C++ 或 C 等语言的现代替代品，聚焦在代码安全和简洁的语法。\n\nRust 与 JavaScript 有很大不同。JavaScript 采用的是 [[V8#垃圾回收 |垃圾回收]] 机制，会试图清除不再使用的变量和对象。JavaScript 将开发者从对手动内存管理的思考中抽离出来。\n\n有了 Rust，开发者对内存分配有了更多的控制，而不像 C++ 或 Go 那样令人痛苦。\n\n\u003e Rust 使用了一种相对独特的内存管理方法，包含了内存“所有权”的概念。基本上，Rust 会记录谁可以读取和写入内存。它知道程序什么时候在使用内存，一旦不再需要就立即释放内存。它在编译时执行内存规则，使得运行时的内存错误几乎不可能出现。你不需要手动跟踪内存。编译器会照顾到这一点。\n\u003e\n\u003e —— Discord[15]\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/SMS":{"title":"SMS","content":"\n# SMS\n\n# 平台\n\n[ReceiveSMS](https://www.receivesms.io/)\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/SSR":{"title":"SSR","content":"\n# SSR\n\n在传统`SSR`中，首屏渲染时，服务端会向浏览器输出`HTML`结构。\n\n当浏览器渲染`HTML`后，再执行前端框架的初始化逻辑，为`HTML`结构绑定事件，这一步叫`hydrate`（注水）。\n\n当`hydrate`完成后，页面才能响应用户交互。\n\n也就是说，只有当整个页面所有组件`hydrate`完成后，页面中任一组件才能响应用户交互。\n\n`Chrome LightHouse`跑分中的[TTI](https://link.juejin.cn/?target=https%3A%2F%2Fweb.dev%2Finteractive%2F \"https://web.dev/interactive/\")（Time to Interactive，可交互时间）指标用于衡量**页面变得完全可交互所需的时间**。\n\n传统`SSR`架构的页面随着应用体积变大，`TTI`指标会持续走高。\n\n`孤岛架构`的目的就是为了优化`SSR`架构下`TTI`指标的问题。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/STAR-%E6%B3%95%E5%88%99":{"title":"STAR 法则","content":"\n**STAR法则是情境(situation)、任务(task)、行动(action)、结果(result)** 四个英文单词首字母的合称，为了记忆的方便，你也可以称之为 **明星法则**。\n\n\u003e STAR法则的四个关键词的具体含义是:  \n\n- **Situation:** **事情发生的情境；**\n- **Task:** **你的任务是什么；**\n- **Action:** **你的行动是什么；**\n- **Result:** **结果如何，你取得了什么成果。**\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/SWC":{"title":"SWC","content":"\n# SWC\n\nSWC 创建于 2017 年，一个下一代快速开发的工具，是一个基于 [[Rust]] 的可扩展平台。[[Next.js]]、 Parcel 和 [[Deno]] 等工具，以及 Vercel、字节跳动、腾讯、Shopify 等公司都在使用它。\n\nSWC 可用于编译（compilation）、压缩（minification）、打包（bundling）等 —— 并且被设计成可扩展的。你可以调用它来执行代码转换（无论是内置的还是自定义的）。这些转换由更高维度的工具来运行，比如 [[Next.js]] 。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Solidity":{"title":"Solidity","content":"\n# Solidity\n\n/\n\n# 什么是 Solidity\n\n# Solidity有什么用\n\n# Solidity 学习\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/SpiltChunks":{"title":"SpiltChunks","content":"\n### SpiltChunks\n\nSplit Chunks 有诸多优点，例如有利于缓存命中、有利于运行时的持久化文件缓存等。其中有一类情况能提升后续环节的工作效率，即通过分包来抽离多个入口点引用的公共依赖。\n\n大模块不提取，重复打包，影响较大\n\n```JavaScript\noptimization: {\n  splitChunks: {\n    // 自动提取所有公共模块到单独 bundle\n    chunks: \"all\";\n  }\n}\n```\n\n除此之外，splitChunks 还支持很多高级的用法，可以实现各种各样的分包策略，这些我们可以在 [文档](https://webpack.js.org/plugins/split-chunks-plugin/) 中找到对应的介绍。\n\nvue 配置\n\n```JavaScript\noptimization: {\n    splitChunks: {\n        cacheGroups: {\n            vendors: {\n                name: 'chunk-vendors',\n                    test: /[\\\\\\/\n                    ]node_modules[\\\\\\/\n                    ]/,\n                priority: -10,\n                    chunks: 'initial'\n            },\n            common: {\n                name: 'chunk-common',\n                    minChunks: 2,\n                        priority: -20,\n                            chunks: 'initial',\n                                reuseExistingChunk: true\n            }\n        }\n    },\n    minimizer: [\n        {\n            options: {\n                test: /\\.m?js(\\?.*)?$/i,\n                chunkFilter: () =\u003e true,\n                warningsFilter: () =\u003e true,\n                extractComments: false,\n                sourceMap: true,\n                cache: true,\n                cacheKeys: defaultCacheKeys =\u003e defaultCacheKeys,\n                parallel: true,\n                include: undefined,\n                exclude: undefined,\n                minify: undefined,\n                terserOptions: {\n                    compress: {\n                        arrows: false,\n                        collapse_vars: false,\n                        comparisons: false,\n                        computed_props: false,\n                        hoist_funs: false,\n                        hoist_props: false,\n                        hoist_vars: false,\n                        inline: false,\n                        loops: false,\n                        negate_iife: false,\n                        properties: false,\n                        reduce_funcs: false,\n                        reduce_vars: false,\n                        switches: false,\n                        toplevel: false,\n                        typeofs: false,\n                        booleans: true,\n                        if_return: true,\n                        sequences: true,\n                        unused: true,\n                        conditionals: true,\n                        dead_code: true,\n                        evaluate: true\n                    },\n                    mangle: {\n                        safari10: true\n                    }\n                }\n            }\n        }\n    ]\n},\n```\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Supercharged-Links":{"title":"Supercharged Links","content":"\n# Supercharged Links\n\n#状态/todo  \n有空折腾一下，让我的数字花园有灵魂\n\n首先在css 中加好 tags 对应的图标\n\n- `data-link-tags` 对应的就是 tags 的名字\n\n```css\na.internal-link[data-link-tags*=\"Obsidian\"]::before {\n\ncontent: url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='15' height='15'%3E%3Cdefs%3E%3ClinearGradient id='a' x1='82.85' y1='30.41' x2='51.26' y2='105.9' gradientTransform='matrix(1, 0, 0, -1, -22.41, 110.97)' gradientUnits='userSpaceOnUse'%3E%3Cstop offset='0' stop-color='%236c56cc'%3E%3C/stop%3E%3Cstop offset='1' stop-color='%239785e5'%3E%3C/stop%3E%3C/linearGradient%3E%3C/defs%3E%3Cpolygon points='44.61 0 12.91 17.52 0 45.45 19.57 90.47 47.35 100 52.44 89.8 63 26.39 44.61 0' fill='%2334208c'%3E%3C/polygon%3E%3Cpolygon points='63 26.39 43.44 14.41 16.43 35.7 47.35 100 52.44 89.8 63 26.39' fill='url(%23a)'%3E%3C/polygon%3E%3Cpolygon points='63 26.39 63 26.39 44.61 0 43.44 14.41 63 26.39' fill='%23af9ff4'%3E%3C/polygon%3E%3Cpolygon points='43.44 14.41 44.61 0 12.91 17.52 16.43 35.7 43.44 14.41' fill='%234a37a0'%3E%3C/polygon%3E%3Cpolygon points='16.43 35.7 19.57 90.47 47.35 100 16.43 35.7' fill='%234a37a0'%3E%3C/polygon%3E%3C/svg%3E\");\n\n/* con-tent: url(\"https://lh3.googleusercontent.com/pw/ACtC-3eDgxdjBh3bs2bCHZtwqeW2zIJQ1n7z9b1mTbMNy7DHauxrPbhe2uE3dV8-Er8BcwDwLnO5OoRA0Eym2zxdAdg6lypvcpa3smbJsRvgMo2UOhTSSQbiS0_n8H9nVJfzWm8BlV9HOWN8kOyJdbZJ3Ab-tQ=s30-no?authuser=0\"); */\n\n}\n```\n\n# 参考链接\n\n- [GitHub - mdelobelle/supercharged_links:](https://github.com/mdelobelle/obsidian_supercharged_links)\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/TTFB":{"title":"TTFB","content":"\nTTFB 是一个衡量对资源的请求和响应的第一个字节开始和到达之间时间的指标。\n\nTTFB 是下列请求节点的时间损耗汇总：\n\n- Redirect time 重定向时延\n- Service worker 启动时延（如果适用）\n- DNS 查询时延\n- 建立连接和 TLS 所消耗时延\n- 请求，直到响应的第一个字节到达为止的时延\n\n减少连接建立和后端服务的时延将有助于降低 TTFB\n\n作为一个粗略的指导，大多数网站应努力使 TTFB 少于 **0.8秒** 。\n\n## 如何优化\n\n优化 TTFB 在很大程度上取决于您的托管供应商和后端服务。TTFB 值高可能是由于以下一个或多个问题造成的。\n\n- 托管服务商的基础设施能力不足，无法处理高流量负载\n- 网络服务器的内存不足，可能导致 [系统颠簸](https://en.wikipedia.org/wiki/Memory_paging#Thrashing)\n- 未经优化的数据库\n- 不良的数据库服务器配置\n\n总结：选择一个合适的供应商与[[CDN]]结合\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/TTI":{"title":"TTI","content":"\n# TTI\n\nTTI（Time to Interact），是页面可交互的时间。，用于标记页面已进行视觉渲染并能可靠响应用户输入的时间点。页面可能会因为多种原因而无法响应用户输入，例如页面组件运行所需的 Javascript 尚未加载，或者耗时较长的任务阻塞主线程。TTI 指标可识别页面初始 JavaScript 已加载且主线程处于空闲状态（没有耗时较长的任务）的时间点。\n\n通常通过记录 window. Performance. Timing 中的 domInteractive 与 fetchStart 的时间差来完成。\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Tampermonkey":{"title":"Tampermonkey","content":"\n- 百度网盘直链获取 + [[motrix]]下载器[Motrix](https://motrix.app/download)\n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/Trancy":{"title":"Trancy","content":"\nYouTube 双语字幕+分句学习、网页翻译、生词本、句子成分分析、词性标注、AI 对话  \n\n价格 `25.99$/年` 、 `2.16$/月`  \n大部分功能都是免费的，如果好用的话价格还好，先使用一段时间再来评价  \n","lastmodified":"2023-09-18T14:54:47.462454084Z","tags":null},"/TypeChat":{"title":"TypeChat","content":"\nTypeChat 的主要目的是抹平自然语言与应用程序可以使用的结构化数据之间的差距。 它的目的是让开发者更容易地将自然语言界面集成到他们的应用程序中。 通过提供具有 shema（某些类型）和请求的模型，开发者可以处理类型良好的结构化数据，从而使将自然语言集成到应用程序中的过程更加简化和高效。\n\n [[Langchain]]也有提供zod schema方式结构化输出，可以比较一下两者\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/TypeScript":{"title":"TypeScript","content":"\n# TypeScript\n\n#### 基础类型\n\n```TS\n// 常见原始类型: string,number,boolean,undefined,null,symbol\nlet var1: string; // 类型注解\n\n// 编译器类型推断可省略这个语法\nlet var2 = true;\n\n// 类型数组\nlet arr: string[];\n\n// 函数中的类型约束\n// 函数中的类型约束\nfunction greet(person: string): string {\n    return 'hello, ' + person;\n}\n\n// void类型，常用于没有返回值的函数\nfunction warn(): void {}\n```\n\n#### 类型注释\n\n```ts\ninterface IProps {\n\t/**\n\t * logo的地址\n\t */\n\tlogo?: string;\n\tclassName?: string;\n\talt?: string;\n}\n// 在使用这样的注释以后,同事在查询这个参数时就能看到这段注释\n```\n\n#### 类型断言\n\n```ts\nlet strLength: number = (\u003cstring\u003esomeValue).length;\nlet strLength: number = (someValue as string).length;\n//上面两种都是类型断言写法\n```\n\n#### 非空断言\n\n```ts\nfunction addFeatur(e: KeyboardEvent) {\n\tconst inp = e.taget as HTMLInputElement;\n\tconst inp = e.taget!;\n}\n```\n\n#### 类型别名\n\n```ts\n// 可以用下面这样方式定义对象类型\nconst objType: { foo: string; bar: string };\n\n// 使用type定义类型别名，使用更便捷，还能复用\ntype Foobar = { foo: string; bar: string };\n```\n\n#### 联合类型\n\n```ts\nlet features: Features[] | null;\n```\n\n#### 交叉类型\n\n```ts\ntype First = { first: number };\ntype Secord = { secord: string };\ntype third = First \u0026 Secord;\n```\n\n为了分离类型，比如前端类型和后端返回的类型应该分开定义后合并\n\n##### 合起来，如果有同 key，类型不一样，怎么处理的?\n\n#### 重载\n\n以函数参数数量或者类型，或者返回值的类型区分多个同名函数\n\n```ts\n// 重载：以函数参数数量或者类型，或者返回值的类型区分多个同名函数\n// 先声明，再实现\n// 重载1\nfunction watch(cb1: () =\u003e void): void;\n// 重载2\nfunction watch(cb1: () =\u003e void, cb2: (v1: any, v2: any) =\u003e void): void;\n// 实现\nfunction watch(cb1: () =\u003e void, cb2?: (v1: any, v2: any) =\u003e void) {\n\tif (cb2) {\n\t\tconsole.log(\"执行重载2\");\n\t} else {\n\t\tconsole.log(\"执行重载1\");\n\t}\n}\n\nwatch();\n```\n\n`Redux` 的[compose](https://github.com/reduxjs/redux/blob/26f216e066a2a679d3cae4fb1a5c4e5d15e9fac6/src/compose.ts#L16)就是运用大量函数重载的典型案例  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174223.png)\n\n#### 声明文件\n\n```TS\n// shims-vue.d.ts\nimport Vue from \"vue\";\nimport { AxiosInstance } from \"axios\";\ndeclare module \"vue/types/vue\" {\n    interface Vue {\n        $axios: AxiosInstance;\n    }\n}\n```\n\n## Class\n\n```ts\n// 03-class.ts\nclass Parent {\n\tprivate _foo = \"foo\"; // 私有属性，不能在类的外部访问\n\tprotected bar = \"bar\"; // 保护属性，可以在子类中访问\n\t// 参数属性：构造函数参数加修饰符，能够定义为成员属性\n\tconstructor(public tua = \"tua\") {}\n\t// 方法也有修饰符\n\tprivate someMethod() {}\n\t// 存取器：属性方式访问，可添加额外逻辑，控制读写性\n\tget foo() {\n\t\treturn this._foo;\n\t}\n\tset foo(val) {\n\t\tthis._foo = val;\n\t}\n}\n```\n\n## 枚举类型\n\n### 数字枚举\n\n当我们声明一个枚举类型是,虽然没有给它们赋值,但是它们的值其实是默认的数字类型,而且默认从 0 开始依次累加:\n\n```js\nenum Direction {\n    Up = 10,\n    Down,\n    Left,\n    Right\n}\n\nconsole.log(Direction.Up, Direction.Down, Direction.Left, Direction.Right); // 10 11 12 13\n```\n\n### 异构 | 字符串枚举\n\n```js\nenum BooleanLikeHeterogeneousEnum {\n    No = 0,\n    Yes = \"YES\",\n}\n```\n\n## 接口(interface)\n\n```typescript\ninterface User {\n    name?: string // 可选属性\n    age: number  // 必填属性\n    readonly isMale: boolean  // 只读属性\n    say: (words: string) =\u003e string  // 函数类型\n    [propName: string]: ;  // 字符串索引\n}\n```\n\n### 继承\n\n```typescript\n// 可同时继承多个接口\ninterface VIPUser extends User, SupperUser {\n\tbroadcast: () =\u003e void;\n}\n```\n\n### 与 type 异同\n\n与 interface 相比，type 的特点如下：\n\n- 表达功能更强大，不局限于 object/class/function\n- 要扩展已有 type 需要创建新 type，不可以重名\n- 支持更复杂的类型操作  \n  基本上所有用 interface 表达的类型都有其等价的 type 表达。  \n  除了对外抛出的接口定义约束用的 interface，内部的类型都尽量用的 type。  \n  [《TypeScript 中高级应用与最佳实践》](https://juejin.cn/post/6844903904140853255)\n\n## 泛型\n\n#### 使用时机：\n\n当你的函数，接口或者类：\n\n- 需要作用到很多类型的时候，\n- 需要被用到很多地方的时候，\n\n#### 泛型使用\n\n可以作为一个动态参数传入，使类型使用更加灵活\n\n```ts\ninterface Result\u003cT\u003e {\n\tok: 0 | 1;\n\tdata: T[];\n}\n\nfunction getResult\u003cT\u003e(data: T): Result\u003cT\u003e {\n\treturn { ok: 1, data: [data] };\n}\n\ngetResult\u003cstring\u003e(\"1\");\n```\n\n#### keyof\n\n`keyof` 操作符可以用来一个对象中的所有 key 值：\n\n```ts\ninterface Person {\n\tname: string;\n\tage: number;\n}\n\ntype K1 = keyof Person; // \"name\" | \"age\"\ntype K2 = keyof Person[]; // \"length\" | \"toString\" | \"pop\" | \"push\" | \"concat\" | \"join\"\ntype K3 = keyof { [x: string]: Person }; // string | number\n```\n\n#### in\n\n`in` 用来遍历枚举类型：\n\n```\ntype Keys = \"a\" | \"b\" | \"c\"\n\ntype Obj =  {\n  [p in Keys]: any\n} // -\u003e { a: any, b: any, c: any }\n```\n\n#### **TS 泛型工具** (目前 16 种)\n\n[点击查看官方实现](https://github.com/microsoft/TypeScript/blob/master/src/lib/es5.d.ts#L1431)\n\n- [Partial](https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype)\n\n功能是将类型的属性**「变成可选」**。\n\n```ts\ntype Partial\u003cT\u003e = { [P in keyof T]?: T[P] };\n```\n\n- [Readonly](https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype)\n\n功能是将类型的属性**「变成只读」**， 在属性前面增加 `readonly` 意思会将其变成只读。\n\n```ts\ntype Readonly\u003cT\u003e = { readonly [P in keyof T]: T[P] };\n```\n\n- [Record](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype)\n- [Pick](https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys)\n- [Omit](https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys)\n- [Exclude](https://www.typescriptlang.org/docs/handbook/utility-types.html#excludetype-excludedunion)\n- [Extract](https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union)\n- [NonNullable](https://www.typescriptlang.org/docs/handbook/utility-types.html#nonnullabletype)\n- [Parameters](https://www.typescriptlang.org/docs/handbook/utility-types.html#parameterstype)\n- [ConstructorParameters](https://www.typescriptlang.org/docs/handbook/utility-types.html#constructorparameterstype)\n- [ReturnType](https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype)\n\n功能是用来得到一个函数的返回值类型。\n\n```ts\ntype ReturnType\u003cT extends (...args: any[]) =\u003e any\u003e = T extends (\n\t...args: any[]\n) =\u003e infer R\n\t? R\n\t: any;\n```\n\n- [InstanceType](https://www.typescriptlang.org/docs/handbook/utility-types.html#instancetypetype)\n- [Required](https://www.typescriptlang.org/docs/handbook/utility-types.html#requiredtype)\n\n功能和`Partial` 相反，是将类型的属性**「变成必填」**， 这里的 `-`指的是去除。 `-?`意思就是去除可选，也就是必填啦。\n\n```ts\ntype Required\u003cT\u003e = { [P in keyof T]-?: T[P] };\n```\n\n- [ThisParameterType](https://www.typescriptlang.org/docs/handbook/utility-types.html#thisparametertypetype)\n- [OmitThisParameter](https://www.typescriptlang.org/docs/handbook/utility-types.html#omitthisparametertype)\n- [ThisType](https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypetype)\n\n## 设计工具类型\n\n### diff\n\nDiff\u003cT, U\u003e,我们要找出 T 类型中 U 不包含的部分:\n\n```typescript\ntype R = Diff\u003c\"a\" | \"b\" | \"c\" | \"d\", \"a\" | \"c\" | \"f\"\u003e; // \"b\" | \"d\"\ntype Diff\u003cT, U\u003e = T extends U ? never : T;\n```\n\n### Part\n\n现在需要编写一个工具类型将 interface 中**函数类型**的**名称**取出来,\n\n```typescript\ninterface Part {\n\tid: number;\n\tname: string;\n\tsubparts: Part[];\n\tupdatePart(newName: string): void;\n}\n\ntype R = FunctionPropertyNames\u003cPart\u003e; // \"updatePart\"\n```\n\n## TypeScript 装饰器\n\n### 装饰器是什么\n\n- 它是一个表达式\n- 该表达式被执行后，返回一个函数\n- 函数的入参分别为 target、name 和 descriptor\n- 执行该函数后，可能返回 descriptor 对象，用于配置 target 对象\n\n### 装饰器的分类\n\n- 类装饰器（Class decorators）\n- 属性装饰器（Property decorators）\n- 方法装饰器（Method decorators）\n- 参数装饰器（Parameter decorators）\n\n**tsconfig.json**:\n\n```JavaScripton\n{\n  \"compilerOptions\": {\n     \"target\": \"ES5\",\n     \"experimentalDecorators\": true\n   }\n}\n```\n\n### 装饰器使用\n\n#### 类装饰器\n\n```ts\nfunction Greeter(greeting: string) {\n\treturn function (target: Function) {\n\t\ttarget.prototype.greet = function (): void {\n\t\t\tconsole.log(greeting);\n\t\t};\n\t};\n}\n\n@Greeter(\"Hello TS!\")\nclass Greeting {\n\tconstructor() {\n\t\t// 内部实现\n\t}\n}\n\nlet myGreeting = new Greeting();\nmyGreeting.greet(); // console output: 'Hello TS!';\n```\n\n#### 方法装饰器\n\n它接收三个参数：\n\n- target: Object - 被装饰的类\n- propertyKey: string | symbol - 方法名\n- descriptor: TypePropertyDescript - 属性描述符\n\n## React 中的运用\n\n对于 `input` 组件 `onChange` 中的事件，我们一般是这样声明的:\n\n```typescript\nprivate updateValue(e: React.ChangeEvent\u003cHTMLInputElement\u003e) {\n    this.setState({ itemText: e.target.value })\n}\n// form表单 React.FormEvent\u003cHTMLFormElement\u003e\n```\n\n## compilerOptions 选项\n\n```JavaScripton\n{\n  \"compilerOptions\": {\n\n    /* 基本选项 */\n    \"target\": \"es5\",                       // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'\n    \"module\": \"commonjs\",                  // 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015'\n    \"lib\": [],                             // 指定要包含在编译中的库文件\n    \"allowJs\": true,                       // 允许编译 javascript 文件\n    \"checkJs\": true,                       // 报告 javascript 文件中的错误\n    \"jsx\": \"preserve\",                     // 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'\n    \"declaration\": true,                   // 生成相应的 '.d.ts' 文件\n    \"sourceMap\": true,                     // 生成相应的 '.map' 文件\n    \"outFile\": \"./\",                       // 将输出文件合并为一个文件\n    \"outDir\": \"./\",                        // 指定输出目录\n    \"rootDir\": \"./\",                       // 用来控制输出目录结构 --outDir.\n    \"removeComments\": true,                // 删除编译后的所有的注释\n    \"noEmit\": true,                        // 不生成输出文件\n    \"importHelpers\": true,                 // 从 tslib 导入辅助工具函数\n    \"isolatedModules\": true,               // 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）.\n\n    /* 严格的类型检查选项 */\n    \"strict\": true,                        // 启用所有严格类型检查选项\n    \"noImplicitAny\": true,                 // 在表达式和声明上有隐含的 any类型时报错\n    \"strictNullChecks\": true,              // 启用严格的 null 检查\n    \"noImplicitThis\": true,                // 当 this 表达式值为 any 类型的时候，生成一个错误\n    \"alwaysStrict\": true,                  // 以严格模式检查每个模块，并在每个文件里加入 'use strict'\n\n    /* 额外的检查 */\n    \"noUnusedLocals\": true,                // 有未使用的变量时，抛出错误\n    \"noUnusedParameters\": true,            // 有未使用的参数时，抛出错误\n    \"noImplicitReturns\": true,             // 并不是所有函数里的代码都有返回值时，抛出错误\n    \"noFallthroughCasesInSwitch\": true,    // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）\n\n    /* 模块解析选项 */\n    \"moduleResolution\": \"node\",            // 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)\n    \"baseUrl\": \"./\",                       // 用于解析非相对模块名称的基目录\n    \"paths\": {},                           // 模块名到基于 baseUrl 的路径映射的列表\n    \"rootDirs\": [],                        // 根文件夹列表，其组合内容表示项目运行时的结构内容\n    \"typeRoots\": [],                       // 包含类型声明的文件列表\n    \"types\": [],                           // 需要包含的类型声明文件名列表\n    \"allowSyntheticDefaultImports\": true,  // 允许从没有设置默认导出的模块中默认导入。\n\n    /* Source Map Options */\n    \"sourceRoot\": \"./\",                    // 指定调试器应该找到 TypeScript 文件而不是源文件的位置\n    \"mapRoot\": \"./\",                       // 指定调试器应该找到映射文件而不是生成文件的位置\n    \"inlineSourceMap\": true,               // 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件\n    \"inlineSources\": true,                 // 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性\n\n    /* 其他选项 */\n    \"experimentalDecorators\": true,        // 启用装饰器\n    \"emitDecoratorMetadata\": true          // 为装饰器提供元数据的支持\n  }\n}\n```\n\n# [[TypeScript 学习资源]]\n\n[https://mp.weixin.qq.com/s/BJaJLZRfRn4dLzh4-zNWSg](https://mp.weixin.qq.com/s/BJaJLZRfRn4dLzh4-zNWSg)\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/TypeScript-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90":{"title":"TypeScript 学习资源","content":"\n# TypeScript 学习资源\n\n1. 官方文档: **Github：**https://github.com/microsoft/TypeScript\n2. 中国最好的 TypeScript 入门到进阶系统教程。: **Github：**https://github.com/mqyqingfeng/learn-typescript\n3. TypeScript 使用手册（中文版）翻译。: **Github：**https://github.com/zhongsp/TypeScript\n4. TypeScript Deep Dive 中文版。:**Github：**https://github.com/jkchao/typescript-book-chinese\n5. 从 JavaScript 程序员的角度总结思考，循序渐进地理解 TypeScript。:**Github：**https://github.com/xcatliu/typescript-tutorial\n6. TypeScript 类型挑战: **Github：**https://github.com/type-challenges/type-challenges\n7. DefinitelyTyped 包含大量的高质量的 TypeScript 类型定义。通过使用 DefinitelyTyped 及其包含的声明文件，我们可以使用大多数流行的 JavaScript 库，就像它们是 TypeScript 库一样，将通过编译器进行类型验证。**Github：**https://github.com/DefinitelyTyped/DefinitelyTyped\n8. 本指南记录了有关在 React（及其生态系统）中以函数式风格使用 TypeScript 的模式和秘诀。它将使代码类型安全，同时专注于从实现中推断类型，从长远来看更容易编写和维护正确的类型。**Github：**https://github.com/piotrwitek/react-redux-typescript-guide\n9. ## React+TypeScript 备忘录:**Github：**https://github.com/typescript-cheatsheets/react\n10. 将 Clean Code 的概念适用到 TypeScript，引导读者使用 TypeScript 编写易读、可扩展的应用。:**Github：**https://github.com/labs42io/clean-code-typescript\n11. Google TypeScript 风格指南。:**Github：**https://google.github.io/styleguide/tsguide.html\n12. ## Awesome TypeScript : **Github：**https://github.com/semlinker/awesome-typescript\n13. [简洁的TypeScript之书](https://github.com/gibbok/typescript-book/blob/main/README-zh_CN.md)\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/UMU":{"title":"UMU","content":"\n## Meatdata\n\n- author：\n- link： [60% 收入来自海外，VC 追着投资，这匹千里马如此回答 “AI 往何处去”](https://mp.weixin.qq.com/s/VkqjvUCnVKskau7V-Y56nw)\n- tag：#\n- date: [[2021-12-02]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 这家名叫 UMU 的公司所在赛道为 “企业学习”。\n- 不同于很多技术企业 “拿着锤子找钉子”，李东朔想的是：企业学习有“教、学、练、用” 四个核心价值链，他想先找到需要 AI 技术提升效果的那颗“钉子”，再去研发“锤子”，提供技术解决方案。\n- 就拿 “AI 视频训练” 这个产品功能来说，该产品用于训练、评价员工的销售能力。其中，AI 会将应用场景层层解构，从多个维度对员工的视频训练进行评价与反馈。比如识别你在音量、语速、肢体动作、表情等 6 个维度的表现。更精妙的是，AI 还会捕捉到你的各种眼神变化，判断有没有看其他地方，有没有呈现出坚毅、自信的眼神，甚至依据算法衡量是否你的表情是否有亲和力。\n- UMU 的另一个极具优势的 AI 产品 “uShow”。通过机器学习与深度学习等 AI 技术，对企业内的优秀销售案例进行模型训练，从中形成金牌销售的 AI 训练算法，作为销售训练的评分依据。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Umi":{"title":"Umi","content":"\n# Umi\n\n## **依赖预编译**\n\n# 参考资料\n\n- [umi](https://v3.umijs.org/zh-CN/docs/use-umi-ui)\n- [Umi 4 设计思路](https://mp.weixin.qq.com/s/srB0KrAS23HvgCrT_gRK0g)\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/V8":{"title":"V8","content":"\n# V8\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174304.png)\n\n## 函数即对象\n\n函数除了可以拥有常用类型的属性值之外，还拥有两个隐藏属性，分别是 name 属性和 code 属性。隐藏 name 属性的值就是函数名称，如果某个函数没有设置函数名，该函数对象的**默认的 name 属性值就是 anonymous。**\n\n### 函数是一等公民\n\n因为函数是一种特殊的对象，所以在 JavaScript 中，函数可以赋值给一个变量，也可以作为函数的参数，还可以作为函数的返回值。**如果某个编程语言的函数，可以和这个语言的数据类型做一样的事情，我们就把这个语言中的函数称为一等公民**。\n\n### 对象的属性\n\n#### **排序属性**和常规属性\n\n我们把对象中的数字属性称为**排序属性**，在 V8 中被称为 **elements**，字符串属性就被称为**常规属性**，在 V8 中被称为 **properties**\n\n**数字属性按照索引值大小升序排列，字符串属性根据创建时的顺序升序排列。**\n\n#### 快属性和慢属性\n\n将不同的属性分别保存到 elements 属性和 properties 属性中，无疑简化了程序的复杂度，但是在查找元素时，却多了一步操作，基于这个原因，V8 采取了一个权衡的策略以加快查找属性的效率，这个策略是将部分常规属性直接存储到对象本身，我们把这称为**对象内属性 (in-object properties)。**\n\n通常，我们将保存在线性数据结构中的属性称之为“**快属性**”，因为线性数据结构中只需要通过索引即可以访问到属性，虽然访问线性结构的速度快，但是如果从线性结构中添加或者删除大量的属性时，则执行效率会非常低，这主要因为会产生大量时间和内存开销。不过对象内属性的数量是固定的，默认是 10 个，\n\n如果一个对象的属性过多时，V8 就会采取另外一种存储策略，那就是“**慢属性**”策略，但慢属性的对象内部会有独立的非线性数据结构 (词典) 作为属性存储容器。所有的属性元信息不再是线性存储的，而是**直接保存在属性字典**中。  \n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174350.png)\n\n#### 内存查看\n\n```JavaScript\nfunction Foo(property_num, element_num) {\n  //添加可索引属性\n  for (let i = 0; i \u003c element_num; i++) {\n    this[i] = `element${i}`;\n  }\n  //添加常规属性\n  for (let i = 0; i \u003c property_num; i++) {\n    let ppt = `property${i}`;\n    this[ppt] = ppt;\n  }\n}\nvar bar = new Foo(10, 10);\n```\n\nChrome 开发者工具切换到 Memory 标签，然后点击左侧的小圆圈就可以捕获当前的内存快照,查看创建不同数量属性的内存存储区别\n\n// todo:和老师讲的有点不一样\n\n### V8 是怎么实现数组的\n\n[从 V8 引擎来看 JS 中这个\"假数组\"](https://juejin.cn/post/6847902222009925640#heading-7)\n\n数组是什么？ 数组的两个关键字是**相同类型**、**连续内存** !\n\n所以 Js 的数组根本不算一个真数组，那么他是怎么实现的呢\n\n没错就是 对象，\n\n#### 快数组\n\n#### 慢数组\n\n## 原型链和作用域链\n\n**作用域链是沿着函数的作用域一级一级来查找变量的，而原型链是沿着对象的原型一级一级来查找属性的**\n\n### 解析阶段\n\nV8 会先编译顶层代码，在编译过程中会将顶层定义的变量和声明的函数都添加到全局作用域中，\n\n全局作用域创建完毕后\n\n### 进入执行阶段\n\n变量：对全局作用域的值进行赋值，\n\n函数的时候，同样需要经历两个阶段：编译和执行。在编译阶段，V8 会为 bar 函数创建函数作用域，执行阶段简单的执行 code\n\n**因为词法作用域是根据函数在代码中的位置来确定的，作用域是在声明函数时就确定好的了，所以我们也将词法作用域称为静态作用域。**\n\n和静态作用域相对的是动态作用域，动态作用域并不关心函数和作用域是如何声明以及在何处声明的，只关心它们从何处调用。换句话说，作用域链是基于调用栈的，而不是基于函数定义的位置的。\n\n### 闭包\n\n**在 JavaScript 中，根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中，我们就把这些变量的集合称为闭包。比如外部函数是 foo，那么这些变量的集合就称为 foo 函数的闭包**。\n\n#### 如何回收\n\n通常，如果引用闭包的函数是一个全局变量，那么闭包会一直存在直到页面关闭；但如果这个闭包以后不再使用的话，就会造成内存泄漏。\n\n如果引用闭包的函数是个局部变量，等函数销毁后，在下次 JavaScript 引擎执行垃圾回收时，判断闭包这块内容如果已经不再被使用了，那么 JavaScript 引擎的垃圾回收器就会回收这块内存。\n\n## 类型系统\n\n### [[V8 是怎么执行加法操作的？]]\n\n## 编译器和解释器\n\n**编译型语言在程序执行之前，需要经过编译器的编译过程，并且编译之后会直接保留机器能读懂的二进制文件，这样每次运行程序时，都可以直接运行该二进制文件，而不需要再次重新编译了**。比如 C/C++、GO 等都是编译型语言。\n\n**而由解释型语言编写的程序，在每次运行时都需要通过解释器对程序进行动态解释和执行**。比如 Python、JavaScript 等都属于解释型语言。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174430.png)\n\n### V8 执行 JavaScript 代码\n\n#### 总结\n\n1. 预编译阶段 变量提升 并且赋值 undefined\n2. 编译阶段 生成两部分代码 **执行上下文（Execution context）\\*\\*和\\*\\*可执行代码**。\n3. 执行阶段\n\n**其实在执行 JavaScript 代码之前，V8 就已经准备好了代码的运行时环境，这个环境包括了堆空间和栈空间、全局执行上下文、全局作用域、内置的内建函数、宿主环境提供的扩展函数和对象，还有消息循环系统。**\n\n#### 生成抽象语法树（AST）和执行上下文\n\n将源代码转换为**抽象语法树**，并生成**执行上下文**。 AST 看成代码的结构化的表示，编译器或者解释器后续的工作都需要依赖于 AST，而不是源代码。AST 应用中最著名的一个项目是 Babel。Babel 的工作原理就是先将 ES6 源码转换为 AST，然后再将 ES6 语法的 AST 转换为 ES5 语法的 AST，最后利用 ES5 的 AST 生成 JavaScript 源代码。\n\n1. **分词（tokenize），又称为词法分析**，其作用是将一行行的源码拆解成一个个 token。\n\n```JavaScript\nvar myName = \"xiaopang\";\n// token : var 、 myName 、= 、 'xiaopang'\n```\n\n2. **解析（parse），又称为语法分析**，其作用是将上一步生成的 token 数据，根据语法规则转为 AST。\n\n#### 生成字节码\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174441.png)\n\n由于执行机器码的效率是非常高效的，所以早期 chorme 直接将 AST 转化成机器码进行保存。\n\n但机器码占用内存过大，为了解决内存占用问题，V8 团队大幅重构了引擎架构，引入字节码。\n\n**字节码就是介于 AST 和机器码之间的一种代码。但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码后才能执行。**\n\n#### 执行代码\n\n通常，如果有一段第一次执行的字节码，解释器 Ignition 会逐条解释执行。在执行字节码的过程中，如果发现有热点代码（HotSpot），比如一段代码被重复执行多次，这种就称为**热点代码**，那么后台的编译器 TurboFan 就会把该段**热点的字节码**编译为**高效的机器码**，然后当再次执行这段被优化的代码时，只需要执行编译后的机器码就可以了，这样就大大提升了代码的执行效率。我们把这种技术称之为**即时编译（JIT）**\n\n## 微任务\n\n[[MutationObserver]] 和 [[IntersectionObserver]] 两个性质应该差不多。我这里简称 ob。ob 是一个微任务，通过浏览器的 requestIdleCallback，在浏览器每一帧的空闲时间执行 ob 监听的回调，该监听是不影响主线程的，但是回调会阻塞主线程。当然有一个限制，如果 100ms 内主线程一直处于未空闲状态，那会强制触发 ob。\n\n### 协程\n\n协程是一种比线程更加轻量级的存在。你可以把协程看成是跑在线程上的任务，一个线程上可以存在多个协程，但是在线程上同时只能执行一个协程。最重要的是，协程不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行）。这样带来的好处就是性能得到了很大的提升，不会像线程切换那样消耗资源。\n\n### [[await#Async 和 await 的优化]]\n\n## [[V8 垃圾回收]]\n\n# GC\n\n[[GC的发展和细节]]\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/V8-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6":{"title":"V8 垃圾回收","content":"\nV8 垃圾回收\n\n**原始数据类型是存储在栈空间中的，引用类型的数据是存储在堆空间中的**。通过这种分配方式，我们解决了数据的内存分配的问题。\n\n不过有些数据被使用之后，可能就不再需要了，我们把这种数据称为**垃圾数据**。如果这些垃圾数据一直保存在内存中，那么内存会越用越多，所以我们需要**对这些垃圾数据进行回收，以释放有限的内存空间**。\n\nJS 有垃圾处理器，所以无需手动回收内存，而是由垃圾处理器自动处理。譬如对于那些执行完毕的函数，如果没有外部引用（被引用的话会形成闭包），则会回收。\n\n### 回收规则\n\n常用的两种垃圾回收规则是：**标记清除** 和 **引用计数**\n\nJavascript 引擎基础 GC 方案是：标记清除\n\n#### 标记清除\n\n简单解释为：\n\n1. 遍历所有可访问的对象。\n2. 回收已不可访问的对象。\n\n#### 引用计数\n\n**跟踪记录每个值被引用的次数，当一个值被引用时，次数`+1`，减持时`-1`，下次垃圾回收器会回收次数为`0`的值的内存（当然了，容易出循环引用的 bug）**\n\n### 调用栈中的数据回收\n\n```JavaScript\nfunction foo() {\n  var a = 1;\n  var b = { name: \" 测试 \" };\n  function showName() {\n    var c = \" 测试一下 \";\n    var d = { name: \" 测试一下 \" };\n  }\n  showName();\n}\nfoo();\n```\n\njs 引擎 将 showName 函数 的执行上下文 压入 调用栈的同时，还有一个**记录当前执行状态的指针（称为 ESP）**，指向调用栈中 showName 函数的执行上下文。\n\n当函数执行完毕后，JavaScript 就会将指针下移，同时进行 showName 函数执行上下文的销毁\n\n所以说，当一个函数执行结束之后，**JavaScript 引擎会通过向下移动 ESP 来销毁该函数保存在栈中的执行上下文**。\n\n### 堆中的数据回收\n\n当上面那段代码的 foo 函数执行结束之后，ESP 应该是指向全局执行上下文的，那这样的话，showName 函数和 foo 函数的执行上下文就处于无效状态了，不过保存在堆中的两个对象依然占用着空间，\n\n#### **代际假说**\n\n**代际假说**有以下两个特点：\n\n- 第一个是大部分对象在内存中存在的时间很短，简单来说，就是很多对象一经分配内存，很快就变得不可访问；\n- 第二个是不死的对象，会活得更久。\n\n在 V8 中会把堆分为**新生代**和**老生代**两个区域，**新生代中存放的是生存时间短的对象，老生代中存放的生存时间久的对象**。\n\n新生区通常只支持 1 ～ 8M 的容量，而老生区支持的容量就大很多了。对于这两块区域，V8 分别使用两个不同的垃圾回收器，以便更高效地实施垃圾回收。\n\n- **副垃圾回收器，主要负责新生代的垃圾回收。**\n- **主垃圾回收器，主要负责老生代的垃圾回收。**\n\n#### 工作流程\n\n其实**不论什么类型的垃圾回收器，它们都有一套共同的执行流程**。\n\n1. **标记**空间中活动对象和非活动对象。所谓活动对象就是还在使用的对象，非活动对象就是可以进行垃圾回收的对象。\n2. **回收**非活动对象所占据的内存。其实就是在所有的标记完成之后，统一清理内存中所有被标记为可回收的对象。\n3. 做**内存整理**。一般来说，频繁回收对象后，内存中就会存在大量不连续空间，我们把这些不连续的内存空间称为**内存碎片**。当内存中出现了大量的内存碎片之后，如果需要分配较大连续内存的时候，就有可能出现内存不足的情况。所以最后一步需要整理这些内存碎片，但这步其实是可选的，因为有的垃圾回收器不会产生内存碎片，比如接下来我们要介绍的副垃圾回收器。\n\n#### 副垃圾回收器\n\n副垃圾回收器主要负责新生区的垃圾回收。而通常情况下，大多数小的对象都会被分配到新生区，所以说这个区域虽然**不大**，但是垃圾回收还是比较**频繁**的。\n\n新生代中用**Scavenge 算法**来处理。所谓 Scavenge 算法，是把新生代空间对半划分为两个区域，一半是对象区域，一半是空闲区域。\n\n**新加入的对象**都会存放到**对象区域**，当对象区域快被写满时，就需要执行一次垃圾清理操作。\n\n在垃圾回收过程中，首先要对对象区域中的垃圾做标记；标记完成之后，就进入垃圾清理阶段，副垃圾回收器会把这些存活的对象复制到空闲区域中，同时它还会把这些对象有序地排列起来，所以这个复制过程，也就相当于完成了内存整理操作，复制后空闲区域就没有内存碎片了。\n\n完成复制后，对象区域与空闲区域进行角色翻转，也就是原来的对象区域变成空闲区域，原来的空闲区域变成了对象区域。这样就完成了垃圾对象的回收操作，同时这种**角色翻转的操作还能让新生代中的这两块区域无限重复使用下去**。\n\n由于新生代中采用的 Scavenge 算法，所以每次执行清理操作时，都需要将存活的对象从对象区域复制到空闲区域。但复制操作需要时间成本，如果新生区空间设置得太大了，那么每次清理的时间就会过久，所以**为了执行效率，一般新生区的空间会被设置得比较小**。\n\n也正是因为新生区的空间不大，所以很容易被存活的对象装满整个区域。为了解决这个问题，JavaScript 引擎采用了**对象晋升策略**，也就是**经过两次垃圾回收**依然还存活的对象，会被移动到老生区中\n\n#### 主垃圾回收器\n\n主垃圾回收器主要负责老生区中的垃圾回收。除了新生区中晋升的对象，一些大的对象会直接被分配到老生区。因此老生区中的对象有两个特点，一个是**对象占用空间大**，另一个是**对象存活时间长**。\n\n主垃圾回收器 考虑晋升的都是大对象，复制会花费时间多，所以采用**标记 - 清除（Mark-Sweep）**的算法进行垃圾回收。\n\n1. 标记阶段从一组根元素开始，递归遍历这组根元素，在这个遍历过程中，能到达的元素称为**活动对象**，没有到达的元素就可以判断为**垃圾数据**。\n2. 垃圾清除阶段\n3. **标记 - 整理（Mark-Compact）**：因为清除算法会产生大量不连续的内存碎片，所以整理算法在标记后不直接清除，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。\n\n### **优化策略**\n\n#### 并行回收\n\n所谓并行回收，是指垃圾回收器在主线程上执行的过程中，还会开启多个协助线程，同时执行同样的回收工作，其工作模式如下图所示：  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174513.png)\n\n#### 增量回收\n\njavascript 的 GC 策略无法避免一个问题： **GC 时，停止响应其他操作**。这种行为叫做**全停顿（Stop-The-World）**。\n\n为了降低老生代的垃圾回收而造成的卡顿，V8 将标记过程分为一个个的子标记过程，同时让垃圾回收标记和 JavaScript 应用逻辑交替进行，直到标记阶段完成，我们把这个算法称为**增量标记（Incremental Marking）算法**。  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174526.png)\n\n使用增量标记算法，可以把一个完整的垃圾回收任务拆分为很多小的任务，这些小的任务执行时间比较短，可以穿插在其他的 JavaScript 任务中间执行，这样当执行上述动画效果时，就不会让用户因为垃圾回收任务而感受到页面的卡顿了。\n\n这有和 React 通过 Fiber 更新策略有着异曲同工之妙。\n\n##### 如何实现\n\n增量标记的算法，比全停顿的算法要稍微复杂，这主要是因为增量回收是并发的（concurrent），要实现增量执行，需要满足两点要求\n\n1. 垃圾回收可以被随时暂停和重启，暂停时需要保存当时的扫描结果，等下一波垃圾回收来了之后，才能继续启动。\n2. 在暂停期间，被标记好的垃圾数据如果被 JavaScript 代码修改了，那么垃圾回收器需要能够正确地处理。\n\n在没有采用增量算法之前，V8 使用黑色和白色来标记数据。在执行一次完整的垃圾回收之前，垃圾回收器会将所有的数据设置为白色，用来表示这些数据还没有被标记，然后垃圾回收器在会从 GC Roots 出发，将所有能访问到的数据标记为黑色。遍历结束之后，被标记为**黑色的数据就是活动数据**，那些**白色数据就是垃圾数据**\n\n如果内存中的数据只有两种状态，非黑即白，那么当你暂停了当前的垃圾回收器之后，再次恢复垃圾回收器，那么垃圾回收器就不知道从哪个位置继续开始执行了。\n\n为了解决这个问题，V8 采用了三色标记法，除了黑色和白色，还额外引入了灰色：\n\n- 黑色表示这个节点被 GC Root 引用到了，而且该节点的子节点都已经标记完成了 ;\n- 灰色表示这个节点被 GC Root 引用到，但子节点还没被垃圾回收器标记处理，也表明目前正在处理这个节点；\n- 白色表示这个节点没有被访问到，如果在本轮遍历结束时还是白色，那么这块数据就会被收回。\n\n#### 并发回收机制\n\n所谓并发回收，是指**主线程在执行 JavaScript 的过程中，辅助线程能够在后台完成执行垃圾回收的操作**。并发标记的流程大致如下图所示：\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174538.png)\n\n并发回收是这三种技术中最难的一种，这主要由以下两个原因导致的：\n\n- 第一，当主线程执行 JavaScript 时，堆中的内容随时都有可能发生变化，从而使得辅助线程之前做的工作完全无效；\n- 第二，主线程和辅助线程极有可能在同一时间去更改同一个对象，这就需要额外实现读写锁的一些功能了。\n\n不过，这三种技术在实际使用中，并不是单独的存在，通常会将其融合在一起使用，V8 的主垃圾回收器就融合了这三种机制，来实现垃圾回收，那它具体是怎么工作的呢？你可以先看下图：\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174549.png)\n\n可以看出来，主垃圾回收器同时采用了这三种策略：\n\n- 首先主垃圾回收器主要使用并发标记，我们可以看到，在主线程执行 JavaScript，辅助线程就开始执行标记操作了，所以说标记是在辅助线程中完成的。\n- 标记完成之后，再执行并行清理操作。主线程在执行清理操作时，多个辅助线程也在执行清理操作。\n- 另外，主垃圾回收器还采用了增量标记的方式，清理的任务会穿插在各种 JavaScript 任务之间执行。\n\n### 合理利用\n\n#### 合理应用闭包\n\n```JavaScript\nfunction foo() {\n  var temp_object = new Object();\n  temp_object.x = 1;\n  temp_object.y = 2;\n  temp_object.array = new Array(200000);\n  /**\n   *   使用temp_object\n   */\n  let closure = temp_object.x;\n  return function() {\n    console.log(temp_object.x); // 错误：闭包引用的整个temp 对象\n    console.log(closure); //正确：闭包引用的仅仅是一个 closure 的变量\n  };\n}\n```\n\n#### JS 引用 DOM\n\n**只有同时满足 DOM 树和 JavaScript 代码都不引用某个 DOM 节点，该节点才会被作为垃圾进行回收。**\n\n#### 内存膨胀\n\n额外使用过多的内存有可能是没有充分地利用好缓存，也有可能加载了一些不必要的资源。通常表现为内存在某一段时间内快速增长，然后达到一个平稳的峰值继续运行。\n\n比如**一次性加载了大量的资源**，内存会快速达到一个峰值。\n\n要避免内存膨胀，我们需要合理规划项目，充分利用缓存等技术来减轻项目中不必要的内存占用。\n\n#### 频繁的垃圾回收\n\n那就是频繁使用大的临时变量，导致了新生代空间很快被装满，从而频繁触发垃圾回收。频繁的垃圾回收操作会让你感觉到页面卡顿。\n\n为了解决频繁的垃圾回收的问题，你可以考虑将这些临时变量设置为全局变量。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/V8-%E6%98%AF%E6%80%8E%E4%B9%88%E6%89%A7%E8%A1%8C%E5%8A%A0%E6%B3%95%E6%93%8D%E4%BD%9C%E7%9A%84":{"title":"V8 是怎么执行加法操作的？","content":"\nV8 是怎么执行加法操作的？\n\n1. 把第一个表达式 (AdditiveExpression) 的值赋值给左引用 (lref)。\n2. 使用 GetValue(lref) 获取左引用 (lref) 的计算结果，并赋值给左值。\n3. 使用 ReturnIfAbrupt(lval) 如果报错就返回错误。\n4. 把第二个表达式 (MultiplicativeExpression) 的值赋值给右引用 (rref)。\n5. 使用 GetValue(rref) 获取右引用 (rref) 的计算结果，并赋值给 rval。\n6. 使用 ReturnIfAbrupt(rval) 如果报错就返回错误。\n7. 使用 ToPrimitive(lval) 获取左值 (lval) 的计算结果，并将其赋值给左原生值 (lprim)。\n8. 使用 ToPrimitive(rval) 获取右值 (rval) 的计算结果，并将其赋值给右原生值 (rprim)。\n9. 如果 Type(lprim) 和 Type(rprim) 中有一个是 String，则：\n   - 把 ToString(lprim) 的结果赋给左字符串 (lstr)；\n   - 把 ToString(rprim) 的结果赋给右字符串 (rstr)；\n   - 返回左字符串 (lstr) 和右字符串 (rstr) 拼接的字符串。\n10. 把 ToNumber(lprim) 的结果赋给左数字 (lnum)。\n11. 把 ToNumber(rprim) 的结果赋给右数字 (rnum)。\n12. 返回左数字 (lnum) 和右数字 (rnum) 相加的数值。\n\n通俗地理解，V8 会提供了一个 ToPrimitve 方法，其作用是将 a 和 b 转换为原生数据类型，其转换流程如下：\n\n- 先检测该对象中是否存在 valueOf 方法，如果有并返回了原始类型，那么就使用该值进行强制类型转换；\n- 如果 valueOf 没有返回原始类型，那么就使用 toString 方法的返回值；\n- 如果 vauleOf 和 toString 两个方法都不返回基本类型值，便会触发一个 TypeError 的错误。  \n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174411.png)\n\n在执行加法操作的时候，V8 会通过 ToPrimitve 方法将对象类型转换为原生类型，最后就是两个原生类型相加，\n\n- 如果其中一个值的类型是字符串时，则另一个值也需要强制转换为字符串，然后做字符串的连接运算。\n- 在其他情况时，所有的值都会转换为数字类型值，然后做数字的相加。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Verdaccio":{"title":"Verdaccio","content":"\n[Verdaccio](https://verdaccio.org/)\n\n# Verdaccio\n\n安装运行 Verdaccio 非常简单，您只需运行：\n\n```\nnpm install --global verdaccio\n```\n\n在全局安装 Verdaccio 应用，然后在 shell 中输入：\n\n```\nverdaccio\n```\n\n即可通过  `localhost:4837`  访问您的本地代理 npm 仓库，别忘了在您的项目根目录创建  `.npmrc`  文件，并在文件中将 npm 仓库地址改写为您的本地代理地址：\n\n```\nregistry=\"http://localhost:4873/\"\n```\n\n大功告成 🙌！每当您执行  `lerna publish`  时，子项目所构建成的 package 将会发布在本地 npm 仓库中，而当您执行  `lerna bootstrap`  时，Verdaccio 将会放行，让您成功从远程 npm 仓库中拉取相应的代码。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vite":{"title":"Vite","content":"\n# Vite\n\n安装，创建新项目\n\n```bash\nyarn create vite-app \u003cproject-name\u003e\n```\n\n## 初次启动\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174606.png)\n\n## main.js 路径改写\n\n```JavaScript\nimport { createApp } from \"/@modules/vue.js\";\nimport App from \"/src/App.vue\";\nimport \"/src/index.css?import\";\n\ncreateApp(App).mount(\"#app\");\n```\n\n### **为什么需要@moudules**\n\nvite 内部启动一个 koa 服务，而 ES Modules 是静态分析编译，无法读取到 node_modules 里的文件。\n\n另一方面，把文件路径都写进同一个@modules 中，类似面向切片编程，可以从中再进行其他操作而不影响其他部分资源，比如后续可加入 alias 等其他配置。\n\n通过 koa middleware 正则匹配上带有`@modules`的资源，再通过 require('XXX')获取到导出资源并返给浏览器。\n\n## css update 函数\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174622.png)\n\n```JavaScript\nimport { updateStyle } from \"/vite/client\";\nconst css =\n  \"#app {\\n  font-family: Avenir, Helvetica, Arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-align: center;\\n  color: #2c3e50;\\n  margin-top: 60px;\\n}\\n\";\nupdateStyle('\"2418ba23\"', css);\nexport default css;\n```\n\n### 热更新\n\nvite 的热更新主要有四步：\n\n1. 通过 watcher 监听文件改动；\n2. 通过 server 端编译资源，并推送新资源信息给 client ；\n3. 需要框架支持组件 rerender/reload ；\n4. client 收到资源信息，执行框架 rerender 逻辑。\n\n在 client 端，Websocket 监听了一些更新的消息类型，然后分别处理：\n\n- **vue-reload** —— vue 组件更新：通过 import 导入新的 vue 组件，然后执行 `HMRRuntime.reload`\n- **vue-rerender** —— vue template 更新：通过 import 导入新的 template ，然后执行 `HMRRuntime.rerender`\n- **vue-style-update** —— vue style 更新：直接插入新的 stylesheet\n- **style-update** —— css 更新：document 插入新的 stylesheet\n- **style-remove** —— css 移除：document 删除 stylesheet\n- **js-update** —— js 更新：直接执行\n- **full-reload** —— 页面 roload：使用 `window.reload` 刷新页面\n\n在 server 端，通过 watcher 监听页面改动，根据文件类型判断是 js Reload 还是 vue Reload。通过解析器拿到当前文件内容，并与缓存里的上一次解析结果进行比较，如果发生改变则执行相应的 render。\n\n## .vue 文件\n\n```JavaScript\n#HelloWorld.vue?type=template\nimport { toDisplayString as _toDisplayString, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock } from \"/@modules/vue.js\"\n\nconst _hoisted_1 = /*#__PURE__*/_createVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Edit \"),\n  /*#__PURE__*/_createVNode(\"code\", null, \"components/HelloWorld.vue\"),\n  /*#__PURE__*/_createTextVNode(\" to test hot module replacement.\")\n], -1 /* HOISTED */)\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(\"h1\", null, _toDisplayString($props.msg), 1 /* TEXT */),\n    _createVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = $event =\u003e ($data.count++))\n    }, \"count is: \" + _toDisplayString($data.count), 1 /* TEXT */),\n    _hoisted_1\n  ], 64 /* STABLE_FRAGMENT */))\n}\n```\n\n```JavaScript\n### HelloWorld.vue\nimport HelloWorld from '/src/components/HelloWorld.vue'\n\nconst __script = {\n  name: 'App',\n  components: {\n    HelloWorld\n  }\n}\n\nimport { render as __render } from \"/src/App.vue?type=template\"\n__script.render = __render\n__script.__hmrId = \"/src/App.vue\"\n__script.__file = \"D:\\\\study\\\\github\\\\待删除\\\\myvit\\\\src\\\\App.vue\"\nexport default __script\n```\n\n- type 为空时表示处理`script`标签，使用`compileSFCMain`方法返回`js`内容\n- type 为 `template` 时表示处理 `template` 标签，使用 `compileSFCTemplate` 方法返回 `render` 方法\n- type 为 `style` s 时表示处理 `style` 标签，使用 `compileSFCStyle` 方法返回 `css` 文件内容\n\n这里就是通过引入 vue 不同的编译时函数进行编译\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Volta":{"title":"Volta","content":"\n# Volta\n\n[Volta](https://volta.sh/)  是一个 JavaScript 工具管理器，它可以让我们轻松地在项目中锁定 node，npm 和 yarn 的版本。你只需在安装完 Volta 后，在项目的根目录中执行  `volta pin`  命令，那么无论您当前使用的 node 或 npm（yarn）版本是什么，volta 都会自动切换为您指定的版本。\n\n因此，除了使用 Docker 和显示在文档中声明 node 和 npm（yarn）的版本之外，您就有了另一个锁定环境的强力工具。\n\n而且相较于 nvm，Volta 还具有一个诱人的特性：当您项目的 CLI 工具与全局 CLI 工具不一致时，Volta 可以做到在项目根目录下自动识别，切换到项目指定的版本，这一切都是由 Volta 默默做到的，开发者不必关心任何事情。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vscode":{"title":"VSCode","content":"\n# VSCode\n\n## VSCode 插件\n\n- `Parameter Hints` - 功能：提示函数的参数类型及消息\n- `ESLint` 功能：代码规范检查\n- `Prettier - Code formatter` 功能：代码美化，自动格式化成规范格式\n- `Project Manager` 功能：项目管理插件，当开发多个项目时，可以快速跳转\n- `Path Intellisense` 功能：路径智能提示\n- `Image preview`功能：当引入路径为图片时，可以预览当前图片\n- `GitLens` 功能：增强了`git`功能，支持在 VSCode 查看作者、修改时间等等\n- `One Dark Pro` 主题\n- `vscode-icons` 功能：文件图标\n- [[Github Copilot ]]:智能 AI 写代码，这是未来\n- `project manager`: 并行多项目开发必备\n- `npm Intellisense` : 自动引入 npm 包\n- `javascript console utils` : shift + command + L 快速打 log\n- `Code Spell Checker` : 检查单词拼写\n- Tailwind CSS IntelliSense: tailwind的提示\n- `remote ssh`: 连接远程服务器\n- [[Wallaby.js]]\n\n## vscode 快捷键\n\n- 按`Ctrl + Alt +向上箭头`(Mac: `command + Option +向上箭头`)将光标添加到上面，按`Ctrl + Alt +向下箭头`(Mac: `command + Option + 向下箭头`)将光标添加到下面。\n- `shift + command + C` 打开外部终端，配合[[终端工具]]\n\n# VSCode 源码\n\n- [从 VSCode 源码中我看到的... - 知乎](https://zhuanlan.zhihu.com/p/631272487)\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue":{"title":"Vue","content":"\n# Vue\n\nVue 最大的特点是上手简单，框架的设计和文档对新手极其友好。但这并不代表它只是个简单的框架，当你需要实现一些更加深入的自定义功能时（比如自定义组件、自定义指令、JSX 等），你会发现它也提供了友好的支持能力。\n\n## 虚拟 DOM\n\n在 Vue 3.0 中，虚拟 DOM 通过动静结合的模式来进行突破：\n\n1. 通过模版静态分析生成更优化的虚拟 DOM 渲染函数，将模版切分为块（if/for/slot)；\n2. 更新时只需要直接遍历动态节点，虚拟 DOM 的更新性能与模版大小解耦，变为与动态节点的数量相关。\n\n[[Vue2源码阅读 |Vue2 源码阅读]]  \n[[Vue 问题]]  \n[[Vue Router|Router]]  \n[[Vite]]  \n[[Vue3 |Vue3 学习]]\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue-%E4%BC%98%E5%8C%96":{"title":"Vue 优化","content":"\n## Vue 优化\n\n### **编码优化**\n\n尽量不要将所有的数据都放在 data 中，data 中的数据都会增加 getter 和 setter，会收集对应的 watcher\n\nvue 在 v-for 时给每项元素绑定事件尽量用事件代理\n\n拆分组件( 提高复用性、增加代码的可维护性,减少不必要的渲染 )\n\nv-if 当值为 false 时内部指令不会执行,具有阻断功能，很多情况下使用 v-if 替代 v-show\n\n合理使用路由懒加载、异步组件\n\nObject.freeze 冻结数据\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue-%E5%92%8C-React-%E5%B7%AE%E5%BC%82":{"title":"Vue 和 React 差异","content":"\n# [[Vue]] 和 [[React]] 差异\n\nVue 和 React 可以说是用两个用户的角度去设计的框架，  \nVue 想要为程序员群体提供一个性能上过的去，开发体验良好的使用框架  \n而 React 更专注于 UI 对于用户的使用体验，无论是 Fiber, 优先级设置，idleCallback 的引入都是为了这一目的，但是这也为程序员带来了一些学习上过的负担，也给程序员带来了技术选择的自由\n\n## React\n\n### 编译时优化\n\n```JavaScript\nfunctinon react(){\n  return \u003cdiv\u003e\u003c/div\u003e\n}\n\n===\u003e\nfunction react(){\n    return React.creatElement(div,'')\n}\n```\n\n因为 js 是一种运行时的动态语言，所以无法做编译时优化\n\n### 运行时优化\n\n触发渲染：this.setState,props,事件啊\n\n触发后进行全局 DOM diff，所以将 DOM 树拆分成一个个 fiber\n\n1. 调度选择优先级比较高的任务, 小顶堆\n2. 协调 计算要执行的任务 -\u003e 执行任务 计算系统空闲时间是否足够\n3. 提交 根据提交的内容修改 =\u003e render\n\n### React v17\n\n在 React V17 中， React 不会再将事件处理添加到 document 上，而是将事件处理添加到渲染 React 树的根 DOM 容器中.也就是事件委托\n\n## Vue\n\nVue 是模板代码\n\n运行时编译（runtime）\n\nVue 的 template 模板只有自己的编译器才能编译\n\n### 编译时优化\n\n1. HTML 转化成 AST（抽象语法树）\n\n   使用了大量正则进行标签匹配，优化静态节点做上标记，提取 if，@，v-等方法\n\n   通过一个栈，进行标签拼接\n\n2. options.optimize 进行静态节点优化\n\n   在静态节点标记 Ast static\n\n   静态节点创建提升 VNode \\_\\_static\\_\\_\n\n3. 优化后的 AST 转换成代码\n\n### 运行时优化\n\nvue 双向数据绑定\n\nvue1 每一个动态数据对应一个 watcher 占用内存大\n\nvue2 Watcher 是组件级的 =\u003e 所以需要 dom diff 也是组件级\n\n## 更新性能\n\n简单来说，在 React 应用中，当某个组件的状态发生变化时，它会以该组件为根，重新渲染整个组件子树。\n\n当然我们可以使用 `PureComponent`，或是手动实现 `shouldComponentUpdate` 方法，来规避不必要的渲染。\n\n在 Vue 应用中，组件的依赖是在渲染过程中`自动追踪`的，因此系统能`精确知晓`哪个组件需要被重渲染。\n\n从理论上看，Vue 的渲染更新机制`更加细粒度`，也更加`精确`。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue-%E5%92%8C-react-%E7%9A%84-hooks-%E5%8C%BA%E5%88%AB":{"title":"Vue 和 react 的 hooks 区别","content":"\n# Vue 和 react 的 hooks 区别\n\nvue 的 hook 思想来源于 react\n\n相同点：\n\n1. 基于函数的组合式 API 提供了与 React Hooks 同等级别的逻辑组合能力\n- vue hook 目的：让你在函数组件里“钩入” value(2.x 中的 data) 及生命周期等特性的函数\n- react hook 的目标：让你在不编写 class 的情况下使用 state 以及其他的 React 特性（生命周期）\n\n2. 都是在版本中出现\n- vue3.0 版本出现 hook\n- react16.8 版本出现 hook\n\n不同点：\n\n1. hook 执行次数  \n    组合式 API（vue hook） 的 `setup() 函数只会被调用一次`； `react数据更改的时候，会导致重新render，重新render又会重新把hooks重新注册一次`。\n\n使用 Vue 组合式 API（vue hook） 的代码会是：\n\n- 一般来说更符合惯用的 JavaScript 代码的直觉；\n- 不需要顾虑调用顺序，也可以用在条件语句中；\n- 不会在每次渲染时重复执行，以降低垃圾回收的压力；\n- 不存在内联处理函数导致子组件永远更新的问题，也不需要 useCallback；\n- 不存在忘记记录依赖的问题，也不需要“useEffect”和“useMemo”并传入依赖数组以捕获过时的变量。Vue 的自动依赖跟踪可以确保侦听器和计算值总是准确无误。\n\n2. 实现原理不同\n\n    hook 执行次数不同，是因为实现原理不同。  \n    react hook 底层是`基于链表实现`，调用的条件是每次组件被 render 的时候都会顺序执行所有的 hooks；  \n    vue hook 是`基于用proxy实现的数据响应机制`，只要任何一个更改 data 的地方，相关的 function 或者 template 都会被重新计算，因此避开了 react 可能遇到的性能上的问题。\n\n3. 学习成本  \n    react hook 的上手成本相对于 vue 会难一些，vue 天生规避了一些 react 中比较难处理的地方\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue-%E9%97%AE%E9%A2%98":{"title":"Vue 问题","content":"\n# Vue 问题\n\n## v-show 与 v-if 区别\n\n1. v-show 只是 display：none 和 display：block 的切换。而 v-if 是将 DOM 移除，并重新渲染\n2. v-show 适合 频繁切换的模块，一次渲染则使用 v-if\n3. 使用 v-if 时可以默认设 false 让其不渲染，等待需要时再进行 nextTick 异步渲染\n\n## 计算属性和 watch 的区别\n\n计算属性其实是一个惰性的 Watcher，他在内部维护的一个 `diary` 根据 产生的新值是否有变化来判断是否要通知 `notify` 更新视图,是一种为了减少不必要渲染的优化措施。\n\n`computed` 可以监听多个值，动态返回结果，`watch` 是一个过程，在值变化的时候出一个回调并做一些事。所以在需要一个动态值时，就使用 `computed`，需要知道值 的变化后执行逻辑使用 `watch`。\n\n#### computed 是一个对象时，它有哪些选项？\n\nget()和 set()\n\n#### computed 和 methods 有什么区别？\n\ncomputed 不能接受参数，具有缓存，可以监听动态值\n\n#### computed 是否能依赖其它组件的数据？\n\ncomputed 可以依赖其它 computed，甚至是其它组件的 data。\n\n#### watch 是一个对象时，它有哪些选项？\n\n- deep 是否深度\n- handler 执行的函数\n- immediate 是否立即执行\n\n## Watch 中的 deep:true 是如何实现的\n\n当你设置 deep：true 的时候，源码内部会对对象进行递归访问，在此过程中不断的进行依赖收集。但这种情况会增加大量的依赖收集的性能上的损耗，可以通过 watch 指定字符串的方式减少。\n\n## 组件中 data 为什么是函数\n\n组件是用来复用的，注册组件本质上是创造了一个组件构造器的引用。使用对象的话，会公用一个引用地址，造成一个组件值之间的相互影响，这明显不是我们想要看到的。所以使用函数每次都返回一个新的对象。\n\n## 自定义组件的 v-model 是怎样实现的\n\n组件的 v-model 是 Vue 为我们写的一种语法糖，他为我们传入一个值为`value`的`props`和绑定了一个`input`的`emit`事件，将值传递上来赋值。在制作一些特殊组件值需要重新命名时，可以使用`model`进行`value`和`input` 的改名。另外 Vue 在 2.+的时候推出了一个修饰.sync 支持多个 v-model 值绑定，只需要将事件变成`‘updata：value’`\n\n## nextTick 实现原理\n\nnextTick 通过去检测兼容性，遵循优先使用微任务的原则进行降级，分别是 promise.then =\u003e mutationObserver = \u003e setImmediate =\u003e setTimeout。\n\n在 nextTick 接收到 fn 的时候，将其 push 到一个队列中，到下个任务队列时进行统一的执行清空\n\n## mixins 原理知道吗？\n\n`mixins`在 Vue 内部是将 mixins 和组件的`options`传入一个`margeOptions`函数，这个函数我觉得`assign`有点像，前者是一个默认属性，当组件有同名属性时，会使用后者覆盖前者，数据对象`data`会进行递归合并，`computed`等会进行键值对比较，优先组件 Key 值。\n\n优点：逻辑相同的代码都可以抽离出来，放入 mixins 实现复用\n\n缺点：因为是根据 Key 进行覆盖，容易出现命名空间混乱导致不想要发生的覆盖\n\n## **vue3 和 vue2 双向绑定的区别,优化点在哪,用 proxy 为什么是一种优化**\n\nVue3 采用了 proxy 进行数据拦截，这是一个 ES6 自带的一个 API，支持拦截整个对象几乎所有操作，不需要像 Vue2 一样对每个 Key 进行循环递归生成 Watcher。\n\nVue2 在收集依赖的时候每个 Key 都有一个依赖收集器，Vue 使用 weakMap 来收集依赖，减少依赖收集的开销\n\n## 你知道 vue 中 key 的作用和工作原理吗？说说你对它的理解。\n\n1. key 的作用是为了高效的更新虚拟 DOM，其原理是 Vue 在进行 patch 过程中可通过 key 精准的判断两个节点是否是同一个，从而避免频繁的更新不同元素，使得整个 patch 过程更加高效，减少 DOM 操作。\n2. 另外，若不设置 key 还可能在列表更新时引发一些隐蔽的 bug\n\n## 你怎么理解 vue 中的 diff 算法？\n\n1. DOM 操作是奢侈的，diff 算法通过比对新旧 Vnode 树，将变化的地方更新到新 DOM 上，另外将时间复杂度降低到 O(n)\n2. Vue2.x 为了降低 Weather 粒度，每个组件只有一个 Weather，引入 diff 才能精准找到变化的地方\n3. diff 过程整体遵循深度优先、同层比较的策略；两个节点之间比较会根据它们是否拥有子节点或者文 本节点做不同操作；比较两组子节点是算法的重点，首先假设头尾节点可能相同做 4 次比对尝试，如果 没有找到相同节点才按照通用方式遍历查找，查找结束再按情况处理剩下的节点；借助 key 通常可以非 常精确找到相同节点，因此整个 patch 过程非常高效。\n\n## 谈一谈对 vue 组件化的理解\n\n1. 组件是独立和可复用的代码组织单元。组件系统是 Vue 核心特性之一，它使开发者使用小型、独立和通常可复用的组件构建大型应用；\n2. 组件化开发能大幅提高应用开发效率、测试性、复用性等；\n3. vue 中常见组件化技术有：属性 prop，自定义事件，插槽等，它们主要用于组件通信、扩展等；\n4. 合理的划分组件，有助于提升应用性能；\n5. 组件应该是高内聚、低耦合的；\n6. 遵循单向数据流的原则。\n\n## MVC、MVP 和 MVVM 的理解\n\n- 这三者都是框架模式，它们设计的目标都是为了解决 Model 和 View 的耦合问题。\n- MVC 模式出现较早主要应用在后端，如 Spring MVC、ASP.NET MVC 等，在前端领域的早期也有应 用，如 Backbone.js。它的优点是分层清晰，缺点是数据流混乱，灵活性带来的维护性问题。\n- MVP 模式在是 MVC 的进化形式，Presenter 作为中间层负责 MV 通信，解决了两者耦合问题，但 P 层 过于臃肿会导致维护问题。\n- MVVM 模式在前端领域有广泛应用，它不仅解决 MV 耦合问题，还同时解决了维护两者映射关系的 大量繁杂代码和 DOM 操作代码，在提高开发效率、可读性同时还保持了优越的性能表现。\n\n## vue 性能优化的方法\n\n1. 使用路由懒加载\n2. keep-alive 缓存页面\n3. 长列表性能优化\n\n- 虚拟列表\n- 不展示，可以通过 Object.freeze 冻结数据\n\n4. 图片懒加载\n5. 第三方库按需引入\n\n## vue3 新特性\n\n1. 优化 diff 算法，跳过一些静态节点和静态树\n2. 引入 Composition API\n3. hooks 写法使逻辑更加内聚\n4. 通过 Tree-shark 进行优化包体积\n5. 使用 proxy 实现双向绑定\n\n## vuex 使用及理解\n\n## vue 中组件之间的通信方式？\n\n1. 跨组件通信\n\n   - Provide 和 inject // 不是响应式的，\n   - `$attrs` / `$listeners`\n\n2. 父子通信\n\n   - `Prop ` 和 `\\$emit`\n   - `\\$refs`\n   - `$parent` 和 `\\$children`\n\n3. 兄弟通信\n\n   - Vuex\n   - VueBus\n\n4. 组件库通信方式\n   - 自行实现 dispatch 和 broadcast 方法  \n     前者用于向上级派发事件，只要是它的父级（一级或多级以上），都可以在组件内通过 \\$on （或 events，2.x 已废弃）监听到，后者相反，是由上级向下级广播事件的。\n   - 向上/下找到所有/最近的指定组件——findComponentsUpward 通过 Component Name 去寻找\n\n## vue-router 中如何保护指定路由的安全？\n\n## 你知道 nextTick 吗？它是干什么的？实现原理是什么？\n\n- vue 如何检测到 DOM 更新完毕呢？  \n  能监听到 DOM 改动的 API：MutationObserver\n\n- 理解 MutationObserver  \n  MutationObserver 是 HTML5 新增的属性，用于监听 DOM 修改事件，能够监听到节点的属性、文本内容、子节点等的改动，是一个功能强大的利器。\n\nVue 的 nextTick 采用的是降级策略， 优先使用的是微任务的 Promise 和 MutationObserver 兼容性不支持则降级为宏任务的 setImmediate、MessageChannel、setTimeout.\n\n## 谈一谈你对 vue 响应式原理的理解？\n\n1. 由于 Vue 执行一个组件的 `render` 函数是由 `Watcher` 去代理执行的，`Watcher` 在执行前会把 `Watcher` 自身先赋值给 `Dep.target` 这个全局变量，等待响应式属性去收集它\n2. 这样在哪个组件执行 `render` 函数时访问了响应式属性，响应式属性就会精确的收集到当前全局存在的 `Dep.target` 作为自身的依赖\n3. 在响应式属性发生更新时通知 `Watcher` 去重新调用 `vm._update(vm._render())` 进行组件的视图更新\n\n## 手写一个简单的 diff 算法\n\n```JavaScript\nfunction patchNode (oldNode, newNode) {\n    const oldChildren = oldNode.children\n    const newChildren = newNode.children\n    // 老的有子节点，新的没有就移除\n    if (oldChildren.length \u0026\u0026 !newChildren.length) {\n        // remove oldChildren\n    }\n    // 老的没有子节点，新的有 就 清空老节点并将新节点加入到DOM下\n    else if (oldChildren.length \u0026\u0026 !newChildren.length) {\n        // oldChildren =null\n        // Dom.append(newChildren)\n    }\n    // 都没有 就只做文本的替换\n    else if (!oldChildren.length \u0026\u0026 !newChildren.length) {\n        // 替换文本\n    }\n    else {\n        update(oldChildren, newChildren)\n    }\n\n}\nfunction someNode () {\n    // 优先判断 key 是否相同\n    // 异步组件 判断 asyncFactory  是否相同\n    // 同步组件 判断input,data,isComment  是否相同\n}\nfunction update (oldNode, newNode) {\n    let newStart\n    let oldStart\n    let oldEnd\n    let newEnd\n    while (oldStart \u003c= oldEnd \u0026\u0026 newStart \u003c= newEnd) {\n        // someNode 判断后 都进入 patchVnode\n        //新头和旧头\n        if (newStart === oldStart) {\n            newStart++\n            oldStart++\n        }\n        //旧尾和新尾\n        else if (oldEnd === newEnd) {\n            oldEnd--\n            newEnd--\n        }\n        //旧头和新尾\n        else if (oldStart === newEnd) {\n            oldStart++\n            newEnd--\n        }\n        //新头和旧尾\n        else if (newStart === oldEnd) {\n            newStart++\n            oldEnd--\n        }\n        //都找不到 就遍历oldNode 生成一个 {key:index} 的Map\n        let oldKeyToIdx = {}\n        if (oldKeyToIdx[newStart.key]) {\n            // move 这个节点到 oldStart 之前 然后继续遍历\n            newStart++\n        }\n        // 如果找不到，或者 key 相同 但内容不相同\n        else {\n            //createElm创建一个新的DOM节点。\n        }\n    }\n    //循环完\n    // 新的比老的长 addVnodes 多出来的节点\n    // 老的比新的长 removeVnodes 多出来的节点\n}\n```\n\n## vuex刷新后数据会丢失，除了把数据放本地存储外，你还知道其他什么方法吗？\n\n- 使用持久化插件：可以使用一些Vuex插件来实现数据持久化，如vuex-persistedstate、vuex-persist、vuex-electron等。本质也是存在 localStrorage、cookie 中\n- 存储在后端数据库中，这种方式可以在多个端保存进度，缺点是会与后端频繁的交互\n- 存在 cookie 中，但Cookie有大小限制，所以适合存储较小的数据量。\n- 使用LocalStorage或SessionStorage，这个是最常用的\n- 使用URL参数， 这个跳转的时候切换状态时经常用到，但是也因为长度限制只适合一些状态的转化\n\n## 有一个上线的项目它是vue2写的，如果想升级到vue3，但是没有太多的专用时间来做这件事，此时你会怎么做？\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue-Router":{"title":"Vue Router","content":"\n# Vue Router\n\n## 监听实现\n\n## router-link\n\n## router-view\n\n## H5 history API\n\n```JavaScript\n// 在history中向后跳转\nwindow.history.back();\nwindow.history.go(-1);\n\n// 向前跳转\nwindow.history.forward();\nwindow.history.go(1);\n\n// 当前页\nwindow.history.go(0);\n\n//pushState()需要三个参数：一个状态对象，一个标题（目前被忽略）和一个URL（可选的）。\nvar stateObj = { foo: 'bar' };\nwindow.history.pushState(stateObj, 'page 2', 'bar.html');\n```\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue2%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB":{"title":"Vue2 源码阅读","content":"\n# Vue2 源码阅读\n\n## 准备工作\n\nvue 中使用的类型检查工具是 Flow.js 有点类似 TypeScript 。\n\n### 目录\n\n```JavaScript\nsrc\n├── compiler # 编译相关 包括把模板解析成 ast 语法树，ast 语法树优化，代码⽣成等功能。\n├── core # 核⼼代码  包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、⼯具函数等等。\n├── platforms # 不同平台的⽀持 web和 weex入口，\n├── server # 服务端渲染\n├── sfc # .vue ⽂件解析\n├── shared # 共享代码\n```\n\n### 选择版本\n\n- Runtime Only\n\n  我们在使用 Runtime Only 版本的 Vue.js 的时候，通常需要借助如 webpack 的 vue-loader ⼯具把 .vue ⽂ 件编译成 JavaScript，因为是在编译阶段做的，所以它只包含运行时的 Vue.js 代码，因此代码体积也会 更轻量。\n\n- Runtime+Compiler\n\n```JavaScript\n// 需要编译器的版本\nnew Vue({\ntemplate: '\u003cdiv\u003e{{ hi }}\u003c/div\u003e'\n})\n\n```\n\n## 从入口开始\n\n初始化全局 api\n\n```JavaScript\ninitGlobalAPI(Vue)\n\n//\nexport function initGlobalAPI (Vue: GlobalAPI) {\n    Vue.util = { warn, extend, mergeOptions, defineReactive, };\n    Vue.set = set;\n    Vue.delete = del;\n    Vue.nextTick = nextTick; // TODO：nnextTick\n\n    Vue.options = Object.create(null);\n    ASSET_TYPES.forEach((type) =\u003e {\n        Vue.options[type + \"s\"] = Object.create(null);\n    });\n\n    Vue.options._base = Vue;\n\n    extend(Vue.options.components, builtInComponents);\n\n    initUse(Vue); // TODO：initUse\n    initMixin(Vue); // TODO：initMixin\n    initExtend(Vue);\n    initAssetRegisters(Vue); // 注册实现Vue.component/directive/filter\n}\n\n```\n\n传入的 Vue 将生命周期等混入\n\n```JavaScript\n//src\\core\\instance\\index.js\nfunction Vue (options) {\n    if (process.env.NODE_ENV !== 'production' \u0026\u0026\n        !(this instanceof Vue)\n    ) {\n        warn('Vue is a constructor and should be called with the `new` keyword')\n    }\n    this._init(options)\n}\n\ninitMixin(Vue)\nstateMixin(Vue)\neventsMixin(Vue)\nlifecycleMixin(Vue)\nrenderMixin(Vue)\n\nexport default Vue\n```\n\n**所以 Vue 本质上就是⼀个用 Function 实现的 Class，然后它的原型 prototype 以及它本⾝都扩展了⼀系列的 方法和属性，**\n\n### init\n\n```JavaScript\n// src/core/instance/init.js\nexport function initMixin (Vue: Class\u003cComponent\u003e) {\n  Vue.prototype._init = function (options?: Object) {\n    const vm: Component = this\n    // a uid\n    vm._uid = uid++\n    if (options \u0026\u0026 options._isComponent) {\n      initInternalComponent(vm, options)\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      )\n    }\n    // expose real self\n    vm._self = vm\n    initLifecycle(vm) // $parent,$root,$children,$refs\n    initEvents(vm) // 处理父组件传递的事件和回调\n    initRender(vm) // $slots,$scopedSlots,_c,$createElement\n    callHook(vm, 'beforeCreate')\n    initInjections(vm) // 获取注入数据\n    initState(vm) // 初始化props，methods，data，computed，watch\n    initProvide(vm) // 提供数据注入\n    callHook(vm, 'created')\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n```\n\nVue 初始化主要就干了几件事情，合并配置，初始化生命周期，初始化事件中心，初始化渲染，初始 化 data、props、computed、watcher 等等。\n\n### \\$mount\n\n```JavaScript\nconst mount = Vue.prototype.$mount\nVue.prototype.$mount = function (\n  el?: string | Element,\n  hydrating?: boolean\n): Component {\n  el = el \u0026\u0026 query(el)\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' \u0026\u0026 warn(\n      `Do not mount Vue to \u003chtml\u003e or \u003cbody\u003e - mount to normal elements instead.`\n    )\n    return this\n  }\n\n  const options = this.$options\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    let template = options.template\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template)\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML\n      } else {\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el)\n    }\n    if (template) {\n      options.render = render\n      options.staticRenderFns = staticRenderFns\n\n    }\n  }\n  return mount.call(this, el, hydrating)\n}\n```\n\n首先，它 对 el 做了限制，Vue 不能挂载在 body 、 html 这样的根节点上。\n\n接下来的是很关键的逻辑 —— 如果没有定义 render 方法，则会把 el 或者 template 字符串**转换成 render 方法**。\n\n#### mountComponent\n\n```JavaScript\n// src/core/instance/lifecycle.js\nexport function mountComponent (\n  vm: Component,\n  el: ?Element,\n  hydrating?: boolean\n): Component {\n  vm.$el = el\n  callHook(vm, 'beforeMount')\n\n  let updateComponent\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' \u0026\u0026 config.performance \u0026\u0026 mark) {\n    updateComponent = () =\u003e {\n      const name = vm._name\n      const id = vm._uid\n      const startTag = `vue-perf-start:${id}`\n      const endTag = `vue-perf-end:${id}`\n\n      mark(startTag)\n      const vnode = vm._render()\n      mark(endTag)\n      measure(`vue ${name} render`, startTag, endTag)\n\n      mark(startTag)\n      vm._update(vnode, hydrating)\n      mark(endTag)\n      measure(`vue ${name} patch`, startTag, endTag)\n    }\n  } else {\n    updateComponent = () =\u003e {\n      vm._update(vm._render(), hydrating)\n    }\n  }\n  new Watcher(vm, updateComponent, noop, {\n    before () {\n      if (vm._isMounted \u0026\u0026 !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')\n      }\n    }\n  }, true /* isRenderWatcher */)\n  hydrating = false\n\n  if (vm.$vnode == null) {\n    vm._isMounted = true\n    callHook(vm, 'mounted')\n  }\n  return vm\n}\n```\n\n从上⾯的代码可以看到， mountComponent 核⼼就是先调用 vm.\\_render 方法先⽣成虚拟 Node，再实例化⼀个渲染 Watcher ，在它的回调函数中会调用 updateComponent 方法，最终调用 vm.\\_update 更新 DOM。\n\nWatcher 在这里起到两个作用，⼀个是初始化的时候会执行回调函数，另⼀个是当 vm 实例中的监测 的数据发⽣变化的时候执行回调函数。\n\n函数最后判断为根节点的时候设置 vm.\\_isMounted 为 true ， 表示这个实例已经挂载了，同时执行 mounted 钩子函数。 这里注意 vm.\\$vnode 表示 Vue 实例的父虚拟 Node，所以它为 Null 则表示 当前是根 Vue 的实例。\n\n#### render\n\nVue 的 \\_render 方法是实例的⼀个私有方法，它用来把实例渲染成⼀个虚拟 Node。\n\n```JavaScript\n\u003cdiv id=\"app\"\u003e\n{{ message }}\n\u003c/div\u003e\n```\n\n转化成\n\n```JavaScript\nrender: function (createElement) {\n    return createElement('div', {\n        attrs: {\n            id: 'app'\n        },\n    }, this.message)\n}\n```\n\n#### Virtual DOM\n\nVirtual DOM 就是用⼀个原⽣的 JS 对象去描述⼀个 DOM 节点，所以它比创建⼀个 DOM 的代价要 ⼩很多。\n\n```JavaScript\nexport default class VNode {\n  tag: string | void; // 标签\n  data: VNodeData | void; // 数据\n  children: ?Array\u003cVNode\u003e; // 子节点\n  text: string | void; // 文本\n  elm: Node | void;\n  ns: string | void;\n  context: Component | void; // rendered in this component's scope\n  key: string | number | void;\n  componentOptions: VNodeComponentOptions | void;\n  componentInstance: Component | void; // component instance\n  parent: VNode | void; // component placeholder node\n\n  // strictly internal\n  raw: boolean; // 包含原始HTML？(仅限服务器)。\n  isStatic: boolean; // 是静态节点吗\n  isRootInsert: boolean; // 进入Root必须吗\n  isComment: boolean; // 空注释占位符?\n  isCloned: boolean; // 是克隆节点吗?\n  isOnce: boolean; // 是v-once节点吗?\n  asyncFactory: Function | void; // 异步组件工厂函数。\n  asyncMeta: Object | void;\n  isAsyncPlaceholder: boolean;\n  ssrContext: Object | void;\n  fnContext: Component | void; // 功能节点的真实上下文虚拟机\n  fnOptions: ?ComponentOptions; // for SSR caching\n  devtoolsMeta: ?Object; // 用于存储DevTools的功能渲染上下文\n  fnScopeId: ?string; // functional scope id support\n\n  constructor (\n    tag?: string,\n    data?: VNodeData,\n    children?: ?Array\u003cVNode\u003e,\n    text?: string,\n    elm?: Node,\n    context?: Component,\n    componentOptions?: VNodeComponentOptions,\n    asyncFactory?: Function\n  ) {\n\n  }\n\n  // DEPRECATED: alias for componentInstance for backwards compat.\n  /* istanbul ignore next */\n  get child (): Component | void {\n    return this.componentInstance\n  }\n}\n```\n\n其实 VNode 是对真实 DOM 的⼀种抽象描述，它的核心定义无非就几个关键属性，**标签名、数据、子节点、键值等**，其它属性都是都是用来扩展 VNode 的灵活性以及实现⼀些特殊 feature 的。由于 VNode 只是用来映射到真实 DOM 的渲染，不需要包含操作 DOM 的方法，因此它是非常轻量和简单的。\n\n#### update\n\nVue 的 \\_update 是实例的⼀个私有方法，**它被调用的时机有 2 个，⼀个是首次渲染，⼀个是数据更新的时候；**\n\n```JavaScript\n//src/core/instance/lifecycle.js\nVue.prototype._update = function (vnode: VNode, hydrating?: boolean) {\n    const vm: Component = this\n    const prevEl = vm.$el\n    const prevVnode = vm._vnode\n    const restoreActiveInstance = setActiveInstance(vm)\n    vm._vnode = vnode\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode)\n    }\n    restoreActiveInstance()\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode \u0026\u0026 vm.$parent \u0026\u0026 vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  }\n```\n\n这里逻辑不用看，下面会详细说，我们知道最后会进入`__patch__` 即可\n\n核心方法`__patch__` 区分服务端渲染\n\n```JavaScript\n// src/platforms/web/runtime/index.js\nVue.prototype.__patch__ = inBrowser ? patch : noop\n// src\\platforms\\web\\runtime\\patch.js\n//每个平台都有各⾃的 nodeOps 和 modules\nexport const patch: Function = createPatchFunction({ nodeOps, modules })\n```\n\nVDom 进行 diff 的地方 ，后面再来分析\n\n// TODO:diff\n\n```JavaScript\n// src/core/vdom/patch.js\n\n```\n\n### 总结\n\n- 首先 new Vue()\n- =\u003e init() 进行全局属性和生命周期等注入\n  - beforeMount\n- =\u003e 将\\$mount 挂载\n- =\u003e `_render` 函数将 temlate 转化成 Vdom\n- =\u003e `_patch`将 Vdom 转化成真实 DOM\n  - 初次渲染，不用 diff\n  - Dom 变化，diff 算法后 异步更新\n- 渲染完成，等待更新\n  - Mounted\n\n## 组件化\n\n### **createElement**\n\ncreateElement 有三个分支逻辑\n\n1. 假如是普通的 html 标签，渲染一个 VNode\n2. 假如是 componen 且 options 中注册了 ，就进入 createComponent 逻辑\n3. 不命名 tag，也创建一个 VNode\n\n```JavaScript\n//src\\core\\vdom\\create-element.js  function _createElement\nif (typeof tag === 'string') {\n    let Ctor\n    ns = (context.$vnode \u0026\u0026 context.$vnode.ns) || config.getTagNamespace(tag)\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      )\n    } else if ((!data || !data.pre) \u0026\u0026 isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag)\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      )\n    }\n  } else {\n    // 组件的构造函数\n    vnode = createComponent(tag, data, context, children)\n  }\n```\n\n### createComponent\n\n```JavaScript\nexport function createComponent (\n  Ctor: Class\u003cComponent\u003e | Function | Object | void,\n  data: ?VNodeData,\n  context: Component,\n  children: ?Array\u003cVNode\u003e,\n  tag?: string\n): VNode | Array\u003cVNode\u003e | void {\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor)\n  }\n  // async component\n  let asyncFactory\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor)\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {}\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor)\n\n  // transform component v-model data into props \u0026 events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data)\n  }\n\n  // extract props\n  const propsData = extractPropsFromVNodeData(data, Ctor, tag)\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n\n  const listeners = data.on\n  data.on = data.nativeOn\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props \u0026 listeners \u0026 slot\n\n    // work around flow\n    const slot = data.slot\n    data = {}\n    if (slot) {\n      data.slot = slot\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data)\n\n  // return a placeholder vnode\n  const name = Ctor.options.name || tag\n  const vnode = new VNode(\n    `vue-component-${Ctor.cid}${name ? `-${name}` : ''}`,\n    data, undefined, undefined, undefined, context,\n    { Ctor, propsData, listeners, tag, children },\n    asyncFactory\n  )\n  return vnode\n}\n```\n\n去掉多余的判断，可以整理出他做了三件事\n\n#### 构造子类构造函数\n\n```JavaScript\nexport default {\n    name: 'app',\n    components: {\n        HelloWorld\n    }\n}\n// 我们平时传入的都是一个对象\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor)\n  }\n//src/core/global-api/extend.js\n\n```\n\nVue.extend 的作用就是构造⼀个 Vue 的子类，它使用⼀种非常经典的原型继承的方式把⼀个纯对 象转换⼀个继承于 Vue 的构造器 Sub 并返回，然后对 Sub 这个对象本⾝扩展了⼀些属性，如扩 展 options 、添加全局 API 等；并且对配置中的 props 和 computed 做了初始化⼯作；最后对于 这个 Sub 构造函数做了缓存，避免多次执行 Vue.extend 的时候对同⼀个子组件重复构造。\n\n```JavaScript\nVue.extend = function (extendOptions: Object): Function {\n    extendOptions = extendOptions || {}\n    const Super = this\n    const SuperId = Super.cid\n    const cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {})\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    const name = extendOptions.name || Super.options.name\n    if (process.env.NODE_ENV !== 'production' \u0026\u0026 name) {\n      validateComponentName(name)\n    }\n\n    const Sub = function VueComponent (options) {\n      this._init(options)\n    }\n    Sub.prototype = Object.create(Super.prototype)\n    Sub.prototype.constructor = Sub\n    Sub.cid = cid++\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    )\n    Sub['super'] = Super\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps(Sub)\n    }\n    if (Sub.options.computed) {\n      initComputed(Sub)\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend\n    Sub.mixin = Super.mixin\n    Sub.use = Super.use\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type]\n    })\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options\n    Sub.extendOptions = extendOptions\n    Sub.sealedOptions = extend({}, Sub.options)\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub\n    return Sub\n  }\n```\n\n#### 安装组件钩子函数\n\n整个 **installComponentHooks** 的过程就是把 componentVNodeHooks 的钩子函数合并到 **data.hook** 中，在 VNode 执行 patch 的过程中执行相关的钩子函数,但他的 Marge 不是覆盖，而是按顺序执行。\n\n#### 实例化 VNode\n\n最后⼀步非常简单，通过 new VNode 实例化⼀个 vnode 并返回。需要注意的是和普通元素节点的 vnode 不同，组件的 vnode 是没有 children 的，这点很关键。\n\n### patch\n\n**执行 vm.patch 去把 VNode 转换成真正的 DOM 节点。**\n\n```JavaScript\n//src/core/vdom/patch.js\nfunction createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n) {\n    // ...\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n        return\n    }\n    // ...\n  }\n```\n\n#### createComponent\n\n```JavaScript\n\tfunction createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n\t\tlet i = vnode.data\n\t\tif (isDef(i)) {\n\t\t\tconst isReactivated = isDef(vnode.componentInstance) \u0026\u0026 i.keepAlive\n\t\t\tif (isDef(i = i.hook) \u0026\u0026 isDef(i = i.init)) {\n\t\t\t\ti(vnode, false /* hydrating */)\n\t\t\t}\n\t\t\t//调用init钩子后，如果vnode为子组件。\n            //它应该已经创建子实例并挂载它。这孩子。\n            //组件还设置了占位符vnode的elm。\n            //在这种情况下，我们只需返回元素即可完成。\n\t\t\tif (isDef(vnode.componentInstance)) {\n\t\t\t\t//属性回调执行\n\t\t\t\tinitComponent(vnode, insertedVnodeQueue)\n\t\t\t\t//追加到父组件\n\t\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t\t\tif (isTrue(isReactivated)) {\n\t\t\t\t\treactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm)\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n```\n\n如果 vnode 是⼀个组件 VNode，那么条件会满⾜，并且得到 i 就是 init 钩子函数，执行`_init`\n\n子组件的实例化实际上就是在这个时机执行的，并且它会执行实例的 \\_init 方法，\n\n#### \\_render()\n\n然后进行\\_render()\n\n```JavaScript\n// src/core/instance/render.js\n  Vue.prototype._render = function (): VNode {\n    const vm: Component = this\n    const { render, _parentVnode } = vm.$options\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      )\n    }\n    vm.$vnode = _parentVnode\n    // render self\n    let vnode\n    try {\n      currentRenderingInstance = vm\n      vnode = render.call(vm._renderProxy, vm.$createElement)\n    }\n    // 如果返回的数组只包含一个节点，则允许它\n    if (Array.isArray(vnode) \u0026\u0026 vnode.length === 1) {\n      vnode = vnode[0]\n    }\n\n      vnode = createEmptyVNode()\n    }\n    // set parent\n    vnode.parent = _parentVnode\n    return vnode\n  }\n```\n\n我们只保留关键部分的代码，这里的 \\_parentVnode 就是当前组件的父 VNode，⽽ render 函数⽣ 成的 vnode 当前组件的渲染 vnode ， vnode 的 parent 指向了 \\_parentVnode ，也就是 vm.\\$vnode ，它们是⼀种父子的关系。\n\n#### \\_update\n\n```JavaScript\n//src/core/instance/lifecycle.js\nVue.prototype._update = function (vnode: VNode, hydrating?: boolean) {\n    const vm: Component = this\n    const prevEl = vm.$el\n    const prevVnode = vm._vnode\n    //是保持当前上下⽂的 Vue 实例，它是在 lifecycle 模块的全局变量\n    const restoreActiveInstance = setActiveInstance(vm)\n    vm._vnode = vnode\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode)\n    }\n    restoreActiveInstance()\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode \u0026\u0026 vm.$parent \u0026\u0026 vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  }\n```\n\n这里要理清，vm.\\_vnode 和 vm.$vnode 的关系就是⼀种父子关系，用代码表示就是   **vm.`vnode.parent `=== vm.$vnode\\*\\*\n\nrestoreActiveInstance 是用来保持递归过程中记录当前 vm 的 parent，当⼀个 vm 实例完成它的所有子树的 patch 或者 update 过程后，\n\nrestoreActiveInstance 回到他的父实例后，传入的 Vue 实例和 vm.\\$parent 依然能保留\n\n#### `__patch_`\n\n```JavaScript\nvm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n\nfunction patch (oldVnode, vnode, hydrating, removeOnly) {\n    // ...\n    let isInitialPatch = false\n    const insertedVnodeQueue = []\n    // 首次渲染\n    if (isUndef(oldVnode)) {\n        // empty mount (likely as component), create new root element\n        isInitialPatch = true\n        createElm(vnode, insertedVnodeQueue)\n    } else {\n        // ...\n    }\n    // ...\n}\n```\n\n##### createElm\n\n```JavaScript\n\tfunction createElm (\n\t\tvnode,\n\t\tinsertedVnodeQueue,\n\t\tparentElm,\n\t\trefElm,\n\t\tnested,\n\t\townerArray,\n\t\tindex\n\t) {\n\t\tif (isDef(vnode.elm) \u0026\u0026 isDef(ownerArray)) {\n\t\t\t// This vnode was used in a previous render!\n\t\t\t// now it's used as a new node, overwriting its elm would cause\n\t\t\t// potential patch errors down the road when it's used as an insertion\n\t\t\t// reference node. Instead, we clone the node on-demand before creating\n\t\t\t// associated DOM element for it.\n\t\t\tvnode = ownerArray[index] = cloneVNode(vnode)\n\t\t}\n\n\t\tvnode.isRootInsert = !nested // for transition enter check\n\t\tif (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n\t\t\treturn\n\t\t}\n\n\t\tconst data = vnode.data\n\t\tconst children = vnode.children\n\t\tconst tag = vnode.tag\n\t\tif (isDef(tag)) {\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tif (data \u0026\u0026 data.pre) {\n\t\t\t\t\tcreatingElmInVPre++\n\t\t\t\t}\n\t\t\t\tif (isUnknownElement(vnode, creatingElmInVPre)) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\t'Unknown custom element: \u003c' + tag + '\u003e - did you ' +\n\t\t\t\t\t\t'register the component correctly? For recursive components, ' +\n\t\t\t\t\t\t'make sure to provide the \"name\" option.',\n\t\t\t\t\t\tvnode.context\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvnode.elm = vnode.ns\n\t\t\t\t? nodeOps.createElementNS(vnode.ns, tag)\n\t\t\t\t: nodeOps.createElement(tag, vnode)\n\t\t\tsetScope(vnode)\n\n\t\t\t/* istanbul ignore if */\n\t\t\tif (__WEEX__) {\n\t\t\t\t// in Weex, the default insertion order is parent-first.\n\t\t\t\t// List items can be optimized to use children-first insertion\n\t\t\t\t// with append=\"tree\".\n\t\t\t\tconst appendAsTree = isDef(data) \u0026\u0026 isTrue(data.appendAsTree)\n\t\t\t\tif (!appendAsTree) {\n\t\t\t\t\tif (isDef(data)) {\n\t\t\t\t\t\tinvokeCreateHooks(vnode, insertedVnodeQueue)\n\t\t\t\t\t}\n\t\t\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t\t\t}\n\t\t\t\tcreateChildren(vnode, children, insertedVnodeQueue)\n\t\t\t\tif (appendAsTree) {\n\t\t\t\t\tif (isDef(data)) {\n\t\t\t\t\t\tinvokeCreateHooks(vnode, insertedVnodeQueue)\n\t\t\t\t\t}\n\t\t\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcreateChildren(vnode, children, insertedVnodeQueue)\n\t\t\t\tif (isDef(data)) {\n\t\t\t\t\tinvokeCreateHooks(vnode, insertedVnodeQueue)\n\t\t\t\t}\n\t\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t\t}\n\n\t\t\tif (process.env.NODE_ENV !== 'production' \u0026\u0026 data \u0026\u0026 data.pre) {\n\t\t\t\tcreatingElmInVPre--\n\t\t\t}\n\t\t} else if (isTrue(vnode.isComment)) {\n\t\t\tvnode.elm = nodeOps.createComment(vnode.text)\n\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t} else {\n\t\t\tvnode.elm = nodeOps.createTextNode(vnode.text)\n\t\t\tinsert(parentElm, vnode.elm, refElm)\n\t\t}\n\t}\n```\n\n又回到了这里，当遇到普通的 VNode createComponent 就会返回 false，然后重新上面创建父占位符，并遍历所有子 VNode 调用**createElm** 当遇到组件 VNode 则进行深入的递归\n\n在完成组件的整个 patch 过程后，最后执行 **insert(parentElm, vnode.elm, refElm)** 完成组件的 DOM 插入，**如果组件 patch 过程中又创建了子组件，那么 DOM 的插入顺序是先子后父。**\n\n### 总结\n\n第一次渲染，没有 oldVodeTree，就是创建占位符 =\u003e 遍历子 VNode =\u003e 遇到组件 VNode =\u003e 向下递归 然后开始 DOM 操作 直到回到占位符的位置。\n\n这一圈下来，基本的执行流程和代码都有了眼缘了，我们开始深入一些细节进行学习。\n\n## 深入响应式原理\n\nVue 的数据驱动除了数据渲染 DOM 之外，还有⼀个很重要的体现就是**数据的变更会触发 DOM 的变化**\n\n### 响应式对象\n\n过 Vue.js 实现响应式的核⼼是利用了 ES5 的 **Object.defineProperty** ， 这也是为什么 Vue.js 不能兼容 IE8 及以下浏览器的原因。\n\n```JavaScript\n//src\\core\\instance\\state.js\nexport function initState (vm: Component) {\n  vm._watchers = []\n  const opts = vm.$options\n  if (opts.props) initProps(vm, opts.props)\n  if (opts.methods) initMethods(vm, opts.methods)\n  if (opts.data) {\n    initData(vm)\n  } else {\n    observe(vm._data = {}, true /* asRootData */)\n  }\n  if (opts.computed) initComputed(vm, opts.computed)\n  if (opts.watch \u0026\u0026 opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch)\n  }\n}\n```\n\n其他暂且不管，我们先看到有 data 情况下的 initData 做了什么\n\n值得注意的是初始化顺序是 prop =\u003e methods =\u003e data =\u003e computed =\u003e watch\n\n```JavaScript\nfunction initData (vm: Component) {\n  let data = vm.$options.data\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {}\n  if (!isPlainObject(data)) {\n    data = {}\n    process.env.NODE_ENV !== 'production' \u0026\u0026 warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    )\n  }\n  // proxy data on instance\n  const keys = Object.keys(data)\n  const props = vm.$options.props\n  const methods = vm.$options.methods\n  let i = keys.length\n  while (i--) {\n    const key = keys[i]\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods \u0026\u0026 hasOwn(methods, key)) {\n        warn(\n          `Method \"${key}\" has already been defined as a data property.`,\n          vm\n        )\n      }\n    }\n    if (props \u0026\u0026 hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' \u0026\u0026 warn(\n        `The data property \"${key}\" is already declared as a prop. ` +\n        `Use prop default value instead.`,\n        vm\n      )\n    } else if (!isReserved(key)) {\n      proxy(vm, `_data`, key)\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */)\n}\n```\n\n1. 首先是推荐了 function 写法，object 虽然支持但是会给个 warn\n2. 将每一个 data 都从 vm.\\_data.xxx 代理到 vm.xxx 上\n3. 另外一个就是我们熟悉的 将遍历每个 key 转变成响应式\n\nproxy 的实现 是通过 defineProperty 将 vm.\\_data 的 get 和 set 改成 null，同时将 vm.xxx 的读取都绑定到 vm.\\_data 详细代码就不贴了\n\n我们接下来看看下核心 observe 的实现\n\n#### observe\n\n```JavaScript\nexport function observe (value: any, asRootData: ?boolean): Observer | void {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  let ob: Observer | void\n  if (hasOwn(value, '__ob__') \u0026\u0026 value.__ob__ instanceof Observer) {\n    ob = value.__ob__\n  } else if (\n    shouldObserve \u0026\u0026\n    !isServerRendering() \u0026\u0026\n    (Array.isArray(value) || isPlainObject(value)) \u0026\u0026\n    Object.isExtensible(value) \u0026\u0026\n    !value._isVue\n  ) {\n    ob = new Observer(value)\n  }\n  if (asRootData \u0026\u0026 ob) {\n    ob.vmCount++\n  }\n  return ob\n}\n```\n\n这段很无趣，就是判断 VNode 上是否已有，没有就绑上个 new Observer(value) ，\n\n#### Observer\n\n```JavaScript\nexport class Observer {\n  value: any;\n  dep: Dep;\n  vmCount: number; // number of vms that have this object as root $data\n\n  constructor (value: any) {\n    this.value = value\n    this.dep = new Dep()\n    this.vmCount = 0\n    def(value, '__ob__', this)\n    if (Array.isArray(value)) {\n      if (hasProto) {\n        protoAugment(value, arrayMethods)\n      } else {\n        copyAugment(value, arrayMethods, arrayKeys)\n      }\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n\n  /**\n   * Walk through all properties and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   */\n  walk (obj: Object) {\n    const keys = Object.keys(obj)\n    for (let i = 0; i \u003c keys.length; i++) {\n      defineReactive(obj, keys[i])\n    }\n  }\n\n  observeArray (items: Array\u003cany\u003e) {\n    for (let i = 0, l = items.length; i \u003c l; i++) {\n      observe(items[i])\n    }\n  }\n}\n```\n\nObserver 的构造函数逻辑很简单，首先**实例化 Dep 对象**，接着通过执行 def 函数把⾃⾝实例添加到数据对象 value 的 **ob** 属性上，后面就是对对象和数组区分遍历，进行对每个 key 值的响应式转化。\n\n#### defineReactive\n\ndefineReactive 函数最开始初始化 Dep 对象的实例，接着拿到 obj 的属性描述符，然后对子对 象递归调用 observe 方法，这样就保证了无论 obj 的结构多复杂，它的所有子属性也能变成响应式的对象，这样我们访问或修改 obj 中⼀个嵌套较深的属性，也能触发 getter 和 setter。\n\n```JavaScript\nexport function defineReactive (\n  obj: Object,\n  key: string,\n  val: any,\n  customSetter?: ?Function,\n  shallow?: boolean\n) {\n  const dep = new Dep()\n\n  const property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property \u0026\u0026 property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  const getter = property \u0026\u0026 property.get\n  const setter = property \u0026\u0026 property.set\n  if ((!getter || setter) \u0026\u0026 arguments.length === 2) {\n    val = obj[key]\n  }\n\n  let childOb = !shallow \u0026\u0026 observe(val)\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      const value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend()\n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      const value = getter ? getter.call(obj) : val\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal \u0026\u0026 value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' \u0026\u0026 customSetter) {\n        customSetter()\n      }\n      // #7981: for accessor properties without setter\n      if (getter \u0026\u0026 !setter) return\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = !shallow \u0026\u0026 observe(newVal)\n      dep.notify()\n    }\n  })\n}\n```\n\n#### 依赖收集\n\n```JavaScript\nlet uid = 0\n\nexport default class Dep {\n  static target: ?Watcher;\n  id: number;\n  subs: Array\u003cWatcher\u003e;\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  addSub (sub: Watcher) {\n    this.subs.push(sub)\n  }\n\n  removeSub (sub: Watcher) {\n    remove(this.subs, sub)\n  }\n\n  depend () {\n    if (Dep.target) {\n      Dep.target.addDep(this)\n    }\n  }\n\n  notify () {\n    // stabilize the subscriber list first\n    const subs = this.subs.slice()\n    if (process.env.NODE_ENV !== 'production' \u0026\u0026 !config.async) {\n      // subs aren't sorted in scheduler if not running async\n      // we need to sort them now to make sure they fire in correct\n      // order\n      subs.sort((a, b) =\u003e a.id - b.id)\n    }\n    for (let i = 0, l = subs.length; i \u003c l; i++) {\n      subs[i].update()\n    }\n  }\n}\n```\n\nDep 是⼀个 Class，它定义了⼀些属性和方法，这里需要特别注意的是它有⼀个静态属性 target ， 这是⼀个全局唯⼀ Watcher ，这是⼀个非常巧妙的设计，因为在同⼀时间只能有⼀个全局的 Watcher 被计算，另外它的自身属性 subs 也是 Watcher 的数组。\n\nVue 的 mount 过程是通过 mountComponent 函数，其中有⼀段比较重要的逻辑，大致如下\n\n```JavaScript\n  updateComponent = () =\u003e {\n      vm._update(vm._render(), hydrating)\n  }\n\n  new Watcher(vm, updateComponent, noop, {\n    before () {\n      if (vm._isMounted \u0026\u0026 !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')\n      }\n    }\n  }, true /* isRenderWatcher */)\n```\n\n**每一个组件都会生成一个 Watcher 里面生成一个 Dep(),里面每个对象值都持有一个 dep，当 render 时，会触发所有数据的 getter 进行 dep.append() 方法（这里会做逻辑判断，防止同样的数据重复添加）。就完成了依赖收集，**\n\n接下来因为 Vue 是数据驱动的，所以每次数据变化都会重新 render，那么 vm.\\_render() 方法又会再次执行，并再次触发数据的 getters，**所以 Wathcer 在构造函数中会初始化 2 个 Dep 实例数组， newDeps 表示新添加的 Dep 实例数组，而 deps 表示上⼀次添加的 Dep 实例数组。** 在执行 cleanupDeps 函数的时候，会首先遍历 deps ，移除对 dep 的订阅，然后把 newDepIds 和 depIds 交换， newDeps 和 deps 交换，并把 newDepIds 和 newDeps 清空。\n\n```JavaScript\n//src\\core\\observer\\watcher.js\nlet uid = 0\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nexport default class Watcher {\n  vm: Component;\n  expression: string;\n  cb: Function;\n  id: number;\n  deep: boolean;\n  user: boolean;\n  lazy: boolean;\n  sync: boolean;\n  dirty: boolean;\n  active: boolean;\n  deps: Array\u003cDep\u003e;\n  newDeps: Array\u003cDep\u003e;\n  depIds: SimpleSet;\n  newDepIds: SimpleSet;\n  before: ?Function;\n  getter: Function;\n  value: any;\n\n  constructor (\n    vm: Component,\n    expOrFn: string | Function,\n    cb: Function,\n    options?: ?Object,\n    isRenderWatcher?: boolean\n  ) {\n    this.vm = vm\n    if (isRenderWatcher) {\n      vm._watcher = this\n    }\n    vm._watchers.push(this)\n    // options\n    if (options) {\n      this.deep = !!options.deep\n      this.user = !!options.user\n      this.lazy = !!options.lazy\n      this.sync = !!options.sync\n      this.before = options.before\n    } else {\n      this.deep = this.user = this.lazy = this.sync = false\n    }\n    this.cb = cb\n    this.id = ++uid // uid for batching\n    this.active = true\n    this.dirty = this.lazy // for lazy watchers\n    this.deps = []\n    this.newDeps = []\n    this.depIds = new Set()\n    this.newDepIds = new Set()\n    this.expression = process.env.NODE_ENV !== 'production'\n      ? expOrFn.toString()\n      : ''\n    // parse expression for getter\n    if (typeof expOrFn === 'function') {\n      this.getter = expOrFn\n    } else {\n      this.getter = parsePath(expOrFn)\n      if (!this.getter) {\n        this.getter = noop\n        process.env.NODE_ENV !== 'production' \u0026\u0026 warn(\n          `Failed watching path: \"${expOrFn}\" ` +\n          'Watcher only accepts simple dot-delimited paths. ' +\n          'For full control, use a function instead.',\n          vm\n        )\n      }\n    }\n    this.value = this.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n  get () {\n    pushTarget(this)\n    let value\n    const vm = this.vm\n    try {\n      value = this.getter.call(vm, vm)\n    } catch (e) {\n      if (this.user) {\n        handleError(e, vm, `getter for watcher \"${this.expression}\"`)\n      } else {\n        throw e\n      }\n    } finally {\n      // \"touch\" every property so they are all tracked as\n      // dependencies for deep watching\n      if (this.deep) {\n        traverse(value)\n      }\n      popTarget()\n      this.cleanupDeps()\n    }\n    return value\n  }\n\n  /**\n   * Add a dependency to this directive.\n   */\n  addDep (dep: Dep) {\n    const id = dep.id\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id)\n      this.newDeps.push(dep)\n      if (!this.depIds.has(id)) {\n        dep.addSub(this)\n      }\n    }\n  }\n\n  /**\n   * Clean up for dependency collection.\n   */\n  cleanupDeps () {\n    let i = this.deps.length\n    while (i--) {\n      const dep = this.deps[i]\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this)\n      }\n    }\n    let tmp = this.depIds\n    this.depIds = this.newDepIds\n    this.newDepIds = tmp\n    this.newDepIds.clear()\n    tmp = this.deps\n    this.deps = this.newDeps\n    this.newDeps = tmp\n    this.newDeps.length = 0\n  }\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   */\n  update () {\n    /* istanbul ignore else */\n    if (this.lazy) {\n      this.dirty = true\n    } else if (this.sync) {\n      this.run()\n    } else {\n      queueWatcher(this)\n    }\n  }\n\n  /**\n   * Scheduler job interface.\n   * Will be called by the scheduler.\n   */\n  run () {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value ||\n        // Deep watchers and watchers on Object/Arrays should fire even\n        // when the value is the same, because the value may\n        // have mutated.\n        isObject(value) ||\n        this.deep\n      ) {\n        // set new value\n        const oldValue = this.value\n        this.value = value\n        if (this.user) {\n          try {\n            this.cb.call(this.vm, value, oldValue)\n          } catch (e) {\n            handleError(e, this.vm, `callback for watcher \"${this.expression}\"`)\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue)\n        }\n      }\n    }\n  }\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n  evaluate () {\n    this.value = this.get()\n    this.dirty = false\n  }\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n  depend () {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend()\n    }\n  }\n\n  /**\n   * Remove self from all dependencies' subscriber list.\n   */\n  teardown () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed.\n      if (!this.vm._isBeingDestroyed) {\n        remove(this.vm._watchers, this)\n      }\n      let i = this.deps.length\n      while (i--) {\n        this.deps[i].removeSub(this)\n      }\n      this.active = false\n    }\n  }\n}\n```\n\n#### 派发更新\n\nsetter 的逻辑有 2 个关键的点，⼀个是 **childOb = !shallow \u0026\u0026 observe(newVal)** ，如果 shallow 为 false 的情况，会对新设置的值变成⼀个响应式对象；另⼀个是 dep.notify() ，通知所有的订阅者.\n\n**Vue 派发更新的时候做了⼀个优化点，它并不会每次数据改变都触发 watcher 的回调，而是把这些 watcher 先添加到⼀个队列里，然后在 nextTick 后执行 flushSchedulerQueue 。**\n\n### nextTick\n\n```JavaScript\n //src/core/util/next-tick.js\n// 代码在上面，就是浏览器兼容性从微任务降级到宏任务的过程\n```\n\n### 特殊情况\n\n#### \\$set\n\nVue 考虑到初始化时未声明情况，提供了\\$set 方法\n\n```JavaScript\nexport function set (target: Array\u003cany\u003e | Object, key: any, val: any): any {\n  if (process.env.NODE_ENV !== 'production' \u0026\u0026\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn(`Cannot set reactive property on undefined, null, or primitive value: ${(target: any)}`)\n  }\n  if (Array.isArray(target) \u0026\u0026 isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  if (key in target \u0026\u0026 !(key in Object.prototype)) {\n    target[key] = val\n    return val\n  }\n  const ob = (target: any).__ob__\n  if (target._isVue || (ob \u0026\u0026 ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' \u0026\u0026 warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    )\n    return val\n  }\n  if (!ob) {\n    target[key] = val\n    return val\n  }\n  defineReactive(ob.value, key, val)\n  ob.dep.notify()\n  return val\n}\n```\n\n`set`方法接收 3 个参数， target 可能是数组或者是普通对象， key 代表的是数组的下标或者是对象的键值， val 代表添加的值。\n\n#### Array\n\n```JavaScript\n//src\\core\\observer\\array.js\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  const original = arrayProto[method]\n  def(arrayMethods, method, function mutator (...args) {\n    const result = original.apply(this, args)\n    const ob = this.__ob__\n    let inserted\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n    if (inserted) ob.observeArray(inserted)\n    // notify change\n    ob.dep.notify()\n    return result\n  })\n})\n```\n\n数组通过原生方法增加的 Key 都是没有经过响应式转换的，所以 Vue 把 push，unshift，splice 方法重新劫持了，当调用这些方法时，会重新遍历转化一遍。\n\n### 计算属性 VS 侦听属性\n\n#### initComputed\n\n我们在 initComputed 中找到了这串代码\n\n```JavaScript\n//src/core/instance/state.js\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    const watcher = this._computedWatchers \u0026\u0026 this._computedWatchers[key]\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate()\n      }\n      if (Dep.target) {\n        watcher.depend()\n      }\n      return watcher.value\n    }\n  }\n}\n```\n\n```JavaScript\n  evaluate () {\n    this.value = this.get()\n    this.dirty = false\n  }\n```\n\n计算属性本质上就是⼀个`computed watcher` ，也了解了它的创建过程和 被访问触发 getter 以及依赖更新的过程，其实这是最新的计算属性的实现，之所以这么设计是因为 Vue 想确保不仅仅是计算属性依赖的值发⽣变化，而是**当计算属性最终计算的值发生变化才会触发**渲染 watcher 重新渲染，本质上是⼀种优化。\n\n#### initWatch\n\n侦听属性也是基于 Watcher 实现的，它是⼀个 `user watcher` 。其实 Watcher ⽀持了 不同的类型，下⾯我们梳理⼀下它有哪些类型以及它们的作用。\n\n##### deep\n\n普通的 watch 值只会触发最外层对象的 getter，所以无法订阅其变化\n\n```JavaScript\n//\nif (this.deep) {\n  traverse(value)\n}\n//src/core/observer/traverse.js\nfunction _traverse (val: any, seen: SimpleSet) {\n  let i, keys\n  const isA = Array.isArray(val)\n  if ((!isA \u0026\u0026 !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    const depId = val.__ob__.dep.id\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId)\n  }\n  if (isA) {\n    i = val.length\n    while (i--) _traverse(val[i], seen)\n  } else {\n    keys = Object.keys(val)\n    i = keys.length\n    while (i--) _traverse(val[keys[i]], seen)\n  }\n}\n```\n\ntraverse 的逻辑也很简单，它实际上就是对⼀个对象做深层递归遍历，因为遍历过程中就是**对⼀个子对象的访问，会触发它们的 getter 过程**，这样就可以收集到依赖，也就是订阅它们变化的 watcher ，这个函数实现还有⼀个小的优化，遍历过程中会把子响应式对象通过它们的 dep id 记 录到 seenObjects ，避免以后重复访问。\n\n##### sync\n\n当响应式数据发送变化后，触发了 watcher.update() ， 只是把这个 watcher 推送到⼀个队列中，在 nextTick 后才会真正执行 watcher 的回调函数。但是⼀旦我们设置了 sync ，就可以在当前 Tick 中同步执行 watcher 的回调函数。\n\n### 组件更新\n\n这里和初次渲染走了不同的 patch 方式\n\n```JavaScript\n//src\\core\\instance\\lifecycle.js\nif (!prevVnode) {\n    // initial render\n    vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n} else {\n    // updates\n    vm.$el = vm.__patch__(prevVnode, vnode)\n}\n```\n\n这里执行 patch 的逻辑和首次渲染是不⼀样的，因为 oldVnode 不为空，并且它和 vnode 都是 VNode 类型，接下来会通过 **sameVNode(oldVnode, vnode)** 判断它们是否是相同的 VNode 来决定⾛ 不同的更新逻辑：\n\n```JavaScript\n   return function patch (oldVnode, vnode, hydrating, removeOnly) {\n        if (isUndef(vnode)) {\n            if (isDef(oldVnode)) invokeDestroyHook(oldVnode)\n            return\n        }\n\n        let isInitialPatch = false\n        const insertedVnodeQueue = []\n\n        if (isUndef(oldVnode)) {\n            // empty mount (likely as component), create new root element\n            isInitialPatch = true\n            createElm(vnode, insertedVnodeQueue)\n        } else {\n            const isRealElement = isDef(oldVnode.nodeType)\n            if (!isRealElement \u0026\u0026 sameVnode(oldVnode, vnode)) {\n                // patch existing root node\n                patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly)\n            } else {\n                if (isRealElement) {\n                    // mounting to a real element\n                    // check if this is server-rendered content and if we can perform\n                    // a successful hydration.\n                    if (oldVnode.nodeType === 1 \u0026\u0026 oldVnode.hasAttribute(SSR_ATTR)) {\n                        oldVnode.removeAttribute(SSR_ATTR)\n                        hydrating = true\n                    }\n                    if (isTrue(hydrating)) {\n                        if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n                            invokeInsertHook(vnode, insertedVnodeQueue, true)\n                            return oldVnode\n                        } else if (process.env.NODE_ENV !== 'production') {\n                            warn(\n                                'The client-side rendered virtual DOM tree is not matching ' +\n                                'server-rendered content. This is likely caused by incorrect ' +\n                                'HTML markup, for example nesting block-level elements inside ' +\n                                '\u003cp\u003e, or missing \u003ctbody\u003e. Bailing hydration and performing ' +\n                                'full client-side render.'\n                            )\n                        }\n                    }\n                    // either not server-rendered, or hydration failed.\n                    // create an empty node and replace it\n                    oldVnode = emptyNodeAt(oldVnode)\n                }\n\n                // replacing existing element\n                const oldElm = oldVnode.elm\n                const parentElm = nodeOps.parentNode(oldElm)\n\n                // create new node\n                createElm(\n                    vnode,\n                    insertedVnodeQueue,\n                    // extremely rare edge case: do not insert if old element is in a\n                    // leaving transition. Only happens when combining transition +\n                    // keep-alive + HOCs. (#4590)\n                    oldElm._leaveCb ? null : parentElm,\n                    nodeOps.nextSibling(oldElm)\n                )\n\n                // update parent placeholder node element, recursively\n                if (isDef(vnode.parent)) {\n                    let ancestor = vnode.parent\n                    const patchable = isPatchable(vnode)\n                    while (ancestor) {\n                        for (let i = 0; i \u003c cbs.destroy.length; ++i) {\n                            cbs.destroy[i](ancestor)\n                        }\n                        ancestor.elm = vnode.elm\n                        if (patchable) {\n                            for (let i = 0; i \u003c cbs.create.length; ++i) {\n                                cbs.create[i](emptyNode, ancestor)\n                            }\n                            // #6513\n                            // invoke insert hooks that may have been merged by create hooks.\n                            // e.g. for directives that uses the \"inserted\" hook.\n                            const insert = ancestor.data.hook.insert\n                            if (insert.merged) {\n                                // start at index 1 to avoid re-invoking component mounted hook\n                                for (let i = 1; i \u003c insert.fns.length; i++) {\n                                    insert.fns[i]()\n                                }\n                            }\n                        } else {\n                            registerRef(ancestor)\n                        }\n                        ancestor = ancestor.parent\n                    }\n                }\n\n                // destroy old node\n                if (isDef(parentElm)) {\n                    removeVnodes([oldVnode], 0, 0)\n                } else if (isDef(oldVnode.tag)) {\n                    invokeDestroyHook(oldVnode)\n                }\n            }\n        }\n```\n\npatchVnode 的规则是这样的：\n\n1.如果新旧 VNode 都是静态的，同时它们的 key 相同（代表同一节点），并且新的 VNode 是 clone 或者是标记了 once（标记 v-once 属性，只渲染一次），那么只需要替换 elm 以及 componentInstance 即可。\n\n2.新老节点均有 children 子节点，则对子节点进行 diff 操作，调用 updateChildren，这个 updateChildren 也是 diff 的核心。\n\n3.如果老节点没有子节点而新节点存在子节点，先清空老节点 DOM 的文本内容，然后为当前 DOM 节点加入子节点。\n\n4.当新节点没有子节点而老节点有子节点的时候，则移除该 DOM 节点的所有子节点。\n\n5.当新老节点都无子节点的时候，只是文本的替换。\n\n#### samenode\n\n```JavaScript\nfunction sameVnode (a, b) {\n    return (\n        a.key === b.key \u0026\u0026 (\n            (\n                a.tag === b.tag \u0026\u0026\n                a.isComment === b.isComment \u0026\u0026\n                isDef(a.data) === isDef(b.data) \u0026\u0026\n                sameInputType(a, b)\n            ) || (\n                isTrue(a.isAsyncPlaceholder) \u0026\u0026\n                a.asyncFactory === b.asyncFactory \u0026\u0026\n                isUndef(b.asyncFactory.error)\n            )\n        )\n    )\n}\n```\n\nsameVnode 的逻辑非常简单，如果两个 vnode 的 key 不相等，则是不同的；否则继续判断对于 同步组件，则判断 isComment 、 data 、 input 类型等是否相同，对于异步组件，则判断 asyncFactory 是否相同。\n\n#### updateChildren\n\n```JavaScript\n function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    let oldStartIdx = 0\n    let newStartIdx = 0\n    let oldEndIdx = oldCh.length - 1\n    let oldStartVnode = oldCh[0]\n    let oldEndVnode = oldCh[oldEndIdx]\n    let newEndIdx = newCh.length - 1\n    let newStartVnode = newCh[0]\n    let newEndVnode = newCh[newEndIdx]\n    let oldKeyToIdx, idxInOld, elmToMove, refElm\n\n    // removeOnly is a special flag used only by \u003ctransition-group\u003e\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    const canMove = !removeOnly\n\n    while (oldStartIdx \u003c= oldEndIdx \u0026\u0026 newStartIdx \u003c= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx]\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        /*前四种情况其实是指定key的时候，判定为同一个VNode，则直接patchVnode即可，分别比较oldCh以及newCh的两头节点2*2=4种情况*/\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue)\n        oldStartVnode = oldCh[++oldStartIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue)\n        canMove \u0026\u0026 nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n        oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue)\n        canMove \u0026\u0026 nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else {\n        /*\n          生成一个key与旧VNode的key对应的哈希表（只有第一次进来undefined的时候会生成，也为后面检测重复的key值做铺垫）\n          比如childre是这样的 [{xx: xx, key: 'key0'}, {xx: xx, key: 'key1'}, {xx: xx, key: 'key2'}]  beginIdx = 0   endIdx = 2\n          结果生成{key0: 0, key1: 1, key2: 2}\n        */\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n        /*如果newStartVnode新的VNode节点存在key并且这个key在oldVnode中能找到则返回这个节点的idxInOld（即第几个节点，下标）*/\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null\n        if (isUndef(idxInOld)) { // New element\n          /*newStartVnode没有key或者是该key没有在老节点中找到则创建一个新的节点*/\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm)\n          newStartVnode = newCh[++newStartIdx]\n        } else {\n          /*获取同key的老节点*/\n          elmToMove = oldCh[idxInOld]\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' \u0026\u0026 !elmToMove) {\n            /*如果elmToMove不存在说明之前已经有新节点放入过这个key的DOM中，提示可能存在重复的key，确保v-for的时候item有唯一的key值*/\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            )\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            /*Github:https://github.com/answershuto*/\n            /*如果新VNode与得到的有相同key的节点是同一个VNode则进行patchVnode*/\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue)\n            /*因为已经patchVnode进去了，所以将这个老节点赋值undefined，之后如果还有新节点与该节点key相同可以检测出来提示已有重复的key*/\n            oldCh[idxInOld] = undefined\n            /*当有标识位canMove实可以直接插入oldStartVnode对应的真实DOM节点前面*/\n            canMove \u0026\u0026 nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm)\n            newStartVnode = newCh[++newStartIdx]\n          } else {\n            // same key but different element. treat as new element\n            /*当新的VNode与找到的同样key的VNode不是sameVNode的时候（比如说tag不一样或者是有不一样type的input标签），创建一个新的节点*/\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm)\n            newStartVnode = newCh[++newStartIdx]\n          }\n        }\n      }\n    }\n    if (oldStartIdx \u003e oldEndIdx) {\n      /*全部比较完成以后，发现oldStartIdx \u003e oldEndIdx的话，说明老节点已经遍历完了，新节点比老节点多，所以这时候多出来的新节点需要一个一个创建出来加入到真实DOM中*/\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n    } else if (newStartIdx \u003e newEndIdx) {\n      /*如果全部比较完成以后发现newStartIdx \u003e newEndIdx，则说明新节点已经遍历完了，老节点多余新节点，这个时候需要将多余的老节点从真实DOM中移除*/\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\n    }\n  }\n```\n\n#### 手写简单 diff\n\n```JavaScript\nfunction patchNode (oldNode, newNode) {\n    const oldChildren = oldNode.children\n    const newChildren = newNode.children\n    // 老的有子节点，新的没有就移除\n    if (oldChildren.length \u0026\u0026 !newChildren.length) {\n        // remove oldChildren\n    }\n    // 老的没有子节点，新的有 就 清空老节点并将新节点加入到DOM下\n    else if (oldChildren.length \u0026\u0026 !newChildren.length) {\n        // oldChildren =null\n        // Dom.append(newChildren)\n    }\n    // 都没有 就只做文本的替换\n    else if (!oldChildren.length \u0026\u0026 !newChildren.length) {\n        // 替换文本\n    }\n    else {\n        update(oldChildren, newChildren)\n    }\n\n}\nfunction someNode () {\n    // 优先判断 key 是否相同\n    // 异步组件 判断 asyncFactory  是否相同\n    // 同步组件 判断input,data,isComment  是否相同\n}\nfunction update (oldNode, newNode) {\n    let newStart\n    let oldStart\n    let oldEnd\n    let newEnd\n    while (oldStart \u003c= oldEnd \u0026\u0026 newStart \u003c= newEnd) {\n        // someNode 判断后 都进入 patchVnode\n        //新头和旧头\n        if (newStart === oldStart) {\n            newStart++\n            oldStart++\n        }\n        //旧尾和新尾\n        else if (oldEnd === newEnd) {\n            oldEnd--\n            newEnd--\n        }\n        //旧头和新尾\n        else if (oldStart === newEnd) {\n            oldStart++\n            newEnd--\n        }\n        //新头和旧尾\n        else if (newStart === oldEnd) {\n            newStart++\n            oldEnd--\n        }\n        //都找不到 就遍历oldNode 生成一个 {key:index} 的Map\n        let oldKeyToIdx = {}\n        if (oldKeyToIdx[newStart.key]) {\n            // move 这个节点到 oldStart 之前 然后继续遍历\n            newStart++\n        }\n        // 如果找不到，或者 key 相同 但内容不相同\n        else {\n            //createElm创建一个新的DOM节点。\n        }\n    }\n    //循环完\n    // 新的比老的长 addVnodes 多出来的节点\n    // 老的比新的长 removeVnodes 多出来的节点\n}\n```\n\n## 编译\n\n编译就是把模板 template 编译⽣成 render 以及 staticRenderFns ，\n\n```JavaScript\nexport const createCompiler = createCompilerCreator(function baseCompile (\ntemplate: string,\noptions: CompilerOptions\n): CompiledResult {\nconst ast = parse(template.trim(), options)\noptimize(ast, options)\nconst code = generate(ast, options)\nreturn {\nast,\nrender: code.render,\nstaticRenderFns: code.staticRenderFns\n}\n})\n```\n\n### parse\n\n这一块就是类似 html 的解析，通过一个栈 每一次出栈都是一个标签的开闭结束，最后会生成一个 AST 抽象语法树。\n\n![image-20201206131358064](images/image-20201206131358064.png)\n\n### optimization\n\n```JavaScript\nconst genStaticKeysCached = cached(genStaticKeys)\n// 遍历AST树找到永远不会改变的静态节点\n//1.将它们提升为常量，这样我们就不再需要在每次重新渲染时为它们创建新节点；\n//2.在打补丁过程中完全跳过它们。\nexport function optimize (root: ?ASTElement, options: CompilerOptions) {\n  if (!root) return\n  isStaticKey = genStaticKeysCached(options.staticKeys || '')\n  isPlatformReservedTag = options.isReservedTag || no\n  // first pass: mark all non-static nodes.\n  markStatic(root)\n  // second pass: mark static roots.\n  markStaticRoots(root, false)\n}\n\nfunction genStaticKeys (keys: string): Function {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n```\n\nisStatic 是对⼀个 AST 元素节点是否是静态的判断，如果是表达式，就是非静态；如果是**纯文本**， 就是静态；对于⼀个**普通元素**，如果**有 pre 属性**，那么它使用了 v-pre 指令，是静态，否则要同时 满⾜以下条件：**没有使用 v-if 、 v-for ，没有使用其它指令（不包括 v-once ），非内置组件， 是平台保留的标签，非带有 v-for 的 template 标签的直接子节点，节点的所有属性的 key 都满足静态 key；**这些都满⾜则这个 AST 节点是⼀个静态节点。\n\n如果这个节点是⼀个普通元素，则遍历它的所有 children ，递归执⾏ markStatic 。因为所有的 elseif 和 else 节点都不在 children 中， 如果节点的 ifConditions 不为空，则遍历 ifConditions 拿到所有条件中的 block ，也就是它们对应的 AST 节点，递归执⾏ markStatic 。**在这些递归过程中，⼀旦子节点有不是 static 的情况，则它的⽗节点的 static 均变成 false。**\n\n### codegen\n\n将标记完后的对象 生成一个 render 函数\n\n#### generate\n\n```JavaScript\nexport function generate (\n  ast: ASTElement | void,\n  options: CompilerOptions\n): CodegenResult {\n  const state = new CodegenState(options)\n  const code = ast ? genElement(ast, state) : '_c(\"div\")'\n  return {\n    render: `with(this){return ${code}}`,\n    staticRenderFns: state.staticRenderFns\n  }\n}\n```\n\n遇到不同的指令如何去生成\n\n```JavaScript\nexport function genElement (el: ASTElement, state: CodegenState): string {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre\n  }\n\n  if (el.staticRoot \u0026\u0026 !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once \u0026\u0026 !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for \u0026\u0026 !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if \u0026\u0026 !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' \u0026\u0026 !el.slotTarget \u0026\u0026 !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    let code\n    if (el.component) {\n      code = genComponent(el.component, el, state)\n    } else {\n      let data\n      if (!el.plain || (el.pre \u0026\u0026 state.maybeComponent(el))) {\n        data = genData(el, state)\n      }\n\n      const children = el.inlineTemplate ? null : genChildren(el, state, true)\n      code = `_c('${el.tag}'${\n        data ? `,${data}` : '' // data\n      }${\n        children ? `,${children}` : '' // children\n      })`\n    }\n    // module transforms\n    for (let i = 0; i \u003c state.transforms.length; i++) {\n      code = state.transforms[i](el, code)\n    }\n    return code\n  }\n}\n```\n\n## 扩展\n\n### event\n\n```JavaScript\n//src/compiler/parser/index.js\nexport const onRE = /^@|^v-on:/\nexport const dirRE = /^v-|^@|^:/\nexport const bindRE = /^:|^v-bind:/\n\nfunction processAtts(){\n    ...\n     else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '')\n        isDynamic = dynamicArgRE.test(name)\n        if (isDynamic) {\n          name = name.slice(1, -1)\n        }\n        addHandler(el, name, value, modifiers, false, warn, list[i], isDynamic)\n      }\n    ...\n}\n```\n\n在遇到上面几个正则后，会进行名字的 addListener 监听事件\n\n### 自定义事件\n\n```JavaScript\nexport function eventsMixin (Vue: Class\u003cComponent\u003e) {\n  const hookRE = /^hook:/\n  Vue.prototype.$on = function (event: string | Array\u003cstring\u003e, fn: Function): Component {\n    const vm: Component = this\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i \u003c l; i++) {\n        vm.$on(event[i], fn)\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn)\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true\n      }\n    }\n    return vm\n  }\n\n  Vue.prototype.$once = function (event: string, fn: Function): Component {\n    const vm: Component = this\n    function on () {\n      vm.$off(event, on)\n      fn.apply(vm, arguments)\n    }\n    on.fn = fn\n    vm.$on(event, on)\n    return vm\n  }\n\n  Vue.prototype.$off = function (event?: string | Array\u003cstring\u003e, fn?: Function): Component {\n    const vm: Component = this\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null)\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i \u003c l; i++) {\n        vm.$off(event[i], fn)\n      }\n      return vm\n    }\n    // specific event\n    const cbs = vm._events[event]\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null\n      return vm\n    }\n    // specific handler\n    let cb\n    let i = cbs.length\n    while (i--) {\n      cb = cbs[i]\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1)\n        break\n      }\n    }\n    return vm\n  }\n\n  Vue.prototype.$emit = function (event: string): Component {\n    const vm: Component = this\n    if (process.env.NODE_ENV !== 'production') {\n      const lowerCaseEvent = event.toLowerCase()\n      if (lowerCaseEvent !== event \u0026\u0026 vm._events[lowerCaseEvent]) {\n        tip(\n          `Event \"${lowerCaseEvent}\" is emitted in component ` +\n          `${formatComponentName(vm)} but the handler is registered for \"${event}\". ` +\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n        )\n      }\n    }\n    let cbs = vm._events[event]\n    if (cbs) {\n      cbs = cbs.length \u003e 1 ? toArray(cbs) : cbs\n      const args = toArray(arguments, 1)\n      const info = `event handler for \"${event}\"`\n      for (let i = 0, l = cbs.length; i \u003c l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info)\n      }\n    }\n    return vm\n  }\n}\n```\n\n在实例 vm 上注册了事件中心 `_events` ,标准的发布订阅模式\n\n### V-model\n\n事实上只是一种语法糖，对于 input 来说 就是@input 和:bind:value 的语法糖，当你使用组件，仍想使用 V-model 也可以这么使用，另外 Vue 也提供了 model 对象进行这两个属性更改别名的方式\n\n### Slot\n\n当遇到 slot 标签的时候会给对应的 AST 元素节点添加 slotName 属性，然后在 codegen 阶段， 会判断如果当前 AST 元素节点是 slot 标签，则执行 genSlot 函数\n\n```JavaScript\nconst slotName = el.slotName || '\"default\"'\nconst children = genChildren(el, state)\nlet res = `_t(${slotName}${children ? `,${children}` : ''}`\n```\n\nvm.\\$slots 是通过执行 resolveSlots(options.\\_renderChildren, renderContext) 返回的，\n\n```JavaScript\nexport function resolveSlots (\n  children: ?Array\u003cVNode\u003e,\n  context: ?Component\n): { [key: string]: Array\u003cVNode\u003e } {\n  if (!children || !children.length) {\n    return {}\n  }\n  const slots = {}\n  for (let i = 0, l = children.length; i \u003c l; i++) {\n    const child = children[i]\n    const data = child.data\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data \u0026\u0026 data.attrs \u0026\u0026 data.attrs.slot) {\n      delete data.attrs.slot\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) \u0026\u0026\n      data \u0026\u0026 data.slot != null\n    ) {\n      const name = data.slot\n      const slot = (slots[name] || (slots[name] = []))\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || [])\n      } else {\n        slot.push(child)\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child)\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (const name in slots) {\n    if (slots[name].every(isWhitespace)) {\n      delete slots[name]\n    }\n  }\n  return slots\n}\n```\n\nresolveSlots 函数的逻辑就是遍历 chilren ，拿到每⼀个 child 的 data ，然后通过 data.slot 获取到插槽名称，这个 slot 就是我们之前编译父组件在 codegen 阶段设置的 data.slot 。接着以插槽名称为 key 把 child 添加到 slots 中，如果 data.slot 不存在， 则是默认插槽的内容，则把对应的 child 添加到 slots.defaults 中。这样就获取到整个 slots ，它是⼀个对象， key 是插槽名称， value 是⼀个 vnode 类型的数组，因为它可以有多 个同名插槽。\n\n### keep-alive\n\n```JavaScript\n/* @flow */\n\nimport { isRegExp, remove } from 'shared/util'\nimport { getFirstComponentChild } from 'core/vdom/helpers/index'\n\ntype VNodeCache = { [key: string]: ?VNode };\n\nfunction getComponentName (opts: ?VNodeComponentOptions): ?string {\n  return opts \u0026\u0026 (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern: string | RegExp | Array\u003cstring\u003e, name: string): boolean {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) \u003e -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) \u003e -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance: any, filter: Function) {\n  const { cache, keys, _vnode } = keepAliveInstance\n  for (const key in cache) {\n    const cachedNode: ?VNode = cache[key]\n    if (cachedNode) {\n      const name: ?string = getComponentName(cachedNode.componentOptions)\n      if (name \u0026\u0026 !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode)\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache: VNodeCache,\n  key: string,\n  keys: Array\u003cstring\u003e,\n  current?: VNode\n) {\n  const cached = cache[key]\n  if (cached \u0026\u0026 (!current || cached.tag !== current.tag)) {\n    cached.componentInstance.$destroy()\n  }\n  cache[key] = null\n  remove(keys, key)\n}\n\nconst patternTypes: Array\u003cFunction\u003e = [String, RegExp, Array]\n\nexport default {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created () {\n    this.cache = Object.create(null)\n    this.keys = []\n  },\n\n  destroyed () {\n    for (const key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys)\n    }\n  },\n\n  mounted () {\n    this.$watch('include', val =\u003e {\n      pruneCache(this, name =\u003e matches(val, name))\n    })\n    this.$watch('exclude', val =\u003e {\n      pruneCache(this, name =\u003e !matches(val, name))\n    })\n  },\n\n  render () {\n    const slot = this.$slots.default\n    const vnode: VNode = getFirstComponentChild(slot)\n    const componentOptions: ?VNodeComponentOptions = vnode \u0026\u0026 vnode.componentOptions\n    if (componentOptions) {\n      // check pattern\n      const name: ?string = getComponentName(componentOptions)\n      const { include, exclude } = this\n      if (\n        // not included\n        (include \u0026\u0026 (!name || !matches(include, name))) ||\n        // excluded\n        (exclude \u0026\u0026 name \u0026\u0026 matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      const { cache, keys } = this\n      const key: ?string = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? `::${componentOptions.tag}` : '')\n        : vnode.key\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance\n        // make current key freshest\n        remove(keys, key)\n        keys.push(key)\n      } else {\n        cache[key] = vnode\n        keys.push(key)\n        // prune oldest entry\n        if (this.max \u0026\u0026 keys.length \u003e parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode)\n        }\n      }\n\n      vnode.data.keepAlive = true\n    }\n    return vnode || (slot \u0026\u0026 slot[0])\n  }\n}\n\n```\n\n注意它有⼀个属性 abstract 为 true，是⼀个抽象组件，Vue 的⽂档没有提这个概念，实际上它在组件实例建立父子关系的时候会被忽略，\n\ninclude 和 exclude 可以传入动态值是因为在 watch 中监听变化\n\n**在 created 钩子里定义了 this.cache 和 this.keys ，本质上它就是去缓存已经创建过的 vnode 。**\n\n```JavaScript\nconst slot = this.$slots.default\nconst vnode: VNode = getFirstComponentChild(slot)\n```\n\n**keep-alive 只缓存第一个子元素！**所以⼀般和它搭配使用的有 component 动态组件或者是 router-view\n\n当再次来到 creteEle 的时候 isReactivated 为 true，**并且在执行 init 钩子函数的时候不会执行组件的 mount 过程了**\n\n```JavaScript\n//src/core/vdom/create-component.js\ninit (vnode: VNodeWithData, hydrating: boolean): ?boolean {\n    if (\n      vnode.componentInstance \u0026\u0026\n      !vnode.componentInstance._isDestroyed \u0026\u0026\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      const mountedNode: any = vnode // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode)\n    } else {\n      const child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      )\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating)\n    }\n  },\n```\n\n### transition\n\n在下列情形中，可以给任何元素和组件添加 entering/leaving 过渡：\n\n- 条件渲染 (使用 v-if )\n- 条件展示 (使用 v-show )\n- 动态组件\n- 组件根节点\n\n在 vnode patch 的过程中，对于过渡的实现，**它只接收了 create 和 activate 2 个钩子函数**，我们知道 create 钩子函数只有当节点的创建过程才会执行，而 remove 会在节点销毁的时候执行，这也就印证了 必须要满⾜ v-if 、动态组件、组件根节点条件之⼀了，\n\n总结起来，Vue 的过渡实现分为以下几个步骤：\n\n1. ⾃动嗅探目标元素是否应用了 CSS 过渡或动画，如果是，在恰当的时机添加/删除 CSS 类名。\n2. 如果过渡组件提供了 JavaScript 钩子函数，这些钩子函数将在恰当的时机被调用。\n3. 如果没有找到 JavaScript 钩子并且也没有检测到 CSS 过渡/动画，DOM 操作 (插入/删除) 在下⼀帧 中立即执行。\n\n## Vue-Route\n\n### Vue.use\n\n```JavaScript\n\nexport function initUse (Vue: GlobalAPI) {\n  Vue.use = function (plugin: Function | Object) {\n    const installedPlugins = (this._installedPlugins || (this._installedPlugins = []))\n    if (installedPlugins.indexOf(plugin) \u003e -1) {\n      return this\n    }\n\n    // additional parameters\n    const args = toArray(arguments, 1)\n    args.unshift(this)\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args)\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args)\n    }\n    installedPlugins.push(plugin)\n    return this\n  }\n}\n```\n\n## [[Vuex]]\n\n## 总结\n\nVue 是一个通过响应式对象 实现的一个 MVVM 框架，他的渲染流程是这样的，他首先其实就是一个构造函数，在初始化的过程中，他把像 extend、use 等等方法挂载到原型链上，然后等待 New 一个新的实例出来， init 中，我们可以分为数据注入和\\$mount 两个时期\n\n数据注入是按照\n\n- initLifecycle(vm) // $parent,$root,$children,$refs\n- initEvents(vm) // 处理父组件传递的事件和回调\n- initRender(vm) // $slots,$scopedSlots,\\_c,\\$createElement\n- **callHook(vm, 'beforeCreate')**\n- initInjections(vm) // 获取注入数据\n- initState(vm) // 初始化 props，methods，data，computed，watch\n- initProvide(vm) // 提供数据注入\n- **callHook(vm, 'created')**\n\n这段时期，我们可以清晰的了解到 beforeCreate 和 Create 这两个生命周期可以获取到的数据。对数据的响应式声明也发生在这个阶段。\n\n然后就进入了\\$mount 阶段，这个阶段也叫挂载，\n\n首先 会调用 `_render` 将 模板转化成 AST、staticRenderFns、render 函数，我们将这个阶段称之为编译阶段\n\n转化成 AST 这个阶段的过程，有点类似于 HTML 的模板转化， 通过一个栈 进行标签的闭合匹配，通过大量正则进行事件和指令等操作的匹配，最后生成一棵 AST 树，AST 元素节点总共有 3 种类型， type 为 1 表示是普通元素，为 2 表示是表达式，为 3 表示是纯文本。\n\n**--- callHook(*vm*, 'beforeMount') ---**\n\n生成以后，要通过标记静态节点来优化这颗 AST 树，到这就要将 AST 树和 options 传入 render 生成真正运行的 code，其中涉及到 vif，vfor 等指令的具体执行\n\n产生一个组件级别的 Watcher，通过 `_update`将 VNode 更新成真实 DOM 时，触发了 getter 进行依赖收集\n\n**--- callHook(*vm*, 'Mount') ---**\n\n响应式： 最开始 init 时已经对每个数据进行了响应式声明，在\\$mount 阶段，将 template 转化成 AST 树时，同时也会触发响应式对象的 get 方法，将相应的 watcher push 到 Dep 的 sub 数组里，这里有一个细节，他在全局声明了一个 Dep.target,保证同时只有一个 watcher 在执行，\n\n然后就是\n\n触发更新时，Dep 接受到变化通知，通知内部的 watcher 进行视图更新，Watcher 内部有新旧 Dep 两个数组，他会先去取消旧 Watcher 的订阅，然后执行 watcher.run()会进入队列进行一波去重，然后异步去调用 patch，patch 这边也重新生成一个 Vnode Tree 与旧 tree 进行 diff 算法。\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vue3":{"title":"Vue3 学习","content":"\n# Vue3 学习\n\n因为最近想参与到 elementui3 的升级中，所以复习下 vue3 的 API。\n\n## composition API\n\n```JavaScript\nconst {\n            createApp,\n            reactive, // 创建响应式数据对象\n            ref, // 创建一个响应式的数据对象\n            toRefs, // 将响应式数据对象转换为单一响应式对象\n            isRef, // 判断某值是否是引用类型\n            computed, // 创建计算属性\n            watch, // 创建watch监听\n            // 生命周期钩子\n            onMounted,\n            onUpdated,\n            onUnmounted,\n        } = Vue\n```\n\n### setup\n\n**setup 函数会在 beforeCreate 之后 created 之前执行**\n\n### reactive\n\nreactive() 函数接受一个普通对象 返回一个响应式数据对象\n\n```JavaScript\n\n    const state = reactive({\n        count: 0,\n        plusOne: computed(() =\u003e state.count + 1)\n    })\n    return {\n        state\n    }\n    // 模板渲染要这样写\n    template: `\n    \u003cdiv\u003e\n        \u003cdiv\u003ecount is {{ state.count }} \u003c/div\u003e\n        \u003cdiv\u003eplusOne is {{ state.plusOne }}\u003c/div\u003e\n    \u003c/div\u003e\n\n```\n\n### ref\n\n创建一个响应式变量，传入默认值\n\n```JavaScript\n const closed = ref(false)\n```\n\n### unref\n\n传入一个可能是响应式对象，也可能不是的对象\n\n```JavaScript\n// if 响应式  ref =\u003evalue\n// if(!) 取值本身\nunref(a)\n```\n\n### toRefs\n\ntoRefs 可以将 reactive 创建出的对象展开为基础类型\n\n可以与上面 reactive 比对，toRefs 将对象解构\n\n```JavaScript\n    // 我们再看看用了toRefs\n    const state = reactive({\n        count: 0,\n        plusOne: computed(() =\u003e state.count + 1)\n    })\n    return {\n        ...toRefs(state)\n    }\n    // 模板渲染要这样写\n    template: `\n    \u003cdiv\u003e\n        \u003cdiv\u003ecount is {{ count }} \u003c/div\u003e\n        \u003cdiv\u003eplusOne is {{ plusOne }}\u003c/div\u003e\n    \u003c/div\u003e\n```\n\n### ref 与 isRef\n\n- ref 将给定的值(确切的说是基本数据类型 ini 或 string)创建一个响应式的数据对象\n- isRef 其实就是判断一下是不是 ref 生成的响应式数据对象\n\n```JavaScript\n    // 定义创建响应式数据\n    const time = ref(new Date())\n    // 设置定时器为了测试数据响应\n    setInterval(() =\u003e time.value = new Date(), 1000)\n\n    // 判断某值是否是响应式类型\n    console.log('time is ref:', isRef(time))\n    console.log('time', time)\n    console.log('time.value', time.value)\n\n    // 我们看看模板里面我们这样展示\n    template: `\n        \u003cdiv\u003e\n            \u003cdiv\u003eDate is {{ time }}\u003c/div\u003e\n        \u003c/div\u003e\n    `\n```\n\n### effect 副作用函数\n\n响应式对象修改会触发这个函数\n\n```JavaScript\n    // 副作用函数\n    effect(() =\u003e {\n        console.log('数值被修改了..',state.count)\n    })\n```\n\n`watch`和 `computed` 没有什么新东西\n\n### computed 计算属性\n\n```JavaScript\nconst state = reactive({\n    count: 0,\n    plusOne: computed(() =\u003e state.count + 1)\n})\n```\n\n### watch 定义监听器\n\n```JavaScript\n   watch(() =\u003e state.count * 2, val =\u003e {\n        console.log(`count * 2 is ${val}`)\n    })\n```\n\n### 生命周期钩子 Hooks\n\n| Vue3          | Vue3            |\n| ------------- | --------------- |\n| beforeCreate  | setup(替代)     |\n| created       | setup(替代)     |\n| beforeMount   | onBeforeMount   |\n| mounted       | onMounted       |\n| beforeUpdate  | onBeforeUpdate  |\n| updated       | onUpdated       |\n| beforeDestroy | onBeforeUnmount |\n| destroyed     | onUnmounted     |\n| errorCaptured | onErrorCaptured |\n\n## 静态节点\n\nvue3 会找到静态根结点，并直接提升到顶层，传入 render 的时候，对这部分节点不进行 path\n\n而 Vue 2 则是在通过生成 AST 树后进行一次遍历，将节点标记成 isStatic ，但这样在 diff 的时候还是要递归遍历到，只不过会走到另一个分支。\n\n```JavaScript\n// vue2 的静态节点\nrender(){\n  createVNode(\"h1\", null, \"Hello World\")\n  // ...\n}\n\n// vue3 的静态节点\nconst hoisted = createVNode(\"h1\", null, \"Hello World\")\nfunction render(){\n  // 直接使用 hoisted 即可\n}\n```\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Vuex":{"title":"Vuex","content":"\n# Vuex\n\n注册插件和 route 一样，就不谈了\n\n### 构造函数\n\n```JavaScript\nconstructor (options = {}) {\n    // Auto install if it is not done yet and `window` has `Vue`.\n    // To allow users to avoid auto-installation in some cases,\n    // this code should be placed here. See #731\n    /*\n      在浏览器环境下，如果插件还未安装（!Vue即判断是否未安装），则它会自动安装。\n      它允许用户在某些情况下避免自动安装。\n    */\n    if (!Vue \u0026\u0026 typeof window !== 'undefined' \u0026\u0026 window.Vue) {\n      install(window.Vue)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(Vue, `must call Vue.use(Vuex) before creating a store instance.`)\n      assert(typeof Promise !== 'undefined', `vuex requires a Promise polyfill in this browser.`)\n      assert(this instanceof Store, `Store must be called with the new operator.`)\n    }\n\n    const {\n      /*一个数组，包含应用在 store 上的插件方法。这些插件直接接收 store 作为唯一参数，可以监听 mutation（用于外部地数据持久化、记录或调试）或者提交 mutation （用于内部数据，例如 websocket 或 某些观察者）*/\n      plugins = [],\n      /*使 Vuex store 进入严格模式，在严格模式下，任何 mutation 处理函数以外修改 Vuex state 都会抛出错误。*/\n      strict = false\n    } = options\n\n    /*从option中取出state，如果state是function则执行，最终得到一个对象*/\n    let {\n      state = {}\n    } = options\n    if (typeof state === 'function') {\n      state = state()\n    }\n\n    // store internal state\n    /* 用来判断严格模式下是否是用mutation修改state的 */\n    this._committing = false\n    /* 存放action */\n    this._actions = Object.create(null)\n    /* 存放mutation */\n    this._mutations = Object.create(null)\n    /* 存放getter */\n    this._wrappedGetters = Object.create(null)\n    /* module收集器 */\n    this._modules = new ModuleCollection(options)\n    /* 根据namespace存放module */\n    this._modulesNamespaceMap = Object.create(null)\n    /* 存放订阅者 */\n    this._subscribers = []\n    /* 用以实现Watch的Vue实例 */\n    this._watcherVM = new Vue()\n\n    // bind commit and dispatch to self\n    /*将dispatch与commit调用的this绑定为store对象本身，否则在组件内部this.dispatch时的this会指向组件的vm*/\n    const store = this\n    const { dispatch, commit } = this\n    /* 为dispatch与commit绑定this（Store实例本身） */\n    this.dispatch = function boundDispatch (type, payload) {\n      return dispatch.call(store, type, payload)\n    }\n    this.commit = function boundCommit (type, payload, options) {\n      return commit.call(store, type, payload, options)\n    }\n\n    // strict mode\n    /*严格模式(使 Vuex store 进入严格模式，在严格模式下，任何 mutation 处理函数以外修改 Vuex state 都会抛出错误)*/\n    this.strict = strict\n\n    // init root module.\n    // this also recursively registers all sub-modules\n    // and collects all module getters inside this._wrappedGetters\n    /*初始化根module，这也同时递归注册了所有子module，收集所有module的getter到_wrappedGetters中去，this._modules.root代表根module才独有保存的Module对象*/\n    installModule(this, state, [], this._modules.root)\n\n    // initialize the store vm, which is responsible for the reactivity\n    // (also registers _wrappedGetters as computed properties)\n    /* 通过vm重设store，新建Vue对象使用Vue内部的响应式实现注册state以及computed */\n    resetStoreVM(this, state)\n\n    // apply plugins\n    /* 调用插件 */\n    plugins.forEach(plugin =\u003e plugin(this))\n\n    /* devtool插件 */\n    if (Vue.config.devtools) {\n      devtoolPlugin(this)\n    }\n  }\n```\n\nStore 的构造类除了初始化一些内部变量以外，主要执行了 installModule（初始化 module）以及 resetStoreVM（通过 VM 使 store“响应式”）。\n\n```JavaScript\nforEachValue(wrappedGetters, (fn, key) =\u003e {\n  // use computed to leverage its lazy-caching mechanism\n  computed[key] = () =\u003e fn(store)\n  Object.defineProperty(store.getters, key, {\n    get: () =\u003e store._vm[key],\n    enumerable: true // for local getters\n  })\n})\n```\n\nresetStoreVM 首先会遍历 wrappedGetters，使用 Object.defineProperty 方法为每一个 getter 绑定上 get 方法，这样我们就可以在组件里访问 this.\\$store.getters.test 就等同于访问 store.\\_vm.test。\n\n```JavaScript\nstore._vm = new Vue({\n  data: {\n    $$state: state\n  },\n  computed\n})\n```\n\n之后 Vuex 采用了 new 一个 Vue 对象来实现数据的“响应式化”，运用 Vue.js 内部提供的数据双向绑定功能来实现 store 的数据与视图的同步更新。\n\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Wallaby.js":{"title":"Wallaby.js","content":"\n Wallaby.js 是一款开发人员生产力工具，可在您键入时立即运行 JavaScript 和 TypeScript 测试，并在 IDE 中的代码旁边突出显示结果。\n\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Web%E6%80%A7%E8%83%BD%E5%AE%9E%E6%88%98":{"title":"《 Web性能实战 》","content":"\n# 《 Web性能实战 》\n\n# 元数据\n\n\u003e [!abstract] Web性能实战\n\u003e - ![ Web性能实战|200](https://wfqqreader-1252317822.image.myqcloud.com/cover/886/32670886/t7_32670886.jpg)\n\u003e - 书名： Web性能实战\n\u003e - 作者： 杰里米·瓦格纳\n\u003e - 简介： 本书是创建快速网站的指南，指导你如何以正确的方式创建高性能网站。书中介绍了如何加快向用户交付站点资源的速度、提高渲染速度、减少网站占用空间；探讨了HTTP/2等能够大幅提升网站速度的技术；阐述了如何构建一个自动化的工作流以完成常见的优化任务，同时提高开发效率。如果你是Web开发人员，想创建快速灵活的网站，或者提升已有网站的性能，打造更佳的用户体验，那么本书不失为一个理想的选择。\n\u003e - 出版时间 2020-05-29 00:00:00\n\u003e - ISBN： 9787115538321\n\u003e - 分类： 计算机-编程设计\n\u003e - 出版社： 人民邮电出版社\n\n# 高亮划线\n\n## 4.2 关键CSS的原理\n\n- 📌 内联CSS之所以如此有效，是因为浏览器不必等待太久。浏览器加载页面的HTML时将解析文档，并找到指向其他资源的URL。如果样式是通过\u003clink\u003e标签加载的，那么在浏览器必须等待CSS时，渲染就会被阻塞。但是当样式内联到HTML中时，用户只需要等待加载HTML的过程，随后浏览器就能解析CSS，页面就能渲染。美中不足的是：当你以这种方式加载一个网站的所有CSS时，就会失去其可移植性。最后，每次加载页面时都会复制CSS，这意味着以后每次加载页面时都会出现无法有效缓存的情况。 ^32670886-35-1050-1321\n    - ⏱ 2021-06-22 11:10:48\n\n## 9.1 何为Service Worker\n\n- 📌 Service Worker无法直接访问父页面上的window对象。尽管它也可以与父页面通信，但必须通过中介（如postMessage API）间接地进行。 ^32670886-66-1014-1092\n    - ⏱ 2021-06-24 15:02:36\n\n## 9.2 编写第一个Service Worker\n\n- 📌 为了方便起见，Service Worker可以在不使用HTTPS的本地主机上运行。但是，由于ServiceWorker能够拦截网络请求并在后台运行，因此在产品Web服务器上需要使用HTTPS。你在本地主机上有一定的回旋余地，但是进入生产环境时，你需要一个有效的SSL证书。 ^32670886-67-991-1128\n    - ⏱ 2021-06-24 15:05:29\n\n## 11.2 探索HTTP/2对应的优化技术变化\n\n- 📌 数据URI方案应用广泛，比如\u003clink\u003e标签、\u003cimg\u003e标签、CSS的url引用，以及几乎任何允许你引用外部资源的地方。 ^32670886-78-3819-3891\n    - ⏱ 2021-06-24 18:20:30\n- 📌 虽然使用数据URI方案似乎是一个好主意，在一些场景中可能有些用处，但它们效率低下。编码的字符串通常比它的源字符串大，有时超过33%甚至更多。更糟糕的是，所有的资源内联方法都无法有效缓存。跨多个文档使用的内联数据是冗余下载的，并且只能在包含它的文档的上下文中缓存。 ^32670886-78-3979-4139\n    - ⏱ 2021-06-24 18:20:35\n\n# 读书笔记\n\n## 3.3 对CSS进行性能调整\n\n### 划线评论\n\n- 📌 鲁棒性 ^16142247-7rfev91Vf\n    - 💭 鲁棒是Robust的音译，也就是健壮和强壮的意思。\n    - ⏱ 2021-06-22 10:40:23\n   \n\n# 本书评论\n\n## 书评 No.1\n\n ^16142247-7riLSYpBc  \n⏱ 2021-06-24 18:30:08\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Web-Worker":{"title":"Web Worker","content":"\n# Web Worker\n\n被阻塞的主线程是输入延迟的主要原因之一。[Web Worker](https://developer.mozilla.org/docs/Web/API/Worker)能够让 JavaScript 在后台线程上运行。将非用户界面操作移动到单独的工作线程上可以缩减主线程阻塞时间，从而改善 [[FID]]。\n\n请考虑使用以下库来使您更轻松地在网站上使用 Web Worker：\n\n- [Comlink](https://github.com/GoogleChromeLabs/comlink)：一个助手类库，该库抽象了`postMessage`，使其更易于使用\n- [Workway](https://github.com/WebReflection/workway) : 一个通用的 Web Worker 导出器\n- [Workerize](https://github.com/developit/workerize)：将模块移动到 Web Worker 中\n\n# 参考资料\n\n- [Web Worker 文献综述 | AlloyTeam](http://www.alloyteam.com/2020/07/14680/#prettyPhoto)\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/Web3":{"title":"Web3","content":"\n# Web3\n\n加入 Web3 赛道的前大厂“高 P”正在变得更多，其中便包括：美团联合创始人王慧文、蚂蚁技术总监赵峰、2014 年加入字节 2020 年便拿到近亿期权退休的 90 后程序员郭宇等。\n\n王慧文今年 4 月将即刻 App 签名改为：正在学习 Crypto。\n\n[[去中心化]]  \n基础设施：[[区块链]]、[[Dao]]、[[DeFi]]、[[NFT]]  \n应用： [[DApp]]\n\n### 与 web2 的区别\n\n**Web 3 是一个去中心化的网络，跟 Web 2 时代，信息、数据都掌握在某中心节点（比如谷歌、Meta 亚马逊等大科技公司）手上不同，未来的信息将由用户自己发布、保管、不可追溯且永远不会泄露，用户的任何行为将不需要任何中间机构来帮助传递。**\n\n**而 Web 3 则是要打破这种集中式的模式，把“客户端-服务器”架构改成“多节点、多中心”的运行架构。** 在一个分布有众多节点的系统中，数据的本质变为由全网节点共同维护，不再依靠于中央处理节点，从而实现数据的分布式存储、记录与更新。在这个结构中，每个人都是中心，每个人都可以连接并影响其他节点，是一个更加扁平、开放、平等的结构\n\n近十年来，从比特币开始，更多关于 Web 3 的理论和技术开始发展进化，从去中心化账本发展到了去中心化的计算平台，并逐渐出现了一些去中心化的应用（[[dApp]]）、形成了去中心化的金融系统（[[DeFi]]）、催生了以 NFT 为代表的虚拟资产，接着，人们也开始畅想如元宇宙等去中心化的社会和商业形态。\n\n目前，Web 3 工具的类别非常多且细致，目前把它们按功能大致可以被划分为安全、储存、分析、沟通、去中心化治理（[[DAO]]）、用户身份识别、交易等类别，每个类别中目前都有代表性的公司。\n\n## 币\n\n### 算法稳定币\n\n#### 什么是算法稳定币\n\n2014 年，数字货币交易所 Bifinex 旗下的 Tether 公司发行了全球第一款稳定币 USDT，1: 1 与美元挂钩。**意思是你每发行一个 USDT，你的银行里就必须存入一美元**。\n\n币圈认为这样太依赖美元，又依赖中心机构，所以又搞出了两个 方案\n\n- 其中一种是把抵押资产从美元换成了比特币、以太坊这样的主流加密货币，由于这些加密货币比美元的风险大很多，因此设置了更多抵押量来作为保证。\n- **另一种更进阶的玩法就干脆什么抵押资产都不要，完全依靠算法来调节供需关系从而创造并维持货币价值。**\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20220520153633.png)\n\n2018 年左右，韩国人 Do Kwon 建立了一个围绕稳定币的公链生态 Terra，**在这条链上发行了多种锚定法定货币的稳定币，包括锚定美元的 UST、锚定韩元的 KRT 等，其中 UST 规模最大。**\n\n为了使数字货币具有稳定的价值，设计了一个游戏规则：  \n\n1. **一个 UST=价值 1 美元的 Luna**。意思是，如果 Luna 价格为 1 美元可以换一个 UST，如果 Luna 价格涨到了 100 美元，则可以换 100 个 UST。  \n2. **UST\\*\\***和 Luna 是“双向销毁铸造”的关系**。意思是，当你在用 Luna 换 UST 时，市场上就少了一美元的 Luna 多了一个 UST，当用 UST 换 Luna 时，市场上就少了一个 UST。供应量增加、价格下降，供应量减少、价格上涨。  \n3. **UST 都是由 Luna 铸造，Luna 规划的发币上限是 10 亿枚。\\*\\*\n\n在这个过程中，供需如何保持稳定呢？因为来自于 UST 价格的小幅波动让这个机制存在着**套利空间。**\n\n前面说了，**1 美元 Luna 恒定的等于 1 个 UST**。所以当 UST 高于 1 美元（如 1.1 美元）的时候，自然就会有人销毁自己的 Luna 换 UST，这种情境下，你损失 1 美元的 Luna 换了 UST，但每个 UST 高于 1 美金，你就赚了 0.1 美元。反之，UST 低于 1 美元时（如 0.9 美元），就有人会把 UST 换成 1 美元的 Luna 从而获利 0.1 美元。\n\n高了点就有人卖、低了点就有人买，于是就基本维持了 UST 价格的稳定。**这个通过供需来稳定价值的机制，其实跟各国通过调整货币供应量来维持货币价值稳定的路径类似。所以光从原理来看，“**算法稳定”的**这种模式似乎还行。**\n\n但细想之后，你会发现这背后存在一个巨大的 Bug——**这个模式可运行有一个前提，就是 Luna 必须有价值，不管价格多低但不能是零**，不然你无论发多少个 Luna 都不会对 UST 的价格波动造成影响。\n\n为了让 Luna 有价值，Terra 项目方成立了一个叫 Anchor 的项目，并 **给出了一个高达 20%的 UST 固定存款年化收益率。**，这就有点[[庞氏骗局]]的意味了。为了能买入 UST，大家的目光就投向了能够铸造 UST 的 Luna 上。**而当大家开始用美元大量交易 `Luna`、`UST` 之后，两个之前脚踩着空气的币，就开始有了真正的价值支撑。**\n\n## [[Luna]]\n\n## 引用文章\n\n- [# 想成为 Web 3 圈内人士？那得先熟练掌握这些“黑话”](https://mp.weixin.qq.com/s?__biz=MzI3ODg4ODEwMA==\u0026mid=2247515683\u0026idx=1\u0026sn=c645a334e7c244d3484381e1a8739c5e\u0026chksm=eb52d5e8dc255cfeeff63707c06c473f7fa798611bf7e60b5585373018399698a7dadb361a89\u0026token=1143905788\u0026lang=zh_CN\u0026scene=21#wechat_redirect )  \n- [# Web 3 全解读：](https://mp.weixin.qq.com/s?__biz=MzI3ODg4ODEwMA==\u0026mid=2247513071\u0026idx=1\u0026sn=98a093667fc10a8625d11401764c1b93\u0026chksm=eb52d824dc25513243c7897f6675acf27b216f8da0d3b10a5ee61dd44818a1ba60e7589e6f7f\u0026scene=21#wechat_redirect)\n\n# web3 赚钱\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230708134321.png)\n\n# web3 工作\n\n- [Javascript Jobs in Web3 - Mar 2023 (13 New)](https://web3.career/javascript-jobs)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Web3-%E5%AD%A6%E4%B9%A0":{"title":"Web3 学习","content":"\n# Web3 学习\n","lastmodified":"2023-09-18T14:54:47.466454104Z","tags":null},"/WebAssembly":{"title":"WebAssembly","content":"\n# WebAssembly\n\nWebAssembly （WASM）是一种可移植的低级语言，Rust 可以编译成它。它在浏览器中运行，可与 JavaScript 互操作，并被所有主要的现代浏览器所支持。\n\n\u003e WASM 肯定比 JS 快很多，但还没有达到原生速度。在我们的测试中，Parcel 编译成 WASM 后的运行速度比使用本地二进制文件慢 10 - 20 倍。\n\u003e\n\u003e —— Devon Govett\n\n虽然 WASM 还不是完美的解决方案，但它可以帮助开发者创建极快的 Web 体验。[[Rust]] 团队 致力于实现高质量和先进（cutting edge）的 WASM 实现。对于开发者来说，这意味着你可以拥有 Rust 的性能优势（相对于 Go ），同时还可以为 Web 服务（使用 WASM ）。\n\n# 参考资料\n\n- [wasmati: You should write your WebAssembly in TypeScript - ZKSECURITY](https://www.zksecurity.xyz/blog/posts/wasmati/)\n\n   \u003e 这篇文章可以看出 仅一个加法的简单实现 wasm 比 js 快了 4 倍\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/WebGpu":{"title":"WebGpu","content":"\n# WebGpu\n\n2023.4.6 谷歌发布了 WebGpu ，这标志着浏览器Web图形有了曙光，和 [[WebGL]]的差距主要在于\n\n1. 这是复杂场景的渲染性能对比。这个场景中有 1000 棵树，它们不是使用实例化绘制的，而是每一棵树都有一个 draw call，所以一个场景我要有 1000 多个 draw call。如果使用 WebGL 进行绘制的话，可以看到，使用 2070 显卡只能跑到 21FPS，而且每一帧的 CPU 时间需要 44 毫秒，但是同样用 WebGPU 来处理，可以跑到 123 帧，每一帧的 CPU 时间只有 0.1 毫秒，**这个是 WebGPU 和 WebGL 最大最显著的性能上的差距。*\n2. **另外就是一个代码上的差距。** 用 WebGL 原生 API 绘制的过程，所有的东西的起点都在于 Canvas；然而这是一件很不可思议的事情，就是即使不需要画什么东西，用户也需要创建一个 Canvas 元素，这个操作对于前端可能是无感知的，但是对于浏览器开发者来说就要新建一个 DOM 元素，要给它增加所有它需要有的东西，一旦 DOM 元素崩溃了，浏览器要处理所有这些事情，对于开发者而言后面的事情就会变得非常复杂。  \n\n   但是 WebGPU 不是这样，WebGPU 的入口是 navigator.gpu，用户可以从这里获取到一个显卡，再从显卡获取到一个设备，而中间的 Canvas 是没有的。\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/WebP":{"title":"WebP","content":"","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Webpack":{"title":"webpack","content":"\n[[Webpack |Webpack 基础知识]]  \n[[Webpack相关问题 |Webpack 相关问题]]  \n[[Webpack 优化|Webpack 优化]]  \n[[Webpack 实现 |Webpack 实现]]\n\n# webpack\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174647.png)\n\n## 基础概念\n\n**webpack_require**\n\nwebpack_exports\n\n### hash chunkhash contenthash 区别\n\n- hash 整个文件任何代码发生改变 hash 就会改变\n- contenthash 自身内容发生改变 才会改变\n- chunkhash 同一个 chunk 有发生改变，都会改变\n\n### bundle、module、chunk 的区别\n\n- bundle：一个入口文件打包后的文件，\n- 每一个文件都是一个 module\n- bundle 里的 eval 都是一个 chunk，\n\n### [[webpack_lodaer]]\n\n### [[webpack插件]]\n\n[[webpack_sourceMap]]\n\n[[webpack_热更新]]\n\n### babel\n\n#### 预设\n\n1.babel-loader 是 webpack 与 babel 的通信桥梁，不会做把 es6 转成 es5 的⼯作，这部分⼯作需要用到 **@babel/preset-env**来做 2.@babel/preset-env ⾥包含了 es，6，7，8 转 es5 的转换规则\n\n#### polyfill\n\n默认的 Babel 只⽀持 let 等⼀些基础的特性转换，Promise 等⼀些还有转换过 来，这时候需要借助@babel/polyfill，把 es 的新特性都装进来，来弥补低版本浏览器中缺失的特性\n\n```JavaScript\n//index.js 顶部\nimport \"@babel/polyfill\";\n```\n\n#### 按需加载\n\n```JavaScript\n//.babelrc\n{\n  \"presets\": [\n    [\n      \"@babel/preset-env\",\n      {\n        \"targets\": {\n          //目标环境\n          \"edge\": \"17\",\n          \"firefox\": \"60\",\n          \"chrome\": \"67\",\n          \"safari\": \"11\"\n        },\n        \"corejs\": 2,//新版本需要指定核⼼库版本\n        \"useBuiltIns\": \"usage\"\n      }\n    ],\n    \"@babel/preset-react\"\n  ]\n}\n\n```\n\nuseBuiltIns 选项是 babel 7 的新功能，这个选项告诉 babel 如何配置 @babel/polyfill 。 它有三个参数可以使用：\n\n①entry: 需要在 webpack 的⼊⼝⽂件⾥ import \"@babel/polyfill\" ⼀次。 babel 会根据你的使用情况导⼊垫片，没有使用的功能不会被导⼊相应的垫片。\n\n②usage: 不需要 import ，全⾃动检测，但是要安装 @babel/polyfill 。（试验阶段）\n\n③false: 如果你 import \"@babel/polyfill\" ，它不会排除掉没有使用的垫片，程序体积会庞⼤。(不推荐)\n\n[[tree-shaking]]\n\n## [[MFSU]]\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Webpack%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98":{"title":"Webpack 相关问题","content":"\n# Webpack 相关问题\n\n1. 熟练，灵活地掌握 Webpack 配置信息\n2. webpack cli 解析 \u0026\u0026 schemas 源码实现\n3. webpack 文件寻找实现原理\n4. plugin/loader 原理  \n   [[webpack_lodaer]]  \n   [[webpack插件]]\n5. ast 转换\n6. sourcemap 原理  \n   [[Webpack#sourceMap]]\n7. devserver 热更新原理  \n   ![[Webpack#热更新#原理]]\n8. webpack harmony 分析\n9. 内置 plugin 原理分析\n10. tree-shaking 原理\n11. code-split 原理\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Webpack-%E4%BC%98%E5%8C%96":{"title":"Webpack 优化","content":"\n# Webpack 优化\n\n## 编译阶段优化\n\n### 分析准备\n\n#### 速度分析\n\n[[speed-measure-webpack-plugin]]\n\n#### 体积分析\n\n[[webpack-bundle-analyzer]]\n\n### 并行构建以提升总体效率\n\n随着目前最新稳定版本 Webpack 4 的发布，人们发现在一般项目的开发阶段和小型项目的各构建流程中已经用不到这种并发的思路了，因为在这些情况下，并发所需要的多进程管理与通信所带来的额外时间成本可能会超过使用工具带来的收益。\n\n#### HappyPack(不维护了)、thread-loader\n\n`thread-loader` 会将你的 `loader` 放置在一个 `worker` 池里面运行，以达到多线程构建。\n\n```JavaScript\nrules: [\n  {\n    test: /\\.js$/,\n    include: path.resolve(\"src\"),\n    use: [\n      \"thread-loader\",\n      // your expensive loader (e.g babel-loader)\n    ],\n  },\n];\n```\n\n#### parallel-webpack\n\n针对与多配置构建。Webpack 的配置文件可以是一个包含多个子配置对象的数组，在执行这类多配置构建时，默认串行执行，而通过 parallel-webpack，就能实现相关配置的并行处理。\n\n### 生产环境关闭 sourcemap\n\n### Externals\n\n与 CDN 配合将大型的库或者框架从打包中移除，使用 CDN\n\n[[DLL 打包]]\n\n### IgnorePlugin\n\n有的依赖包，除了项目所需的模块内容外，还会附带一些多余的模块。典型的例子是 moment 这个包，一般情况下在构建时会自动引入其 locale 目录下的多国语言包，\n\n```JavaScript\n    new webpack.IgnorePlugin({\n      resourceRegExp: /^\\.\\/locale$/,\n      contextRegExp: /moment$/,\n    }),\n```\n\n### include/exclude\n\ninclude 的用途是只对符合条件的模块使用指定 Loader 进行转换处理。而 exclude 则相反，不对特定条件的模块使用该 Loader（例如不使用 babel-loader 处理 node_modules 中的模块）。\n\n```JavaScript\nrules: [\n      {\n        test: /\\.js$/,\n        include: /src|jquery/, //这里的include jquery将不生效，因为exclude优先级更高\n        exclude: /node_modules/,\n        use: ['babel-loader'],\n      },\n    ],\n```\n\n## 打包阶段优化\n\n[[SpiltChunks]]\n\n[[webpack 代码压缩]]\n\n[[webpack 缓存]]\n\n[[webpack 动态导入]]  \n\n## 其他\n\n[[webpack5]]  \n\n[[无包构建]]\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Webpack-%E5%AE%9E%E7%8E%B0":{"title":"Webpack 实现","content":"\n# Webpack 实现\n\n## 流程提炼\n\n我们先提炼出 Webpack 核心工作过程中的关键环节，明确“查阅”源码的思路：\n\n- Webpack CLI 启动打包流程；\n- 载入 Webpack 核心模块，创建 Compiler 对象；\n- 使用 Compiler 对象开始编译整个项目；\n- 从入口文件开始，解析模块依赖，形成依赖关系树；\n- 递归依赖树，将每个模块交给对应的 Loader 处理；\n- 合并 Loader 处理完的结果，将打包结果输出到 dist 目录。\n\n## Hook 的使用方式\n\nHook 的使用分为四步：\n\n1. 在构造函数中定义 Hook 类型和参数，生成 Hook 对象。\n2. 在插件中注册 Hook，添加对应 Hook 触发时的执行函数。\n3. 生成插件实例，运行 apply 方法。\n4. 在运行到对应生命周期节点时调用 Hook，执行注册过的插件的回调函数。如下面的代码所示：\n\n```JavaScript\n// lib/Compiler.js\nthis.hooks = {\n  ...\n  make: new SyncHook(['compilation', 'params']), //1. 定义Hook\n  ...\n}\n...\nthis.hooks.compilation.call(compilation, params); //4. 调用Hook\n...\n// lib/dependencies/CommonJsPlugin.js\n//2. 在插件中注册Hook\ncompiler.hooks.compilation.tap(\"CommonJSPlugin\", (compilation, { contextModuleFactory, normalModuleFactory }) =\u003e {\n  ...\n})\n// lib/WebpackOptionsApply.js\n//3. 生成插件实例，运行apply方法\nnew CommonJsPlugin(options.module).apply(compiler);\n```\n\n以上就是 Webpack 中 Hook 的一般使用方式。正是通过这种方式，Webpack 将编译器和编译过程的生命周期节点提供给外部插件，从而搭建起弹性化的工作引擎。\n\n## Compiler Hooks\n\n构建器实例的生命周期可以分为 3 个阶段：初始化阶段、构建过程阶段、产物生成阶段。下面我们就来大致介绍下这些不同阶段的 Hooks ：\n\n**初始化阶段**\n\n- environment、afterEnvironment：在创建完 compiler 实例且执行了配置内定义的插件的 apply 方法后触发。\n- entryOption、afterPlugins、afterResolvers：在 WebpackOptionsApply.js 中，这 3 个 Hooks 分别在执行 EntryOptions 插件和其他 Webpack 内置插件，以及解析了 resolver 配置后触发。\n\n**构建过程阶段**\n\n- normalModuleFactory、contextModuleFactory：在两类模块工厂创建后触发。\n- beforeRun、run、watchRun、beforeCompile、compile、thisCompilation、compilation、make、afterCompile：在运行构建过程中触发。\n\n**产物生成阶段**\n\n- shouldEmit、emit、assetEmitted、afterEmit：在构建完成后，处理产物的过程中触发。\n- failed、done：在达到最终结果状态时触发。\n\n## Compilation Hooks\n\n构建过程实例的生命周期我们分为两个阶段：\n\n**构建阶段**\n\n- addEntry、failedEntry、succeedEntry：在添加入口和添加入口结束时触发（Webpack 5 中移除）。\n- buildModule、rebuildModule、finishRebuildingModule、failedModule、succeedModule：在构建单个模块时触发。\n- finishModules：在所有模块构建完成后触发。\n\n**优化阶段**\n\n优化阶段在 seal 函数中共有 12 个主要的处理过程，如下图所示：  \n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174635.png)\n\n每个过程都暴露了相应的 Hooks，分别如下:\n\n- seal、needAdditionalSeal、unseal、afterSeal：分别在 seal 函数的起始和结束的位置触发。\n- optimizeDependencies、afterOptimizeDependencies：触发优化依赖的插件执行，例如 FlagDependencyUsagePlugin。\n- beforeChunks、afterChunks：分别在生成 Chunks 的过程的前后触发。\n- optimize：在生成 chunks 之后，开始执行优化处理的阶段触发。\n- optimizeModule、afterOptimizeModule：在优化模块过程的前后触发。\n- optimizeChunks、afterOptimizeChunks：在优化 Chunk 过程的前后触发，用于 [[tree-shaking]]。\n- optimizeTree、afterOptimizeTree：在优化模块和 Chunk 树过程的前后触发。\n- optimizeChunkModules、afterOptimizeChunkModules：在优化 ChunkModules 的过程前后触发，例如 ModuleConcatenationPlugin，利用这一 Hook 来做[Scope Hoisting](https://webpack.js.org/plugins/module-concatenation-plugin/#optimization-bailouts)的优化。\n- shouldRecord、recordModules、recordChunks、recordHash：在 shouldRecord 返回为 true 的情况下，依次触发 recordModules、recordChunks、recordHash。\n- reviveModules、beforeModuleIds、moduleIds、optimizeModuleIds、afterOptimizeModuleIds：在生成模块 Id 过程的前后触发。\n- reviveChunks、beforeChunkIds、optimizeChunkIds、afterOptimizeChunkIds：在生成 Chunk id 过程的前后触发。\n- beforeHash、afterHash：在生成模块与 Chunk 的 hash 过程的前后触发。\n- beforeModuleAssets、moduleAsset：在生成模块产物数据过程的前后触发。\n- shouldGenerateChunkAssets、beforeChunkAssets、chunkAsset：在创建 Chunk 产物数据过程的前后触发。\n- additionalAssets、optimizeChunkAssets、afterOptimizeChunkAssets、optimizeAssets、afterOptimizeAssets：在优化产物过程的前后触发，例如在 TerserPlugin 的[压缩代码](https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/src/index.js)插件的执行过程中，就用到了 optimizeChunkAssets。\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Wrap":{"title":"Wrap","content":"\n# Wrap\n\n开箱即用的补全、推荐和纠错,和 copilot 很像\n\n`cmd + P` 调出命令行\n\n需要连接远程服务器 ， 命令行里输入 `Save` 或者`#` 调出 Session\n\n## 缺点\n\n需要登录使用，并且收集隐私，底下推荐 [[终端工具#iTerm2]]\n\n但是我命令行用的并不多，就先不用了。\n\n# 参考资料\n\n- [Warp：是时候改变你的命令行工具了](https://sspai.com/post/79262)\n - [Warp下载链接](https://app.warp.dev/referral/KV6YME)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/XSS":{"title":"XSS","content":"\n# XSS\n\nXSS 全称是 Cross Site Scripting，为了与“CSS”区分开来，故简称 XSS，翻译过来就是“跨站脚本”。XSS 攻击是指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。  \n如果页面被注入了恶意 JavaScript 脚本，恶意脚本都能做哪些事情。\n\n- **可以窃取 Cookie 信息**。恶意 JavaScript 可以通过“document.cookie”获取 Cookie 信息，然后通过 XMLHttpRequest 或者 Fetch 加上 CORS 功能将数据发送给恶意服务器；恶意服务器拿到用户的 Cookie 信息之后，就可以在其他电脑上模拟用户的登录，然后进行转账等操作。\n- **可以监听用户行为**。恶意 JavaScript 可以使用“addEventListener”接口来监听键盘事件，比如可以获取用户输入的信用卡等信息，将其发送到恶意服务器。黑客掌握了这些信息之后，又可以做很多违法的事情。\n- 可以通过修改 DOM 伪造假的登录窗口，用来**欺骗用户输入用户名和密码等信息**。\n- 还可以在页面内**生成浮窗广告**，这些广告会严重地影响用户体验。\n\n### 恶意脚本是怎么注入的\n\n#### **存储型 XSS 攻击**\n\n黑客利用站点漏洞将一段恶意 JavaScript 代码提交到网站的数据库中；\n\n#### **反射型 XSS 攻击**\n\n在一个反射型 XSS 攻击过程中，恶意 JavaScript 脚本属于用户发送给网站请求中的一部分，随后网站又把恶意 JavaScript 脚本返回给用户\n\n```JavaScript\n// 普通\nhttp://localhost:3000/?from=china\n// alert尝试\nhttp://localhost:3000/?from=\u003cscript\u003ealert(3)\u003c/script\u003e\n// 获取Cookie\nhttp://localhost:3000/?from=\u003cscript src=\"http://localhost:4000/hack.js\"\u003e \u003c/script\u003e\n// 短域名伪造 https://dwz.cn/\n```\n\n#### **基于 DOM 的 XSS 攻击**\n\n具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改 HTML 页面的内容，这种劫持类型很多，有通过 WiFi 路由器劫持的，有通过本地恶意软件来劫持的，它们的共同点是在 Web 资源传输过程或者在用户使用页面的过程中修改 Web 页面的数据。\n\n### 如何阻止 XSS 攻击\n\n1. **服务器对输入脚本进行过滤或转码**\n\n   - 黑名单\n\n   ```JavaScript\n   function escape(str) {\n     str = str.replace(/\u0026/g, \"\u0026amp;\");\n     str = str.replace(/\u003c/g, \"\u0026lt;\");\n     str = str.replace(/\u003e/g, \"\u0026gt;\");\n     str = str.replace(/\"/g, \"\u0026quto;\");\n     str = str.replace(/'/g, \"\u0026#39;\");\n     str = str.replace(/`/g, \"\u0026#96;\");\n     str = str.replace(/\\//g, \"\u0026#x2F;\");\n     return str;\n   }\n   ```\n\n   - 白名单\n\n   ```JavaScript\n   const xss = require(\"xss\");\n   let html = xss('\u003ch1 id=\"title\"\u003eXSS Demo\u003c/h1\u003e\u003cscript\u003ealert(\"xss\");\u003c/script\u003e');\n   // -\u003e \u003ch1\u003eXSS Demo\u003c/h1\u003e\u0026lt;script\u0026gt;alert(\"xss\");\u0026lt;/script\u0026gt;\n   ```\n\n2) **充分利用 CSP**  \n   CSP 有如下几个功能：\n\n- 限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；\n- 禁止向第三方域提交数据，这样用户数据也不会外泄；\n- 禁止执行内联脚本和未授权的脚本；\n- 还提供了上报机制，这样可以帮助我们尽快发现有哪些 XSS 攻击，以便尽快修复问题。\n\n```JavaScript\n// 只允许加载本站资源\nContent-Security-Policy: default-src 'self'\n// 只允许加载 HTTPS 协议图片\nContent-Security-Policy: img-src https://*\n// 不允许加载任何来源框架\nContent-Security-Policy: child-src 'none'\n```\n\n3. **使用 HttpOnly 属性**\n\n由于很多 XSS 攻击都是来盗用 Cookie 的，因此还可以通过使用 HttpOnly 属性来保护我们 Cookie 的安全。\n\n```node\nresponse.addHeader(\"Set-Cookie\", \"uid=112; Path=/; HttpOnly\");\n```\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/Yarn":{"title":"V2","content":"\n2016 年，yarn 发布，yarn 也采用**扁平化 node_modules 结构**。它的出现是为了解决 npm v3 几个最为迫在眉睫的问题：依赖安装速度慢，不确定性。\n\n## 提升安装速度\n\n在 npm 中安装依赖时，安装任务是串行的，会按包顺序逐个执行安装，这意味着它会等待一个包完全安装，然后再继续下一个。\n\n为了加快包安装速度，yarn 采用了并行操作，在性能上有显著的提高。而且在缓存机制上，yarn 会将每个包缓存在磁盘上，在下一次安装这个包时，可以脱离网络实现从磁盘离线安装。\n\n## lockfile 解决不确定性\n\nyarn 更大的贡献是发明了 yarn.lock。\n\n在依赖安装时，会根据 package.josn 生成一份 yarn.lock 文件。\n\n[[npm]] 在一年后的 v5 才发布了 package-lock.json。\n\n但是，yarn 依然和 npm 一样是扁平化的 node_modules 结构，没有解决**幽灵依赖**和**依赖分身**问题。\n\n# V2\n\n2020 年 1 月，yarn v2 发布，也叫 yarn berry（v1 叫 yarn classic）。它是对 yarn 的一次重大升级，其中一项重要更新就是 Plug’n’Play（Plug'n'Play = Plug and Play = PnP，即插即用）。\n\n## 抛弃  node_modules\n\n无论是 npm 还是 yarn，都具备缓存的功能，大多数情况下安装依赖时，其实是将缓存中的相关包复制到项目目录中 node_modules 里。\n\n而 yarn PnP 则不会进行拷贝这一步，而是在项目里维护一张静态映射表 pnp.cjs。\n\npnp.cjs 会记录依赖在缓存中的具体位置，所有依赖都存在全局缓存中。同时自建了一个解析器，在依赖引用时，帮助 node 从全局缓存目录中发现依赖，而不是查找 node_modules。\n\n这样就避免了大量的 I/O 操作同时项目目录也不会有 node_modules 目录生成，同版本的依赖在全局也只会有一份，依赖的安装速度和解析速度都有较大提升。\n\n[[pnpm]] 在 2020 年底的 v5.9 也支持了 PnP。\n\n## 脱离 node 生态\n\npnp 比较明显的缺点是脱离了 node 生态。\n\n- 因为使用 PnP 不会再有 node_modules 了，但是 Webpack，Babel 等各种前端工具都依赖 node_modules。虽然很多工具比如 pnp-webpack-plugin 已经在解决了，但难免会有兼容性风险。\n- PnP 自建了依赖解析器，所有的依赖引用都必须由解析器执行，因此只能通过 yarn 命令来执行 node 脚本。\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/api-%E8%B5%84%E6%BA%90":{"title":"api 资源","content":"\n\n[A free API database list for developers](https://apivault.dev/)","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/auto-animate":{"title":"auto-animate","content":"\n# auto-animate\n\n## 安装\n\n```shell\nyarn add @formkit/auto-animate\n```\n\n## 插件\n\n```js\nimport autoAnimate, { getTransitionSizes } from '@formkit/auto-animate'\n\nautoAnimate(parentElement, (el, action, oldCoords, newCoords) =\u003e {\n  let keyframes\n  // supply a different set of keyframes for each action\n  if (action === 'add') {\n    keyframes = [\n      { transform: 'scale(0)', opacity: 0 },\n      { transform: 'scale(1.15)', opacity: 1, offset: 0.75 },\n      { transform: 'scale(1)', opacity: 1 }\n    ]\n  }\n  // keyframes can have as many \"steps\" as you prefer\n  // and you can use the 'offset' key to tune the timing\n  if (action === 'remove') {\n    keyframes = [\n      { transform: 'scale(1)', opacity: 1 },\n      { transform: 'scale(1.15)', opacity: 1, offset: 0.33 },\n      { transform: 'scale(0.75)', opacity: 0.1, offset: 0.5 },\n      { transform: 'scale(0.5)', opacity: 0 }\n    ]\n  }\n  if (action === 'remain') {\n    // for items that remain, calculate the delta\n    // from their old position to their new position\n    const deltaX = oldCoords.left - newCoords.left\n    const deltaY = oldCoords.top - newCoords.top\n    // use the getTransitionSizes() helper function to\n    // get the old and new widths of the elements\n    const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords)\n    // set up our steps with our positioning keyframes\n    const start = { transform: `translate(${deltaX}px, ${deltaY}px)` }\n    const mid = { transform: `translate(${deltaX * -0.15}px, ${deltaY * -0.15}px)`, offset: 0.75 }\n    const end = { transform: `translate(0, 0)` }\n    // if the dimensions changed, animate them too.\n    if (widthFrom !== widthTo) {\n      start.width = `${widthFrom}px`\n      mid.width = `${widthFrom \u003e= widthTo ? widthTo / 1.05 : widthTo * 1.05}px`\n      end.width = `${widthTo}px`\n    }\n    if (heightFrom !== heightTo) {\n      start.height = `${heightFrom}px`\n      mid.height = `${heightFrom \u003e= heightTo ? heightTo / 1.05 : heightTo * 1.05}px`\n      end.height = `${heightTo}px`\n    }\n    keyframes = [start, mid, end]\n  }\n  // return our KeyframeEffect() and pass\n  // it the chosen keyframes.\n  return new KeyframeEffect(el, keyframes, { duration: 600, easing: 'ease-out' })\n}))\n```\n\n# 参考资料\n\n- [AutoAnimate 官方网站](https://auto-animate.formkit.com/#usage)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/await":{"title":"await","content":"\n# await\n\nasync 函数是什么？一句话,它就是 Generator 函数的语法糖。\n\nGenerator 函数,依次读取两个文件。\n\n```JavaScript\nconst fs = require(\"fs\");\n\nconst readFile = function (fileName) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(fileName, function (error, data) {\n      if (error) return reject(error);\n      resolve(data);\n    });\n  });\n};\n\nconst gen = function* () {\n  const f1 = yield readFile(\"/etc/fstab\");\n  const f2 = yield readFile(\"/etc/shells\");\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\n### 抛出错误\n\n等待会抛出错误的同步操作，会返回拒绝的期约：\n\n```JavaScript\nasync function foo() {\n console.log(1);\n await (() =\u003e { throw 3; })();\n}\n// 给返回的期约添加一个拒绝处理程序\nfoo().catch(console.log);\nconsole.log(2);\n// 1\n// 2\n// 3\n```\n\n单独的 Promise.reject()不会被异步函数捕获，而会抛出未捕获错误。不 过，对拒绝的期约使用 await 则会释放（unwrap）错误值（将拒绝 Promise 返回）：\n\n```JavaScript\nasync function foo() {\n console.log(1);\n await Promise.reject(3);\n console.log(4); // 这行代码不会执行\n}\n// 给返回的期约添加一个拒绝处理程序\nfoo().catch(console.log);\nconsole.log(2);\n// 1\n// 2\n// 3\n```\n\n### 异步策略\n\n#### 实现 sleep\n\n```JavaScript\nasync function sleep(delay){\n    return new Promise((resolve)=\u003e setTimeout(resolve, delay))\n}\n```\n\n#### 利用平行执行\n\n正常串行写法，在不需要保证顺序的情况下属于需要优化的地方\n\n```JavaScript\nasync function randomDelay (id) {\n  // 延迟 0~1000 毫秒\n  const delay = Math.random() * 1000;\n  return new Promise((resolve) =\u003e setTimeout(() =\u003e {\n    console.log(`${id} finished`);\n    resolve();\n  }, delay));\n}\nasync function foo () {\n  const t0 = Date.now();\n  await randomDelay(0);\n  await randomDelay(1);\n  await randomDelay(2);\n  await randomDelay(3);\n  await randomDelay(4);\n  console.log(`${Date.now() - t0}ms elapsed`);\n}\nfoo();\n\n// 0 finished\n// 1 finished\n// 2 finished\n// 3 finished\n// 4 finished\n// 1570ms elapsed\n```\n\n*for 循环写法*\n\n```JavaScript\nasync function foo () {\n  const t0 = Date.now();\n  for (let i = 0; i \u003c 5; ++i) {\n    await randomDelay(i);\n  }\n  console.log(`${Date.now() - t0}ms elapsed`);\n}\nfoo();\n\n// 0 finished\n// 1 finished\n// 2 finished\n// 3 finished\n// 4 finished\n// 2494ms elapsed\n```\n\n就算这些期约之间没有依赖，异步函数也会依次暂停，等待每个超时完成。这样可以保证执行顺序， 但总执行时间会变长。\n\n**如果顺序不是必需保证的，那么可以先一次性初始化所有期约**，然后再分别等待它们的结果。\n\n```JavaScript\nasync function foo () {\n  const t0 = Date.now();\n  const promises = Array(5).fill(null).map((_, i) =\u003e randomDelay(i));\n  for (const p of promises) {\n    await p;\n  }\n  console.log(`${Date.now() - t0}ms elapsed`);\n}\nfoo();\n```\n\n**虽然 Promise 没有按照顺序执行，但 await 按顺序收到了每个 Promise 的值**\n\n```JavaScript\n function foo () {\n  const t0 = Date.now();\n  const promises = Array(5).fill(null).map((_, i) =\u003e randomDelay(i));\n  for (const p of promises) {\n    console.log(`awaited ${await p}`);\n  }\n  console.log(`${Date.now() - t0}ms elapsed`);\n}\nfoo();\n\n// 1 finished\n// 3 finished\n// 0 finished\n// awaited 0\n// awaited 1\n// 2 finished\n// awaited 2\n// awaited 3\n// 4 finished\n// awaited 4\n// 958ms elapsed\n```\n\n# async 函数\n\n```JavaScript\nconst asyncReadFile = async function () {\n  const f1 = await readFile(\"/etc/fstab\");\n  const f2 = await readFile(\"/etc/shells\");\n  console.log(f1.toString());\n  console.log(f2.toString());\n};\n```\n\nasync 函数对 Generator 函数的改进,体现在以下四点  \n（1）**内置执行器。**  \n（2）**更好的语义**。  \n（3）**更广的适用性。**  \n（4）**返回值是`Promise`。**\n\n`async` 函数返回的 `Promise` 对象,必须等到内部所有 `await` 命令后面的 `Promise` 对象执行完,才会发生状态改变,除非遇到 `return` 语句或者抛出错误。也就是说,只有 `async` 函数内部的异步操作执行完,才会执行 `then` 方法指定的回调函数。\n\n#### 实现原理\n\nasync 函数的实现原理,就是将 Generator 函数和自动执行器,包装在一个函数里。\n\n```JavaScript\nasync function fn(args) {\n  // ...\n}\n\n// 等同于\n\nfunction fn(args) {\n  return spawn(function* () {\n    // ...\n  });\n}\n```\n\nspawn\n\n```JavaScript\nfunction spawn(genF) {\n  return new Promise(function (resolve, reject) {\n    const gen = genF();\n    function step(nextF) {\n      let next;\n      try {\n        next = nextF();\n      } catch (e) {\n        return reject(e);\n      }\n      if (next.done) {\n        return resolve(next.value);\n      }\n      Promise.resolve(next.value).then(\n        function (v) {\n          step(function () {\n            return gen.next(v);\n          });\n        },\n        function (e) {\n          step(function () {\n            return gen.throw(e);\n          });\n        }\n      );\n    }\n    step(function () {\n      return gen.next(undefined);\n    });\n  });\n}\n```\n\n# Async 和 await 的优化\n\n性能提升取决于以下三个因素：\n\n- TurboFan，新的优化编译器 🎉\n- Orinoco，新的垃圾回收器 🚛\n- 一个 Node.js 8 的 bug 导致 await 跳过了一些微 tick（microticks） 🐛\n\n#### bug 优化\n\n```JavaScript\nconst p = Promise.resolve();\n\n(async () =\u003e {\n  await p;\n  console.log(\"after:await\");\n})();\n\np.then(() =\u003e console.log(\"tick:a\")).then(() =\u003e console.log(\"tick:b\"));\n```\n\n通过判断 await 后的 是否是一个 Promise，如果是的话直接返回，可以节省一个 Promise，只封装必要的 promise。这个操作在值已经是 promose 的情况下可以省去一个额外的 promise 和两个微任务。\n\n#### 去除了 throwaway\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174453.png)\n\n[「译」更快的 async 函数和 promises](https://mp.weixin.qq.com/s?__biz=MzUzNjk5MTE1OQ==\u0026mid=2247488356\u0026idx=1\u0026sn=2f17461b11dcf6a8365a2488d7e25945\u0026chksm=faec97bccd9b1eaa108a03c3bfde45944a3b6b766154bc1f2b67706decfbcc7300b03eb54d46\u0026mpshare=1\u0026scene=1\u0026srcid=09285usyMosTYJPNjtBC8aBC\u0026sharer_sharetime=1601257327974\u0026sharer_shareid=12302458a55e6884c1bb1c47ff44880d\u0026key=a5121dd1fbb299a4574b60008a7892715083167693e8e0e07a0ea940e7a39419e895c9b1b0ebc446a53ca95dcaf5eab4b6a36628ad873096de1719747022b983bf12d8b2773a40f206a5271e184c1cd0cf893260303fd38da8e48d9e6ac7b8f577ddd2ec049a147d51b1de5beafec1a50a681a0466cebea7415e7d883c9fef58\u0026ascene=1\u0026uin=MTIwOTc2NTAyMQ%3D%3D\u0026devicetype=Windows+10+x64\u0026version=62090529\u0026lang=zh_CN\u0026exportkey=AXMYmDf2JEdNIm7d3TuwrRs%3D\u0026pass_ticket=f%2BX7SDG7or8VWYKhna8jJ88M0v3Zv9Whtox6Rc4ZhhErghEtyOr5KNMpaF%2BaWmW3\u0026wx_header=0)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/b%E7%BA%A7%E7%BB%9F%E8%80%83%E7%94%9F%E8%AF%8D":{"title":"b 级统考生词","content":"\n# b 级统考生词\n\n## 固定搭配\n\nattempt to do 尝试做某事  \nlet sb do sth 让某人做某事  \nkeep up with 跟不上你  \nforget to do 忘记未做过某事  \nask sb for sth 表示向某人要某物  \nsb be interested in sth 喜欢  \nnot + 短暂性动词 + until 直到…才  \nkill time 消磨时间  \nBetter not do this 一般指最好不要这么做.  \nwould rather sb did ：宁愿某人做某事  \nsomething of a … 只是表示”有点，算是个“  \nbe good at 擅长，在…方面做的好  \nbe responsible for sb./sth.“对……负责”。  \nto impose sth. on sb.“把令人不快之物硬塞给某人或者强加给某人”  \n考查 from…to…，表示范围，意为：从…到….  \nas long as 只要  \nin case 万一  \ncome to the conclusion 得出结论  \nwhat 和 like 构成惯用表达 ：what‘s he like  \ntwice as many 两倍多  \nobject to 拒绝，不赞同  \nbe bad for 对… 有害  \nbe bad to：坏到…  \nsb had better do sth（某人）最好做…’  \nbe busy doing sth  \ndo sb a favor 固定搭配 帮某人一个忙  \nbe similar to 与… 相似  \nbe aware of 意识到\n\n### time\n\n- in time 及时\n- in advance 事先，预先\n- ahead of time 提前\n\n### judge\n\n- judging from,“从…看,根据…可以看出”，表示从其他方面（证据,报告,说的话等）进行判断”；\n- judge by,,“以···来判断,以…..来看”，表示从音容，笑貌，衣着等进行判断。\n\n### tired\n\n- be tired of 厌烦…\n- get tired of 厌烦… 表示过程的含义\n- be tired with/from 因为…而累了\n- be tired with sb 因为…厌烦某人\n\n### look\n\n- look after 意思是照顾;照料;料理;打理\n- look for 意思是寻找（某人或某物）;\n- look at 也是看的意思 但是这个词组的本意为注视，审视，看望，研究等等\n- look on 是旁观的意思\n\n### aware\n\n1、aware 是表语形容词，常接 of 短语或名词从句。aware of 后接除 what 以外的 wh-从句时 of 可省略。aware 后接 that 从句可看作是 aware of the fact that…省略了 the fact。  \n2、aware 主要指根据感觉器官听、视或根据敏锐的智力推断而得知自身或外界的实际情况。aware 还可作“懂事的，明智的，敏锐的”解。  \n3、be aware of 相当于 know\n\n### who\n\n- who 先行词指人，在定语从句中充当主语，有时也可做宾语。\n- whom 先行词指人，在定语从句中充当宾语。\n- whose 先行词指人或物，在定语从句中充当定语。\n\n### hear\n\n- hear 听见   hear sb./sth.\n- hear from 收到…的来信 hear from sb.\n- hear of 听说过 hear of sb./sth.\n- hear about 得知有关…的消息 hear about sb./sth.\n\n### take\n\n- take on 承担，呈现，雇佣\n- take up 占据，从事\n- take in 吸收，欺骗，领会\n- take off 脱下，请假，起飞，成功。\n- take down，拿下，取下，卸下\n\n### look\n\n- look up 查找；向上看\n- look up to 仰慕；抬头看\n- look into 调查；研究、观察\n- look for 寻找（人或物）；去期望某事\n- look over 简略检查（某人或某物）、简单看够\n- look out 向外看；当心！\n- look away 看向别处\n- look after 照顾、打理\n- look forward to 期待、盼望\n\n## 近义生词\n\n#### 客户\n\n- client ：“客户，委托人”；\n- customer“消费者”；\n- supporter：支持者\n- guest ：“客人”。\n\n#### 像\n\n- like:如同，好像”\n- alike:相像的;十分相似的\n- likely:可能的;预料的;有希望的（形容词）\n\n#### 无聊\n\n- 如果要形容某个事物，某种体验（thing）令人感到无聊用 boring：\n- 但如果是表达某个人（person）感到无聊就用 bored：\n\n#### 担心\n\n- nervous 指紧张,\n- upset 指苦恼的,心烦意乱的,\n- worried 指担心的,\n- anxious 指焦虑的焦急的.\n\n#### 下面\n\n- under 表示物体之间可以互相接触,也可以有一定空间，\n- below 表示物体之间不一定存在垂直的位置关系,而且互不接触，\n- beneath 的用法和 under 相仿,二者可互换,“beneath”表达意思比“under”更具体。“beneath”也有被某物“覆盖”(being covered )的意思，“Beneath”也可用来表示隐藏在某人行为或决定下的真实情感，但 under 使用的频率较高。\n\n#### 愉快\n\n- pleasant a.令人愉快的;使人快乐的;称心的;讨人喜欢的;可爱的;生气勃勃的;开玩笑的\n- pleased a.高兴的;满足的;欣喜的\n\n#### 快速\n\n- Fast 表示“快的”,强调动作、速度迅速的.还可表示“紧的”、“牢固的”.\n- Quick 表示“迅速的”、“快的”、“敏捷的”、“灵活的”,含有动作快、时间短、毫不延迟等意味.强调行动的机敏,而不是动作的频率,比如快速的看一眼.\n- Rapid 有一种特殊含义,即指有益的高速度,而 quick 和 fast 可指灾难性的急速, 它更多表示的是物体或者说是事情变化得快,比如价格涨的快,社会变革快,学习进步快等.\n- Swift 可指平稳,不受干扰的,不中断的,似乎毫不费力快速运动.\n\n#### 表示轻微\n\n## 生词\n\nspectacles 眼镜  \nclaim 宣称，声明  \nmiracle 圣迹  \ndisease 疾病  \nconfuse 混淆  \nconduct 行为  \nconfirm 证实  \nexperiment 实验  \nadapt 适应  \nnourishment 营养  \naudience 观众  \ncomplacent 自满的  \nhurry 匆忙  \nanxious 焦虑的  \nworried 担心  \npolicy 决策  \nslight“轻微的”，  \nobvious“明显的”；  \ndelicate ”精致的  \ntemporary 暂时的”。  \nsituation 情况，形势  \ncondition 条件，状况 3  \noccasion 场合、时机  \ndefence 答辩  \navailable 可获得的。可找到的  \natmosphere 氛围、大气  \ncertain 某些（不是人和事物）、肯定，确信  \nmiserable 悲惨的  \nparliament 议会  \ntaxes 税;税款；tax 的第三人称单数和复数;taxis 的复数  \nintend 打算  \nstorm 暴风雨；….浪潮;突袭;攻占  \nprisoner 囚犯  \nmonarchy 君主制  \nabolishe 废除  \nexecute 处决  \nflee 逃走  \nmarch 前进；示威游行  \nperiod 时期  \nterror 恐怖  \npractial 实际的  \nmaterial 布料，物质  \ndistribute 分配分布  \npress 按；推；压；记者  \nextremely 极其  \ncommunicate 交流;传达  \nplant 植物  \nparchment 羊皮纸  \nrapidly 迅速的  \nharbor 港口  \nrecently 最近的  \nedge 边缘  \nplentiful 大量的  \nresource 资源  \nnap 打盹  \nserious 不好的；严重的；严肃的  \ncomplaints 抱怨；不满；疾病  \nhigh blood pressure 高血压  \nstress 压力，强调\n\n上面的已经导入到欧路\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/base64":{"title":"加密","content":"\n# 加密\n\n```JavaScript\nfunction base64Encrypt(value) {\n    return new Buffer(value).toString(\"base64\");\n}\n```\n\n# 解密\n\n```JavaScript\nfunction base64Decryption(value) {\n    return new Buffer(value, \"base64\").toString();\n}\n```\n\n# 文件\n\n```JavaScript\nconst base64 = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKAAAABlBMVEUAAP+AgIBMbL/VAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAACklEQVQImWNgAAAAAgAB9HFkpgAAAABJRU5ErkJggg==';\nconst byteCharacters = atob(base64);\nconst byteNumbers = new Array(byteCharacters.length);\nfor (let i = 0; i \u003c byteCharacters.length; i++) {\n\tbyteNumbers[i] = byteCharacters.charCodeAt(i);\n}\nconst array = Uint8Array.from(byteNumbers);\nconst blob = new Blob([array], {type: 'image/png'});\nconst form = new FormData();\nform.append('file', blob, '1.png');\naxios.post('http://localhost:7787/files', form);\n```\n\nbase64 编解码\n\n```JavaScript\n//解码\nvar decodedData = window.atob(encodedData);\n//编码\nvar encodedData = window.btoa(stringToEncode);\n```\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/blob":{"title":"使用","content":"\n`Blob 对象` 是一个前端的一个专门用于支持 `文件操作` 的 `二进制对象`，表示一个 `二进制文件` 的 `数据内容`，表示一个 `不可变`、`原始数据` 的类文件对象。通常用来读写文件，比如一个图片文件的内容就可以通过 Blob 对象读写。Blob 对象。Blob 表示的不一定是 JavaScript 原生格式的数据。\n\n# 使用\n\n```JavaScript\nconst json = { hello: \"world\" };\nconst blob = new Blob([JSON.stringify(json, null, 2)], { type: 'application/json' });\n\nconst form = new FormData();\nform.append('file', blob, '1.json');\naxios.post('http://localhost:7787/files', form);\n```\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/canvas":{"title":"canvas","content":"\n\n## 工具使用\n- [LeaferJS:一个国产的 Canvas 2D 图形渲染引擎，追求极致性能。](https://www.leaferjs.com/)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/change-case":{"title":"全部函数示例","content":"\n# 全部函数示例\n\n```js\nexport interface ChangeCase {\n\n/**\n\n* @example\n\n* changeCase.camelCase('test string') // =\u003e 'testString'\n\n*/\n\ncamelCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.constantCase('test string') // =\u003e 'TEST_STRING'\n\n*/\n\nconstantCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.dotCase('test string') // =\u003e 'test.string'\n\n*/\n\ndotCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.headerCase('test string') // =\u003e 'Test-String'\n\n*/\n\nheaderCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.lowerCase('TEST STRING') // =\u003e 'test string'\n\n*/\n\nlowerCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.lowerCaseFirst('TEST') // =\u003e 'tEST'\n\n*/\n\nlowerCaseFirst: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.paramCase('test string') // =\u003e 'test-string'\n\n*/\n\nparamCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.pascalCase('test string') // =\u003e 'TestString'\n\n*/\n\npascalCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.pathCase('test string') // =\u003e 'test/string'\n\n*/\n\npathCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.sentenceCase('testString') // =\u003e 'Test string'\n\n*/\n\nsentenceCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.snakeCase('test string') // =\u003e 'test_string'\n\n*/\n\nsnakeCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.swapCase('Test String') // =\u003e 'tEST sTRING'\n\n*/\n\nswapCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.titleCase('a simple test') // =\u003e 'A Simple Test'\n\n*/\n\ntitleCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.upperCase('test string') // =\u003e 'TEST STRING'\n\n*/\n\nupperCase: (value: string) =\u003e string\n\n/**\n\n* @example\n\n* changeCase.upperCaseFirst('test') // =\u003e 'Test'\n\n*/\n\nupperCaseFirst: (value: string) =\u003e string\n\n}\n```\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/chatGPT":{"title":"chatGPT","content":"\n# chatGPT\n\n## 局限\n\n今天就来谈谈这件事，我要说，**ChatGPT 确实很神奇，是划时代的技术创新，但是不应该无限夸大。**\n\nChatGPT 有其局限，很多事情它做不到。[有人说](https://36kr.com/p/2149318642305545)，ChatGPT 标志着机器取代人类的\"奇点时刻\"，这是不对的。\n\n他们忽略了最关键的一点：**ChatGPT 不是\"通用人工智能\"，而是一个语言模型。**\n\n\"通用人类智能\"（artificial general intelligence，简写 AGI）是 AI 的终极目标，就是造出可以像人类那样全方位的推理、思考、分析的机器。如果能实现，人类就真的危险了。\n\n但是，ChatGPT 不是 AGI，而是一个 LLM（Large Language Models，大规模语言模型）。所谓\"语言模型\"，就是只用来处理语言文字（或者符号体系）的 AI 模型，发现其中的规律，可以根据提示（prompt），自动生成符合这些规律的内容。\n\n这就是说，**ChatGPT 只适用于有成文符号的领域。**  这带来两个局限。\n\n（1）如果某个领域是非成文的，不能用符号记录表达，那么 ChatGPT 就无能为力。比如，人类的很多心理活动、潜意识、灵感、顿悟等等，ChatGPT 就没法模拟生成。\n\n（2）第二个局限更致命，ChatGPT 要用现有的文字材料进行训练，发现的是那些材料包含的规律。这意味着，它不能生成超出人类已知规律的东西。\n\n举例来说，**它不能证明未解决的数学猜想，也不能提出没有人发现过的科学发现。**\n\n# 原理\n\n分辨模型的强弱，有一个关键指标，就是看它有多少个参数。一般来说，参数的数量越多，模型就越强。\n\nGPT-2 有15亿个参数，GPT-3 和 ChatGPT 有[1750亿个](https://developer.nvidia.com/zh-cn/blog/openai-presents-gpt-3-a-175-billion-parameters-language-model/)，GPT-4 没有公布这个指标，据传比上一代大5倍以上。\n\n参数相当于模型预测时，所依据的神经网络的节点数量。**参数越多，就代表了模型所考虑的各种可能性越多，计算量越大，效果越好。**\n\n既然参数越多越好，那么参数会无限增长吗？\n\n答案是不会的，因为参数受到训练材料的制约。必需有足够的训练材料，才能计算出这些参数，**如果参数无限增长，训练材料势必也要无限增长。**\n\n我看到的一种说法是，训练材料至少应该是参数的10倍。举例来说，一个区分猫照片和狗照片的模型，假定有1,000个参数，那么至少应该用10,000张图片来训练。\n\n# 用法\n\n## 修改总结文章\n\n将自己写的全文丢进去，然后先让他作为读者来总结文章的重点，和自己想表达的进行比对；再让其作为编辑，指出文章中有哪些逻辑问题或模糊的地方，两者想加往往能得到一些不错的改进建议\n\n# 如何开通\n\n[获取实体信用卡和 SIM 卡](https://tj51bxige8.feishu.cn/docx/TSZBdBfynoBINux2htWcefrtnHc)\n\n# vscode 插件\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230216141547.png)\n","lastmodified":"2023-09-18T14:54:47.470454125Z","tags":null},"/commitLint":{"title":"commitLint","content":"\n# commitLint\n\n```JavaScript\nnpm install -g commitizen\n```\n\n### cz-conventional-changelog\n\n```JavaScript\ncommitizen init cz-conventional-changelog --save --save-exact\n\n\"devDependencies\": {\n \"cz-conventional-changelog\": \"^2.1.0\"\n},\n\"config\": {\n  \"commitizen\": {\n    \"path\": \"./node_modules/cz-conventional-changelog\"\n  }\n}\n```\n\n### cz-customizable\n\n```JavaScript\nnpm install cz-customizable --save-dev\n\"devDependencies\": {\n  \"cz-customizable\": \"^5.3.0\"\n},\n\"config\": {\n  \"commitizen\": {\n    \"path\": \"node_modules/cz-customizable\"\n  }\n}\n\n```\n\n### .cz-config.js\n\n```JavaScript\n\n'use strict';\n\nmodule.exports = {\n\n  types: [\n    { value: 'feat', name: '特性:    一个新的特性' },\n    { value: 'fix', name: '修复:    修复一个Bug' },\n    { value: 'docs', name: '文档:    变更的只有文档' },\n    { value: 'style', name: '格式:    空格, 分号等格式修复' },\n    { value: 'refactor', name: '重构:    代码重构，注意和特性、修复区分开' },\n    { value: 'perf', name: '性能:    提升性能' },\n    { value: 'test', name: '测试:    添加一个测试' },\n    { value: 'chore', name: '工具:    开发工具变动(构建、脚手架工具等)' },\n    { value: 'revert', name: '回滚:    代码回退' },\n    { value: 'WIP', name: 'WIP:     正在进行工作' }\n  ],\n\n  // scopes: [\n  //   { name: 'accounts' },\n  //   { name: 'admin' },\n  //   { name: 'exampleScope' },\n  //   { name: 'changeMe' }\n  // ],\n\n  // it needs to match the value for field type. Eg.: 'fix'\n  /*\n  scopeOverrides: {\n    fix: [\n      {name: 'merge'},\n      {name: 'style'},\n      {name: 'e2eTest'},\n      {name: 'unitTest'}\n    ]\n  },\n  */\n  // override the messages, defaults are as follows\n  messages: {\n    type: 'Select the type of change that you\\'re committing:',\n    scope: '\\nDenote the SCOPE of this change (optional):',\n    // used if allowCustomScopes is true\n    customScope: 'Denote the SCOPE of this change:',\n    subject: 'Write a SHORT, IMPERATIVE tense description of the change:\\n',\n    body: 'Provide a LONGER description of the change (optional). Use \"|\" to break new line:\\n',\n    breaking: 'List any BREAKING CHANGES (optional):\\n',\n    footer: 'List any ISSUES CLOSED by this change (optional). E.g.: #31, #34:\\n',\n    confirmCommit: 'Are you sure you want to proceed with the commit above?'\n  },\n\n  allowCustomScopes: true,\n  allowBreakingChanges: ['feat', 'fix'],\n\n  // limit subject length\n  subjectLimit: 100\n\n};\n\n```\n\n### Commitizen 校验\n\n```JavaScript\nnpm install --save-dev @commitlint/cli\nnpm install --save-dev @commitlint/config-conventional\n\n// commitlint.config.js\nmodule.exports = {\n  extends: ['@commitlint/config-conventional']\n};\n\n\nnpm install husky --save-dev\n\n\n//package.json\n\"husky\": {\n  \"hooks\": {\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/css-in-js":{"title":"css-in-js","content":"\ncss-in-js 比起[Linaria](https://linaria.dev/),性能要差很多  \n\nCSS-in-JS 让你可以在 JavaScript 或 TypeScript 代码中编写 CSS 来设置 React 组件的样式：\n\n```js\nconst styles = styled.div`\n`\n```\n\nReact 社区中最多的styled-components和Emotion\n\n## 优劣势\n\n### 优势\n\n1. 局部作用域样式\n2. 相关代码都放在同一目录下，甚至同一个文件内，方便维护s\n3. 可以在样式中使用 JavaScript 变量。\n\n### 劣势\n\n1. CSS-in-JS 增加了运行时开销。当组件渲染时，CSS-in-JS 库必须将样式“序列化”为可以插入文档的 Pure CSS。显然这需要额外的 CPU 消耗，大概会有 40%以上的差距，具体看组件大小\n2. CSS-in-JS 增加了包体积。这很明显——每个访问你网站的用户现在都需要下载 CSS-in-JS 库的 JavaScript。Emotion 是7.9 kB压缩后，styled-components 是12.7 kB\n3. CSS-in-JS 会使 React 开发者工具变的很乱，难以看懂。\n4. 频繁插入 CSS Rules 会使浏览器做很多额外工作\n5. **用 CSS-in-JS,更容易出错，特别是在使用 SSR 和组件库时**。\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/custom":{"title":"''","content":"\n\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/devTools-%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7":{"title":"devTools 调试技巧","content":"\n# devTools 调试技巧\n\n- `cmd + `或者 `cmd - ` 可以调整 devTools 的字体大小\n- `cmd + shift + c` 选中或者覆盖层 然后删掉\n- 控制台，$0.pause()，$0.play()，$0.playbackRate = 2;可以控制视频，\n- 复制样式，右键所选元素，点击复制样式\n- 下载当前页面所有图像\n\n```js\n  $$('img').forEach(async (img) =\u003e {\n try {\n   const src = img.src;\n   // Fetch the image as a blob.\n   const fetchResponse = await fetch(src);\n   const blob = await fetchResponse.blob();\n   const mimeType = blob.type;\n   // Figure out a name for it from the src and the mime-type.\n   const start = src.lastIndexOf('/') + 1;\n   const end = src.indexOf('.', start);\n   let name = src.substring(start, end === -1 ? undefined : end);\n   name = name.replace(/[^a-zA-Z0-9]+/g, '-');\n   name += '.' + mimeType.substring(mimeType.lastIndexOf('/') + 1);\n   // Download the blob using a \u003ca\u003e element.\n   const a = document.createElement('a');\n   a.setAttribute('href', URL.createObjectURL(blob));\n   a.setAttribute('download', name);\n   a.click();\n } catch (e) {}\n});\n```\n\n- 跳过 **Debugger**，右键 **Debugger**，点击 **Never pause here**.  \n  ![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230729181140.png)\n- 重新发送请求，右键 点击 `以 fetch 格式复制` 到控制台输入\n- `cmd + shift + M ` 进入模拟设备模式\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/docker-%E4%BC%98%E5%8C%96":{"title":"docker 优化","content":"\n## docker 优化\n\n### 利用镜像缓存\n\n相对于项目的源文件来讲，`package.json` 是相对稳定的。如果没有新的安装包需要下载，则再次构建镜像时，无需重新构建依赖。则可以在 npm install 上节省一半的时间。\n\n对于 `ADD` 来讲，如果需要添加的文件内容的 `checksum` 没有发生变化，则可以利用缓存。把 `package.json/package-lock.json` 与源文件分隔开写入镜像是一个很好的选择。目前，如果没有新的安装包更新的话，可以节省一半时间\n\n```dockerfile\n...\n# 首次添加此两个文件，充分利用缓存\nADD package.json package-lock.json /code\nRUN npm install --production\n\n...\n```\n\n### 减少 npm install 时间\n\n1. 选择时延低的 `registry`，需要企业技术基础建设支持\n\n```cmd\nnpm config set registry https://registry-npm.shanyue.tech/\n```\n\n2. `NODE_ENV=production`，只安装生产环境必要的包(如果 dep 与 devDep 没有仔细分割开来，工作量很大，可以放弃)\n3. `CI=true`，npm 会在此环境变量下自动优化\n4. 结合 CI 的缓存功能，充分利用 `npm cache`\n\n```yaml\ninstall:\n  - npm ci\n# keep the npm cache around to speed up installs\ncache:\n  directories:\n    - \"$HOME/.npm\"\n```\n\n5. 使用 `npm ci` 代替 `npm i`，既提升速度又保障应用安全性\n\n```bash\nnpm ci\n```\n\n### 多阶段构建\n\n得益于缓存，现在镜像构建时间已经快了不少。但是，此时镜像的体积依旧过于庞大，这也将会导致部署时间的加长。原因如下\n\n考虑下每次 CI/CD 部署的流程\n\n1. 在构建服务器 (Runer) 构建镜像\n2. 把镜像推至镜像仓库服务器\n3. 在生产服务器拉取镜像，启动容器\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4":{"title":"docker 常用命令","content":"\n## docker 常用命令\n\n### 镜像命令\n\n```cmd\ndocker images                    #查看当前Docker中的镜像\ndocker search 某个镜像名字                #查询某个镜像\ndocker pull 某个镜像名字                #拉取(下载)某个镜像\ndocker rmi 某个镜像名字ID                 #删除某个镜像\n```\n\n### 容器基本命令(切记，有镜像才能创建容器)\n\n```cmd\ndocker run [OPTIONS] image [COMMAND] [ARG...]   #新建并启动容器\ndocker ps [OPTIONS]                             #列出当前所有正在运行的容器\nexit                        #容器停止退出\nctrl+P+Q                    #容器不停止退出\ndocker start 容器ID或者容器名            #启动容器\ndocker restart 容器ID或者容器名            #重启容器\ndocker stop 容器ID或者容器名            #停止容器\ndocker kill 容器ID或者容器名            #强制停止容器\ndocker rm 容器ID                    #删除已停止的容器\ndocker rm -f $(docker ps -a -q)            #一次性删除多个容器\ndocker ps -a -q | xargs docker rm        #一次性删除多个容器\n```\n\n### **容器重要命令**\n\n```cmd\ndocker run -d 容器名                #启动守护式容器\ndocker logs -f -t --tail 容器ID            #查看容器日志,-t是加入时间戳，-f是最新的日志打印,--tail数字显示最后多少条\n\ndocker top 容器ID                #查看容器内运行的进程\ndocker inspect 容器ID                #查看容器内部细节\ndocker exec -it 容器ID bashShell            #进入正在运行的容器并以命令行交互\ndocker attach 容器ID                #重新进入Docker容器\ndocker cp  容器ID:容器内路径 目的主机路径        #从容器内拷贝文件到主机上\n```\n\n### docker 命令帮助\n\n```cmd\nCommands:\n    attach    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像\n    build     Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像\n    commit    Create a new image from a container's changes # 提交当前容器为新的镜像\n    cp        Copy files/folders from the containers filesystem to the host path\n              # 从容器中拷贝指定文件或者目录到宿主机中\n    create    Create a new container                        # 创建一个新的容器，同 run，但不启动容器\n    diff      Inspect changes on a container's filesystem   # 查看 docker 容器变化\n    events    Get real time events from the server          # 从 docker 服务获取容器实时事件\n    exec      Run a command in an existing container        # 在已存在的容器上运行命令\n    export    Stream the contents of a container as a tar archive\n              # 导出容器的内容流作为一个 tar 归档文件[对应 import ]\n    history   Show the history of an image                  # 展示一个镜像形成历史\n    images    List images                                   # 列出系统当前镜像\n    import    Create a new filesystem image from the contents of a tarball\n              # 从tar包中的内容创建一个新的文件系统映像[对应 export]\n    info      Display system-wide information               # 显示系统相关信息\n    inspect   Return low-level information on a container   # 查看容器详细信息\n    kill      Kill a running container                      # kill 指定 docker 容器\n    load      Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]\n    login     Register or Login to the docker registry server\n              # 注册或者登陆一个 docker 源服务器\n    logout    Log out from a Docker registry server         # 从当前 Docker registry 退出\n    logs      Fetch the logs of a container                 # 输出当前容器日志信息\n    port      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT\n              # 查看映射端口对应的容器内部源端口\n    pause     Pause all processes within a container        # 暂停容器\n    ps        List containers                               # 列出容器列表\n    pull      Pull an image or a repository from the docker registry server\n              # 从docker镜像源服务器拉取指定镜像或者库镜像\n    push      Push an image or a repository to the docker registry server\n              # 推送指定镜像或者库镜像至docker源服务器\n    restart   Restart a running container                   # 重启运行的容器\n    rm        Remove one or more containers                 # 移除一个或者多个容器\n    rmi       Remove one or more images\n              # 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]\n    run       Run a command in a new container\n              # 创建一个新的容器并运行一个命令\n    save      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]\n    search    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像\n    start     Start a stopped containers                    # 启动容器\n    stop      Stop a running containers                     # 停止容器\n    tag       Tag an image into a repository                # 给源中镜像打标签\n    top       Lookup the running processes of a container   # 查看容器中运行的进程信息\n    unpause   Unpause a paused container                    # 取消暂停容器\n    version   Show the docker version information           # 查看 docker 版本号\n    wait      Block until a container stops, then print its exit code\n              # 截取容器停止时的退出状态值\nRun 'docker COMMAND --help' for more information on a command.\n```\n\n## docker options\n\n```cmd\nUsage of docker:\n  --api-enable-cors=false                Enable CORS headers in the remote API                      # 远程 API 中开启 CORS 头\n  -b, --bridge=\"\"                        Attach containers to a pre-existing network bridge         # 桥接网络\n                                           use 'none' to disable container networking\n  --bip=\"\"                               Use this CIDR notation address for the network bridge's IP, not compatible with -b\n                                         # 和 -b 选项不兼容，具体没有测试过\n  -d, --daemon=false                     Enable daemon mode                                         # daemon 模式\n  -D, --debug=false                      Enable debug mode                                          # debug 模式\n  --dns=[]                               Force docker to use specific DNS servers                   # 强制 docker 使用指定 dns 服务器\n  --dns-search=[]                        Force Docker to use specific DNS search domains            # 强制 docker 使用指定 dns 搜索域\n  -e, --exec-driver=\"native\"             Force the docker runtime to use a specific exec driver     # 强制 docker 运行时使用指定执行驱动器\n  --fixed-cidr=\"\"                        IPv4 subnet for fixed IPs (ex: 10.20.0.0/16)\n                                           this subnet must be nested in the bridge subnet (which is defined by -b or --bip)\n  -G, --group=\"docker\"                   Group to assign the unix socket specified by -H when running in daemon mode\n                                           use '' (the empty string) to disable setting of a group\n  -g, --graph=\"/var/lib/docker\"          Path to use as the root of the docker runtime              # 容器运行的根目录路径\n  -H, --host=[]                          The socket(s) to bind to in daemon mode                    # daemon 模式下 docker 指定绑定方式[tcp or 本地 socket]\n                                           specified using one or more tcp://host:port, unix:///path/to/socket, fd://* or fd://socketfd.\n  --icc=true                             Enable inter-container communication                       # 跨容器通信\n  --insecure-registry=[]                 Enable insecure communication with specified registries (no certificate verification for HTTPS and enable HTTP fallback) (e.g., localhost:5000 or 10.20.0.0/16)\n  --ip=\"0.0.0.0\"                         Default IP address to use when binding container ports     # 指定监听地址，默认所有 ip\n  --ip-forward=true                      Enable net.ipv4.ip_forward                                 # 开启转发\n  --ip-masq=true                         Enable IP masquerading for bridge's IP range\n  --iptables=true                        Enable Docker's addition of iptables rules                 # 添加对应 iptables 规则\n  --mtu=0                                Set the containers network MTU                             # 设置网络 mtu\n                                           if no value is provided: default to the default route MTU or 1500 if no default route is available\n  -p, --pidfile=\"/var/run/docker.pid\"    Path to use for daemon PID file                            # 指定 pid 文件位置\n  --registry-mirror=[]                   Specify a preferred Docker registry mirror\n  -s, --storage-driver=\"\"                Force the docker runtime to use a specific storage driver  # 强制 docker 运行时使用指定存储驱动\n  --selinux-enabled=false                Enable selinux support                                     # 开启 selinux 支持\n  --storage-opt=[]                       Set storage driver options                                 # 设置存储驱动选项\n  --tls=false                            Use TLS; implied by tls-verify flags                       # 开启 tls\n  --tlscacert=\"/root/.docker/ca.pem\"     Trust only remotes providing a certificate signed by the CA given here\n  --tlscert=\"/root/.docker/cert.pem\"     Path to TLS certificate file                               # tls 证书文件位置\n  --tlskey=\"/root/.docker/key.pem\"       Path to TLS key file                                       # tls key 文件位置\n  --tlsverify=false                      Use TLS and verify the remote (daemon: verify client, client: verify daemon) # 使用 tls 并确认远程控制主机\n  -v, --version=false                    Print version information and quit                         # 输出 docker 版本信息\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/dockerfile":{"title":"dockerfile","content":"\n### dockerfile\n\n```dockerfile\nFROM        #基础镜像，当前新镜像是基于哪个镜像的\nMAINTAINER    #镜像维护者的姓名和邮箱地址\nRUN        #容器构建时需要运行的命令\nEXPOSE        #当前容器对外暴露出的端口\nWORKDIR        #指定在创建容器后，终端默认登陆的进来工作目录\nENV        #用来在构建镜像过程中设置环境变量\nADD        #将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包\nCOPY        #类似ADD，拷贝文件和目录到镜像中。将从构建上下文目录中 \u003c源路径\u003e 的文件/目录复制到新的一层的镜像内的 \u003c目标路径\u003e 位置\nVOLUME        #容器数据卷，用于数据保存和持久化工作\nCMD        #指定一个容器启动时要运行的命令，Dockerfile 中可以有多个 CMD 指令，但只有最后一个生效，CMD 会被 docker run 之后的参数替换\nENTRYPOINT     #指定一个容器启动时要运行的命令，ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数\nONBUILD        #当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发\n```\n\n例：\n\n```dockerfile\n#Dockerfile\n#制定node镜像的版本\nFROM node:10-alpine\n#移动当前目录下面的文件到app目录下\nADD . /app/\n#进入到app目录下面，类似cd\nWORKDIR /app\n#安装依赖\nRUN npm install\n#对外暴露的端口\nEXPOSE 3000\n#程序启动脚本\nCMD [\"node\", \"app.js\"]\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/e%E5%B9%B3%E5%8F%B03.0":{"title":"更高的能效","content":"\n“准确来讲，e 平台 3.0，将是下一代电动车的摇篮。我们可以用更短的周期，开发更好的纯电动车。”\n\n经过技术和产品的高速发展和迭代，基于 e 平台 3.0 打造的电动车，零百加速最快仅需 2.9 秒，续航里程最大可突破 1000 公里，“闪充”技术充电 5 分钟，可行驶 150 公里。\n\n在 BYD OS 的加持下，功能迭代周期将被缩短 70%，能够实现硬件即插即用，软件跨平台通用；使智能电动汽车常用常新\n\ne 平台 3.0 标配刀片电池，通过电池车身一体化、纯电专属传力路径强化电动汽车的车身强度，让燃油汽车结构的上限成为电动汽车的下限。如何实现传力路径强化？即正面传力缩小纵梁高度差，使传力更顺畅，同时通过全框式副车架分散传力使得传力路径更均匀。\n\n比亚迪通过提升整车模态刚度，有效抑制了地板的震动，改善了地板 VTF 在低频频段 10dB 的额外振动，最大扭转别度达到了 40000Nm/ °\n\n通过整车控制功能的融合（横纵向控制融合、驱动防滑控制融合），e 平台 3.0 能够实现 10ms 区间的扭矩响应，这使得极端工况下整车的响应能够更快，进一步提升安全性能。\n\n使用 e 平台 3.0 技术结构的车型能够拥有更精简的驱动系统、更低的百公里电耗、更快的充电效率，以及更好的冬季用车体验。\n\n# 更高的能效\n\n1、e 平台 3.0 将使用宽温域高效的热泵技术，将低温续航里程提升 10%；\n\n2、搭载最新的八合一电驱总成：集成驱动电机、减速器、驱动电机控制器、PDU(高压配电箱)、DC-DC（高低压直流转换器）、 Bi-OBC（车载充电器）、VCU（整车控制器）、BMS（电池管理器），综合效率达到 89%；\n\n3、使用全新一代的 SIC 电控，功率密度提升近 30%，电控最高效率高达惊人的 99.7%；\n\n4、800V 高压闪充技术，充电 5 分钟就能增加 150 公里续航；\n\n# 更智能化\n\n1、全新集中电子电器架构，整车从几十个 ECU 逐步集成 4 大域控制器（左车身域控制器、右车身域控制器、智能域控制器、动力域控制），由单 ECU 单一功能，转变为处理能力更强的多核 CPU 域控制多个功能；\n\n2、自主研发的车载操作系统 BYD OS，实现硬件层和应用层的解耦，并且可拓展、可升级、充分开放，相当于为高级别自动驾驶，以及更好的人车交互、车车交互、车物交互打造了高标准的智慧协作系统。\n\n# 更安全\n\n# 外观\n\n1、得益于电控系统的高度集成化，e 平台 3.0 车型拥有比传统同体型燃油车高近两个级别的轴距，车身线条更为优美狭长，车内空间更大；\n\n2、电控电驱极度精简，导致机舱可以做到更小矮，重心更低，操控更好；\n\n3、由于机舱更小更矮，车身修长，风阻系数可以做到更低，最低的车型风阻系数（cd）能低至 0.21。\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/flomo":{"title":"flomo","content":"\n由少楠创立并维护的一个小而美的软件，很适合记录[[闪念笔记]]\n\n但是，这种碎片化的记录也是一个双刃剑，如果不能及时整理，这些笔记就会乱而无序，让你不想继续记录。\n\n灵感也不是越多越好，要有一个解决的问题（核心\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/flomo-weekly-vol.032-%E5%A6%82%E4%BD%95%E7%94%A8-flomo%E5%81%9A%E5%A5%BD%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E6%96%87%E6%9C%AB%E6%9C%89%E5%BD%A9%E8%9B%8B":{"title":"flomo weekly vol.032 - 如何用 flomo，做好读书笔记（文末有彩蛋）","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [flomo weekly vol.032 - 如何用 flomo，做好读书笔记（文末有彩蛋）](https://mp.weixin.qq.com/s?__biz=MzI0MDA3MjQ2Mg==\u0026mid=2247484893\u0026idx=1\u0026sn=f6b0d9514e4f360cdaef9db61b44a3be\u0026scene=21#wechat_redirect)\n- tag：#\n- date: [[ 2022-02-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 思考一个问题：我们为何写读书笔记，究竟为了什么。\n- 大量的划线和摘录，却没有自己的思考。所谓的读书笔记，就是一本书上的金句集合，加上现在读书 App 中的热门划线引导，更加让这个过程毫无摩擦。• 记录散乱，没有归于一处。\n- 追求各种结构化的表现形式。许多所谓的读书笔记，只是一个大纲脑图，密密麻麻的结构，看起来很有工作量，但其实只是把目录又复制了一遍\n- 所有笔记只是用书名做分类。书名是一种最无效的分类方式，只能代表你阅读过这本书。\n- 不断记录，从不复盘。许多人迷恋读书的数量和笔记的数量，希望能在单位时间内最大化输入。\n- 如若你不是做学术研究，大可不必去不断地区分何谓「永久笔记」、何谓「闪念笔记」。就像你想做一道番茄炒蛋，你的目的是吃到符合自己口味的番茄炒蛋而已，至于是颠勺三下，还是如何起锅，米饭软硬，都应该以符合自己的预期为主，而非刻板照抄过程 —— 如人饮水，冷暖自知。\n- 读书笔记的每张卡片内容，应当尽量精简，尽量避免复杂的排版（当然 flomo 也不支持 😁）或过多的层级，这样才能在回顾或复盘的时候快速回忆，并和别的知识点建立联系 —— 我们大脑中最小的单元是一个知识点，而不是一本书那么大的知识坨坨。\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/flomo-weekly-vol.37-%E7%94%A8-flomo-%E8%AE%B0%E5%BD%95%E4%B8%80%E5%B9%B4%E5%90%8E%E8%87%AA%E5%B7%B1%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%E5%8F%98%E5%8C%96%E6%96%B0%E5%B9%B4%E7%89%B9%E5%88%8A":{"title":"flomo weekly vol.37 - 用 flomo 记录一年后，自己发生了什么变化（新年特刊）","content":"\n#状态/未整理\n\n## Meatdata\n\n- author：\n- link： [flomo weekly vol.37 - 用 flomo 记录一年后，自己发生了什么变化（新年特刊）](https://mp.weixin.qq.com/s/9A_XLmUTRAYRKtfnow3_Rw)\n- tag：#\n- date: [[ 2022-02-10  ]]\n- Notes:\n\n## 总结\n\n## 闪念\n\n## 常青笔记\n\n## 重点摘要\n\n- 文末，介绍一个概念：深度年（Depth Year）来自 @fonter 推荐的 raptitude.com你提高已有技能而不是学习新的技能。你消费的是你已经保存的各种媒体，而不是去获取更多。今年不允许有新的爱好、器材、游戏或书籍。相反，你必须在你已经拥有的或者已经开始的东西中找到价值，深入挖掘价值和充实他们。转向已在你的房子里的那些财富进行选择。你读你的未读书，甚至重读你的最爱。你再次拿起吉他，并且让你弹得更好，而不是拿起口琴。你完成了四月份开始的付费课程，尽管你对某大师的新作很着迷，尽管这个课程在打折。其指导思想是「走得更深，而不是更广」。深入挖掘价值和丰富他们，而不是分散。你转向已经在你的房子里的财富中选择。我们可以称之为「Depth Year」或者「Year of Deepening」之类的。在这个消费时代，人们很容易接受和放弃新的追求，我想这种深度年的东西真的会流行起来，也许会成为一种成人礼。人们可能到厌倦了对事情半途而废的时刻。完成一个深度年将是成熟的标志，代表从生理上进入成年到精神上进入成年的过渡。你要学会不要对自己的抱负如此轻率的应付。用一整年的时间去更深入而不是更广泛地探索，你最终会收集到丰富但精心策划的个人兴趣，而不是像后工业社会里，对消费的迷恋，对大部分时间处于休眠状态的迷恋。所以新的一年，我们不祝你向上攀登，而愿你不断向下深挖，度过有深度的一年。在这巨变的年代中，稳稳地扎根在属于自己的土地之上，按时候开花结果。持续不断记录，意义自然浮现。\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/git-%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1":{"title":"git 代码统计","content":"\n# git 代码统计\n\n一、git 命令统计\n\n1、统计某人代码提交量\n\n```shell\ngit log --author=\"mengfanxiao\" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' -\n```\n\n2、统计所有人代码提交量（指定统计提交文件类型）\n\n```shell\ngit log --format='%aN' | sort -u | while read name; do echo -en \"$name\\t\"; git log --author=\"$name\" --pretty=tformat: --numstat | grep \"\\(.html\\|.java\\|.xml\\|.properties\\|.css\\|.js\\|.txt\\)$\" | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' -; done\n```\n\n3、统计某时间范围内的代码提交量\n\n```shell\ngit log --author=mengfanxiao --since=2019-01-01 --until=2021-02-01 --format='%aN' | sort -u | while read name; do echo -en \"$name\\t\"; git log --author=\"$name\" --pretty=tformat: --numstat | grep \"\\(.html\\|.java\\|.xml\\|.properties\\)$\" | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' -; done\n```\n\n结果：added lines: 106243, removed lines: 14088, total lines: 92155\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/github":{"title":"github","content":"\n# github\n\n[[常用 git 命令]]\n\n## 学会提问\n\n遇到问题，不要慌，常见的百分之八九十问题，网上都是有解决方案的。当搜索引擎都不能帮助你解决这个问题的时候，证明你遇到的问题“有点东西”了，这是好事情。需要去一些专业的技术提问社区去转转了，比如 [Stack Overflow](https://stackoverflow.com/)，或者 `GitHub Issues`（主要针对开源项目），还有就是此技术相关的社区，论坛，`Slack`，`Discord`等。\n\n一个好的问题模板，例如 [vite ISSUE_TEMPLATE/bug_report](https://github.com/vitejs/vite/blob/main/.github/ISSUE_TEMPLATE/bug_report.md) 一般包含以下几个要素：\n\n- **问题描述**：简短的表述清楚问题，切记啰嗦。\n- **环境信息**：问题发生的环境（系统信息，软件版本，浏览器版本等）。\n- **如何复现**：提供问题复现步骤 1，2，3，可以配合适当的错误截图及说明。\n- **预期结果**：希望达到什么样的结果。\n\n解决问题，根据我多年来的实践总结，一般分为以下几步：\n\n1. **抽象**: 用技术关键词去描述问题\n2. 搜索 ：根据关键词去搜索问题  \n[[学会搜索]][[学会搜索]]\n\n[[git 代码统计]]\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/gitignore-%E8%AF%AD%E6%B3%95":{"title":"gitignore 语法","content":"\n# gitignore 语法\n\n我的常用：  \n忽略目录下全部文件：`/dir/**`\n\n##  ignore规则不生效\n\n在项目开发过程中个，一般都会添加 .gitignore 文件，规则很简单，但有时会发现，规则不生效。  \n原因是 .gitignore 只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。  \n那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交。\n\n```fallback\ngit rm -r --cached .\n\ngit add .\n\ngit commit -m 'update .gitignore'\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/hippo":{"title":"hippo","content":"\n# hippo\n\nshopeePay 团队的脚手架，叫河马，寓意杂食动物\n\n# 参考文章\n\n- [hippo 🦛 - 提升我们团队工程效率的工具 - 掘金](https://juejin.cn/post/7250375753597943863#heading-2)\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/i%E8%8C%85%E5%8F%B0":{"title":"i 茅台","content":"\n# i 茅台\n\n本来想着做一个每天自动申购，自动领取点数，自动旅行的机器人。然后做一个小程序。但是发现这个需要别人的密码无法进行推广，而且仍然需要自己去就近地点领，也怕没有多个 IP，被封号的风险。  \n那么还不如自己手动领取\n\n然后上网搜了下其他人的操作，他们是通过多开程序 App，进行 IP 自动分配后申购。\n\n另外还想到了自动打新债的事，发现只能实现自动通知每天的新债情况。暂时用处不大。\n\n不过 [[小程序]] 和 [[serverLess]] 可以学一下，万一以后有这方面的需求呢\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/if%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94":{"title":"if 虚拟语气","content":"\n# if 虚拟语气\n\n1、对现在情况的虚拟\n\n条件从句中谓语动词用一般过去式，主句用“would/should/might/could+动词原形”形式，表示对现在不可能实现情况的假想。\n\nIf I were you,I would choose to work in a small town.\n\n如果我是你，我会选择在小城镇工作。（事实上我不是你）\n\n注意：在条件从句中，如果谓语动词是 be 的形式，不管主语是单数还是复数，书面语中用 were,而口语中如果是单数，也可以用 was,不过在 if I were…中一般用 were.\n\n2、对过去情况的虚拟\n\n条件从句中谓语动词用过去完成式，主语用“would/could/should/might+have+动词的过去分词”形式。\n\nIf it had not been for your help yesterday,I could not have caught the bus.\n\n如果昨天没有你的帮助，我不会赶上公交车。（事实是你昨天已经帮助了我，所以我赶上了车)\n\n3、对将来情况的虚拟\n\n在表示与将来事实相反的条件从句中，谓语动词可用 should do,were to do 或动词的过去式三种形式表示，但意义略有不同。should 表示的可能性最大，动词过去式的可能性次之，were to do 的可能性最小。\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/inoreader":{"title":"inoreader","content":"\n我也忘了当时为什么不用了来着，好像服务在外网比较卡？\n\n另外专业版年付要$7.5/月还挺贵的\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/instanceof":{"title":"instanceof","content":"\n### instanceof\n\n**instanceof** 运算符用于检测构造函数的 **prototype** 属性是否出现在某个实例对象的原型链上。\n\n但这种方式弊端比较多\n\n1. 对于基本数据类型来说，字面量方式创建出来的结果和实例方式创建出来的是有区别的\n\n```JavaScript\n1 instanceof Number //false\nnew Number(1) instanceof Number //true\n```\n\n2. 只要在当前实例的原型链上，我们用其检测出来的结果都是 true。在类的原型继承中，我们最后检测出来的结果未必准确。\n\n```JavaScript\nlet fn= function(){}\nfn instanceof Function //false\nfn instanceof Object //true\n```\n\n3. 对于特殊的数据类型 `null` 和 `undefined`，他们的所属类是 Null 和 Undefined，但是浏览器把这两个类保护起来了，不允许我们在外面访问使用\n\n```JavaScript\nundefined instanceof undefined\nnull instanceof null\n// Uncaught TypeError: Right-hand side of 'instanceof' is not an object\n```\n\n#### 原理\n\ninstanceof 检测一个对象 A 是不是另一个对象 B 的实例的原理是：  \n查看 对象 B 的 `prototype` 指向的对象是否在 对象 A 的 [[prototype]] 链上。  \n如果在，则返回 `true`, 如果不在则返回 `false`。\n\n```JavaScript\nlet myinstanceof = function(left, right) {\n  let target = left.prototype;\n  while (target) {\n    if (target.__proto__ === right.prototype) return true;\n    target = target.__proto__;\n  }\n  return false;\n};\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/ipa":{"title":"ipa","content":"\nPlayCover 是通过 IPA 文件来安装 iOS 应用的，且 PlayCover 仅支持安装由已越狱 iOS 设备上面导出的 IPA 文件，并不支持「前 macOS 旁加载」时代用比如 iMazing 导出的未解密 IPA 文件。这也就意味着，如果我们想要安装某个 iOS 应用，那么我们要么需要一台已越狱的 iOS 设备来导出相应的 IPA 文件，要么等待其他乐于助人的同学分享其导出的已解密 IPA 文件。\n\n[苹果iPA游戏软件资源下载网站推荐 - 知乎](https://zhuanlan.zhihu.com/p/619227311)\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/isArray":{"title":"isArray","content":"\n#### isArray\n\nES6 的 isArray 也是通过 toString 实现的\n\n```JavaScript\nif (!Array.isArray) {\n  Array.isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n```\n","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/logseq":{"title":"logseq","content":"","lastmodified":"2023-09-18T14:54:47.478454165Z","tags":null},"/lowCode":{"title":"资源","content":"\nø\n\n# 资源\n\n[GitHub - MrXujiang/h5-Dooring: H5 Page Maker, H5 Editor, LowCode. Make H5 as easy as building blocks. | 让 H5 制作像搭积木一样简单, 轻松搭建 H5 页面, H5 网站, PC 端网站,LowCode 平台.](https://github.com/MrXujiang/h5-Dooring)  \n[可视化大屏](http://v6.dooring.cn/beta/template)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/mac-%E6%89%8B%E6%9C%BA%E8%BD%AF%E4%BB%B6%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%8E%88%E6%9D%83%E9%97%AE%E9%A2%98":{"title":"mac 手机软件解决微信授权问题","content":"\n解决办法安装 ipad 版本微信\n\n使用 [[playcover]] 安装  \n\n找一个靠谱的[[ipa]]安装包分享网站\n\n会出现闪退现象，解决方案我找了几个\n1. 降级版本 ipa  ，但是没找到\n2. 扫码登录软件，没找到，\n3. [[sideloadly]] 改签名","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/mfsu":{"title":"MFSU","content":"\n# MFSU\n\nmfsu 是一种基于 webpack5 新特性 Module Federation 的打包提速方案。核心原理是将应用的依赖构建为一个 Module Federation 的 remote 应用，以免去应用热更新时对依赖的编译。\n\n因此，开启 mfsu 可以大幅减少热更新所需的时间。在生产模式，也可以通过提前编译依赖，大幅提升部署效率。\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/monorepo":{"title":"monorepo 的优劣势","content":"\n单仓库模块管理，可使用 lerna 进行包管理  \nmonorepo 是一种**将多个项目代码存储在一个仓库里的软件开发策略**（\"mono\" 来源于希腊语 μόνος 意味**单个的**，而 \"repo\"，显而易见地，是 repository 的缩写）\n\n# monorepo 的优劣势\n\n通过 monorepo 策略组织代码，您代码仓库的目录结构看起来会是这样：\n\n```\n.\n├── lerna.json\n├── package.json\n└── packages/ # 这里将存放所有子 repo 目录\n    ├── project_1/\n    │   ├── index.js\n    │   ├── node_modules/\n    │   └── package.json\n    ├── project_2/\n    │   ├── index.js\n    │   ├── node_module/\n    │   └── package.json\n    ...\n```\n\n乍看起来，所谓的 monorepo 策略就只是将不同项目的目录汇集到一个目录之下，但实际上操作起来所要考虑的事情则远比看起来要复杂得多。通过分析使用 monorepo 策略的优劣，我们可以更直观的感受到这里面所隐晦涉及的知识点。\n\n## 优点\n\n- 项目代码可集中进行管理，使用统一的构建工具。  \n  代码重用将变得非常容易：由于所有的项目代码都集中于一个代码仓库，我们将很容易抽离出各个项目共用的业务组件或工具，并通过 [[TypeScript]]，[[Lerna]] 或其他工具进行代码内引用；\n- 依赖管理将变得非常简单：同理，由于项目之间的引用路径内化在同一个仓库之中，我们很容易追踪当某个项目的代码修改后，会影响到其他哪些项目。通过使用一些工具，我们将很容易地做到版本依赖管理和版本号自动升级；\n- 代码重构将变得非常便捷：想想究竟是什么在阻止您进行代码重构，很多时候，原因来自于「不确定性」，您不确定对某个项目的修改是否对于其他项目而言是「致命的」，出于对未知的恐惧，您会倾向于不重构代码，这将导致整个项目代码的腐烂度会以惊人的速度增长。而在 monorepo 策略的指导下，您能够明确知道您的代码的影响范围，并且能够对被影响的项目可以进行统一的测试，这会鼓励您不断优化代码；\n- 它倡导了一种开放，透明，共享的组织文化，这有利于开发者成长，代码质量的提升：在 monorepo 策略下，每个开发者都被鼓励去查看，修改他人的代码（只要有必要），同时，也会激起开发者维护代码，和编写单元测试的责任心（毕竟朋友来访之前，我们从不介意自己的房子究竟有多乱），这将会形成一种良性的技术氛围，从而保障整个组织的代码质量。\n- 模块间调试方便、问题定位和修复相对容易\n\n## 缺点\n\n- 仓库体积大，对构建工具要求较高  \n  **对于公司级别的 monorepo 策略而言，需要专门的 VFS 系统，自动重构工具的支持**：设想一下 Google 这样的企业是如何将十亿行的代码存储在一个仓库之中的？开发人员每次拉取代码需要等待多久？各个项目代码之间又如何实现权限管理，敏捷发布？\n- **项目粒度的权限管理变得非常复杂**：无论是 Git 还是其他 VCS 系统，在支持 monorepo 策略中项目粒度的权限管理上都没有令人满意的方案，这意味着 A 部门的 a 项目若是不想被 B 部门的开发者看到就很难了。（好在我们可以将 monorepo 策略实践在「项目级」这个层次上，这才是我们这篇文章的主题，我们后面会再次明确它）；\n- 为了保证代码质量，对版本控制和 Git 工作流要求更高\n- 新员工的学习成本变高：不同于一个项目一个代码仓库这种模式下，组织新人只要熟悉特定代码仓库下的代码逻辑，在 monorepo 策略下，新人可能不得不花更多精力来理清各个代码仓库之间的相互逻辑，当然这个成本可以通过新人文档的方式来解决，但维护文档的新鲜又需要消耗额外的人力；\n\n和[[单页应用]]类似\n\n# 实践\n\n## 使用环境：[[Volta]]\n\n## 复用 packages：workspace\n\n使用 monorepo 策略后，收益最大的两点是：\n\n1. **避免重复安装包，因此减少了磁盘空间的占用，并降低了构建时间**；\n2. **内部代码可以彼此相互引用**；  \n    为了实现前面提到的两点收益，您需要在代码中做三件事：\n\n3. 调整目录结构，将相互关联的项目放置在同一个目录，推荐命名为  `packages`；\n4. 在项目根目录里的  `package.json`  文件中，设置  `workspaces`  属性，属性值为之前创建的目录；\n5. 同样，在  `package.json`  文件中，设置  `private`  属性为  `true`（为了避免我们误操作将仓库发布）；\n\n经过修改，您的项目目录看起来应该是这样：\n\n```\n.\n├── package.json\n└── packages/\n    ├── @mono/project_1/ # 推荐使用 `@\u003c项目名\u003e/\u003c子项目名\u003e` 的方式命名\n    │   ├── index.js\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        └── package.json\n```\n\n而当您在项目根目录中执行  `npm install`  或  `yarn install`后，您会发现在项目根目录中出现了  `node_modules`  目录，并且该目录不仅拥有所有子项目共用的 npm 包，还包含了我们的子项目。因此，我们可以在子项目中通过各种模块引入机制，像引入一般的 npm 模块一样引入其他子项目的代码。\n\n## 统一配置\n\n您一定同意，编写代码要遵循 [[DRY 原则]]（Don't Repeat Yourself 的缩写）。那么，理所当然地，我们应该尽量避免在多个子项目中放置重复的 eslintrc，tsconfig 等配置文件。幸运的是，Babel，Eslint 和 Typescript 都提供了相应的功能让我们减少自我重复。\n\n### TypeScript\n\n我们可以在  `packages`  目录中放置  `tsconfig.settting.json`  文件，并在文件中定义通用的 ts 配置，然后，在每个子项目中，我们可以通过  `extends`  属性，引入通用配置，并设置  `compilerOptions.composite`  的值为  `true`，理想情况下，子项目中的  `tsconfig`  文件应该仅包含下述内容：\n\n```\n{\n  \"extends\": \"../tsconfig.setting.json\", // 继承 packages 目录下通用配置\n  \"compilerOptions\": {\n    \"composite\": true, // 用于帮助 TypeScript 快速确定引用工程的输出文件位置\n    \"outDir\": \"dist\",\n    \"rootDir\": \"src\"\n  },\n  \"include\": [\"src\"]\n}\n```\n\n### [[Eslint]]\n\n对于 Eslint 配置文件，我们也可以如法炮制，这样定义子项目的  `.eslintrc`  文件内容：\n\n```\n{\n  \"extends\": \"../../.eslintrc\", // 注意这里的不同\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  }\n}\n```\n\n### Babel\n\nBabel 配置文件合并的方式与 TypeScript 如出一辙，甚至更加简单，我们只需在子项目中的  `.babelrc`  文件中这样声明即可：\n\n```\n{\n  \"extends\": \"../.babelrc\"\n}\n```\n\n当一切准备就绪后，我们的项目目录应该大致呈如下所示的结构：\n\n```\n.\n├── package.json\n├── .eslintrc\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └───@mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json\n```\n\n### 统一命令脚本：scripty\n\nscripty 允许您将脚本命令定义在文件中，并在  `package.json`  文件中直接通过文件名来引用。这使我们可以实现如下目的：\n\n1. **子项目间复用脚本命令**；\n2. **像写代码一样编写脚本命令，无论它有多复杂，而在调用时，像调用函数一样调用**；\n\n注意，我们脚本分为两类「package 级别」与「workspace 级别」，并且分别放在两个文件夹内。这样做的好处在于，我们既可以在项目根目录执行全局脚本，也可以针对单个项目执行特定的脚本。\n\n通过使用 scripty，子项目的  `package.json`  文件中的  `scripts`  属性将变得非常精简：\n\n```\n{\n  ...\n  \"scripts\": {\n    \"test\": \"scripty\",\n    \"lint\": \"scripty\",\n    \"build\": \"scripty\"\n  },\n  \"scripty\": {\n    \"path\": \"../../scripts/packages\" // 注意这里我们指定了 scripty 的路径\n  },\n  ...\n}\n```\n\n### 统一包管理：[[Lerna]]\n\n### 格式化 commit 信息\n\n[[commitLint]] 和[[husky]]\n\n## 如何迁移\n\nLerna 为我们提供了  `lerna import`  命令，用来将我们已有的包导入到 monorepo 仓库，并且还会保留该仓库的所有 commit 信息。然而实际上，该命令仅支持**导入本地项目**，并且**不支持**导入项目的分支和标签\n\n那么如果我们想要导入远程仓库，或是要获取某个分支或标签该怎么做呢？答案是使用  [tomono](https://github.com/hraban/tomono)，其内容是一个 shell 脚本。\n\n使用 tomono 导入远程仓库，您所需要做的只有两件事：\n\n1. 创建一个包含所有需要导入 repo 地址的文本文件；\n2. 执行 shell 命令：`cat repos.txt | ~/tomono/tomono.sh`（这里我们假定您的文本文件名为  `repos.txt`，且您将 tomono 下载在用户根目录；\n\nrepo 文件内容示例如下：\n\n```\n// 1. Git仓库地址  2. 子项目名称  3. 迁移后的路径\ngit@github.com/backend.git @mono/backend packages/backend\ngit@github.com/frontend.git @mono/frontend packages/frontend\ngit@github.com/mobile.git @mono/mobile packages/mobile\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/muji%E8%BF%81%E7%A7%BBvite":{"title":"muji迁移vite","content":"\n#状态/未完成\n\n# muji迁移vite\n\n# 准备工作\n\n## 创建一个 muji 模板\n\n```js\n   yarn create @souche-f2e/muji\n```\n\n## 创建一个 vite 模板\n\n```\n\n```\n\n将 index.ejs 移到最外层改成 index.html 并引入 main.js\n\n```html\n\u003c!DOCTYPE html\u003e\n\n\u003chtml lang=\"en\"\u003e\n\t\u003chead\u003e\n\t\t\u003cmeta charset=\"UTF-8\" /\u003e\n\n\t\t\u003clink rel=\"icon\" type=\"image/svg+xml\" href=\"/src/favicon.svg\" /\u003e\n\n\t\t\u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n\n\t\t\u003ctitle\u003eVite App\u003c/title\u003e\n\t\u003c/head\u003e\n\n\t\u003cbody\u003e\n\t\t\u003cdiv id=\"root\"\u003e\u003c/div\u003e\n\n\t\t\u003cscript type=\"module\" src=\"./src/.muji/entry.tsx\"\u003e\u003c/script\u003e\n\t\u003c/body\u003e\n\u003c/html\u003e\n```\n\n另外变量引入\n\n# 问题修复\n\n### require is not defined\n\nhttps://learnku.com/vuejs/t/54771  \nstore 文件 require 改成 import\n\n### antd icon\n\n```js\nUncaught (in promise) TypeError: Unknown theme type: undefined, name: undefined\n\n```\n\n升级到 4.0\n\n### 批量修改后缀\n\n可以看下这个 issue:[https://github.com/vitejs/vite/issues/1552](https://github.com/vitejs/vite/issues/1552) ，最后作者发出`批量改个后缀有这么难`的吐槽，算了，还是改吧，如果觉得手动改麻烦，写个脚本也不是啥难事。\n\nhttps://qdmana.com/2021/04/20210419144833849u.html\n\n### 输出文件\n\n```error\nFailed to load module script: The server responded with a non-JavaScript MIME type of \"text/html\". Strict MIME type checking is enforced for module scripts per HTML spec.\n```\n\n### alias 和包名冲突\n\n### 无法解析 less 中的~antd/语法\n\n```js\nalias: [\n\n{ find: /^~/, replacement: '' },\n\n{ find: '@', replacement: pathResolve('src') },\n\n{ find: '@@', replacement: pathResolve('src/.muji') },\n\n],\n```\n\n### 引入 antd 中有 js\n\n```\n[vite] Internal server error: Inline JavaScript is not enabled. Is it set in your options?\n```\n\n```js\n// vite2.x\ncss: {\n  preprocessorOptions: {\n    less: {\n      javascriptEnabled: true,\n    }\n  },\n},\n```\n\n### babel 解析 store\n\n```\n[plugin:vite:react-babel] /Volumes/work/数据中心/muji-template/src/pages/link/index.tsx: Identifier 'dispatch' has already been declared. (9:9)\n```\n\n### process 未找到\n\nhttps://cn.vitejs.dev/guide/env-and-mode.html\n\nprocess.env 替换成 **`import.meta.env`**\n\n### 环境变量定义\n\n为了防止意外地将一些环境变量泄漏到客户端，只有以 `VITE_` 为前缀的变量才会暴露给经过 vite 处理的代码。例如下面这个文件中：\n\n```js\nDB_PASSWORD = foobar;\nVITE_SOME_KEY = 123;\n```\n\n只有 `VITE_SOME_KEY` 会被暴露为 `import.meta.env.VITE_SOME_KEY` 提供给客户端源码，而 `DB_PASSWORD` 则不会。\n\n如果你想自定义 env 变量的前缀，请参阅 [envPrefix](https://cn.vitejs.dev/config/index.html#envprefix)。\n\n### 引入包不支持\n\n```node\nError: Build failed with 1 error:\nnode_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js:74:9: error: No matching export in \"node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js\" for import \"bpfrpt_proptype_WindowScroller\"\n```\n\n修复\n\n```json\n\"react-virtualized\": \"patch:react-virtualized@9.22.3#./path/to/react-virtualized-9.22.3.patch\",\n```\n\n### 修复之后也没找到 style\n\n```\nError: The following dependencies are imported but could not be resolved:\n\n  react-virtualized/styles.css\n```\n\n#状态/todo\n\n### 动态路由\n\n查找正则  \nimport\\((.+?)\\)\n\n### dispatch 已声明\n\n```\nimport { dispatch } from '@@/store';\n```\n\n删除即可\\\n\n### antd 主题色\n\nmuji\n\n```json\n[\n\n'@souche-f2e/muji-plugin-antd-vars',\n\n{\n\ntheme: {\n\n'@primary-color': '#456CF6',\n\n'@link-color': '#4A96FF',\n\n// '@height-base': '36px',\n\n// '@height-lg': '44px',\n\n// '@height-sm': '28px',\n\n'@text-color': '#1B1C33',\n\n'@table-padding-vertical': '10px',\n\n'@table-padding-horizontal': '10px',\n\n'@table-header-bg': '#EAEDF2',\n\n'@table-selected-row-bg': 'rgba(67, 97, 216, 0.1)',\n\n'@pagination-item-size': '30px',\n\n'@border-radius-base': '4px',\n\n},\n\n},\n\n],\n```\n\nvite.config.js\n\n```js\ncss: {\n\npreprocessorOptions: {\n\nless: {\n\nmodifyVars: {\n\n'@primary-color': '#456CF6',\n\n},\n\njavascriptEnabled: true,\n\n},\n\n},\n\n},\n```\n\n### store 更新页面没渲染\n\n将 store.ts 中的 moudle 都替换成 import.meta\n\n```js\nif (import.meta.hot) {\n}\n```\n\n### 引入 antd.less\n\n```js\nimport \"antd/dist/antd.less\";\n```\n\n### 引入 luban 出错\n\n缺少 module 模块对应的 es5.js\n\n```json\n\"main\": \"dist/luban-js-v2.umd.js\",\n\n\"module\": \"dist/luban-js-v2.es5.js\",\n\n\"typings\": \"dist/types/luban-js-v2.d.ts\",\n```\n\n### 循环引用\n\n```\nerror during build:\nRangeError: /Volumes/work/dataCenter/user-portrait-v2/node_modules/react-redux/es/components/Provider.js: Maximum call stack size exceeded\n```\n\n在 vite.config.js，只在开发环境中使用\n\n```javascript\nexport default defineConfig(({ mode }) =\u003e {\n  const isDevEnv = mode === 'development';\n\n  return {\n    plugins: [\n       isDevEnv \u0026\u0026 react(),\n    ]\n  }\n}\n```\n\n### 部署线上路径不对\n\n```json\nbaseUrl:'./'\n```\n\n### 无法按需引入 echarts\n\n```js\nimport * as echarts from \"echarts\";\n```\n\n### antd 国际化的包要 es 的\n\n```js\nimport zhCN from 'antd/es/locale/zh_CN.js';`\n```\n\n# 对比\n\n对比维度\n\n1. 初次构建速度\n2. 热更新速度\n3. 构建包体积\n\n## muji\n\n### 初次构建速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207162404.png)\n\n### 第二次以后构建\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207195924.png)\n\n### 热更新速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207162426.png)\n\n### 页面加载速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207162602.png)\n\n### 打包大小\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207163355.png)\n\n大概 23.1MB\n\n### 兼容性\n\n## vite\n\n### 初次构建速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207154949.png)\n\n### 第二次以后构建\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207155136.png)\n\n### 热更新速度\n\n瞬间 毫秒级\n\n### 页面加载速度\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207155916.png)\n\n#### 懒加载以后\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211208154222.png)\n\n### 兼容性\n\n### 打包大小\n\n大概 5.7M  \n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20211207161228.png)\n\n# Vite 打包优化\n\n[[Vite优化]]\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/n8n":{"title":"n8n","content":"\n# 参考文章\n\n[基于 n8n 的开源自动化：以滴答清单同步 Notion 为例 ｜ 少数派会员 π+Prime](https://sspai.com/prime/story/automation-n8n)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/nginx":{"title":"nginx","content":"","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/npm":{"title":"工程化工具发展","content":"\n# 工程化工具发展\n\n## npm 问题\n\nNpm 最初的设计是直接将依赖平铺在 node_modules 下, 这样在真实场景下，就会产生很多冗余的包，很快就占满磁盘，被称为**依赖地狱**。\n\nNpm3 为了优化依赖地狱的问题，将子依赖提升, 采用了扁平化的数据结构，子依赖会尽量平铺安装在主依赖所在的目录中。\n\n这样虽然避免了大量包的重复安装和依赖层级过深的问题，但也带来了依赖幽灵的问题。幽灵依赖是指在 package. Json 中未定义的依赖，但项目中依然可以正确地被引用到。\n\n另外，还会有类似**同样的 package. Json 文件，install 依赖后可能不会得到同样的 node_modules 目录结构。** 依赖结构的不确定性和依赖分身这样的问题。\n\n这是就需要 [[Yarn]] 带来创新\n\n## [[tnpm]] 和 cnpm 是什么？\n\n简单的说：\n\n- cnpm 是我们开源的 npm 实现，支持官方 npm registry 的镜像同步，以及私有包能力。\n- npmmirror 是社区基于 cnpm 部署的一个公益项目，为中国前端开发者提供镜像服务。\n- tnpm 是我们在阿里巴巴及蚂蚁集团的企业服务，同样基于 cnpm 之上做了企业级的能力定制。\n\n## 任务式构建工具\n\n\u003e 任务式构建工具发展历程回顾：  \n\u003e 2012 年，Ben Alman 发布了基于任务的构建工具 Grunt。  \n\u003e 2013 年，Eric Schoffstall 发布了流式的构建工具 Gulp。\n\nGrunt vs Gulp  \n这两种工具的差异性主要体现在：\n\n1. **读写速度：**Gulp 在处理任务的过程中基于 NodeJS 的数据流，本质上是操读写内存，而 Grunt 则是基于临时文件，因此在读写速度上 Gulp 要快于 Grunt。\n2. **社区使用规模：**截止编写课程的时间点，在 npmjs.com 的周下载量方面，Gulp 为 1,200,000+，约是 Grunt 的两倍。而在插件数量方面，Grunt 社区提供了超过 6000 个不同功能的插件，而 Gulp 社区的插件数量则是 4000 多个。\n3. **配置文件的易用性：**相比描述不同插件配置信息的 Gruntfile 而言，使用 pipe 函数描述任务处理过程的方式通常更易于阅读，但编写时需要对数据流有更深入的理解。\n\n任务式的构建工具，虽然解决了开发流程中自动化执行预设任务的问题，但不能解决项目中代码如何组织成不同功能的代码包、不同代码之间如何相互依赖等问题。而解决这类问题的方式就是：模块化。\n\n## 模块化\n\n[[前端模块化]]\n\n[[私有 NPM 源]]\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/obsidian%E6%8F%92%E4%BB%B6%E7%BB%9F%E8%AE%A1":{"title":"obsidian插件统计","content":"\n```yaml:dbfolder\nname: new database\ndescription: new description\ncolumns:\n  当前使用频率:\n    input: number\n    accessorKey: 当前使用频率\n    key: 当前使用频率\n    id: 当前使用频率\n    label: 当前使用频率\n    position: 2\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    width: 100\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  当前是否还在使用:\n    input: text\n    accessorKey: 当前是否还在使用\n    key: 当前是否还在使用\n    id: 当前是否还在使用\n    label: 当前是否还在使用\n    position: 5\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  使用或不用的原因:\n    input: text\n    accessorKey: 使用或不用的原因\n    key: 使用或不用的原因\n    id: 使用或不用的原因\n    label: 使用或不用的原因\n    position: 6\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  aliases:\n    input: tags\n    accessorKey: aliases\n    key: aliases\n    id: aliases\n    label: aliases\n    position: 7\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    options:\n      - { label: \"Dataviewjs\", value: \"Dataviewjs\", color: \"hsl(185, 95%, 90%)\"}\n      - { label: \"间隔重复\", value: \"间隔重复\", color: \"hsl(13, 95%, 90%)\"}\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  date created:\n    input: calendar\n    accessorKey: date_created\n    key: date_created\n    id: date_created\n    label: date created\n    position: 8\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  date modified:\n    input: calendar\n    accessorKey: date_modified\n    key: date_modified\n    id: date_modified\n    label: date modified\n    position: 9\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  title:\n    input: text\n    accessorKey: title\n    key: title\n    id: title\n    label: title\n    position: 10\n    skipPersist: false\n    isHidden: true\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  uid:\n    input: text\n    accessorKey: uid\n    key: uid\n    id: uid\n    label: uid\n    position: 11\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  __file__:\n    key: __file__\n    id: __file__\n    input: markdown\n    label: File\n    accessorKey: __file__\n    isMetadata: true\n    skipPersist: false\n    isDragDisabled: false\n    csvCandidate: true\n    position: 1\n    isHidden: false\n    sortIndex: -1\n    width: -7\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: true\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  __created__:\n    key: __created__\n    id: __created__\n    input: metadata_time\n    label: Created\n    accessorKey: __created__\n    isMetadata: true\n    isDragDisabled: false\n    skipPersist: false\n    csvCandidate: true\n    position: 3\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  __modified__:\n    key: __modified__\n    id: __modified__\n    input: metadata_time\n    label: Modified\n    accessorKey: __modified__\n    isMetadata: true\n    isDragDisabled: false\n    skipPersist: false\n    csvCandidate: true\n    position: 4\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\n      persist_formula: false\n  tags:\n    input: text\n    accessorKey: tags\n    key: tags\n    id: tags\n    label: tags\n    position: 100\n    skipPersist: false\n    isHidden: false\n    sortIndex: -1\n    config:\n      enable_media_view: true\n      link_alias_enabled: true\n      media_width: 100\n      media_height: 100\n      isInline: false\n      task_hide_completed: true\n      footer_type: none\n      persist_changes: false\nconfig:\n  remove_field_when_delete_column: false\n  cell_size: wide\n  sticky_first_column: true\n  group_folder_column: \n  remove_empty_folders: false\n  automatically_group_files: false\n  hoist_files_with_empty_attributes: true\n  show_metadata_created: true\n  show_metadata_modified: true\n  show_metadata_tasks: false\n  show_metadata_inlinks: false\n  show_metadata_outlinks: false\n  source_data: current_folder\n  source_form_result: \n  source_destination_path: /\n  row_templates_folder: /\n  current_row_template: \n  pagination_size: 75\n  font_size: 16\n  enable_js_formulas: false\n  formula_folder_path: /\n  inline_default: false\n  inline_new_position: last_field\n  date_format: yyyy-MM-dd\n  datetime_format: \"yyyy-MM-dd HH:mm:ss\"\n  metadata_date_format: \"yyyy-MM-dd HH:mm:ss\"\n  enable_footer: false\n  implementation: default\nfilters:\n  enabled: false\n  conditions:\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/ones-%E6%9C%AC2-30k":{"title":"项目经历","content":"\n# 项目经历\n\n## ONES Project 紧急需求交付\n\n2022.01-2022.08  \n所属公司：(ONES)  \n项目描述：  \n在职期间多次临时借调承接部分紧急需求交付，这里罗列部分问题。  \n我的成就：\n\n### 通知、评论与邮件消息批量合并优化\n\nONES Project 存在批量操作工作项行为，旧有设计批量修改了多少就发多少消息，导致通知过多也不存在可读性，邮件也被恶意拦截很影响后续使用，对此做了如下优化：\n\n1. 梳理了现有项目以及工作项修改的一对多、多对多场景，抽离成 map 相关配置，利于后期维护，比如 1 条工作批量修改了多个属性合并成一条，且点击消息跳转具体工作项，多个工作修改多个属性同样整合成一条，点击跳转跳全局筛选器，不同场景根据配置走不同数据加工流程。\n2. 整合了通知与评论部分高度相似逻辑，优化了大量 if.ese 嵌套地狱，抽离成公共数据加工层与相关场景配置，减少代码量提升可读性。\n3. 考虑到数据库旧有存量 message 信息，增加了旧数据格式转新数据的中间件逻辑，提升代码稳健性。\n4. 优化了 message 轮询接口机制，增加轮询间隔；简化了轮询接口查询范围，当通知小铃铛未展开时只查询新消息数量，展开才会查询 message 完整信息；基于 visibilitychange + document.hidden 实现了浏览器 tab 离开时暂时轮询，回到页面恢复轮询的逻辑，很大程度减轻了服务器压力。\n\n### input 与 select 的 hover 易用性优化\n\n当用户无修改权限但有可读权限时，因为缺少 hover title 提示，导致输入框值足够长时客户没办法获取完整信息，长期以来一直有客户反馈但迟迟未根治。\n\n1. 因为组件库小组资源问题，临时加入组件库小组对于 Input 与 Select 组件做了 title 传递的处理，Input 考虑了受控与非受控场景，Select 考虑了 label 为 string 以及 reactNode 的场景，研发层只用提供 title 即可直接达到效果。\n2. 在统计项目中有问题场景后，对 1 旧有 antd 组件进行替换以及部分数据对接，对整个项目的相关场景都做了易用性优化。\n3. 因工作推进的积极性，此问题顺利得以完整解决，也因此受到组件库小组转岗邀请，开始承接组件库部分能力。\n\n## ONES Project 性能优化\n\n2022.01-2022.08  \n所属公司：(ONES)  \n项目描述：  \n针对 ONES Project 组件无效渲染，客户反馈使用卡顿、页面长时间未响应，以及部分组件设计进行优化。  \n我的成就：\n\n### ONES Project 首屏加载优化\n\n1.通过全局查找 Route 组件并使用 React.lazy 实现异步加载，以提升页面初始化渲染速度。  \n2.对公共且庞大的 SCSS 文件进行样式抽离，减少非必要样式加载，在部分组件重构时使用 tailwindCss,以原子化提高样式复用率，以减少样式加载体积。  \n3.废弃与优化部分 stamp 接口，stamp 接口在 ONES 系统中具有很重的历史包袱，由于获取全量数据行为，在大客户场景存在数据安全以及部分性能问题，在此次优化对可替代 stamp 接口改用 graphgl 获取，不可替换场景尽可能确认简化数据获取的 key 类型，通过按需获取极大提升接口速度。  \n4.此次优化首页加载无缓存整体提速约 34%，有缓存约 27%，具体数据与视频对比可见：  \nhttps://www.yuque.com/echolun/hgqd9h/de3gwb\n\n### 工作项属性列表无效渲染优化\n\n1.工作项属性是否必填切换一直要卡 2-3S 且在职 2 年期间都无人解决，使用体验饱受诟病，为此对相关组件做了无效渲染优化与体验优化。  \n2.重构部分 Class 组件为 hooks+ts,定义了部分公共 type 类型，为未来 react18 升级铺路。  \n3.在梳理相关组件数据流后，结合 whyDidyourRender、whyDidYouUpdate 以及 Profiler 工具统计出大量重复渲染的原因，从顶层组件向下修改了大量不稳定数据赋值以及不稳定 Selector , 初始化渲染由 120 多次优化到了 10 余次。  \n4.优化了必填按钮切换逻辑，在维持数据正常更新的场景下切换速度由最初 2s 提升到 500s 左右。\n\n###\n\n\n1. 优化后时间由 46539ms 缩减到 167sm,速度足足提升了 278 倍。详细分析思路可见：  \n   https://www.cnblogs.com/echolun/p/15415458.html\n2. 工作台筛选器加载很慢：此问题由客户反馈，同样根据 Performance 定位，最终发现居然是滥用 memoizee 缓存所导致，memoizee 底层查找有没有缓存使用的是 indexOf,当缓存数据与需要处理的数据都达到 10W 级别后，每次缓存的都得走一遍非常耗时的查找，修复方案是手动实现了一个以 map 查找缓存的缓存函数，自此之后前端组逐渐废弃 memoizee。关于 memoizee 与 map 性能对比可见：https://www.cnblogs.com/echolun/p/15781795.html\n\n## ONES 全产品线 bug 修复\n\n2020.08-2022.08  \n所属公司：(ONES)  \n项目描述：  \n负责 ONES Project、.ONES Wiki、ONES Plan、ONES TestCase 等全产品线 bug 修复，在职两年期间 累积处理 desk 工单 1200 余条，问题范围涵盖客户反馈 bug、易用性问题以及性能问题，曾三次将客户反馈问题总量动态清零，在提升客户签约与续约率中起到积极作用。工作中累积了丰富的 dbug 经验与疑难问题排查经验，在ONES 问题排查方面名声在外，多次受邀协助其他小组解决疑难问题，这里列举部分问题：\n\n### 成员搜索偶现接口先发后至问题\n\n考虑到浪潮用户数据量较大，在造用户数据以及降低电脑网速后复现了此问题，其现象为输入框输入 A 后再清空，理论上成员列表应该展示全部成员，但错误展示只符合条件 A 的成员，简单说先发的接口反而最后响应。解决方案在搜索框添加防抖减少请求频率以及 axios cancelToken,后发起接口请求时取消之前未完成的重复接口。  \n详细分析文档：https::/www.cnblogs.com/echolun/p/15144303.html\n\n### Wps 复制文本到 ONES Wiki 后字号丢失\n\n客户人民日报工作中高度依赖 ONES Wiki,使用中发现从 WPS 复制文本到 wki 后字号都成了默认，因客户关系紧张问题被升级为紧急。在断点阅读了 CKEditor 粘贴板相关源码后发现，WPS 字体单位为印刷单位 pt 而非 px,CKEditor 并不支持此单位。解决方案只能进行魔改，在粘贴板数据处理时正则匹配所有字体单位，并利用 replace 进行单位替换，考虑到 1pt≈1.3333px 精度丢失问题，换算后四舍五入匹配最接近的 px 单位字体，此问题顺利得以解决。\n\n### ONES Project 配置中心接口死循环\n\n在大版本集成测试中发现配置中心两个接口无限请求，D 引值较高影响版本上线。了解相关逻辑数据流后发现，组件 A 中路由配置使用了 component=-{0=\u003e\u003cB/\u003e}的写法，只要 A 重新渲染就会导致组件 B 完整卸载与挂载，因此 B 中 didMout 再次请求接口，而后端返回的数据不稳定又导致 A 再次渲染，从而形成了死循环。虽然后端数据不稳定是原罪，但此处路由使用不规范，修复方案只用将 component 改为 render 即可。  \n详细分析文档：https:/www.cnblogs.com/echolun./p/15693622.html\n\n### 飞书内置 ONES 无法使用 PDF 预览\n\n客户在飞书中配置了 ONES 应用，通过飞书内置浏览器使用 ONES 时发现预览 PDF 一直 loading 无法预览，此问题影响客户签约被升级为紧急。而前端 PDF 预览使用了 PDFobject..jS,经调研飞书内置浏览器\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/playcover":{"title":"playcover","content":"\n选取最新版本安装\n\n[Releases · PlayCover/PlayCover](https://github.com/PlayCover/PlayCover/releases)  \n\n\n\n\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/promise-%E6%96%B9%E6%B3%95":{"title":"promise 方法","content":"\npromise 方法\n\n##### 1.Promise.prototype.finally()\n\nfinally 方法用于指定不管 Promise 对象最后状态如何,都会执行的操作。该方法是 ES2018 引入标准的。\n\n相当于\n\n```JavaScript\nPromise.prototype.finally = function (callback) {\n  let P = this.constructor;\n  return this.then(\n    (value) =\u003e P.resolve(callback()).then(() =\u003e value),\n    (reason) =\u003e\n      P.resolve(callback()).then(() =\u003e {\n        throw reason;\n      })\n  );\n};\n```\n\n##### 2.Promise.all()\n\nPromise.all()方法用于将多个 Promise 实例,包装成一个新的 Promise 实例。\n\n另外,Promise.all()方法的参数可以不是数组,但**必须具有 Iterator 接口,且返回的每个成员都是 Promise 实例。**\n\n1. 只有 p1、p2、p3 的状态**都变成 fulfilled**,p 的状态才会变成 fulfilled, 此时 p1、p2、p3 的返回值组成一个数组, 传递给 p 的回调函数。\n2. 只要 p1、p2、p3 之中**有一个被 rejected**,p 的状态就变成 rejected, 此时第一个被 reject 的实例的返回值, 会传递给 p 的回调函数。\n\n##### 3.Promise.race()\n\n```JavaScript\nconst p = Promise.race([p1, p2, p3]);\n```\n\n上面代码中,只要 p1、p2、p3 之中有一个实例率先改变状态,p 的状态就跟着改变。那个率先改变的 Promise 实例的返回值,就传递给 p 的回调函数。\n\n下面是一个例子,如果指定时间内没有获得结果,就将 Promise 的状态变为 reject,否则变为 resolve。\n\n```JavaScript\nconst p = Promise.race([\n  fetch(\"/resource-that-may-take-a-while\"),\n  new Promise(function (resolve, reject) {\n    setTimeout(() =\u003e reject(new Error(\"request timeout\")), 5000);\n  }),\n]);\n\np.then(console.log).catch(console.error);\n```\n\n上面代码中,如果 5 秒之内 `fetch` 方法无法返回结果,变量 p 的状态就会变为 `rejected`,从而触发 `catch` 方法指定的回调函数。\n\n这种可以使用 `axios` 的超时拦截,别的什么作用还没想到\n\n##### 4.Promise.allSettled()\n\n`Promise.allSettled()` 方法接受一组 `Promise` 实例作为参数,包装成一个新的 `Promise` 实例。只有等到所有这些参数实例都返回结果,不管是 `fulfilled` 还是 `rejected`,包装实例才会结束。该方法由 **ES2020** 引入。\n\n有时候,我们**不关心异步操作的结果,只关心这些操作有没有结束**。这时,`Promise.allSettled()`方法就很有用。如果没有这个方法,想要确保所有操作都结束,就很麻烦。Promise.all()方法无法做到这一点。\n\n##### 5.Promise.any()\n\n与 promise.all()相反\n\n**Promise.any()** 方法接受一组 `Promise` 实例作为参数,包装成一个新的 `Promise` 实例。只要参数实例有一个变成 `fulfilled` 状态,包装实例就会变成 fulfilled 状态；如果所有参数实例都变成 `rejected` 状态,包装实例就会变成 `rejected` 状态。该方法目前是一个第三阶段的提案 。\n\n##### 6.Promise.resolve()\n\n有时需要将现有对象转为 `Promise` 对象,**Promise.resolve()** 方法就起到这个作用。\n\n```JavaScript\nPromise.resolve()等价于下面的写法\nPromise.resolve('foo') // 等价于 new Promise(resolve =\u003e resolve('foo'))\n```\n\nPromise.resolve 方法的参数分成四种情况:  \n（1）参数是一个 Promise 实例  \n如果参数是 Promise 实例,那么 Promise.resolve 将不做任何修改、原封不动地返回这个实例。  \n（2）参数是一个 thenable 对象  \nthenable 对象指的是具有 then 方法的对象,比如下面这个对象。\n\n```JavaScript\nlet thenable = {\n  then: function (resolve, reject) {\n    resolve(42);\n  },\n};\n```\n\n（3）参数不是具有 then 方法的对象,或根本就不是对象  \n（4）不带有任何参数  \n相当于 new Promise()  \n需要注意的是,立即 resolve()的 `Promise` 对象,是在本轮“事件循环”（event loop）的结束时执行,而不是在下一轮“事件循环”的开始时。\n\n##### 7.Promise.reject()\n\n##### 8Promise.try()\n\n由于 Promise.try 为所有操作提供了统一的处理机制,所以如果想用 then 方法管理流程,最好都用 Promise.try 包装一下。这样有许多好处,其中一点就是可以更好地管理异常。\n\n解决了 **try{}catch{}** 无法处理异步错误的问题\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/purgecss-webpack-plugin":{"title":"purgecss-webpack-plugin","content":"\n## 配置PurgeCss  \n\n- paths:表示要检测哪些目录下的内容需要被分析，这里我们可以使用glob:  \n- 默认情况下，Purgecss会将我们的html标签的样式移除掉，如果我们希望保留，可以添加一个safelist的属性；  \n\n```js\nnew PurgecssPlugin({  \npaths:glob.sync('s{resolveApp(\"./src\")]/**/*,{nodir:true}),  \nsafelist:function()  \nreturn   {\nstandard:[\"html\"]\n\t\t}\n```\n\n- purgecsst也可以对less文件进行处理（所以它是对打包后的css进行tree shaking操作）；  \n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/question":{"title":"question","content":"","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/requestAnimationFrame":{"title":"requestAnimationFrame","content":"\nrequestAnimationFrame\n\n这个方法会告诉浏览器要执行动画 了，于是浏览器可以通过最优方式确定重绘的时序。\n\nrequestAnimationFrame()方法接收一个参数，此参数是一个要在重绘屏幕前调用的函数。\n\n#### cancelAnimationFrame\n\n与 setTimeout()类似，requestAnimationFrame()也返回一个请求 ID，可以用于通过另一个 方法 cancelAnimationFrame()来取消重绘任务。\n\n```JavaScript\nlet requestID = window.requestAnimationFrame(() =\u003e {\n console.log('Repaint!');\n});\nwindow.cancelAnimationFrame(requestID);\n```\n\n#### 通过 requestAnimationFrame 节流\n\n这样，计时器可以限制实际的操作执行间隔，而 requestAnimationFrame 控制 在浏览器的哪个渲染周期中执行。下面的例子可以将回调限制为不超过 50 毫秒执行一次:\n\n```JavaScript\nlet enabled = true;\nfunction expensiveOperation() {\n console.log('Invoked at', Date.now());\n}\nwindow.addEventListener('scroll', () =\u003e {\n if (enabled) {\n enabled = false;\n window.requestAnimationFrame(expensiveOperation);\n window.setTimeout(() =\u003e enabled = true, 50);\n }\n});\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/requestIdleCallback":{"title":"Polifill","content":"\n# Polifill\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/serverless":{"title":"serverless","content":"\n# serverless\n\n# 腾讯 Serverless\n\n2023年后默认的serverless不支持腾讯云的serverless了，解决办法就是使用serverless-cloud-framework 替换 serverless,其他的用法都是一样的\n\n```\nnpm install -g serverless-cloud-framework\nnpm i serverless-tencent@3.21.0 -g\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/setState-%E6%98%AF%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0":{"title":"setState 是同步更新还是异步更新","content":"\n# setState 是同步更新还是异步更新\n\n在没有合成事件之前，我们处理大量事件的方式为每一个标签添加 onclick 事件，优化的手段可以采用 [[事件委托]]\n\nReact 出于性能考虑模拟了事件冒泡，从 DOM 事件冒泡到 document，再寻找到对应组件造出了合成事件\n\n所以这就造成了，在一个页面中，只能有一个版本的 React。如果有多个版本，事件就乱套了。值得一提的是，这个问题在 React 17 中得到了解决，事件委托不再挂在 document 上，而是挂在 DOM 容器上，也就是 ReactDom. Render 所调用的节点上。\n\n在 17 年的时候就有人提出这样一个疑问“[为什么 setState 是异步的](https://github.com/facebook/react/issues/11527)”，这个问题得到了官方团队的回复，原因有 2 个。\n\n- **保持内部一致性**。如果改为同步更新的方式，尽管 setState 变成了同步，但是 props 不是。\n- **为后续的架构升级启用并发更新**。为了完成异步渲染，React 会在 setState 时，根据它们的数据来源分配不同的优先级，这些数据来源有：事件回调句柄、动画效果等，再根据优先级并发处理，提升渲染性能。\n\n## 什么时候是同步的\n\n因为 setState 并不是真正的异步函数，它实际上是通过队列延迟执行操作实现的，通过 isBatchingUpdates 来判断 setState 是先存进 state 队列还是直接更新。值为 true 则执行异步操作，false 则直接同步更新。\n\n## 所以是异步还是同步的\n\nsetState 并非真异步，只是看上去像异步。在源码中，通过 `isBatchingUpdates` 来判断 setState 是先存进 state 队列还是直接更新，如果值为 true 则执行异步操作，为 false 则直接更新。\n\n那么什么情况下 isBatchingUpdates 会为 true 呢？在 React 可以控制的地方，就为 true，比如在 React 生命周期事件和合成事件中，都会走合并操作，延迟更新的策略。\n\n但在 React 无法控制的地方，比如原生事件，具体就是在 addEventListener 、setTimeout、setInterval 等事件中，就只能同步更新。\n\n一般认为，做异步设计是为了性能优化、减少渲染次数，React 团队还补充了两点。\n\n- 保持内部一致性。如果将 state 改为同步更新，那尽管 state 的更新是同步的，但是 props 不是。\n- 启用并发更新，完成异步渲染。\n\n可同步可异步，同步的话把 setState 放在 promises、setTimeout 或者原生事件中等。\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/sideloadly":{"title":"sideloadly","content":"\n[Sideloadly - iOS, Apple Silicon \u0026 TV Sideloading](https://sideloadly.io/)\n\n需要密码登录，可能会锁账户，解锁就行了\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/speed-measure-webpack-plugin":{"title":"speed-measure-webpack-plugin","content":"\n```JavaScript\nconst SpeedMeasurePlugin = require(\"speed-measure-webpack-plugin\");\nconst smp = new SpeedMeasurePlugin();\n\nlet webpackProdOut = webpackMerge(webpackBase, webpackProd);\nif (process.env.SMP_OPEN) {\n  webpackProdOut = smp.wrap(webpackProdOut);\n}\n```\n\n检查哪个插件或者 loader 时间过长，可以配合缓存进行优化\n\n```cmd\n SMP  ⏱\nGeneral output time took 1.52 secs\n\n SMP  ⏱  Plugins\nTerserPlugin took 0.269 secs\nHtmlWebpackPlugin took 0.161 secs\nUglifyJsPlugin took 0.141 secs\nObject took 0.03 secs\nCompressionPlugin took 0.021 secs\nOptimizeCssAssetsWebpackPlugin took 0.002 secs\nMiniCssExtractPlugin took 0.001 secs\nHashedModuleIdsPlugin took 0 secs\n\n SMP  ⏱  Loaders\nbabel-loader took 0.746 secs\n  module count = 2\nhtml-webpack-plugin took 0.021 secs\n  module count = 2\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/ssh":{"title":"ssh","content":"\n# ssh\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/tensorflow-%E4%BC%98%E5%8C%96":{"title":"1. Web 上的高性能计算","content":"\n[如何将 Tensorflow.js 的性能疯狂提升 100%+](https://mp.weixin.qq.com/s/jU3_Bb6-1af1h1C24dNVIw)\n\n# 1. Web 上的高性能计算\n\n## R. Web Worker\n\n使用 Web Worker 可以将一些 CPU 密集型计算转移到子线程中去做执行，同理可以将计算进行分拆，创建多个线程进行并行计算。这里为各位大佬献上一个利用 Web Worker 做并行计算的库 [[Paralles.js]]。\n\n## G. Asm.js\n\n2012 年，Mozilla 的工程师 Alon Zakai 在研究 LLVM 编译器时突发奇想：许多 3D 游戏都是用 C / C++ 语言写的，如果能将 C / C++ 语言编译成 JavaScript 代码，它们不就能在浏览器里运行了吗？众所周知，JavaScript 的基本语法与 C 语言高度相似。\n\n于是，他开始研究怎么才能实现这个目标，为此专门做了一个编译器项目 Emscripten。这个编译器可以将 C / C++ 代码编译成 JS 代码，但不是普通的 JS，而是一种叫做 asm.js 的 JavaScript 变体。\n\n\u003e C / C++ 编译成 JS 有两个最大的困难。\n\u003e\n\u003e - C / C++ 是静态类型语言，而 JS 是动态类型语言。\n\u003e - C / C++ 是手动内存管理，而 JS 依靠垃圾回收机制。\n\nasm.js 就是为了解决这两个问题而设计的：它的变量一律都是静态类型，并且取消垃圾回收机制。除了这两点，它与 JavaScript 并无差异，也就是说，asm.js 是 JavaScript 的一个严格的子集，只能使用后者的一部分语法\n\n一旦 JavaScript 引擎发现运行的是 asm.js，就知道这是经过优化的代码，可以**跳过语法分析**这一步，直接转成汇编语言。另外，浏览器还会调用 WebGL 通过 GPU 执行 asm.js，即 asm.js 的执行引擎与普通的 JavaScript 脚本不同。这些都是 asm.js 运行较快的原因。据称，asm.js 在浏览器里的运行速度，大约是原生代码的**50%左右**。\n\n## B. WebAssembly\n\nWasm 相对于原生 JS 或者 asm.js 来说，速度的确很快，TensorFlow.js 官方目前也实现了基于 Wasm 的 backend。但是目前在绝大多数的机器上，Wasm 的执行速度相较于下面要说到的 WebGL 要差个 3 倍以上。\n\n## A. GPU\n\n在浏览器内利用 GPU 的能力有两种方法：\n\n- 十分成熟的 WebGL\n- 尚在草案阶段的 WebGPU。当前 WebGPU 的进展十分缓慢，我们这里先抛开不谈，谈一谈如何利用 WebGL 进行前端的高性能计算。\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174211.png)\n\n其中两个 vertex shader 和 fragment shader 为两个 GLSL 代码片段，分别处理坐标数据和颜色数据。vertex shader 和 fragment shader 的执行是以像素为单位，canvas 开始绘制的时候 vertex shader 中得到。每个需要绘制的像素的坐标，视需要可以对坐标进行各种转换，最终得到一个最终位置。这个过程中可以将数据作为输出传 fragment shader 参与下一步的计算 fragment shader 接受各种输入，最终输出一个 RGBA 颜色数据作为该像素点的颜色值。\n\n当所有像素都绘制完成之后，画布绘制完成。\n\ntfjs 就是利用这种方式实现了 Web 内执行模型推理的加速。\n\n# 2.ant-tfjs 的 WebGL 的优化\n\n## 首次执行(预热)优化\n\n## 推理优化\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/three.js":{"title":"three.js","content":"\n# three.js\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/tnpm":{"title":"tnpm","content":"\n# tnpm\n\n# 参考资料\n\n- [深入浅出 tnpm rapid 模式 - 如何比 pnpm 快 10 秒 - 知乎](https://zhuanlan.zhihu.com/p/455809528?utm_source=wechat_session\u0026utm_medium=social\u0026utm_oi=782684906403672064\u0026utm_campaign=shareopn)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/toString":{"title":"toString","content":"\n### toString\n\nObject.prototype.toString.call()\n\n```JavaScript\nObject.prototype.toString.call({})              // '[object Object]'\nObject.prototype.toString.call([])              // '[object Array]'\nObject.prototype.toString.call(() =\u003e {})        // '[object Function]'\nObject.prototype.toString.call('seymoe')        // '[object String]'\nObject.prototype.toString.call(1)               // '[object Number]'\nObject.prototype.toString.call(true)            // '[object Boolean]'\nObject.prototype.toString.call(Symbol())        // '[object Symbol]'\nObject.prototype.toString.call(null)            // '[object Null]'\nObject.prototype.toString.call(undefined)       // '[object Undefined]'\n\nObject.prototype.toString.call(new Date())      // '[object Date]'\nObject.prototype.toString.call(Math)            // '[object Math]'\nObject.prototype.toString.call(new Set())       // '[object Set]'\nObject.prototype.toString.call(new WeakSet())   // '[object WeakSet]'\nObject.prototype.toString.call(new Map())       // '[object Map]'\nObject.prototype.toString.call(new WeakMap())   // '[object WeakMap]'\n\n```\n\n`Object` 上的 toString()方法，它的作用是返回当前方法执行的主体（方法中的 this ）所属类的详细信息即 “[object Object]”， 其中第一个 object 代表当前实例是对象数据类型的（这个是固定死的，不会改变），第二个 Object 代表的是 this 所属的类是 Object。\n\n#### 原理\n\n在 toString 方法被调用时,会执行下面的操作步骤:\n\n1. 如果 this 未定义时，返回“[object Undefined]”\n2. 如果 this 为 null 时，返回“[object Null]”\n3. 定义 O，并且让 O=ToObject(this)\n4. 获取 this 对象的 [[Class]] 属性的值.\n5. 计算出三个字符串\"[object \", 第一步的操作结果 Result(1), 以及 \"]\"连接后的新字符串.\n6. 返回第二步的操作结果 Result(2).\n\n[[Class]] 是一个内部属性,所有的对象(原生对象和宿主对象)都拥有该属性.在规范中, [[Class]] 是这么定义的：**一个字符串值,表明了该对象的类型.**\n\n可以清晰的得出 `toString()`是在以特殊的字符串形式输出 `this` 的类型，不管你传入什么参数，该方法都是执行了 **window.toString()** 方法，`this` 一直指向了 `window` **对象**，  \n所以在判断类型时也可以直接使用 **toString.call(arr)**\n\n#### isArray\n\nES6 的 isArray 也是通过 toString 实现的\n\n```JavaScript\nif (!Array.isArray) {\n  Array.isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n```\n\n#### 封装函数\n\n```JavaScript\n    var type = function(data) {\n      var toString = Object.prototype.toString;\n      var dataType = toString\n              .call(data)\n              .replace(/\\[object\\s(.+)\\]/, \"$1\")\n              .toLowerCase()\n      return dataType\n};\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/tree-shaking":{"title":"tree-shaking","content":"\n## tree-shaking\n\nwebpack4 的 production 默认开启了 treeshaking\n\n如果是 webpack2 ，可能会不起作用，因为 babel 会将代码转化成 commonjs 模块，而 treeshaking 不支持\n\n```\noptions:{presets:[[\"es2015\",{module:false}]]}\n```\n\n### 使用\n\n```JavaScript\n// ./webpack.config.js\nmodule.exports = {\n  // ... 其他配置项\n  optimization: {\n    // 模块只导出被使用的成员\n    usedExports: true,\n    // 尽可能合并每一个模块到一个函数中\n    concatenateModules: true,\n    // 压缩输出结果\n    minimize: false,\n  },\n};\n```\n\n### 副作用 side effects\n\nside effects 是指那些当 import 的时候会执行一些动作，但是不一定会有任何 export。比如 ployfill\n\ntree-shaking 不能自动的识别那些代码属于 side effcets 。所以，有些需要手动指定\n\n```JavaScripton\n## pagejson\n{\n    name:'tree-shaking',\n    \"sideEffects\":false,\n    // sideEffects:[\n    // './src/common/ployfill.js'\n    // ]\n}\n```\n\n### [[webpack5]]提供了部分 commonjs 的支持\n\n[GitHub - webpack/changelog-v5: Temporary repo for the changelog for webpack 5](https://github.com/webpack/changelog-v5#commonjs-tree-shaking)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/typeof":{"title":"typeof","content":"\n### typeof\n\ntypeof 可以返回一个表示数据类型的字符串，返回结果包括： `number` , `boolean` , `string` , `symbol` , `object` , `undefined` , `function` 7 种数据类型 ，但是不能判断 null 和 array（也属于 object）等  \n\nArray 属于 Object 我可以理解，为什么 null 也是呢？\n\n这就涉及到了 typeoof 的设计原理了，他是通过判断底层类型的二进制\n\n- null：所有机器码均为 0\n- undefined：用 −2^30 整数来表示\n- 000：对象\n- 010：浮点数\n- 100：字符串\n- 110：布尔\n- 1：整数\n\n`typeof` 判断前三位都是 0 的就是对象，所以全是 0 的 `Null` 自然也被判断为 `object` 了\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/uniapp":{"title":"uniapp","content":"\n# uniapp\n\n## 什么是 uniapp\n\nUniApp是一种基于Vue.js的跨平台开发框架，可以用于同时开发iOS、Android和Web应用。它具有简单易用、高效快速开发、跨平台兼容性强等优势，适用于各种应用场景，如移动应用、小程序、H5等。\n\n大部分和 平时开发 vue 一样，vuex，vue-router 全家桶\n\n## 安装流程\n\n### 安装 node\n\nHbuilderX 里内置了 node 会和外置的版本不一致\n\n```shell \ncd  /Applications/HBuilderX.app/Contents/HBuilderX/plugins/node\nmv node node-v8\n## 软连接\nln -s /opt/homebrew/bin/node /Applications/HBuilderX.app/Contents/HBuilderX/plugins/node/node\n```\n\n## uniapp有什么难点\n\n- 需要会 [[Vue]]\n- 不同平台之间仍然存在一些差异。某些高级功能可能在某些平台上不可用或表现不一致，需要开发者做适配处理。\n- 由于 UniApp 是通过编译为原生代码来实现跨平台运行的，因此性能方面可能存在一些挑战。在处理性能敏感的场景时，需要开发者进行性能优化，如合理使用异步操作、减少重绘和重排等。\n- 在调试过程中可能会遇到平台差异导致的问题。开发者需要使用不同的调试工具和技巧来解决问题。\n- UniApp 对于一些特定的第三方插件可能支持不完善或存在兼容性问题。在使用第三方插件时需要仔细测试和验证。\n\n## 打包和发布\n\n在UniApp中，我们可以通过以下步骤来完成打包和发布。\n\nA. 配置打包参数  \n在UniApp中，我们可以在`manifest.json`文件中配置打包参数。这些参数包括应用的名称、图标、权限、启动页等。通过配置这些参数，我们可以自定义应用的外观和功能。\n\n下面是一个示例的`manifest.json`文件的配置：\n\n```json\n{\n  \"name\": \"My App\",\n  \"appid\": \"com.example.myapp\",\n  \"versionName\": \"1.0.0\",\n  \"versionCode\": \"1\",\n  \"icon\": \"/static/logo.png\",\n  \"permission\": {\n    \"scope.userLocation\": {\n      \"desc\": \"获取用户位置信息\"\n    }\n  },\n  \"splashscreen\": {\n    \"image\": \"/static/splash.png\",\n    \"backgroundColor\": \"#ffffff\"\n  }\n}\n```\n\nB. 生成不同平台的应用包  \n在UniApp中，我们可以通过HBuilderX来生成不同平台的应用包。HBuilderX是UniApp的集成开发环境，提供了打包和发布的功能。\n\n首先，我们需要在HBuilderX中打开我们的UniApp项目。然后，选择对应的平台，如iOS、Android或Web。根据平台的要求，进行相应的配置，如签名、应用图标等。\n\n接下来，我们可以选择打包方式，如打包成应用安装包、打包成小程序等。根据需求选择相应的打包方式，并进行相关的配置。\n\n最后，点击打包按钮，HBuilderX将自动进行打包操作，并生成相应的应用包。\n\nC. 发布应用到应用商店或Web  \n当我们生成应用包后，就可以将应用发布到相应的平台。对于iOS和Android应用，我们可以将应用包提交到App Store和Google Play等应用商店。这需要进行一些额外的配置和审核过程。\n\n对于Web应用，我们可以将生成的应用包部署到Web服务器上，通过URL访问应用。可以将应用部署到自己的服务器上，或者使用云服务提供商提供的服务。\n\n## uniapp 原理\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/vidhub":{"title":"vidhub","content":"","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/vim":{"title":"vim","content":"\n# vim\n\n按 ESC 键 跳到命令模式，然后输入：\n\n:w - 保存文件，不退出 vim  \n:w file -将修改另外保存到 file 中，不退出 vim  \n:w! -强制保存，不退出 vim  \n:wq -保存文件，退出 vim  \n:wq! -强制保存文件，退出 vim  \n:q -不保存文件，退出 vim  \n:q! -不保存文件，强制退出 vim  \n:e! -放弃所有修改，从上次保存文件开始再编辑\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack%E6%8F%92%E4%BB%B6":{"title":"webpack 插件","content":"\n# webpack 插件\n\n插件是 webpack 的[支柱](https://github.com/webpack/tapable)功能。webpack 自身也是构建于，你在 webpack 配置中用到的**相同的插件系统**之上！\n\n插件目的在于解决 [loader](https://www.webpackjs.com/concepts/loaders) 无法实现的**其他事**。\n\n#### 使用\n\n使用相当简单，具体传入参数看文档就好\n\n```JavaScript\nconst HtmlWebpakcPlugin = require(\"html-webpack-plugin\");\n\nplugins: [new HtmlWebpakcPlugin(), new CleanWebpackPlugin(), new fileWebpackPlugin()],\n```\n\n#### 自定义 Plugins\n\n```JavaScript\nclass fileWebpackPlugin {\n  //   constructor(options) {\n  //     console.log(options);\n  //   }\n  //如何钩入hooks\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"fileWebpackPlugin\", (compilation, cb) =\u003e {\n      const len = Object.keys(compilation.assets).length;\n      let content = `文件的数量：${len}`;\n      for (let filename in compilation.assets) {\n        content += `\\n ${filename}`;\n      }\n      compilation.assets[`file.txt`] = {\n        source: function() {\n          return content;\n        },\n        size: function() {\n          return 1024;\n        },\n      };\n      cb();\n    });\n  }\n}\nmodule.exports = fileWebpackPlugin;\n```\n\n在插件开发中最重要的两个资源就是 `compiler` 和 `compilation` 对象。理解它们的角色是扩展 webpack 引擎重要的第一步。\n\n- `compiler` 对象代表了**完整的 webpack 环境配置**。这个对象在启动 webpack 时被一次性建立，并配置好所有可操作的设置，包括 options，loader 和 plugin。当在 webpack 环境中应用一个插件时，插件将收到此 compiler 对象的引用。可以使用它来访问 webpack 的主环境。\n- `compilation` 对象代表了一次资源版本构建。当运行 webpack 开发环境中间件时，每当检测到一个文件变化，就会创建一个新的 compilation，从而生成一组**新的编译资源**。一个 compilation 对象表现了当前的模块资源、编译生成资源、变化的文件、以及被跟踪依赖的状态信息。compilation 对象也提供了很多关键时机的回调，以供插件做自定义处理时选择使用。\n\n#### 查看配置的 webpack 周期\n\n```JavaScript\nconst compiler = webpack(config);\nObject.keys(compiler.hooks).forEach((hookName) =\u003e {\n  compiler.hooks[hookName].tap(\"xxxx\", () =\u003e {\n    console.log(`run====\u003e ${hookName}`);\n  });\n});\n\ncompiler.run();\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack-%E4%BB%A3%E7%A0%81%E5%8E%8B%E7%BC%A9":{"title":"webpack 代码压缩","content":"\n## webpack 代码压缩\n\nwebpack4 已经默认支持 ES6 语法的压缩。所以不用 uglyjs 该用 webpack 官方的 terser-webpack-plugin\n\n```JavaScript\n// ./webpack.config.js\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst OptimizeCssAssetsWebpackPlugin = require(\"optimize-css-assets-webpack-plugin\");\nconst TerserWebpackPlugin = require(\"terser-webpack-plugin\");\nmodule.exports = {\n  mode: \"none\",\n  entry: {\n    main: \"./src/index.js\",\n  },\n  output: {\n    filename: \"[name].bundle.js\",\n  },\n  optimization: {\n    minimizer: [\n      new TerserWebpackPlugin(),\n      new OptimizeCssAssetsWebpackPlugin(),\n    ],\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [MiniCssExtractPlugin.loader, \"css-loader\"],\n      },\n    ],\n  },\n  plugins: [new MiniCssExtractPlugin()],\n};\n```\n\n#### TerserWebpackPlugin 原理\n\nWebpack 4 内置了压缩插件 TerserWebpackPlugin，且默认开启了缓存参数。在初次构建的压缩代码过程中，就将这一阶段的结果写入了缓存目录（node_modules/.cache/terser-webpack-plugin/）中，当再次构建进行到压缩代码阶段时，即可对比读取已有缓存，\n\n```JavaScript\nterser-webpack-plugin/src/index.js:\n...\nif (cache.isEnabled()) {\n  let taskResult;\n  try {\n    taskResult = await cache.get(task); //读取缓存\n  } catch (ignoreError) {\n    return enqueue(task); //缓存未命中情况下执行任务\n  }\n  task.callback(taskResult); //缓存命中情况下返回缓存结果\n  ...\n  const enqueue = async (task) =\u003e {\n    let taskResult;\n    if (cache.isEnabled() \u0026\u0026 !taskResult.error) {\n      await cache.store(task, taskResult); //写入缓存\n    }\n  }\n}\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack-%E5%8A%A8%E6%80%81%E5%AF%BC%E5%85%A5":{"title":"webpack 动态导入","content":"\n### webpack 动态导入\n\nrequire.ensure（vue-router 配置路由，使用 webpack 的 require.ensure 技术，也可以实现按需加载。\n\n#### vue 异步组件技术\n\n```JavaScript\ncomponent: (resolve) =\u003e require([\"../components/PromiseDemo\"], resolve);\n```\n\n#### es 提案的 import()\n\n```JavaScript\nconst Home = () =\u003e\n  import(/* webpackChunkName: 'ImportFuncDemo' */ \"@/components/home\");\n```\n\n##### 魔法注释\n\n默认通过动态导入产生的 bundle 文件，它的 name 就是一个序号，这并没有什么不好，因为大多数时候，在生产环境中我们根本不用关心资源文件的名称。\n\n但是如果你还是需要给这些 bundle 命名的话，就可以使用 Webpack 所特有的魔法注释去实现。\n\n#### webpack\n\n```JavaScript\ncomponent: (r) =\u003e\n  require.ensure([], () =\u003e r(require(\"@/components/home\")), \"demo\");\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack-%E7%BC%93%E5%AD%98":{"title":"webpack 缓存","content":"\n## webpack 缓存\n\n#### babel-loader\n\n```JavaScript\n {\n    test: /\\.js$/,\n    exclude: /node_modules/,\n    use: [{\n      loader: \"babel-loader\",\n      options: {\n        cacheDirectory: true\n      }\n    }],\n  },\n```\n\n#### cache-loader\n\n```JavaScript\n        use: [\n          'cache-loader',\n          ...loaders\n        ],\n```\n\n请注意，保存和读取这些缓存文件会有一些时间开销，所以请只对性能开销较大的 `loader` 使用此 `loader`。可以结合 smp 分析\n\n#### hard-source-webpack-plugin\n\n```JavaScript\n// webpack.config.js\nvar HardSourceWebpackPlugin = require('hard-source-webpack-plugin');\n\nmodule.exports = {\n  output: // ...\n  plugins: [\n    new HardSourceWebpackPlugin()\n  ]\n}\n```\n\n构建速度提升 50%以上 [[webpack5]]中会内置`hard-source-webpack-plugin`。\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack-bundle-analyzer":{"title":"webpack-bundle-analyzer","content":"\n```JavaScript\nconst BundleAnalyzerPlugin = require(\"webpack-bundle-analyzer\")\n  .BundleAnalyzerPlugin;\n\nif (WATCH_ANALYZER) {\n  plugins.push(new BundleAnalyzerPlugin());\n}\n```\n\n就会生成一个可视化的体积页面，进行分析优化，将大包进行分包，不常更新的包进行 CDN 引入，或者打成 DLL 包\n\n- [webpack-bundle-analyzer](https://www.npmjs.com/package/webpack-bundle-analyzer)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack5":{"title":"webpack5","content":"\n## webpack5\n\n### Persistent Caching\n\n实现了生产环境的增量更新\n\n#### Cache 基本配置\n\n在 Webpack 4 中，cache 只是单个属性 d 的配置，所对应的赋值为 true 或 false，用来代表是否启用缓存，或者赋值为对象来表示在构建中使用的缓存对象。而在 Webpack 5 中，cache 配置除了原本的 true 和 false 外，还增加了许多子配置项，例如：\n\n- cache.**type**：缓存类型。值为 'memory'或‘filesystem’，分别代表基于内存的临时缓存，以及基于文件系统的持久化缓存。在选择 filesystem 的情况下，下面介绍的其他属性生效。\n- cache.**cacheDirectory**：缓存目录。默认目录为 node_modules/.cache/webpack。\n- cache.**name**：缓存名称。同时也是 cacheDirectory 中的子目录命名，默认值为 Webpack 的 ${config.name}-${config.mode}。\n- cache.**cacheLocation**：缓存真正的存放地址。默认使用的是上述两个属性的组合：path.resolve(cache.cacheDirectory, cache.name)。该属性在赋值情况下将忽略上面的 cacheDirectory 和 name 属性。\n\n#### 单个模块的缓存失效\n\nWebpack 5 会跟踪每个模块的依赖项：fileDependencies、contextDependencies、missingDependencies。当模块本身或其依赖项发生变更时，Webpack 能找到所有受影响的模块，并重新进行构建处理。\n\n这里需要注意的是，对于 node_modules 中的第三方依赖包中的模块，出于性能考虑，Webpack 不会跟踪具体模块文件的内容和修改时间，而是依据依赖包里 package.json 的 name 和 version 字段来判断模块是否发生变更。因此，单纯修改 node_modules 中的模块内容，在构建时不会触发缓存的失效。\n\n#### 全局的缓存失效\n\n当模块代码没有发生变化，但是构建处理过程本身发生变化时（例如升级了 Webpack 版本、修改了配置文件、改变了环境变量等），也可能对构建后的产物代码产生影响。因此在这种情况下不能复用之前缓存的数据，而需要让全局缓存失效，重新构建并生成新的缓存。在 Webpack 5 中共提供了 3 种不同维度的全局缓存失效配置。\n\n##### buildDependencies\n\n第一种配置是 cache.buildDependencies，用于指定可能对构建过程产生影响的依赖项。\n\n它的默认选项是{defaultWebpack: [\"webpack/lib\"]}。这一选项的含义是，当 node_modules 中的 Webpack 或 Webpack 的依赖项（例如 watchpack 等）发生变化时，当前的构建缓存即失效。\n\n上述选项是默认内置的，无须写在项目配置文件中。配置文件中的 buildDenpendencies 还支持增加另一种选项 {config: [__filename]}，它的作用是当配置文件内容或配置文件依赖的模块文件发生变化时，当前的构建缓存即失效。\n\n##### version\n\n第二种配置是 cache.version。当配置文件和代码都没有发生变化，但是构建的外部依赖（如环境变量）发生变化时，预期的构建产物代码也可能不同。这时就可以使用 version 配置来防止在外部依赖不同的情况下混用了相同的缓存。例如，可以传入 cache: {version: process.env.NODE_ENV}，达到当不同环境切换时彼此不共用缓存的效果。\n\n##### name\n\n缓存的名称除了作为默认的缓存目录下的子目录名称外，也起到区分缓存数据的作用。例如，可以传入 cache: {name: process.env.NODE_ENV}。这里有两点需要补充说明：\n\nname 的特殊性：与 version 或 buildDependencies 等配置不同，name 在默认情况下是作为缓存的子目录名称存在的，因此可以利用 name 保留多套缓存。在 name 切换时，若已存在同名称的缓存，则可以复用之前的缓存。与之相比，当其他全局配置发生变化时，会直接将之前的缓存失效，即使切换回之前已缓存过的设置，也会当作无缓存处理。\n\n当 cacheLocation 配置存在时，将忽略 name 的缓存目录功能，上述多套缓存复用的功能也将失效。\n\n##### 其他\n\n除了上述介绍的配置项外，cache 还支持其他属性：managedPath、hashAlgorithm、store、idleTimeout 等，具体功能可以通过官方文档进行查询。\n\n此外，在 Webpack 4 中，部分插件是默认启用缓存功能的（例如压缩代码的 Terser 插件等），项目在生产环境下构建时，可能无意识地享受缓存带来的效率提升，但是在 Webpack 5 中则不行。无论是否设置 cache 配置，Webpack 5 都将忽略各插件的缓存设置（例如 TerserWebpackPlugin），而由引擎自身提供构建各环节的缓存读写逻辑。因此，项目在迁移到 Webpack 5 时都需要通过上面介绍的 cache 属性来单独配置缓存。\n\n### Tree Shaking\n\nWebpack 4 中的 Tree Shaking 功能在使用上存在限制：只支持 ES6 类型的模块代码分析，且需要相应的依赖包或需要函数声明为无副作用等。\n\n#### Nested Tree Shaking\n\nWebpack 5 增加了对嵌套模块的导出跟踪功能，能够找到那些嵌套在最内层而未被使用的模块属性。\n\n#### Inner Module Tree Shaking\n\nWebpack 5 中还增加了分析模块中导出项与导入项的依赖关系的功能。通过 optimization.innerGraph（生产环境下默认开启）选项，Webpack 5 可以分析特定类型导出项中对导入项的依赖关系，从而找到更多未被使用的导入模块并加以移除。\n\n#### CommonJS Tree Shaking\n\nWebpack 5 中增加了对一些 CommonJS 风格模块代码的静态分析功功能：\n\n- 支持 exports.xxx、this.exports.xxx、module.exports.xxx 语法的导出分析。\n- 支持 object.defineProperty(exports, \"xxxx\", …) 语法的导出分析。\n- 支持 require('xxxx').xxx 语法的导入分析。\n\n### Logs\n\n第三个要提到的 Webpack 5 的效率优化点是，它增加了许多内部处理过程的日志，可以通过 stats.logging 来访问。\n\n### 更多\n\n请查看[官方文档](https://github.com/webpack/changelog-v5)\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack_%E7%83%AD%E6%9B%B4%E6%96%B0":{"title":"webpack_热更新","content":"\n### 热更新\n\n#### 开启\n\n```JavaScript\n  devServer: {\n    // 开启 HMR 特性，如果资源不支持 HMR 会 fallback 到 live reloading\n    hot: true\n    // 只使用 HMR，不会 fallback 到 live reloading\n    // hotOnly: true\n  },\n  plugins: [\n    // …\n    // HMR 特性所需要的插件\n    new webpack.HotModuleReplacementPlugin()\n  ]\n```\n\n#### 原理\n\n启动一个 websocket 监听文件 id 变化，执行除以 js，并重新执行\n\n```JavaScript\nif (module.hot) {\n  module.hot.accept(\"./number\", function() {\n    document.body.removeChild(document.getElementById(\"number\"));\n    number();\n  });\n}\n```\n\n热更新插件也就是通过对每个文件进行监听\n\n#### 常见问题\n\n##### 运行时错误\n\n如果处理热替换的代码（处理函数）中有错误，结果也会导致自动刷新。导致无法看到错误日志，\n\n解决办法：开启 hotonly\n\n##### 未开启 HMR\n\n```JavaScript\nif (module.hot) {\n  // 确保有 HMR API 对象\n  module.hot.accept(\"./editor\", () =\u003e {\n    // …\n  });\n}\n```\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack_lodaer":{"title":"webpack_lodaer","content":"\n# webpack_lodaer\n\nloader 用于对模块的源代码进行转换。loader 可以使你在 `import` 或\"加载\"模块时预处理文件\n\n#### 使用\n\n举一个 less-loader 使用例子\n\n```JavaScript\n rules: [\n      {\n        test: /\\.less$/, //  匹配规则\n        // use可对象，可以\u003cstring,object\u003e数组\n        //使用对象时，可通过options传参,通过this.query获取\n        use: [\"my-style-loader\", \"my-css-loader\", {\n          loader: \"my-less-loader\",\n          options: {\n            name: \"scssloader\",\n          },\n        }], //多个loader从右向左\n      },\n    ],\n```\n\n#### 自定义 loader\n\n```JavaScript\n// 函数 声明式函数 不可以是箭头函数\n// 函数 必须有返回值\n// 如何返回多值\n// 如何处理异步逻辑\nmodule.exports = function(source) {\n  console.log(this.query);\n  console.log(source);\n  // 异步回调\n  const callback = this.async();\n  setTimeout(() =\u003e {\n    const result = source.replace(\"webpack\", this.query.name);\n    callback(null, result);\n  }, 2000);\n  //  同步回调\n  //   this.callback(null, result);\n};\n//this.callback(  err: Error | null,  content: string | Buffer,  sourceMap?: SourceMap,  meta?: any );\n```\n\n##### Markdown-loader\n\n```js\n// ./markdown-loader.js\n\nconst marked = require('marked')\n\n\n\nmodule.exports = source =\u003e {\n\n  const html = marked(source)\n\n  // const code = `module.exports = ${JSON.stringify(html)}`\n\n  const code = `export default ${JSON.stringify(html)}`\n\n  return code \n\n}\n\n```\n\n#### 重命名自定义 loader\n\n```JavaScript\n resolveLoader: {\n    modules: [\"./node_modules\", \"./myLoaders\"],\n  },\n```\n\n#### 常用 loader\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/webpack_sourceMap":{"title":"webpack_sourceMap","content":"\n### sourceMap\n\n- eval: 速度最快，使用 eval 包裹代码\n- source-map：产生`.map`文件，外部产生错误代码的位置和信息\n- cheap：较快，不包含列信息\n- Module：第三方模块，包含 loader 的 sourceMap// 无论是 JSX 还是 vue 单文件组件，Loader 转换后差别都很大，需要调试 Loader 转换前的源代码。\n- inline：将`.map`文件作为 dateURI 嵌入，不单独生成\n\n*验证 devtool 名称时， 我们期望使用某种模式， 注意不要混淆 devtool 字符串的顺序， 模式是：* `[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map`*.*\n\n![](https://chelsechen-img.oss-cn-hangzhou.aliyuncs.com/20230725174703.png)\n\n#### 特殊模式\n\n- inline-source-map 模式  \n  它跟普通的 source-map 效果相同，只不过这种模式下 Source Map 文件不是以物理文件存在，而是以 data URLs 的方式出现在代码中。我们前面遇到的 eval-source-map 也是这种 inline 的方式。\n\n- hidden-source-map 模式  \n  在这个模式下，我们在开发工具中看不到 Source Map 的效果，但是它也确实生成了 Source Map 文件，这就跟 jQuery 一样，虽然生成了 Source Map 文件，但是代码中并没有引用对应的 Source Map 文件，开发者可以自己选择使用。\n\n- nosources-source-map 模式：  \n  在这个模式下，我们能看到错误出现的位置（包含行列位置），但是点进去却看不到源代码。这是为了保护源代码在生产环境中不暴露。\n\n#### 推荐配置\n\nvuecli production 采用 source-map\n\n个人理解 production 应该使用 none 或者 nosources-source-map\n\ndevelopment 采用 cheap-module-eval-source-map\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/yapi2ts":{"title":"Yapi2ts","content":"\n# Yapi2ts\n\n# 开始目的\n\n一次任务要接几十个接口复制黏贴比较慢\n\n调研使用了 yapi2ts\n\n但是生成的接口文件不太满意，所以只用了自动生成 interface 的功能\n\n然后自己写了一套模板生成的功能\n\n出现了几个问题\n\n1. 自动生成的一些规则不完善，现在是全量覆盖的，如果你手动改了 ，下次生成会覆盖掉文件，导致手动改的失效，可以在 config 里排除掉这个生成的 catid\n2. 生成的类型也不满意，准备 yapi2ts 借鉴一下，自己写一套完整的\n3. 现在是根据接口最后一个路径判断 import 和 export ，生成 type :' download' 或者 'uoload'\n4. 生成的路径 目前的规则是 最后两个路径的驼峰\n5. 目前一个是使用的 catid 和 name 查找的。\n6. 现在需要先从 yapi 导出 json，复制到文件中读取使用，准备做成 api 请求\n\n# 用到的库学习\n\n[[change-case]]  \n[[enquirer]]  \n[[ora]]  \n[[json-schema-to-typescript]]  \n[[Obsidian  Commander]]\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/zswl-%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95":{"title":"zswl 面试记录","content":"\n## 自我介绍\n\n主要 vue\n\n## 项目面试\n\n### 请描述一下你参与过的前端项目，包括项目的规模、你的角色和贡献。  \n\n实习的项目规模不了解  \n实现了一个云服务的表单页面，简历上的两个项目都是自己做的\n\n### 项目中比较难的地方\n\n没遇到过\n\n## 技术面试\n\ncss相关问题：\n\n### 请描述一下CSS选择器的优先级规则，并说明如何提高某个选择器的优先级。\n\nimporant\u003e 行内 \u003e id \u003e class \u003e 标签\n\n### 请解释一下盒模型，并说明标准盒模型和IE盒模型的区别。\n\n标准 是 content ie 是 content + 内边距和边框  \n\nWebpack相关问题：\n\n1. 请解释一下Webpack是什么，它的作用是什么？\n2. 请描述一下Webpack的工作原理和打包流程。\n3. 如何使用Webpack来处理CSS和图片等资源文件？\n4. 请解释一下Webpack的代码分割（Code Splitting）是什么，以及如何实现它？\n5. 如何使用Webpack来优化前端项目的性能？\n\nHTTP相关问题：\n\n### 请解释一下HTTP协议的基本原理和工作流程。\n\n这个了解的不多\n\n### url 到渲染整个流程了解吗\n\nDNS 解析成 ip，http 请求生成报文。三次握手、服务器响应生成响应行、解析 html、生成 dom、css，最后合成渲染‘\n\n### 三次握手具体是怎样的流程\n\n客户端生成 id ，服务返回一个应答包，并生成 id +1 ， 服务器对比数据  \n答出来了\n\n### 那为什么两次握手不行\n\n无法得知服务器是否收到请求\n\n### 请描述一下HTTP请求方法（GET、POST等）的区别和用途。  \n\nGET 有安全性问题，仅作为读数据而不作修改  \nPOST，无法被缓存，可以进行修改数据  \nPUT，更新数据  \nDELETE ，删除数据\n\n### 什么是DOM和DOM操作？请描述一下DOM事件的捕获和冒泡过程。\n\n元素嵌套，点击最中心的元素，会往最外层  \n最好的是阻止冒泡，\n\n### 请解释一下浏览器的同源策略是什么，以及如何通过跨域解决同源策略限制？\n\n三个条件统一  \n自己用过 jsonp， 还有 cors、vue 配置跨域\n\nVue相关问题：\n\n### 请解释一下Vue.js是什么，它的特点和优势是什么？\n\nMVVM ，双向绑定，舍弃了控制层  \n书写比较美观  \n提供了生命钩子  \n虚拟 DOM 减少 DOM 操作\n\n### 请描述一下Vue组件的生命周期钩子函数及其执行顺序。\n\nbeforecredted、cr、mounted、unmounted、destroy\n\n### 什么是Vue的双向数据绑定？请解释一下它的原理。\n\n修改视图层，时间监听实现， 遍历生成监听，触发 observe，触发前端页面的更新\n\n### watch 和 computer 有什么区别\n\nwatch 监听方法  \ncomputer 是有缓存\n\nwatch deep，或者遍历对象\n\n### vue3\n\n不了解，但是用 proxy 全部设置了监听，  \n不会有 vue2数组的问题\n\n### webpack 和 vite\n\n就使用过，没有优化过\n\n### 如何优化网页的加载速度？请列举几种常用的网页性能优化技术。\n\n1. 图片懒加载\n\n## 软技能\n\n### 你平时是怎么学习  \n\n看一些 blog，视频，遇到困难\n\n### 有学习算法这方面\n\nleetcode 应该有 100 多题，top100 刷完了，hash 差一点回溯比较熟\n\n### 他们如何处理紧急情况或困难的问题，  \n\n没有\n\n### git\n\n拉取代码，\n\n如何与其他团队成员合作  \n\n### 还有什么问题要问我的吗\n\n结果会什么是时候出\n\n## 总体评价\n\n回答的都比较浅，文章和视频应该有刷，但没有深入理解，没有深入参与到项目中\n","lastmodified":"2023-09-18T14:54:47.482454185Z","tags":null},"/zwsl-admin":{"title":"zwsl-admin","content":"\n[[微前端验证]]\n\n## 原理解析\n\n开始采用了第一个路径名判断，用的事哪里的微前端，这样路径清晰，也比较容易分区，但是会有很大的问题就是，公用的组件库，http 请求等无法知晓哪里的微前端。所以放弃这个方案\n\n采用了，构建时就平铺获取所有路径，优先取本地项目，其次远程项目。但是这个会遇到重名问题，优先取本地，如果想要远程，通过 Remote 传入 name 来解决\n","lastmodified":"2023-09-18T14:54:47.486454205Z","tags":null}}